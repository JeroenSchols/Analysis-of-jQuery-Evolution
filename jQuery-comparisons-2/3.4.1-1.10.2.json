[{"id":"8e2e5a14acae0a406a054cd9adff7bb6ddc42451","instances":[{"path":"./jquery-data/3.4.1/src/ajax.js","lines":[55,114],"code":"// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}"},{"path":"./jquery-data/1.10.2/src/ajax.js","lines":[56,111],"code":"// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( core_rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}"}]},
{"id":"2c50547a858b26fcaa5957d5c01c7d644e174fcc","instances":[{"path":"./jquery-data/3.4.1/src/ajax.js","lines":[89,133],"code":"// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}"},{"path":"./jquery-data/1.10.2/src/ajax.js","lines":[88,130],"code":"// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar deep, key,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}"}]},
{"id":"94e573e47c25f770b82bbfad2eae5ea4237bc0a3","instances":[{"path":"./jquery-data/3.4.1/src/ajax.js","lines":[135,273],"code":"/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n"},{"path":"./jquery-data/1.10.2/src/ajax.js","lines":[707,840],"code":"/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\tvar firstDataType, ct, finalDataType, type,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter"}]},
{"id":"f5186800f2bc7db34f519260d62f23d62d494e91","instances":[{"path":"./jquery-data/3.4.1/src/ajax.js","lines":[626,656],"code":"if ( s.ifModified ) {\n\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t}\n\tif ( jQuery.etag[ cacheURL ] ) {\n\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t}\n}\n\n// Set the correct header, if data is being sent\nif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n}\n\n// Set the Accepts header for the server, depending on the dataType\njqXHR.setRequestHeader(\n\t\"Accept\",\n\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\ts.accepts[ \"*\" ]\n);\n\n// Check for headers option\nfor ( i in s.headers ) {\n\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n}\n\n// Allow custom headers/mimetypes and early abort\nif ( s.beforeSend &&\n\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {"},{"path":"./jquery-data/1.10.2/src/ajax.js","lines":[488,516],"code":"if ( s.ifModified ) {\n\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t}\n\tif ( jQuery.etag[ cacheURL ] ) {\n\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t}\n}\n\n// Set the correct header, if data is being sent\nif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n}\n\n// Set the Accepts header for the server, depending on the dataType\njqXHR.setRequestHeader(\n\t\"Accept\",\n\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\ts.accepts[ \"*\" ]\n);\n\n// Check for headers option\nfor ( i in s.headers ) {\n\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n}\n\n// Allow custom headers/mimetypes and early abort\nif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {"}]},
{"id":"8f2b764cab986b437a929ab80b5812d7096fec76","instances":[{"path":"./jquery-data/3.4.1/src/ajax.js","lines":[711,840],"code":"\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n"},{"path":"./jquery-data/1.10.2/src/ajax.js","lines":[563,691],"code":"\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}"}]},
{"id":"fee28eb61cdf2f17db2fbc06ca6fe13f2667d608","instances":[{"path":"./jquery-data/3.4.1/src/core.js","lines":[122,137],"code":"\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};"},{"path":"./jquery-data/1.10.2/src/core.js","lines":[292,304],"code":"jQuery.fn.init.prototype = jQuery.fn;\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar src, copyIsArray, copy, name, options, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};"}]},
{"id":"8d5d1a3cb11380c33090ef97c6a74ab7fcfc81ca","instances":[{"path":"./jquery-data/3.4.1/src/css.js","lines":[184,213],"code":"jQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,"},{"path":"./jquery-data/1.10.2/src/css.js","lines":[151,182],"code":"jQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {"}]},
{"id":"4a4f4ed476d5b57ab0a4653557abb6a8f7d89b64","instances":[{"path":"./jquery-data/3.4.1/src/css.js","lines":[431,453],"code":"jQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {"},{"path":"./jquery-data/1.10.2/src/css.js","lines":[636,658],"code":"jQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {"}]},
{"id":"079f986b39b9ef8b984a67d2113090284fb31cb2","instances":[{"path":"./jquery-data/3.4.1/src/css.js","lines":[460,479],"code":"return access( this, function( elem, name, value ) {\n\tvar styles, len,\n\t\tmap = {},\n\t\ti = 0;\n\n\tif ( Array.isArray( name ) ) {\n\t\tstyles = getStyles( elem );\n\t\tlen = name.length;\n\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t}\n\n\t\treturn map;\n\t}\n\n\treturn value !== undefined ?\n\t\tjQuery.style( elem, name, value ) :\n\t\tjQuery.css( elem, name );\n}, name, value, arguments.length > 1 );"},{"path":"./jquery-data/1.10.2/src/css.js","lines":[109,128],"code":"return jQuery.access( this, function( elem, name, value ) {\n\tvar len, styles,\n\t\tmap = {},\n\t\ti = 0;\n\n\tif ( jQuery.isArray( name ) ) {\n\t\tstyles = getStyles( elem );\n\t\tlen = name.length;\n\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t}\n\n\t\treturn map;\n\t}\n\n\treturn value !== undefined ?\n\t\tjQuery.style( elem, name, value ) :\n\t\tjQuery.css( elem, name );\n}, name, value, arguments.length > 1 );"}]},
{"id":"cd0864587ef0292d35b0a85f64cb41167dfa9b78","instances":[{"path":"./jquery-data/3.4.1/src/deferred.js","lines":[282,303],"code":"jQuery.each( tuples, function( i, tuple ) {\n\tvar list = tuple[ 2 ],\n\t\tstateString = tuple[ 5 ];\n\n\t// promise.progress = list.add\n\t// promise.done = list.add\n\t// promise.fail = list.add\n\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t// Handle state\n\tif ( stateString ) {\n\t\tlist.add(\n\t\t\tfunction() {\n\n\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t// state = \"rejected\"\n\t\t\t\tstate = stateString;\n\t\t\t},\n\n\t\t\t// rejected_callbacks.disable\n\t\t\t// fulfilled_callbacks.disable\n\t\t\ttuples[ 3 - i ][ 2 ].disable,"},{"path":"./jquery-data/1.10.2/src/deferred.js","lines":[53,67],"code":"jQuery.each( tuples, function( i, tuple ) {\n\tvar list = tuple[ 2 ],\n\t\tstateString = tuple[ 3 ];\n\n\t// promise[ done | fail | progress ] = list.add\n\tpromise[ tuple[1] ] = list.add;\n\n\t// Handle state\n\tif ( stateString ) {\n\t\tlist.add(function() {\n\t\t\t// state = [ resolved | rejected ]\n\t\t\tstate = stateString;\n\n\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );"}]},
{"id":"0f0503d07a371a56cc79f92a06bc23c741a905fd","instances":[{"path":"./jquery-data/3.4.1/src/dimensions.js","lines":[11,20],"code":"jQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {"},{"path":"./jquery-data/1.10.2/src/dimensions.js","lines":[2,9],"code":"jQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {"}]},
{"id":"4f3351489b8e7770da475ba8c4d15f424e6c5546","instances":[{"path":"./jquery-data/3.4.1/src/effects.js","lines":[89,116],"code":"\tisBox = \"width\" in props || \"height\" in props,\n\tanim = this,\n\torig = {},\n\tstyle = elem.style,\n\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n// Queue-skipping animations hijack the fx hooks\nif ( !opts.queue ) {\n\thooks = jQuery._queueHooks( elem, \"fx\" );\n\tif ( hooks.unqueued == null ) {\n\t\thooks.unqueued = 0;\n\t\toldfire = hooks.empty.fire;\n\t\thooks.empty.fire = function() {\n\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\toldfire();\n\t\t\t}\n\t\t};\n\t}\n\thooks.unqueued++;\n\n\tanim.always( function() {\n\n\t\t// Ensure the complete handler is called before this completes\n\t\tanim.always( function() {\n\t\t\thooks.unqueued--;\n\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\thooks.empty.fire();"},{"path":"./jquery-data/1.10.2/src/effects.js","lines":[252,279],"code":"var prop, value, toggle, tween, hooks, oldfire,\n\tanim = this,\n\torig = {},\n\tstyle = elem.style,\n\thidden = elem.nodeType && isHidden( elem ),\n\tdataShow = jQuery._data( elem, \"fxshow\" );\n\n// handle queue: false promises\nif ( !opts.queue ) {\n\thooks = jQuery._queueHooks( elem, \"fx\" );\n\tif ( hooks.unqueued == null ) {\n\t\thooks.unqueued = 0;\n\t\toldfire = hooks.empty.fire;\n\t\thooks.empty.fire = function() {\n\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\toldfire();\n\t\t\t}\n\t\t};\n\t}\n\thooks.unqueued++;\n\n\tanim.always(function() {\n\t\t// doing this makes sure that the complete handler will be called\n\t\t// before this completes\n\t\tanim.always(function() {\n\t\t\thooks.unqueued--;\n\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\thooks.empty.fire();"}]},
{"id":"db20126f006bca4fc1e55580f9a7cd637dadc520","instances":[{"path":"./jquery-data/3.4.1/src/effects.js","lines":[264,292],"code":"name = camelCase( index );\neasing = specialEasing[ name ];\nvalue = props[ index ];\nif ( Array.isArray( value ) ) {\n\teasing = value[ 1 ];\n\tvalue = props[ index ] = value[ 0 ];\n}\n\nif ( index !== name ) {\n\tprops[ name ] = value;\n\tdelete props[ index ];\n}\n\nhooks = jQuery.cssHooks[ name ];\nif ( hooks && \"expand\" in hooks ) {\n\tvalue = hooks.expand( value );\n\tdelete props[ name ];\n\n\t// Not quite $.extend, this won't overwrite existing keys.\n\t// Reusing 'index' because we have the correct \"name\"\n\tfor ( index in value ) {\n\t\tif ( !( index in props ) ) {\n\t\t\tprops[ index ] = value[ index ];\n\t\t\tspecialEasing[ index ] = easing;\n\t\t}\n\t}\n} else {\n\tspecialEasing[ name ] = easing;\n}"},{"path":"./jquery-data/1.10.2/src/effects.js","lines":[188,216],"code":"name = jQuery.camelCase( index );\neasing = specialEasing[ name ];\nvalue = props[ index ];\nif ( jQuery.isArray( value ) ) {\n\teasing = value[ 1 ];\n\tvalue = props[ index ] = value[ 0 ];\n}\n\nif ( index !== name ) {\n\tprops[ name ] = value;\n\tdelete props[ index ];\n}\n\nhooks = jQuery.cssHooks[ name ];\nif ( hooks && \"expand\" in hooks ) {\n\tvalue = hooks.expand( value );\n\tdelete props[ name ];\n\n\t// not quite $.extend, this wont overwrite keys already present.\n\t// also - reusing 'index' from above because we have the correct \"name\"\n\tfor ( index in value ) {\n\t\tif ( !( index in props ) ) {\n\t\t\tprops[ index ] = value[ index ];\n\t\t\tspecialEasing[ index ] = easing;\n\t\t}\n\t}\n} else {\n\tspecialEasing[ name ] = easing;\n}"}]},
{"id":"47e1ef0b9309ea528b2f4d61a70ce2254212bbba","instances":[{"path":"./jquery-data/3.4.1/src/effects.js","lines":[300,328],"code":"length = Animation.prefilters.length,\ndeferred = jQuery.Deferred().always( function() {\n\n\t// Don't match elem in the :animated selector\n\tdelete tick.elem;\n} ),\ntick = function() {\n\tif ( stopped ) {\n\t\treturn false;\n\t}\n\tvar currentTime = fxNow || createFxNow(),\n\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t// Support: Android 2.3 only\n\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\ttemp = remaining / animation.duration || 0,\n\t\tpercent = 1 - temp,\n\t\tindex = 0,\n\t\tlength = animation.tweens.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\tanimation.tweens[ index ].run( percent );\n\t}\n\n\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t// If there's more to do, yield\n\tif ( percent < 1 && length ) {\n\t\treturn remaining;"},{"path":"./jquery-data/1.10.2/src/effects.js","lines":[83,107],"code":"length = animationPrefilters.length,\ndeferred = jQuery.Deferred().always( function() {\n\t// don't match elem in the :animated selector\n\tdelete tick.elem;\n}),\ntick = function() {\n\tif ( stopped ) {\n\t\treturn false;\n\t}\n\tvar currentTime = fxNow || createFxNow(),\n\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\ttemp = remaining / animation.duration || 0,\n\t\tpercent = 1 - temp,\n\t\tindex = 0,\n\t\tlength = animation.tweens.length;\n\n\tfor ( ; index < length ; index++ ) {\n\t\tanimation.tweens[ index ].run( percent );\n\t}\n\n\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\tif ( percent < 1 && length ) {\n\t\treturn remaining;"}]},
{"id":"baaee950f65389daf909e6b93bc7bf33170560a7","instances":[{"path":"./jquery-data/3.4.1/src/effects.js","lines":[502,623],"code":"\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );"},{"path":"./jquery-data/1.10.2/src/effects.js","lines":[474,593],"code":"\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || jQuery._data( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = jQuery._data( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = jQuery._data( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {"}]},
{"id":"bdaf9f451e778d7cdccf567277726b9a0eae550c","instances":[{"path":"./jquery-data/3.4.1/src/effects.js","lines":[623,638],"code":"\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {"},{"path":"./jquery-data/1.10.2/src/effects.js","lines":[464,478],"code":"\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\njQuery.fn.extend({"}]},
{"id":"c135da90c7c1003a1bfb6d52d2f48912aba1e092","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[70,93],"code":"if ( data == null && fn == null ) {\n\n\t// ( types, fn )\n\tfn = selector;\n\tdata = selector = undefined;\n} else if ( fn == null ) {\n\tif ( typeof selector === \"string\" ) {\n\n\t\t// ( types, selector, fn )\n\t\tfn = data;\n\t\tdata = undefined;\n\t} else {\n\n\t\t// ( types, data, fn )\n\t\tfn = data;\n\t\tdata = selector;\n\t\tselector = undefined;\n\t}\n}\nif ( fn === false ) {\n\tfn = returnFalse;\n} else if ( !fn ) {\n\treturn elem;\n}"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[913,933],"code":"if ( data == null && fn == null ) {\n\t// ( types, fn )\n\tfn = selector;\n\tdata = selector = undefined;\n} else if ( fn == null ) {\n\tif ( typeof selector === \"string\" ) {\n\t\t// ( types, selector, fn )\n\t\tfn = data;\n\t\tdata = undefined;\n\t} else {\n\t\t// ( types, data, fn )\n\t\tfn = data;\n\t\tdata = selector;\n\t\tselector = undefined;\n\t}\n}\nif ( fn === false ) {\n\tfn = returnFalse;\n} else if ( !fn ) {\n\treturn this;\n}"}]},
{"id":"c2b7da7127b13f3a5bd1a905da34a9465c99a828","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[112,141],"code":"/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[21,48],"code":"/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\t\tvar tmp, events, t, handleObjIn,\n\t\t\tspecial, eventHandle, handleObj,\n\t\t\thandlers, type, namespaces, origType,\n\t\t\telemData = jQuery._data( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {"}]},
{"id":"a44509dc1420e7bec9cfafb8f4bfcd0a067b5472","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[165,208],"code":"types = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\nt = types.length;\nwhile ( t-- ) {\n\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\ttype = origType = tmp[ 1 ];\n\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t// There *must* be a type, no attaching namespace-only handlers\n\tif ( !type ) {\n\t\tcontinue;\n\t}\n\n\t// If event changes its type, use the special event handlers for the changed type\n\tspecial = jQuery.event.special[ type ] || {};\n\n\t// If selector defined, determine special event api type, otherwise given type\n\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t// Update special based on newly reset type\n\tspecial = jQuery.event.special[ type ] || {};\n\n\t// handleObj is passed to all event handlers\n\thandleObj = jQuery.extend( {\n\t\ttype: type,\n\t\torigType: origType,\n\t\tdata: data,\n\t\thandler: handler,\n\t\tguid: handler.guid,\n\t\tselector: selector,\n\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\tnamespace: namespaces.join( \".\" )\n\t}, handleObjIn );\n\n\t// Init the event handler queue if we're the first\n\tif ( !( handlers = events[ type ] ) ) {\n\t\thandlers = events[ type ] = [];\n\t\thandlers.delegateCount = 0;\n\n\t\t// Only use addEventListener if the special events handler returns false\n\t\tif ( !special.setup ||\n\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\tif ( elem.addEventListener ) {\n\t\t\t\telem.addEventListener( type, eventHandle );"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[69,111],"code":"types = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\nt = types.length;\nwhile ( t-- ) {\n\ttmp = rtypenamespace.exec( types[t] ) || [];\n\ttype = origType = tmp[1];\n\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t// There *must* be a type, no attaching namespace-only handlers\n\tif ( !type ) {\n\t\tcontinue;\n\t}\n\n\t// If event changes its type, use the special event handlers for the changed type\n\tspecial = jQuery.event.special[ type ] || {};\n\n\t// If selector defined, determine special event api type, otherwise given type\n\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t// Update special based on newly reset type\n\tspecial = jQuery.event.special[ type ] || {};\n\n\t// handleObj is passed to all event handlers\n\thandleObj = jQuery.extend({\n\t\ttype: type,\n\t\torigType: origType,\n\t\tdata: data,\n\t\thandler: handler,\n\t\tguid: handler.guid,\n\t\tselector: selector,\n\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\tnamespace: namespaces.join(\".\")\n\t}, handleObjIn );\n\n\t// Init the event handler queue if we're the first\n\tif ( !(handlers = events[ type ]) ) {\n\t\thandlers = events[ type ] = [];\n\t\thandlers.delegateCount = 0;\n\n\t\t// Only use addEventListener/attachEvent if the special events handler returns false\n\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t// Bind the global event handler to the element\n\t\t\tif ( elem.addEventListener ) {\n\t\t\t\telem.addEventListener( type, eventHandle, false );"}]},
{"id":"a515b2acef55bf62a61c0408e47433596fc7db4e","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[235,306],"code":"remove: function( elem, types, handler, selector, mappedTypes ) {\n\n\tvar j, origCount, tmp,\n\t\tevents, t, handleObj,\n\t\tspecial, handlers, type, namespaces, origType,\n\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\tif ( !elemData || !( events = elemData.events ) ) {\n\t\treturn;\n\t}\n\n\t// Once for each type.namespace in types; type may be omitted\n\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\tt = types.length;\n\twhile ( t-- ) {\n\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\ttype = origType = tmp[ 1 ];\n\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\tif ( !type ) {\n\t\t\tfor ( type in events ) {\n\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\thandlers = events[ type ] || [];\n\t\ttmp = tmp[ 2 ] &&\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t// Remove matching events\n\t\torigCount = j = handlers.length;\n\t\twhile ( j-- ) {\n\t\t\thandleObj = handlers[ j ];\n\n\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t}\n\t\t\t\tif ( special.remove ) {\n\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\tif ( origCount && !handlers.length ) {\n\t\t\tif ( !special.teardown ||\n\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t}\n\n\t\t\tdelete events[ type ];\n\t\t}\n\t}\n\n\t// Remove data and the expando if it's no longer used\n\tif ( jQuery.isEmptyObject( events ) ) {\n\t\tdataPriv.remove( elem, \"handle events\" );\n\t}\n},"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[143,208],"code":"remove: function( elem, types, handler, selector, mappedTypes ) {\n\tvar j, handleObj, tmp,\n\t\torigCount, t, events,\n\t\tspecial, handlers, type,\n\t\tnamespaces, origType,\n\t\telemData = jQuery.hasData( elem ) && jQuery._data( elem );\n\n\tif ( !elemData || !(events = elemData.events) ) {\n\t\treturn;\n\t}\n\n\t// Once for each type.namespace in types; type may be omitted\n\ttypes = ( types || \"\" ).match( core_rnotwhite ) || [\"\"];\n\tt = types.length;\n\twhile ( t-- ) {\n\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\ttype = origType = tmp[1];\n\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\tif ( !type ) {\n\t\t\tfor ( type in events ) {\n\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\thandlers = events[ type ] || [];\n\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t// Remove matching events\n\t\torigCount = j = handlers.length;\n\t\twhile ( j-- ) {\n\t\t\thandleObj = handlers[ j ];\n\n\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t}\n\t\t\t\tif ( special.remove ) {\n\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\tif ( origCount && !handlers.length ) {\n\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t}\n\n\t\t\tdelete events[ type ];\n\t\t}\n\t}\n\n\t// Remove the expando if it's no longer used\n\tif ( jQuery.isEmptyObject( events ) ) {\n\t\tdelete elemData.handle;"}]},
{"id":"ce2b34759f6b15fc49d717922f1f3c97f716b1d7","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[347,374],"code":"\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Call the postDispatch hook for the mapped type\n\tif ( special.postDispatch ) {\n\t\tspecial.postDispatch.call( this, event );\n\t}\n\n\treturn event.result;\n},\n\nhandlers: function( event, handlers ) {\n\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[384,412],"code":"\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Call the postDispatch hook for the mapped type\n\tif ( special.postDispatch ) {\n\t\tspecial.postDispatch.call( this, event );\n\t}\n\n\treturn event.result;\n},\n\nhandlers: function( event, handlers ) {\n\tvar sel, handleObj, matches, i,\n\t\thandlerQueue = [],"}]},
{"id":"1a1ea91a39a7f6e0ff3f76f5ce86cff064e7de4c","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[623,641],"code":"\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[652,669],"code":"\t\t\telem.detachEvent( name, handle );\n\t\t}\n\t};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = ( src.defaultPrevented || src.returnValue === false ||"}]},
{"id":"9fcb2bd5c66bcb438d83dcc221fef1945b8a9aae","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[816,836],"code":"\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[738,758],"code":"\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;"}]},
{"id":"96c1ffbb827f8ae7bd5f04827ea491b5f0d77772","instances":[{"path":"./jquery-data/3.4.1/src/event.js","lines":[847,884],"code":"\treturn on( this, types, selector, data, fn, 1 );\n},\noff: function( types, selector, fn ) {\n\tvar handleObj, type;\n\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t// ( event )  dispatched jQuery.Event\n\t\thandleObj = types.handleObj;\n\t\tjQuery( types.delegateTarget ).off(\n\t\t\thandleObj.namespace ?\n\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\thandleObj.origType,\n\t\t\thandleObj.selector,\n\t\t\thandleObj.handler\n\t\t);\n\t\treturn this;\n\t}\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-object [, selector] )\n\t\tfor ( type in types ) {\n\t\t\tthis.off( type, selector, types[ type ] );\n\t\t}\n\t\treturn this;\n\t}\n\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t// ( types [, fn] )\n\t\tfn = selector;\n\t\tselector = undefined;\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t}\n\treturn this.each( function() {\n\t\tjQuery.event.remove( this, types, fn, selector );\n\t} );\n}"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[950,982],"code":"\treturn this.on( types, selector, data, fn, 1 );\n},\noff: function( types, selector, fn ) {\n\tvar handleObj, type;\n\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t// ( event )  dispatched jQuery.Event\n\t\thandleObj = types.handleObj;\n\t\tjQuery( types.delegateTarget ).off(\n\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\thandleObj.selector,\n\t\t\thandleObj.handler\n\t\t);\n\t\treturn this;\n\t}\n\tif ( typeof types === \"object\" ) {\n\t\t// ( types-object [, selector] )\n\t\tfor ( type in types ) {\n\t\t\tthis.off( type, selector, types[ type ] );\n\t\t}\n\t\treturn this;\n\t}\n\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t// ( types [, fn] )\n\t\tfn = selector;\n\t\tselector = undefined;\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t}\n\treturn this.each(function() {\n\t\tjQuery.event.remove( this, types, fn, selector );\n\t});\n},"}]},
{"id":"a608e697c1959c94051d03db039c1d61aca4878e","instances":[{"path":"./jquery-data/3.4.1/src/manipulation.js","lines":[89,104],"code":"\tevents = pdataOld.events;\n\n\tif ( events ) {\n\t\tdelete pdataCur.handle;\n\t\tpdataCur.events = {};\n\n\t\tfor ( type in events ) {\n\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 2. Copy user data\nif ( dataUser.hasData( src ) ) {"},{"path":"./jquery-data/1.10.2/src/manipulation.js","lines":[357,373],"code":"\tevents = oldData.events;\n\nif ( events ) {\n\tdelete curData.handle;\n\tcurData.events = {};\n\n\tfor ( type in events ) {\n\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t}\n\t}\n}\n\n// make the cloned public data object a copy from the original\nif ( curData.data ) {\n\tcurData.data = jQuery.extend( {}, curData.data );\n}"}]},
{"id":"a566bf6fb8de5d79c59be57b0707a7dcb5c4966d","instances":[{"path":"./jquery-data/3.4.1/src/manipulation.js","lines":[160,182],"code":"if ( first || ignored ) {\n\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\thasScripts = scripts.length;\n\n\t// Use the original fragment for the last item\n\t// instead of the first because it can end up\n\t// being emptied incorrectly in certain situations (#8070).\n\tfor ( ; i < l; i++ ) {\n\t\tnode = fragment;\n\n\t\tif ( i !== iNoClone ) {\n\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\tif ( hasScripts ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t}\n\t\t}\n\n\t\tcallback.call( collection[ i ], node, i );"},{"path":"./jquery-data/1.10.2/src/manipulation.js","lines":[261,279],"code":"if ( first ) {\n\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\thasScripts = scripts.length;\n\n\t// Use the original fragment for the last item instead of the first because it can end up\n\t// being emptied incorrectly in certain situations (#8070).\n\tfor ( ; i < l; i++ ) {\n\t\tnode = fragment;\n\n\t\tif ( i !== iNoClone ) {\n\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\tif ( hasScripts ) {\n\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t}\n\t\t}\n\n\t\tcallback.call( this[i], node, i );"}]},
{"id":"d120eb21445b0b3aa0aa537e1f601fcd6762cf3a","instances":[{"path":"./jquery-data/3.4.1/src/manipulation.js","lines":[182,198],"code":"\tcallback.call( collection[ i ], node, i );\n}\n\nif ( hasScripts ) {\n\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t// Reenable scripts\n\tjQuery.map( scripts, restoreScript );\n\n\t// Evaluate executable scripts on first document insertion\n\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\tnode = scripts[ i ];\n\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {"},{"path":"./jquery-data/1.10.2/src/manipulation.js","lines":[279,294],"code":"\tcallback.call( this[i], node, i );\n}\n\nif ( hasScripts ) {\n\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t// Reenable scripts\n\tjQuery.map( scripts, restoreScript );\n\n\t// Evaluate executable scripts on first document insertion\n\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\tnode = scripts[ i ];\n\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t!jQuery._data( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\tif ( node.src ) {"}]},
{"id":"6fb765c9385fd8335a9bb2fdd21e4f27b1327d63","instances":[{"path":"./jquery-data/3.4.1/src/queue.js","lines":[10,70],"code":"jQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );"},{"path":"./jquery-data/1.10.2/src/queue.js","lines":[1,61],"code":"jQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = jQuery._data( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray(data) ) {\n\t\t\t\t\tqueue = jQuery._data( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn jQuery._data( elem, key ) || jQuery._data( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tjQuery._removeData( elem, type + \"queue\" );"}]},
{"id":"a2efc94536e0a1e61d2c99d7fac03be419de5996","instances":[{"path":"./jquery-data/3.4.1/src/queue.js","lines":[70,108],"code":"\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {"},{"path":"./jquery-data/1.10.2/src/queue.js","lines":[62,102],"code":"\t\t\t\tjQuery._removeData( elem, key );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\t// Based off of the plugin by Clint Helfers, with permission.\n\t// http://blindsignals.com/index.php/2009/07/jquery-delay/\n\tdelay: function( time, type ) {"}]},
{"id":"18e96749d6096a7d96143cc7060a7a889211e9e0","instances":[{"path":"./jquery-data/3.4.1/src/queue.js","lines":[105,141],"code":"\t\tjQuery.dequeue( this, type );\n\t} );\n},\nclearQueue: function( type ) {\n\treturn this.queue( type || \"fx\", [] );\n},\n\n// Get a promise resolved when queues of a certain type\n// are emptied (fx is the type by default)\npromise: function( type, obj ) {\n\tvar tmp,\n\t\tcount = 1,\n\t\tdefer = jQuery.Deferred(),\n\t\telements = this,\n\t\ti = this.length,\n\t\tresolve = function() {\n\t\t\tif ( !( --count ) ) {\n\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t}\n\t\t};\n\n\tif ( typeof type !== \"string\" ) {\n\t\tobj = type;\n\t\ttype = undefined;\n\t}\n\ttype = type || \"fx\";\n\n\twhile ( i-- ) {\n\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\tif ( tmp && tmp.empty ) {\n\t\t\tcount++;\n\t\t\ttmp.empty.add( resolve );\n\t\t}\n\t}\n\tresolve();\n\treturn defer.promise( obj );\n}"},{"path":"./jquery-data/1.10.2/src/queue.js","lines":[109,145],"code":"\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n},\nclearQueue: function( type ) {\n\treturn this.queue( type || \"fx\", [] );\n},\n// Get a promise resolved when queues of a certain type\n// are emptied (fx is the type by default)\npromise: function( type, obj ) {\n\tvar tmp,\n\t\tcount = 1,\n\t\tdefer = jQuery.Deferred(),\n\t\telements = this,\n\t\ti = this.length,\n\t\tresolve = function() {\n\t\t\tif ( !( --count ) ) {\n\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t}\n\t\t};\n\n\tif ( typeof type !== \"string\" ) {\n\t\tobj = type;\n\t\ttype = undefined;\n\t}\n\ttype = type || \"fx\";\n\n\twhile( i-- ) {\n\t\ttmp = jQuery._data( elements[ i ], type + \"queueHooks\" );\n\t\tif ( tmp && tmp.empty ) {\n\t\t\tcount++;\n\t\t\ttmp.empty.add( resolve );\n\t\t}\n\t}\n\tresolve();\n\treturn defer.promise( obj );\n}"}]},
{"id":"088a4c00118585e2fecd844288745597f424d147","instances":[{"path":"./jquery-data/3.4.1/src/serialize.js","lines":[98,118],"code":"jQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();"},{"path":"./jquery-data/1.10.2/src/serialize.js","lines":[7,25],"code":"jQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\tvar type = this.type;\n\t\t\t// Use .is(\":disabled\") so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !manipulation_rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ){\n\t\t\tvar val = jQuery( this ).val();"}]},
{"id":"adabbf60cf4761d8e148b5d57b5d944cd7dc16e0","instances":[{"path":"./jquery-data/3.4.1/src/traversing.js","lines":[50,61],"code":"for ( ; i < l; i++ ) {\n\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t// Always skip document fragments\n\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t// Don't pass non-elements to Sizzle\n\t\t\tcur.nodeType === 1 &&\n\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\tmatched.push( cur );"},{"path":"./jquery-data/1.10.2/src/traversing.js","lines":[83,93],"code":"for ( ; i < l; i++ ) {\n\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t// Always skip document fragments\n\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\tpos.index(cur) > -1 :\n\n\t\t\t// Don't pass non-elements to Sizzle\n\t\t\tcur.nodeType === 1 &&\n\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\tcur = ret.push( cur );"}]},
{"id":"116a43d095b6d58ed46ab883b3678b80d9be88c6","instances":[{"path":"./jquery-data/3.4.1/src/traversing.js","lines":[159,177],"code":"\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );"},{"path":"./jquery-data/1.10.2/src/traversing.js","lines":[184,201],"code":"\t\t\tjQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar ret = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tret = jQuery.filter( selector, ret );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tret = jQuery.unique( ret );"}]},
{"id":"c1bdc4b499cd53bf1cb44a04ed416dedcd25927d","instances":[{"path":"./jquery-data/3.4.1/src/attributes/classes.js","lines":[27,33],"code":"addClass: function( value ) {\n\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\ti = 0;\n\n\tif ( isFunction( value ) ) {\n\t\treturn this.each( function( j ) {\n\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );"},{"path":"./jquery-data/3.4.1/src/attributes/classes.js","lines":[64,70],"code":"removeClass: function( value ) {\n\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\ti = 0;\n\n\tif ( isFunction( value ) ) {\n\t\treturn this.each( function( j ) {\n\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );"}]},
{"id":"894e856f0265c7f1a498d7098cac35efc97f0e8d","instances":[{"path":"./jquery-data/3.4.1/src/attributes/classes.js","lines":[37,46],"code":"classes = classesToArray( value );\n\nif ( classes.length ) {\n\twhile ( ( elem = this[ i++ ] ) ) {\n\t\tcurValue = getClass( elem );\n\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\tif ( cur ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {"},{"path":"./jquery-data/3.4.1/src/attributes/classes.js","lines":[78,89],"code":"classes = classesToArray( value );\n\nif ( classes.length ) {\n\twhile ( ( elem = this[ i++ ] ) ) {\n\t\tcurValue = getClass( elem );\n\n\t\t// This expression is here for better compressibility (see addClass)\n\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\tif ( cur ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {"}]},
{"id":"53b9945e8a9f333bfdbfe425092238aadde782ec","instances":[{"path":"./jquery-data/3.4.1/src/attributes/val.js","lines":[16,32],"code":"val: function( value ) {\n\tvar hooks, ret, valueIsFunction,\n\t\telem = this[ 0 ];\n\n\tif ( !arguments.length ) {\n\t\tif ( elem ) {\n\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\tif ( hooks &&\n\t\t\t\t\"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tret = elem.value;"},{"path":"./jquery-data/1.10.2/src/attributes.js","lines":[172,184],"code":"val: function( value ) {\n\tvar ret, hooks, isFunction,\n\t\telem = this[0];\n\n\tif ( !arguments.length ) {\n\t\tif ( elem ) {\n\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tret = elem.value;"}]},
{"id":"4bc378600078033247aa9442719f7a99161cff74","instances":[{"path":"./jquery-data/3.4.1/src/attributes/val.js","lines":[46,91],"code":"\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :"},{"path":"./jquery-data/1.10.2/src/attributes.js","lines":[196,239],"code":"\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map(val, function ( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\t// Use proper attribute retrieval(#6932, #12072)\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :"}]},
{"id":"ad9ba8dc4545fae78b6a07073e1ca825e47e6872","instances":[{"path":"./jquery-data/3.4.1/src/attributes/val.js","lines":[127,157],"code":"\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t// Get the specific value for the option\n\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t// We don't need an array for one selects\n\t\t\tif ( one ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\t// Multi-Selects return an array\n\t\t\tvalues.push( value );\n\t\t}\n\t}\n\n\treturn values;\n},\n\nset: function( elem, value ) {\n\tvar optionSet, option,\n\t\toptions = elem.options,\n\t\tvalues = jQuery.makeArray( value ),\n\t\ti = options.length;\n\n\twhile ( i-- ) {\n\t\toption = options[ i ];\n\n\t\t/* eslint-disable no-cond-assign */\n\n\t\tif ( option.selected =\n\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1"},{"path":"./jquery-data/1.10.2/src/attributes.js","lines":[263,289],"code":"\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t// Get the specific value for the option\n\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t// We don't need an array for one selects\n\t\t\tif ( one ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\t// Multi-Selects return an array\n\t\t\tvalues.push( value );\n\t\t}\n\t}\n\n\treturn values;\n},\n\nset: function( elem, value ) {\n\tvar optionSet, option,\n\t\toptions = elem.options,\n\t\tvalues = jQuery.makeArray( value ),\n\t\ti = options.length;\n\n\twhile ( i-- ) {\n\t\toption = options[ i ];\n\t\tif ( (option.selected = jQuery.inArray( jQuery(option).val(), values ) >= 0) ) {"}]},
{"id":"6ace5b59ef6d017b31a2c77a63470ca551d0d735","instances":[{"path":"./jquery-data/3.4.1/src/core/init.js","lines":[37,67],"code":"\tselector[ selector.length - 1 ] === \">\" &&\n\tselector.length >= 3 ) {\n\n\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\tmatch = [ null, selector, null ];\n\n} else {\n\tmatch = rquickExpr.exec( selector );\n}\n\n// Match html or make sure no context is specified for #id\nif ( match && ( match[ 1 ] || !context ) ) {\n\n\t// HANDLE: $(html) -> $(array)\n\tif ( match[ 1 ] ) {\n\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t// Option to run scripts is true for back-compat\n\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\tmatch[ 1 ],\n\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\ttrue\n\t\t) );\n\n\t\t// HANDLE: $(html, props)\n\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\tfor ( match in context ) {\n\n\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\tif ( isFunction( this[ match ] ) ) {"},{"path":"./jquery-data/1.10.2/src/core.js","lines":[114,140],"code":"if ( selector.charAt(0) === \"<\" && selector.charAt( selector.length - 1 ) === \">\" && selector.length >= 3 ) {\n\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\tmatch = [ null, selector, null ];\n\n} else {\n\tmatch = rquickExpr.exec( selector );\n}\n\n// Match html or make sure no context is specified for #id\nif ( match && (match[1] || !context) ) {\n\n\t// HANDLE: $(html) -> $(array)\n\tif ( match[1] ) {\n\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t// scripts is true for back-compat\n\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\tmatch[1],\n\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\ttrue\n\t\t) );\n\n\t\t// HANDLE: $(html, props)\n\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\tfor ( match in context ) {\n\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {"}]},
{"id":"ade39872128d93a82d032ebf1c4d49adde0f9887","instances":[{"path":"./jquery-data/3.4.1/src/core/ready-no-deferred.js","lines":[23,51],"code":"\twhenReady( fn );\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\twhenReady = function( fn ) {"},{"path":"./jquery-data/3.4.1/src/core/ready.js","lines":[22,56],"code":"\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );"}]},
{"id":"b62c4ecd9616e957e1aaab26b98ece7b9a4da074","instances":[{"path":"./jquery-data/3.4.1/src/css/curCSS.js","lines":[38,56],"code":"\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t// Remember the original values\n\t\twidth = style.width;\n\t\tminWidth = style.minWidth;\n\t\tmaxWidth = style.maxWidth;\n\n\t\t// Put in the new values to get a computed value out\n\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\tret = computed.width;\n\n\t\t// Revert the changed values\n\t\tstyle.width = width;\n\t\tstyle.minWidth = minWidth;\n\t\tstyle.maxWidth = maxWidth;\n\t}\n}\n\nreturn ret !== undefined ?"},{"path":"./jquery-data/1.10.2/src/css.js","lines":[313,331],"code":"\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t// Remember the original values\n\t\twidth = style.width;\n\t\tminWidth = style.minWidth;\n\t\tmaxWidth = style.maxWidth;\n\n\t\t// Put in the new values to get a computed value out\n\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\tret = computed.width;\n\n\t\t// Revert the changed values\n\t\tstyle.width = width;\n\t\tstyle.minWidth = minWidth;\n\t\tstyle.maxWidth = maxWidth;\n\t}\n}\n\nreturn ret;"}]},
{"id":"a42fc663dd4b7f1a1440ce0f27af1bc8c2ff852b","instances":[{"path":"./jquery-data/3.4.1/src/css/var/swap.js","lines":[6,24],"code":"return function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};"},{"path":"./jquery-data/1.10.2/src/core.js","lines":[876,894],"code":"swap: function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n}"}]},
{"id":"fca115401240da7bc49335e93c909a60b25f4419","instances":[{"path":"./jquery-data/3.4.1/src/effects/Tween.js","lines":[21,68],"code":"\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||"},{"path":"./jquery-data/1.10.2/src/effects.js","lines":[386,431],"code":"\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&"}]},
{"id":"6ad4f0728901c4f6acd04a6c5c7b20f0a46b52d6","instances":[{"path":"./jquery-data/3.4.1/src/event/trigger.js","lines":[80,100],"code":"if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\tbubbleType = special.delegateType || type;\n\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\tcur = cur.parentNode;\n\t}\n\tfor ( ; cur; cur = cur.parentNode ) {\n\t\teventPath.push( cur );\n\t\ttmp = cur;\n\t}\n\n\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t}\n}\n\n// Fire handlers on the event path\ni = 0;\nwhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\tlastElement = cur;"},{"path":"./jquery-data/1.10.2/src/event.js","lines":[274,295],"code":"if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\tbubbleType = special.delegateType || type;\n\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\tcur = cur.parentNode;\n\t}\n\tfor ( ; cur; cur = cur.parentNode ) {\n\t\teventPath.push( cur );\n\t\ttmp = cur;\n\t}\n\n\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t}\n}\n\n// Fire handlers on the event path\ni = 0;\nwhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\tevent.type = i > 1 ?"}]},
{"id":"e617151b457635581757ea87008cb67cc5d3b7f2","instances":[{"path":"./jquery-data/3.4.1/src/manipulation/buildFragment.js","lines":[29,46],"code":"if ( toType( elem ) === \"object\" ) {\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n// Convert non-html into a text node\n} else if ( !rhtml.test( elem ) ) {\n\tnodes.push( context.createTextNode( elem ) );\n\n// Convert html into DOM nodes\n} else {\n\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t// Deserialize a standard representation\n\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\twrap = wrapMap[ tag ] || wrapMap._default;\n\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];"},{"path":"./jquery-data/1.10.2/src/manipulation.js","lines":[571,586],"code":"if ( jQuery.type( elem ) === \"object\" ) {\n\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n// Convert non-html into a text node\n} else if ( !rhtml.test( elem ) ) {\n\tnodes.push( context.createTextNode( elem ) );\n\n// Convert html into DOM nodes\n} else {\n\ttmp = tmp || safe.appendChild( context.createElement(\"div\") );\n\n\t// Deserialize a standard representation\n\ttag = ( rtagName.exec( elem ) || [\"\", \"\"] )[1].toLowerCase();\n\twrap = wrapMap[ tag ] || wrapMap._default;\n\n\ttmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[2];"}]},
{"id":"418dbd8332fd2666a108a1664640c036cce482ad","instances":[{"path":"./jquery-data/1.10.2/src/attributes.js","lines":[40,61],"code":"\tproceed = typeof value === \"string\" && value;\n\nif ( jQuery.isFunction( value ) ) {\n\treturn this.each(function( j ) {\n\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t});\n}\n\nif ( proceed ) {\n\t// The disjunction here is for better compressibility (see removeClass)\n\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\tfor ( ; i < len; i++ ) {\n\t\telem = this[ i ];\n\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\" \"\n\t\t);\n\n\t\tif ( cur ) {\n\t\t\tj = 0;\n\t\t\twhile ( (clazz = classes[j++]) ) {"},{"path":"./jquery-data/1.10.2/src/attributes.js","lines":[79,99],"code":"\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\nif ( jQuery.isFunction( value ) ) {\n\treturn this.each(function( j ) {\n\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t});\n}\nif ( proceed ) {\n\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\tfor ( ; i < len; i++ ) {\n\t\telem = this[ i ];\n\t\t// This expression is here for better compressibility (see addClass)\n\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\"\"\n\t\t);\n\n\t\tif ( cur ) {\n\t\t\tj = 0;\n\t\t\twhile ( (clazz = classes[j++]) ) {"}]}]
