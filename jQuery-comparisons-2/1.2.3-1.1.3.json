[{"id":"23c2b2d5b5d69f61b34010b432a295e68e7f35be","instances":[{"path":"./jquery-data/1.2.3/src/ajax.js","lines":[461,487],"code":"\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"},{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[794,820],"code":"\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"}]},
{"id":"84ad532b3a8f0d6b08cdbd087c5ce170a44a64ed","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[88,132],"code":"\t\treturn new jQuery( document )[ jQuery.fn.ready ? \"ready\" : \"load\" ]( selector );\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\tselector.constructor == Array && selector ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object, contains DOM nodes, is passed in as the selector\n\t\t(selector.jquery || selector.length && selector != window && !selector.nodeType && selector[0] != undefined && selector[0].nodeType) && jQuery.makeArray( selector ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ selector ] );\n},\n\n// The current version of jQuery being used\njquery: \"@VERSION\",\n\n// The number of elements contained in the matched element set\nsize: function() {\n\treturn this.length;\n},\n\n// The number of elements contained in the matched element set\nlength: 0,\n\n// Get the Nth element in the matched element set OR\n// Get the whole matched element set as a clean array\nget: function( num ) {\n\treturn num == undefined ?\n\n\t\t// Return a 'clean' array\n\t\tjQuery.makeArray( this ) :\n\n\t\t// Return just the object\n\t\tthis[ num ];\n},\n\n// Take an array of elements and push it onto the stack\n// (returning the new matched element set)\npushStack: function( elems ) {\n\t// Build a new jQuery matched element set\n\tvar ret = jQuery( elems );\n\n\t// Add the old object onto the stack (as a reference)\n\tret.prevObject = this;"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[170,286],"code":"\t\t\treturn new jQuery( c ).find( a );\n\t}\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );\n},\n\n/**\n * The current version of jQuery.\n *\n * @private\n * @property\n * @name jquery\n * @type String\n * @cat Core\n */\njquery: \"@VERSION\",\n\n/**\n * The number of elements currently matched. The size function will return the same value.\n *\n * @example $(\"img\").length;\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @property\n * @name length\n * @type Number\n * @cat Core\n */\n\n/**\n * Get the number of elements currently matched. This returns the same\n * number as the 'length' property of the jQuery object.\n *\n * @example $(\"img\").size();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @name size\n * @type Number\n * @cat Core\n */\nsize: function() {\n\treturn this.length;\n},\n\nlength: 0,\n\n/**\n * Access all matched DOM elements. This serves as a backwards-compatible\n * way of accessing all matched elements (other than the jQuery object\n * itself, which is, in fact, an array of elements).\n *\n * It is useful if you need to operate on the DOM elements themselves instead of using built-in jQuery functions.\n *\n * @example $(\"img\").get();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result [ <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/> ]\n * @desc Selects all images in the document and returns the DOM Elements as an Array\n *\n * @name get\n * @type Array<Element>\n * @cat Core\n */\n\n/**\n * Access a single matched DOM element at a specified index in the matched set.\n * This allows you to extract the actual DOM element and operate on it\n * directly without necessarily using jQuery functionality on it.\n *\n * @example $(\"img\").get(0);\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result <img src=\"test1.jpg\"/>\n * @desc Selects all images in the document and returns the first one\n *\n * @name get\n * @type Element\n * @param Number num Access the element in the Nth position.\n * @cat Core\n */\nget: function( num ) {\n\treturn num == undefined ?\n\n\t\t// Return a 'clean' array\n\t\tjQuery.makeArray( this ) :\n\n\t\t// Return just the object\n\t\tthis[num];\n},\n\n/**"}]},
{"id":"b669b6301ac335aabd42b8e16a3e30768d841347","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[145,187],"code":"\tArray.prototype.push.apply( this, elems );\n\t\n\treturn this;\n},\n\n// Execute a callback for every element in the matched set.\n// (You can seed the arguments with an array of args, but this is\n// only used internally.)\neach: function( callback, args ) {\n\treturn jQuery.each( this, callback, args );\n},\n\n// Determine the position of an element within \n// the matched set of elements\nindex: function( elem ) {\n\tvar ret = -1;\n\n\t// Locate the position of the desired element\n\tthis.each(function(i){\n\t\tif ( this == elem )\n\t\t\tret = i;\n\t});\n\n\treturn ret;\n},\n\nattr: function( name, value, type ) {\n\tvar options = name;\n\t\n\t// Look for the case where we're accessing a style value\n\tif ( name.constructor == String )\n\t\tif ( value == undefined )\n\t\t\treturn this.length && jQuery[ type || \"attr\" ]( this[0], name ) || undefined;\n\n\t\telse {\n\t\t\toptions = {};\n\t\t\toptions[ name ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(i){\n\t\t// Set all the styles\n\t\tfor ( name in options )"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[304,461],"code":"\t[].push.apply( this, a );\n\treturn this;\n},\n\n/**\n * Execute a function within the context of every matched element.\n * This means that every time the passed-in function is executed\n * (which is once for every element matched) the 'this' keyword\n * points to the specific DOM element.\n *\n * Additionally, the function, when executed, is passed a single\n * argument representing the position of the element in the matched\n * set (integer, zero-index).\n *\n * @example $(\"img\").each(function(i){\n *   this.src = \"test\" + i + \".jpg\";\n * });\n * @before <img/><img/>\n * @result <img src=\"test0.jpg\"/><img src=\"test1.jpg\"/>\n * @desc Iterates over two images and sets their src property\n *\n * @name each\n * @type jQuery\n * @param Function fn A function to execute\n * @cat Core\n */\neach: function( fn, args ) {\n\treturn jQuery.each( this, fn, args );\n},\n\n/**\n * Searches every matched element for the object and returns\n * the index of the element, if found, starting with zero. \n * Returns -1 if the object wasn't found.\n *\n * @example $(\"*\").index( $('#foobar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 0\n * @desc Returns the index for the element with ID foobar\n *\n * @example $(\"*\").index( $('#foo')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 2\n * @desc Returns the index for the element with ID foo within another element\n *\n * @example $(\"*\").index( $('#bar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result -1\n * @desc Returns -1, as there is no element with ID bar\n *\n * @name index\n * @type Number\n * @param Element subject Object to search for\n * @cat Core\n */\nindex: function( obj ) {\n\tvar pos = -1;\n\tthis.each(function(i){\n\t\tif ( this == obj ) pos = i;\n\t});\n\treturn pos;\n},\n\n/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * If the element does not have an attribute with such a\n\t * name, undefined is returned.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements.\n *\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n * @desc Sets src and alt attributes to all images.\n *\n * @name attr\n * @type jQuery\n * @param Map properties Key/value pairs to set as object properties.\n * @cat DOM/Attributes\n */\n\n/**"}]},
{"id":"10d6addbdb3cb9b805703ed58e49aa0799d82437","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[1084,1100],"code":"\treturn elem.getAttribute( name );\n\n// elem is actually elem.style ... set the style\n} else {\n\t// IE actually uses filters for opacity\n\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\tif ( value != undefined ) {\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\telem.zoom = 1; \n\t\n\t\t\t// Set the alpha filter to set the opacity\n\t\t\telem.filter = (elem.filter || \"\").replace( /alpha\\([^)]*\\)/, \"\" ) +\n\t\t\t\t(parseFloat( value ).toString() == \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\");\n\t\t}\n\t\n\t\treturn elem.filter && elem.filter.indexOf(\"opacity=\") >= 0 ?"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1567,1580],"code":"else if ( elem.tagName ) {\n\t// IE actually uses filters for opacity ... elem is actually elem.style\n\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\tif ( value != undefined ) {\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\telem.zoom = 1; \n\t\n\t\t\t// Set the alpha filter to set the opacity\n\t\t\telem.filter = (elem.filter || \"\").replace(/alpha\\([^)]*\\)/,\"\") +\n\t\t\t\t(parseFloat(value).toString() == \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\");\n\t\t}\n\t\n\t\treturn elem.filter ? "}]},
{"id":"ddc12ac746dacc4f600a1070214b99b71298d671","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[1193,1208],"code":"var ret = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, length = elems.length; i < length; i++ ) {\n\tvar value = callback( elems[ i ], i );\n\n\tif ( value !== null && value != undefined ) {\n\t\tif ( value.constructor != Array )\n\t\t\tvalue = [ value ];\n\n\t\tret = ret.concat( value );\n\t}\n}\n\nreturn ret;"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1759,1772],"code":"var result = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}\n\nreturn result;"}]},
{"id":"0510b787a437878839988d814bbb811cc2158162","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[350,370],"code":"mouseenter: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseenter\n\t\targuments[0].type = \"mouseenter\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n},"},{"path":"./jquery-data/1.2.3/src/event.js","lines":[372,392],"code":"mouseleave: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseleave\n\t\targuments[0].type = \"mouseleave\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n}"}]},
{"id":"5425bd4f109f111c7bdef3c6d6129e4537dbbcd9","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[390,418],"code":"\t\t\t\treturn jQuery.event.handle.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\tbind: function( type, data, fn ) {\n\t\treturn type == \"unload\" ? this.one(type, data, fn) : this.each(function(){\n\t\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t\t});\n\t},\n\t\n\tone: function( type, data, fn ) {\n\t\treturn this.each(function(){\n\t\t\tjQuery.event.add( this, type, function(event) {\n\t\t\t\tjQuery(this).unbind(event);\n\t\t\t\treturn (fn || data).apply( this, arguments);\n\t\t\t}, fn && data);\n\t\t});\n\t},\n\n\tunbind: function( type, fn ) {\n\t\treturn this.each(function(){\n\t\t\tjQuery.event.remove( this, type, fn );\n\t\t});\n\t},\n\n\ttrigger: function( type, data, fn ) {"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[247,410],"code":"\t\treturn event;\n\t}\n};\n\njQuery.fn.extend({\n\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second parameter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * Calling bind with an event type of \"unload\" will automatically\n\t * use the one method instead of bind to prevent memory leaks.\n\t *\n\t * @example $(\"p\").bind(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @example function handler(event) {\n\t *   alert(event.data.foo);\n\t * }\n\t * $(\"p\").bind(\"click\", {foo: \"bar\"}, handler)\n\t * @result alert(\"bar\")\n\t * @desc Pass some additional data to the event handler.\n\t *\n\t * @example $(\"form\").bind(\"submit\", function() { return false; })\n\t * @desc Cancel a default action and prevent it from bubbling by returning false\n\t * from your function.\n\t *\n\t * @example $(\"form\").bind(\"submit\", function(event){\n\t *   event.preventDefault();\n\t * });\n\t * @desc Cancel only the default action by using the preventDefault method.\n\t *\n\t *\n\t * @example $(\"form\").bind(\"submit\", function(event){\n\t *   event.stopPropagation();\n\t * });\n\t * @desc Stop only an event from bubbling by using the stopPropagation method.\n\t *\n\t * @name bind\n\t * @type jQuery\n\t * @param String type An event type\n\t * @param Object data (optional) Additional data passed to the event handler as event.data\n\t * @param Function fn A function to bind to the event on each of the set of matched elements\n\t * @cat Events\n\t */\n\tbind: function( type, data, fn ) {\n\t\treturn type == \"unload\" ? this.one(type, data, fn) : this.each(function(){\n\t\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t\t});\n\t},\n\t\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The handler is executed only once for each element. Otherwise, the same rules\n\t * as described in bind() apply.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second paramter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * @example $(\"p\").one(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @name one\n\t * @type jQuery\n\t * @param String type An event type\n\t * @param Object data (optional) Additional data passed to the event handler as event.data\n\t * @param Function fn A function to bind to the event on each of the set of matched elements\n\t * @cat Events\n\t */\n\tone: function( type, data, fn ) {\n\t\treturn this.each(function(){\n\t\t\tjQuery.event.add( this, type, function(event) {\n\t\t\t\tjQuery(this).unbind(event);\n\t\t\t\treturn (fn || data).apply( this, arguments);\n\t\t\t}, fn && data);\n\t\t});\n\t},\n\n\t/**\n\t * The opposite of bind, removes a bound event from each of the matched\n\t * elements.\n\t *"}]},
{"id":"dfbfa3606b5e760fabc36e01d6a0b00ea98399a4","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[462,486],"code":"\t\t\tjQuery.readyList.push( function() { return fn.call(this, jQuery); } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\tisReady: false,\n\treadyList: [],\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[544,572],"code":"\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;"}]},
{"id":"8d072e89bfd5609c052e5401ccc12b452097bee2","instances":[{"path":"./jquery-data/1.2.3/src/fx.js","lines":[1,9],"code":"jQuery.fn.extend({\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock || \"\";"},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[1,42],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Displays each of the set of matched elements if they are hidden.\n\t *\n\t * @example $(\"p\").show()\n\t * @before <p style=\"display: none\">Hello</p>\n\t * @result [ <p style=\"display: block\">Hello</p> ]\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Show all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see hide(String|Number,Function)\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";"}]},
{"id":"4fc18615bac32f553c274c0ce48225e009ff0b5e","instances":[{"path":"./jquery-data/1.2.3/src/fx.js","lines":[18,28],"code":"\t\t}).end();\n},\n\nhide: function(speed,callback){\n\treturn speed ?\n\t\tthis.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) :\n\t\t\n\t\tthis.filter(\":visible\").each(function(){\n\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");"},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[45,87],"code":"\t\t}).end();\n},\n\n/**\n * Hides each of the set of matched elements if they are shown.\n *\n * @example $(\"p\").hide()\n * @before <p>Hello</p>\n * @result [ <p style=\"display: none\">Hello</p> ]\n *\n * @name hide\n * @type jQuery\n * @cat Effects\n */\n\n/**\n * Hide all matched elements using a graceful animation and firing an\n * optional callback after completion.\n *\n * The height, width, and opacity of each of the matched elements \n * are changed dynamically according to the specified speed.\n *\n * @example $(\"p\").hide(\"slow\");\n *\n * @example $(\"p\").hide(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name hide\n * @type jQuery\n * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback (optional) A function to be executed whenever the animation completes.\n * @cat Effects\n * @see show(String|Number,Function)\n */\nhide: function(speed,callback){\n\treturn speed ?\n\t\tthis.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) :\n\t\t\n\t\tthis.filter(\":visible\").each(function(){\n\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");"}]},
{"id":"02020974b5732c6e18c160cb5f64fcfaeb5f0cbc","instances":[{"path":"./jquery-data/1.2.3/src/fx.js","lines":[28,72],"code":"\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\tthis.style.display = \"none\";\n\t\t}).end();\n},\n\n// Save the old toggle function\n_toggle: jQuery.fn.toggle,\n\ntoggle: function( fn, fn2 ){\n\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\tthis._toggle( fn, fn2 ) :\n\t\tfn ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"toggle\", width: \"toggle\", opacity: \"toggle\"\n\t\t\t}, fn, fn2) :\n\t\t\tthis.each(function(){\n\t\t\t\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ]();\n\t\t\t});\n},\n\nslideDown: function(speed,callback){\n\treturn this.animate({height: \"show\"}, speed, callback);\n},\n\nslideUp: function(speed,callback){\n\treturn this.animate({height: \"hide\"}, speed, callback);\n},\n\nslideToggle: function(speed, callback){\n\treturn this.animate({height: \"toggle\"}, speed, callback);\n},\n\nfadeIn: function(speed, callback){\n\treturn this.animate({opacity: \"show\"}, speed, callback);\n},\n\nfadeOut: function(speed, callback){\n\treturn this.animate({opacity: \"hide\"}, speed, callback);\n},\n\nfadeTo: function(speed,to,callback){\n\treturn this.animate({opacity: to}, speed, callback);\n},\n\nanimate: function( prop, speed, easing, callback ) {"},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[89,312],"code":"\t\t\t\tthis.oldblock = \"block\";\n\t\t\tthis.style.display = \"none\";\n\t\t}).end();\n},\n\n// Save the old toggle function\n_toggle: jQuery.fn.toggle,\n\n/**\n * Toggles each of the set of matched elements. If they are shown,\n * toggle makes them hidden. If they are hidden, toggle\n * makes them shown.\n *\n * @example $(\"p\").toggle()\n * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\n * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\n *\n * @name toggle\n * @type jQuery\n * @cat Effects\n */\ntoggle: function( fn, fn2 ){\n\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\tthis._toggle( fn, fn2 ) :\n\t\tfn ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"toggle\", width: \"toggle\", opacity: \"toggle\"\n\t\t\t}, fn, fn2) :\n\t\t\tthis.each(function(){\n\t\t\t\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ]();\n\t\t\t});\n},\n\n/**\n * Reveal all matched elements by adjusting their height and firing an\n * optional callback after completion.\n *\n * Only the height is adjusted for this animation, causing all matched\n * elements to be revealed in a \"sliding\" manner.\n *\n * @example $(\"p\").slideDown(\"slow\");\n *\n * @example $(\"p\").slideDown(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideDown\n * @type jQuery\n * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback (optional) A function to be executed whenever the animation completes.\n * @cat Effects\n * @see slideUp(String|Number,Function)\n * @see slideToggle(String|Number,Function)\n */\nslideDown: function(speed,callback){\n\treturn this.animate({height: \"show\"}, speed, callback);\n},\n\n/**\n * Hide all matched elements by adjusting their height and firing an\n * optional callback after completion.\n *\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideUp(\"slow\");\n *\n * @example $(\"p\").slideUp(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideUp\n * @type jQuery\n * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback (optional) A function to be executed whenever the animation completes.\n * @cat Effects\n * @see slideDown(String|Number,Function)\n * @see slideToggle(String|Number,Function)\n */\nslideUp: function(speed,callback){\n\treturn this.animate({height: \"hide\"}, speed, callback);\n},\n\n/**\n * Toggle the visibility of all matched elements by adjusting their height and firing an\n * optional callback after completion.\n *\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideToggle(\"slow\");\n *\n * @example $(\"p\").slideToggle(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideToggle\n * @type jQuery\n * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback (optional) A function to be executed whenever the animation completes."}]},
{"id":"f153f04a2501820362823fe1b00c6d1401804796","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[78,100],"code":"\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[66,94],"code":"\t\t( jQuery.chars = \"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\" ) + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )"}]},
{"id":"e27bd04fb23f064468694f01154ccddafe964af2","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[164,191],"code":"\t\tret = r;\n\n\t\t// And remove the token\n\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\tfoundToken = true;\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tdone = jQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optimize for the case nodeName#idName\n\t\tvar re2 = quickID;"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[170,197],"code":"\t\tret = r;\n\n\t\t// And remove the token\n\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\tfoundToken = true;\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tdone = jQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optomize for the case nodeName#idName\n\t\tvar re2 = new RegExp(\"^(\" + jQuery.chars + \"+)(#)(\" + jQuery.chars + \"+)\");"}]},
{"id":"e40aa52bba6a964b9a0a9b1e3c1bbfbf51d943fa","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[210,227],"code":"if ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t// Optimization for HTML document case\n\tvar oid = elem.getElementById(m[2]);\n\t\n\t// Do a quick check for the existence of the actual ID attribute\n\t// to avoid selecting by the name attribute in IE\n\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t// Do a quick check for node name (where applicable) so\n\t// that div#foo searches will be really fast\n\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n} else {\n\t// We need to find all descendant elements\n\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t// Grab the tag name being searched for\n\t\tvar tag = m[1] == \"#\" && m[3] ? m[3] : m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[216,233],"code":"if ( m[1] == \"#\" && elem && elem.getElementById ) {\n\t// Optimization for HTML document case\n\tvar oid = elem.getElementById(m[2]);\n\t\n\t// Do a quick check for the existence of the actual ID attribute\n\t// to avoid selecting by the name attribute in IE\n\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t// Do a quick check for node name (where applicable) so\n\t// that div#foo searches will be really fast\n\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n} else {\n\t// We need to find all descendant elements\n\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t// Grab the tag name being searched for\n\t\tvar tag = m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];"}]},
{"id":"497b88c3727150fc52a38ed85d8184ca60c98225","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[224,325],"code":"\t\t\t\t\t// We need to find all descendant elements\n\t\t\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t\t\t// Grab the tag name being searched for\n\t\t\t\t\t\tvar tag = m[1] == \"#\" && m[3] ? m[3] : m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];\n\n\t\t\t\t\t\t// Handle IE7 being really dumb about <object>s\n\t\t\t\t\t\tif ( tag == \"*\" && ret[i].nodeName.toLowerCase() == \"object\" )\n\t\t\t\t\t\t\ttag = \"param\";\n\n\t\t\t\t\t\tr = jQuery.merge( r, ret[i].getElementsByTagName( tag ));\n\t\t\t\t\t}\n\n\t\t\t\t\t// It's faster to filter by class and be done with it\n\t\t\t\t\tif ( m[1] == \".\" )\n\t\t\t\t\t\tr = jQuery.classFilter( r, m[2] );\n\n\t\t\t\t\t// Same with ID filtering\n\t\t\t\t\tif ( m[1] == \"#\" ) {\n\t\t\t\t\t\tvar tmp = [];\n\n\t\t\t\t\t\t// Try to find the element with the ID\n\t\t\t\t\t\tfor ( var i = 0; r[i]; i++ )\n\t\t\t\t\t\t\tif ( r[i].getAttribute(\"id\") == m[2] ) {\n\t\t\t\t\t\t\t\ttmp = [ r[i] ];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tr = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\tret = r;\n\t\t\t\t}\n\n\t\t\t\tt = t.replace( re2, \"\" );\n\t\t\t}\n\n\t\t}\n\n\t\t// If a selector string still exists\n\t\tif ( t ) {\n\t\t\t// Attempt to filter it\n\t\t\tvar val = jQuery.filter(t,r);\n\t\t\tret = r = val.r;\n\t\t\tt = jQuery.trim(val.t);\n\t\t}\n\t}\n\n\t// An error occurred with the selector;\n\t// just return an empty set instead\n\tif ( t )\n\t\tret = [];\n\n\t// Remove the root context\n\tif ( ret && context == ret[0] )\n\t\tret.shift();\n\n\t// And combine the results\n\tdone = jQuery.merge( done, ret );\n\n\treturn done;\n},\n\nclassFilter: function(r,m,not){\n\tm = \" \" + m + \" \";\n\tvar tmp = [];\n\tfor ( var i = 0; r[i]; i++ ) {\n\t\tvar pass = (\" \" + r[i].className + \" \").indexOf( m ) >= 0;\n\t\tif ( !not && pass || not && !pass )\n\t\t\ttmp.push( r[i] );\n\t}\n\treturn tmp;\n},\n\nfilter: function(t,r,not) {\n\tvar last;\n\n\t// Look for common filter expressions\n\twhile ( t && t != last ) {\n\t\tlast = t;\n\n\t\tvar p = jQuery.parse, m;\n\n\t\tfor ( var i = 0; p[i]; i++ ) {\n\t\t\tm = p[i].exec( t );\n\n\t\t\tif ( m ) {\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.substring( m[0].length );\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( !m )\n\t\t\tbreak;\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[230,330],"code":"\t\t\t\t\t// We need to find all descendant elements\n\t\t\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t\t\t// Grab the tag name being searched for\n\t\t\t\t\t\tvar tag = m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];\n\n\t\t\t\t\t\t// Handle IE7 being really dumb about <object>s\n\t\t\t\t\t\tif ( tag == \"*\" && ret[i].nodeName.toLowerCase() == \"object\" )\n\t\t\t\t\t\t\ttag = \"param\";\n\n\t\t\t\t\t\tr = jQuery.merge( r, ret[i].getElementsByTagName( tag ));\n\t\t\t\t\t}\n\n\t\t\t\t\t// It's faster to filter by class and be done with it\n\t\t\t\t\tif ( m[1] == \".\" )\n\t\t\t\t\t\tr = jQuery.classFilter( r, m[2] );\n\n\t\t\t\t\t// Same with ID filtering\n\t\t\t\t\tif ( m[1] == \"#\" ) {\n\t\t\t\t\t\tvar tmp = [];\n\n\t\t\t\t\t\t// Try to find the element with the ID\n\t\t\t\t\t\tfor ( var i = 0; r[i]; i++ )\n\t\t\t\t\t\t\tif ( r[i].getAttribute(\"id\") == m[2] ) {\n\t\t\t\t\t\t\t\ttmp = [ r[i] ];\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\tr = tmp;\n\t\t\t\t\t}\n\n\t\t\t\t\tret = r;\n\t\t\t\t}\n\n\t\t\t\tt = t.replace( re2, \"\" );\n\t\t\t}\n\n\t\t}\n\n\t\t// If a selector string still exists\n\t\tif ( t ) {\n\t\t\t// Attempt to filter it\n\t\t\tvar val = jQuery.filter(t,r);\n\t\t\tret = r = val.r;\n\t\t\tt = jQuery.trim(val.t);\n\t\t}\n\t}\n\n\t// An error occurred with the selector;\n\t// just return an empty set instead\n\tif ( t )\n\t\tret = [];\n\n\t// Remove the root context\n\tif ( ret && context == ret[0] )\n\t\tret.shift();\n\n\t// And combine the results\n\tdone = jQuery.merge( done, ret );\n\n\treturn done;\n},\n\nclassFilter: function(r,m,not){\n\tm = \" \" + m + \" \";\n\tvar tmp = [];\n\tfor ( var i = 0; r[i]; i++ ) {\n\t\tvar pass = (\" \" + r[i].className + \" \").indexOf( m ) >= 0;\n\t\tif ( !not && pass || not && !pass )\n\t\t\ttmp.push( r[i] );\n\t}\n\treturn tmp;\n},\n\nfilter: function(t,r,not) {\n\tvar last;\n\n\t// Look for common filter expressions\n\twhile ( t  && t != last ) {\n\t\tlast = t;\n\n\t\tvar p = jQuery.parse, m;\n\n\t\tfor ( var i = 0; p[i]; i++ ) {\n\t\t\tm = p[i].exec( t );\n\n\t\t\tif ( m ) {\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.substring( m[0].length );\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( !m )\n\t\t\tbreak;\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )"}]},
{"id":"b8f79d27db51ec9f5ce659fd532b49353fbdf0f4","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[329,340],"code":"// We can get a big speed boost by filtering by class here\nelse if ( m[1] == \".\" )\n\tr = jQuery.classFilter(r, m[2], not);\n\nelse if ( m[1] == \"[\" ) {\n\tvar tmp = [], type = m[3];\n\t\n\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\tvar a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\n\t\t\n\t\tif ( z == null || /href|src|selected/.test(m[2]) )\n\t\t\tz = jQuery.attr(a,m[2]) || '';"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[332,343],"code":"// We can get a big speed boost by filtering by class here\nelse if ( m[1] == \".\" )\n\tr = jQuery.classFilter(r, m[2], not);\n\nelse if ( m[1] == \"@\" ) {\n\tvar tmp = [], type = m[3];\n\t\n\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\tvar a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\n\t\t\n\t\tif ( z == null || /href|src/.test(m[2]) )\n\t\t\tz = jQuery.attr(a,m[2]);"}]},
{"id":"8a5c6cf77b36dfc3bab57b0cfd8aa25f449fdd90","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[342,355],"code":"\t\tif ( (type == \"\" && !!z ||\n\t\t\t type == \"=\" && z == m[5] ||\n\t\t\t type == \"!=\" && z != m[5] ||\n\t\t\t type == \"^=\" && z && !z.indexOf(m[5]) ||\n\t\t\t type == \"$=\" && z.substr(z.length - m[5].length) == m[5] ||\n\t\t\t (type == \"*=\" || type == \"~=\") && z.indexOf(m[5]) >= 0) ^ not )\n\t\t\t\ttmp.push( a );\n\t}\n\t\n\tr = tmp;\n\n// We can get a speed boost by handling nth-child here\n} else if ( m[1] == \":\" && m[2] == \"nth-child\" ) {\n\tvar merge = {}, tmp = [],"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[345,358],"code":"\t\tif ( (type == \"\" && !!z ||\n\t\t\t type == \"=\" && z == m[5] ||\n\t\t\t type == \"!=\" && z != m[5] ||\n\t\t\t type == \"^=\" && z && !z.indexOf(m[5]) ||\n\t\t\t type == \"$=\" && z.substr(z.length - m[5].length) == m[5] ||\n\t\t\t (type == \"*=\" || type == \"~=\") && z.indexOf(m[5]) >= 0) ^ not )\n\t\t\t\ttmp.push( a );\n\t}\n\t\n\tr = tmp;\n\n// We can get a speed boost by handling nth-child here\n} else if ( m[1] == \":\" && m[2] == \"nth-child\" ) {\n\tvar num = jQuery.mergeNum++, tmp = [],"}]},
{"id":"1ed61e14610059c0ae2f00bc5750479482ef0d5e","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[94,108],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[121,135],"code":"\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"1244d0e0d9c6188b75865e69127082c91e0715cf","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"}]},
{"id":"dbe295127b7d910bbc16e9bb04db9d8b5b1b573f","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[507,552],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[551,596],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"}]},
{"id":"ff0a5e888dc383e6d6e352f2a3bd40abcf34a24a","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[734,749],"code":"\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent[s]([String])\", function() {\n\texpect(8);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\t\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\n\tok( $(\"#groups\").parents(\"p\")[0].id == \"ap\", \"Filtered parents check\" );\n\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[747,762],"code":"\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});\n\ntest(\"next/prev([String])\", function() {\n\texpect(8);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n\t\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});"}]}]
