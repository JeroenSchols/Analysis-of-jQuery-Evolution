[{"id":"2e8ecfdc7d98a8ec10c6715b28f272d7810180dd","instances":[{"path":"./jquery-data/1.8.3/src/attributes.js","lines":[36,46],"code":"addClass: function( value ) {\n\tvar classNames, i, l, elem,\n\t\tsetClass, c, cl;\n\n\tif ( jQuery.isFunction( value ) ) {\n\t\treturn this.each(function( j ) {\n\t\t\tjQuery( this ).addClass( value.call(this, j, this.className) );\n\t\t});\n\t}\n\n\tif ( value && typeof value === \"string\" ) {"},{"path":"./jquery-data/1.8.3/src/attributes.js","lines":[73,81],"code":"removeClass: function( value ) {\n\tvar removes, className, elem, c, cl, i, l;\n\n\tif ( jQuery.isFunction( value ) ) {\n\t\treturn this.each(function( j ) {\n\t\t\tjQuery( this ).removeClass( value.call(this, j, this.className) );\n\t\t});\n\t}\n\tif ( (value && typeof value === \"string\") || value === undefined ) {"}]},
{"id":"0de8d54aaacc909bfed36325cd8fea40fa72cbe7","instances":[{"path":"./jquery-data/1.0.2/src/dimensions/dimensions.js","lines":[24,34],"code":"jQuery.fn.height = function() {\n\tif ( this.get(0) == window )\n\t\treturn self.innerHeight ||\n\t\t\tjQuery.boxModel && document.documentElement.clientHeight ||\n\t\t\tdocument.body.clientHeight;\n\t\n\tif ( this.get(0) == document )\n\t\treturn Math.max( document.body.scrollHeight, document.body.offsetHeight );\n\t\n\treturn this.css(\"height\");\n};"},{"path":"./jquery-data/1.0.2/src/dimensions/dimensions.js","lines":[54,64],"code":"jQuery.fn.width = function() {\n\tif ( this.get(0) == window )\n\t\treturn self.innerWidth ||\n\t\t\tjQuery.boxModel && document.documentElement.clientWidth ||\n\t\t\tdocument.body.clientWidth;\n\t\n\tif ( this.get(0) == document )\n\t\treturn Math.max( document.body.scrollWidth, document.body.offsetWidth );\n\t\n\treturn this.css(\"width\");\n};"}]},
{"id":"3fbd7c4e55281aa8b8ca1bbc5854bfd593023d92","instances":[{"path":"./jquery-data/1.0.2/src/dimensions/dimensions.js","lines":[78,82],"code":"jQuery.fn.innerHeight = function() {\n\treturn this.get(0) == window || this.get(0) == document ?\n\t\tthis.height() :\n\t\tthis.get(0).offsetHeight - parseInt(this.css(\"borderTop\") || 0) - parseInt(this.css(\"borderBottom\") || 0);\n};"},{"path":"./jquery-data/1.0.2/src/dimensions/dimensions.js","lines":[96,100],"code":"jQuery.fn.innerWidth = function() {\n\treturn this.get(0) == window || this.get(0) == document ?\n\t\tthis.width() :\n\t\tthis.get(0).offsetWidth - parseInt(this.css(\"borderLeft\") || 0) - parseInt(this.css(\"borderRight\") || 0);\n};"}]},
{"id":"71a279771d2688bba671ec6ce9a08d2ebe296a04","instances":[{"path":"./jquery-data/1.0.2/src/dimensions/dimensions.js","lines":[133,154],"code":"\t\tthis.get(0).offsetWidth;\t\n};\n\n/**\n * Returns how many pixels the user has scrolled to the right (scrollLeft).\n * Works on containers with overflow: auto and window/document.\n *\n * @example $(\"#testdiv\").scrollLeft()\n * @result 100\n * \n * @name scrollLeft\n * @type Number\n * @cat Dimensions\n */\njQuery.fn.scrollLeft = function() {\n\tif ( this.get(0) == window || this.get(0) == document )\n\t\treturn self.pageXOffset ||\n\t\t\tjQuery.boxModel && document.documentElement.scrollLeft ||\n\t\t\tdocument.body.scrollLeft;\n\t\n\treturn this.get(0).scrollLeft;\n};"},{"path":"./jquery-data/1.0.2/src/dimensions/dimensions.js","lines":[153,174],"code":"\treturn this.get(0).scrollLeft;\n};\n\n/**\n * Returns how many pixels the user has scrolled to the bottom (scrollTop).\n * Works on containers with overflow: auto and window/document.\n *\n * @example $(\"#testdiv\").scrollTop()\n * @result 100\n * \n * @name scrollTop\n * @type Number\n * @cat Dimensions\n */\njQuery.fn.scrollTop = function() {\n\tif ( this.get(0) == window || this.get(0) == document )\n\t\treturn self.pageYOffset ||\n\t\t\tjQuery.boxModel && document.documentElement.scrollTop ||\n\t\t\tdocument.body.scrollTop;\n\n\treturn this.get(0).scrollTop;\n};"}]}]
