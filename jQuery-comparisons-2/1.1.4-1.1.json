[{"id":"5bbc5bec70b7e4d0ebc9bac2bd43987a879ccb80","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[758,768],"code":"\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent([String])\", function() {\n\texpect(5);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\tisSet( $(\"#en, #sndp\").parent().get(), q(\"foo\"), \"Check for unique results from parent\" );\n});"},{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[776,785],"code":"\tisSet( $(\"#en, #sndp\").parents().get(), q(\"foo\", \"main\", \"dl\", \"body\", \"html\"), \"Check for unique results from parents\" );\n});\n\ntest(\"next([String])\", function() {\n\texpect(4);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n});"},{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[784,793],"code":"\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n});\n\t\ntest(\"prev([String])\", function() {\n\texpect(4);\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[510,518],"code":"\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"parent[s]([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\r\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\r\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\r\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[523,531],"code":"\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"next/prev([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\r\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\r\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\r\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\r"}]},
{"id":"cf40f4b1a1140eefe5dde7d5f179221330c60221","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[189,198],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[224,233],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\t\n$.ajaxTimeout(0);"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[100,108],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[128,135],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n$.ajaxTimeout(0);"}]},
{"id":"eb8f34f7612b136218f62f079a52e06719fa52b6","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[516,561],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[560,605],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[292,337],"code":"\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[336,381],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$(document.getElementById('first')).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$(\"#mark, #first\").insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r"}]},
{"id":"ad5cf40aee1e3ee4080543afdf47c02a0968ce56","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[461,777],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[467,766],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions.\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\",\n *  async: false\n * }).responseText;"}]},
{"id":"726c9418cf79b6d9ff37b8a8e95497ccbe91a8aa","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[769,812],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar xml = type == \"xml\" || !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = xml ? r.responseXML : r.responseText;\n\n\tif ( xml && data.documentElement.tagName == \"parsererror\" )\n\t\tthrow \"parsererror\";\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[758,802],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\teval( \"data = \" + data );\n\n\t// evaluate scripts within html\n\tif ( type == \"html\" )\n\t\tjQuery(\"<div>\").html(data).evalScripts();\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j].constructor == Array )"}]},
{"id":"b1a156124807fbe9d338f4e53118566ba51e96ee","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[33,45],"code":"\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json_obj.js\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json_obj.js\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(1);\n\tstop(true);"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[45,57],"code":"\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();"}]},
{"id":"cab9fcf4f1543d47abd5def40a95b1742be7d82d","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[119,137],"code":"\t  equals( testFoo, \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.html'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[83,101],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();"}]},
{"id":"b56a2c9eea072f7107a613295c8322bcebce974c","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[201,205],"code":"$.ajax({url: url(\"data/name.html\"), beforeSend: send, success: success, error: error, complete: function() {\n  equals( counter.error, 0, 'Check succesful request, error callback' );\n  equals( counter.success, 2, 'Check succesful request, success callback' );\n  equals( counter.complete, 3, 'Check succesful request, complete callback' );\n  equals( counter.send, 2, 'Check succesful request, send callback' );"},{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[211,217],"code":" $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\nequals( counter.error, 2, 'Check failed request, error callback' );\nequals( counter.success, 0, 'Check failed request, success callback' );\nequals( counter.complete, 3, 'Check failed request, failed callback' );\nequals( counter.send, 2, 'Check failed request, send callback' );\nstart();\n }});"}]},
{"id":"c1870926ce1c21819af508ee80df29dc724759db","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[224,241],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\t\n$.ajaxTimeout(0);\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\n$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[128,141],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n$.ajaxTimeout(0);\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );"}]},
{"id":"eab8adc78807924957b48f56a1d2747ba6cbc37f","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[244,256],"code":" counter.error = counter.success = counter.complete = counter.send = 0;\n $.ajaxTimeout(500);\n \n $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n var x = counter;\n ok( counter.error == 1, 'Check failed request without globals' );\n ok( counter.success == 0, 'Check failed request without globals' );\n ok( counter.complete == 0, 'Check failed request without globals' );\n ok( counter.send == 1, 'Check failed request without globals' );\n start();\n }});\n} else\n\t  start();"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[142,155],"code":"\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {"}]},
{"id":"5dd28db498f0ddb2d7a1ed235f0038c65957401e","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[306,343],"code":"test(\"$.getJSON(String, Hash, Function) - JSON array\", function() {\n\texpect(4);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {\n\t  ok( json.data.lang == 'en', 'Check JSON: lang' );\n\t  ok( json.data.length == 25, 'Check JSON: length' );\n\t  start();\n\t});\n});\n\ntest(\"$.post(String, Hash, Function) - simple with xml\", function() {\n\texpect(2);\n\tstop();\n\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\t\n\tvar passed = 0;"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[193,229],"code":"test(\"$.getJSON(String, Hash, Function) - JSON array\", function() {\n\texpect(4);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {\n\t  ok( json.data.lang == 'en', 'Check JSON: lang' );\n\t  ok( json.data.length == 25, 'Check JSON: length' );\n\t  start();\n\t});\n});\n\ntest(\"$.post(String, Hash, Function) - simple with xml\", function() {\n\texpect(2);\n\tstop();\n\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;"}]},
{"id":"b1e2a9e79e6010406b02961b1b5574136da3a202","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[361,423],"code":"\t$('#main').ajaxError(pass);\n\t\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),\n\t  error: pass,\n\t  success: fail\n\t});\n\t\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajaxTimeout(Number) with localtimeout\", function() {\n\tstop(); $.ajaxTimeout(50);\n\t$.ajax({\n\t  type: \"GET\",\n\t  timeout: 5000,\n\t  url: url(\"data/name.php?wait=1\"),\n\t  error: function() {\n\t\t   ok( false, 'Check for local timeout failed' );\n\t\t   start();\n\t  },\n\t  success: function() {\n\t    ok( true, 'Check for local timeout' );\n\t    start();\n\t  }\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajax - simple get\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?name=foo\"),\n\t  success: function(msg){\n\t    ok( msg == 'bar', 'Check for GET' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - simple post\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: url(\"data/name.php\"),\n\t  data: \"name=peter\",\n\t  success: function(msg){\n\t    ok( msg == 'pan', 'Check for POST' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"ajaxSetup()\", function() {\n\texpect(1);\n\tstop();\n\t$.ajaxSetup({"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[246,306],"code":"\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),\n\t  error: pass,\n\t  success: fail\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajaxTimeout(Number) with localtimeout\", function() {\n\tstop(); $.ajaxTimeout(50);\n\t$.ajax({\n\t  type: \"GET\",\n\t  timeout: 5000,\n\t  url: url(\"data/name.php?wait=1\"),\n\t  error: function() {\n\t\t   ok( false, 'Check for local timeout failed' );\n\t\t   start();\n\t  },\n\t  success: function() {\n\t    ok( true, 'Check for local timeout' );\n\t    start();\n\t  }\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajax - simple get\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?name=foo\"),\n\t  success: function(msg){\n\t    ok( msg == 'bar', 'Check for GET' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - simple post\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: url(\"data/name.php\"),\n\t  data: \"name=peter\",\n\t  success: function(msg){\n\t    ok( msg == 'pan', 'Check for POST' );\n\t    start();\n\t  }\n\t});\n});\n\t\ntest(\"$.ajax - dataType html\", function() {\n\texpect(5);\n\tstop();\n\tfoobar = null;"}]},
{"id":"9cf848fae2acb12ae86e74d0a00b52867babab1c","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[164,188],"code":"\tvar c = this.$events && this.$events[event.type], args = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tval = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie)\n\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\tevent.handler = event.data = null;\n\n\treturn val;\n},\n\nfix: function(event) {"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[108,130],"code":"\tvar args = [].slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\treturnValue = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie) event.target = event.preventDefault = event.stopPropagation = event.handler = event.data = null;\n\n\treturn returnValue;\n},\n\nfix: function(event) {"}]},
{"id":"ee8f0905f32c94e4e151dbf41dfdfde04f66b203","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[494,575],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// Attach the listeners\n\t\tbindReady();\n\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]); } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[401,480],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risc of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the shortcut for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"}]},
{"id":"9976e4a056287f56cfdb11c1c9f5a2a5c8770bcb","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[941,955],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[832,846],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"}]},
{"id":"7fd65ae63de6a9de748b5ed1f5e6cd4c3aa2e051","instances":[{"path":"./jquery-data/1.1.4/src/event/eventTest.js","lines":[67,83],"code":"\t$('#firstp').click();\n\tok( counter == 1, \"Check that click, triggers onclick event handler also\" );\n});\n\ntest(\"unbind(event)\", function() {\n\texpect(6);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n\t\n\tel.click(function() { return; });"},{"path":"./jquery-data/1.1/src/event/eventTest.js","lines":[9,26],"code":"\tlink.click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n});\n\ntest(\"unbind(event)\", function() {\n\texpect(3);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n});\n\ntest(\"trigger(event, [data]\", function() {"}]},
{"id":"38c805a9000b18b180e8ab7f76ed9f6c96036445","instances":[{"path":"./jquery-data/1.1.4/src/event/eventTest.js","lines":[96,108],"code":"test(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {\n\texpect(4);\n\tvar count = 0,"},{"path":"./jquery-data/1.1/src/event/eventTest.js","lines":[26,38],"code":"test(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"bind() with data\", function() {\n\texpect(2);\n\tvar handler = function(event) {"}]},
{"id":"a6a71c1f2c312eebe749e6319ff90c98625ce929","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[276,401],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur() || 0, val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\n\t\t\t// For JS strict compliance\n\t\t\treturn true;\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[279,382],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only 'linear' is provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (Plugin Required).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\tvar opt = jQuery.speed(speed, easing, callback);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, opt, p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\topt.complete = function(){\n\t\t\tjQuery.dequeue(this, \"fx\");\n\t\t\tif ( jQuery.isFunction( opt.old ) )\n\t\t\t\topt.old.apply( this );\n\t\t};\n\t\n\t\treturn opt;\n\t},"}]},
{"id":"0e6b7c288b76913e83313f500db63e2ee8a9c531","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[409,425],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[382,404],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){"}]},
{"id":"9d6698a9a16b46a726386fa733d45bcfd363ddf5","instances":[{"path":"./jquery-data/1.1.4/src/fx/fxTest.js","lines":[178,187],"code":"\tok(jQuery.curCSS(this, \"opacity\") != \"\" || cur_o == t_o, \"Opacity should be explicitly set to \" + t_o + \", is instead: \" + cur_o);\n}\n\t\nif ( t_w.constructor == Number ) {\n\tok(this.style.width == t_w + \"px\", \"Final width should be \" + t_w + \": \" + this.style.width);\n\t\n\tvar cur_w = jQuery.css(this,\"width\");\n\n\tok(this.style.width != \"\" || cur_w == t_w, \"Width should be explicitly set to \" + t_w + \", is instead: \" + cur_w);\n}"},{"path":"./jquery-data/1.1.4/src/fx/fxTest.js","lines":[186,195],"code":"\tok(this.style.width != \"\" || cur_w == t_w, \"Width should be explicitly set to \" + t_w + \", is instead: \" + cur_w);\n}\n\t\nif ( t_h.constructor == Number ) {\n\tok(this.style.height == t_h + \"px\", \"Final height should be \" + t_h + \": \" + this.style.height);\n\t\n\tvar cur_h = jQuery.css(this,\"height\");\n\n\tok(this.style.height != \"\" || cur_h == t_h, \"Height should be explicitly set to \" + t_h + \", is instead: \" + cur_w);\n}"}]},
{"id":"d3325d3069335339d04878dc9d178cb07d66b6fb","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[1,15],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {\n\texpect(2);"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[1,15],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"length\", function() {\r\n\tok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\r"}]},
{"id":"4de89431fd87ac52c28d94f99062778f27b56aaa","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[154,207],"code":"\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length >= 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n\t\n\t$('<a id=\"tAnchor5\"></a>').attr('href', '#5').appendTo('#main'); // using innerHTML in IE causes href attribute to be serialized to the full path\n\tok( $('#tAnchor5').attr('href') == \"#5\", 'Check for non-absolute href (an anchor)' );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[31,84],"code":"\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\t\r\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\r\n\t\r\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n\t\r\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n});\r\n\r\ntest(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\r\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\r\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\r\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\r\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\r\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\r\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\r\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\r\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\r\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\r\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\r\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\r\n});\r\n\r\ntest(\"attr(String, Function)\", function() {\r"}]},
{"id":"84f62252a5d4e70a0876f12b360ba2b54004d868","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[222,244],"code":"\tok( $('#text1').attr('title', function(i) { return i }).attr('title') == \"0\", \"Set value with an index\");\n});\n\ntest(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);\n\tvar div = $(\"div\");\n\tdiv.attr(\"foo\", \"bar\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n\t}\n\tok( pass, \"Set Attribute\" );\n\n\tok( $(\"#foo\").attr({\"width\": null}), \"Try to set an attribute to nothing\" );\t"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[86,108],"code":"\tok( $('#text1').attr('value', function() { return this.id })[0].value == \"text1\", \"Set value from id\" );\r\n});\r\n\r\ntest(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r"}]},
{"id":"ddb10e9b06cc8fab7ce44f139c61474c45d0593b","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[260,294],"code":"test(\"attr(String, Object) - Loaded via XML document\", function() {\n\texpect(2);\n\tstop();\n\t$.get('data/dashboard.xml', function(xml) { \n  \t\tvar titles = [];\n  \t\t$('tab', xml).each(function() {\n    \t\t\ttitles.push($(this).attr('title'));\n  \t\t});\n  \t\tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n  \t\tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n  \t\tstart();\n\t});\n});\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);\n\t\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\n\t\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css({display: 'none'});\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css({display: 'block'});\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css({styleFloat: 'right'});\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\n\t$('#floatTest').css({cssFloat: 'left'});\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\n\t$('#floatTest').css({'float': 'right'});\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\n\t$('#floatTest').css({'font-size': '30px'});\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[121,157],"code":"\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r"}]},
{"id":"ea20365be20b3a3b1b6972ae271064075fea9565","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[300,321],"code":"\t$('#foo').css({opacity: ''});\n\tok( $('#foo').css('opacity') == '1', \"Assert opacity is 1 when set to an empty String\" );\n});\n\ntest(\"css(String, Object)\", function() {\n\texpect(18);\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css('display', 'none');\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css('display', 'block');\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css('styleFloat', 'left');\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\n\t$('#floatTest').css('cssFloat', 'right');\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\n\t$('#floatTest').css('float', 'left');\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\n\t$('#floatTest').css('font-size', '20px');\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[153,175],"code":"\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r"}]},
{"id":"325f1ea86ccf7420d2cccdb7743345d24c7f86cb","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[333,350],"code":"\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\n});\n\ntest(\"wrap(String|Element)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\n\n\treset();\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap(document.getElementById('empty')).parent();\n\tok( result.is('ol'), 'Check for element wrapping' );\n\tok( result.text() == defaultText, 'Check for element wrapping' );\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[176,194],"code":"\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap(document.getElementById('empty')).parent();\r\n\tok( result.is('ol'), 'Check for element wrapping' );\r\n\tok( result.text() == defaultText, 'Check for element wrapping' );\r\n});\r\n\r\ntest(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r"}]},
{"id":"e337d0b2f8042177d048e76eab5d249aa53234b4","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[365,372],"code":"test(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(18);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').append('<b>buga</b>');\n\tok( result.text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('#select3').append('<option value=\"appendTest\">Append Test</option>').find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[194,201],"code":"test(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(9);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').append('<b>buga</b>');\r\n\tok( result.text() == defaultText + 'buga', 'Check if text appending works' );\r\n\tok( $('#select3').append('<option value=\"appendTest\">Append Test</option>').find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"1fb5627cfb69ff48428fce2902355d5b1bac0b8c","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[437,447],"code":"\tt( \"Append Select\", \"#appendSelect1, #appendSelect2\", [\"appendSelect1\", \"appendSelect2\"] );\n});\n\ntest(\"appendTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').appendTo('#first');\n\tok( $(\"#first\").text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('<option value=\"appendTest\">Append Test</option>').appendTo('#select3').parent().find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[223,233],"code":"\tok( $(\"#sap\").append(document.getElementsByTagName(\"foo\")), \"Check for appending an empty nodelist.\" );\r\n});\r\n\r\ntest(\"appendTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\t$('<b>buga</b>').appendTo('#first');\r\n\tok( $(\"#first\").text() == defaultText + 'buga', 'Check if text appending works' );\r\n\tok( $('<option value=\"appendTest\">Append Test</option>').appendTo('#select3').parent().find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"08434b714d5582ce1f2bc579218d37bcbb896780","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[464,474],"code":"\tt( 'Append select', '#foo select', ['select1'] );\n});\n\ntest(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(5);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').prepend('<b>buga</b>');\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[246,256],"code":"\tok( expected == $('#sap').text(), \"Check for appending of jQuery object\" );\r\n});\r\n\r\ntest(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').prepend('<b>buga</b>');\r\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\r\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"8264c2b6a0f1f7c321e27b416e1a9e6dc303aef7","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[475,497],"code":"\tvar expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend(document.getElementById('first'));\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\n\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\n\t\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend($(\"#first, #yahoo\"));\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\n});\n\ntest(\"prependTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').prependTo('#first');\n\tok( $('#first').text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[257,279],"code":"\texpected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$('#sap').prepend(document.getElementById('first'));\r\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\r\n\r\n\treset();\r\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\r\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\r\n\t\r\n\treset();\r\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$('#sap').prepend($(\"#first, #yahoo\"));\r\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"prependTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\t$('<b>buga</b>').prependTo('#first');\r\n\tok( $('#first').text() == 'buga' + defaultText, 'Check if text prepending works' );\r\n\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"6b486038eee2accbd09f5a366ad6176e760a1f39","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[516,620],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"end()\", function() {\n\texpect(3);\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\n\t\n\tvar x = $('#yahoo');\n\tx.parent();\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[292,395],"code":"\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$(document.getElementById('first')).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$(\"#mark, #first\").insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"end()\", function() {\r\n\texpect(3);\r\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\r\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\r\n\t\r\n\tvar x = $('#yahoo');\r\n\tx.parent();\r\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\r\n});\r"}]},
{"id":"eb6d3a71dfb1e12ea173c6d126774018c431baaf","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[619,653],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\n});\n\ntest(\"clone()\", function() {\n\texpect(3);\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\n\tvar clone = $('#yahoo').clone();\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\n});\n\ntest(\"is(String)\", function() {\n\texpect(26);\n\tok( $('#form').is('form'), 'Check for element: A form must be a form' );\n\tok( !$('#form').is('div'), 'Check for element: A form is not a div' );\n\tok( $('#mark').is('.blog'), 'Check for class: Expected class \"blog\"' );\n\tok( !$('#mark').is('.link'), 'Check for class: Did not expect class \"link\"' );\n\tok( $('#simon').is('.blog.link'), 'Check for multiple classes: Expected classes \"blog\" and \"link\"' );\n\tok( !$('#simon').is('.blogTest'), 'Check for multiple classes: Expected classes \"blog\" and \"link\", but not \"blogTest\"' );\n\tok( $('#en').is('[@lang=\"en\"]'), 'Check for attribute: Expected attribute lang to be \"en\"' );\n\tok( !$('#en').is('[@lang=\"de\"]'), 'Check for attribute: Expected attribute lang to be \"en\", not \"de\"' );\n\tok( $('#text1').is('[@type=\"text\"]'), 'Check for attribute: Expected attribute type to be \"text\"' );\n\tok( !$('#text1').is('[@type=\"radio\"]'), 'Check for attribute: Expected attribute type to be \"text\", not \"radio\"' );\n\tok( $('#text2').is(':disabled'), 'Check for pseudoclass: Expected to be disabled' );\n\tok( !$('#text1').is(':disabled'), 'Check for pseudoclass: Expected not disabled' );\n\tok( $('#radio2').is(':checked'), 'Check for pseudoclass: Expected to be checked' );\n\tok( !$('#radio1').is(':checked'), 'Check for pseudoclass: Expected not checked' );\n\tok( $('#foo').is('[p]'), 'Check for child: Expected a child \"p\" element' );\n\tok( !$('#foo').is('[ul]'), 'Check for child: Did not expect \"ul\" element' );\n\tok( $('#foo').is('[p][a][code]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements' );\n\tok( !$('#foo').is('[p][a][code][ol]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements, but no \"ol\"' );\n\tok( !$('#foo').is(0), 'Expected false for an invalid expression - 0' );\n\tok( !$('#foo').is(null), 'Expected false for an invalid expression - null' );\n\tok( !$('#foo').is(''), 'Expected false for an invalid expression - \"\"' );\n\tok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[394,429],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r\n});\r\n\r\ntest(\"clone()\", function() {\r\n\texpect(3);\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\r\n\tvar clone = $('#yahoo').clone();\r\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\r\n});\r\n\r\ntest(\"is(String)\", function() {\r\n\texpect(22);\r\n\tok( $('#form').is('form'), 'Check for element: A form must be a form' );\r\n\tok( !$('#form').is('div'), 'Check for element: A form is not a div' );\r\n\tok( $('#mark').is('.blog'), 'Check for class: Expected class \"blog\"' );\r\n\tok( !$('#mark').is('.link'), 'Check for class: Did not expect class \"link\"' );\r\n\tok( $('#simon').is('.blog.link'), 'Check for multiple classes: Expected classes \"blog\" and \"link\"' );\r\n\tok( !$('#simon').is('.blogTest'), 'Check for multiple classes: Expected classes \"blog\" and \"link\", but not \"blogTest\"' );\r\n\tok( $('#en').is('[@lang=\"en\"]'), 'Check for attribute: Expected attribute lang to be \"en\"' );\r\n\tok( !$('#en').is('[@lang=\"de\"]'), 'Check for attribute: Expected attribute lang to be \"en\", not \"de\"' );\r\n\tok( $('#text1').is('[@type=\"text\"]'), 'Check for attribute: Expected attribute type to be \"text\"' );\r\n\tok( !$('#text1').is('[@type=\"radio\"]'), 'Check for attribute: Expected attribute type to be \"text\", not \"radio\"' );\r\n\tok( $('#text2').is(':disabled'), 'Check for pseudoclass: Expected to be disabled' );\r\n\tok( !$('#text1').is(':disabled'), 'Check for pseudoclass: Expected not disabled' );\r\n\tok( $('#radio2').is(':checked'), 'Check for pseudoclass: Expected to be checked' );\r\n\tok( !$('#radio1').is(':checked'), 'Check for pseudoclass: Expected not checked' );\r\n\tok( $('#foo').is('[p]'), 'Check for child: Expected a child \"p\" element' );\r\n\tok( !$('#foo').is('[ul]'), 'Check for child: Did not expect \"ul\" element' );\r\n\tok( $('#foo').is('[p][a][code]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements' );\r\n\tok( !$('#foo').is('[p][a][code][ol]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements, but no \"ol\"' );\r\n\tok( !$('#foo').is(0), 'Expected false for an invalid expression - 0' );\r\n\tok( !$('#foo').is(null), 'Expected false for an invalid expression - null' );\r\n\tok( !$('#foo').is(''), 'Expected false for an invalid expression - \"\"' );\r\n\tok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );\r\n});\r"}]},
{"id":"8ba7769abbcbf1a23334527af558567dd061b1dd","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[659,668],"code":"\tok( $('#en').is('[@lang=\"de\"] , [@lang=\"en\"]'), 'Comma-seperated; Check for lang attribute: Expect en or de' );\n});\n\ntest(\"$.extend(Object, Object)\", function() {\n\texpect(10);\n\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" },"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[428,436],"code":"\tok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );\r\n});\r\n\r\ntest(\"$.extend(Object, Object)\", function() {\r\n\texpect(2);\r\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\r"}]},
{"id":"a39680f0db220c40b9e4182c41685ef1156c5afe","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[687,724],"code":"\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged2 = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged2, \"Check if extended: settings must be extended\" );\n\tisObj( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[444,481],"code":"\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\r\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\r\n});\r\n\r\ntest(\"val()\", function() {\r\n\texpect(2);\r\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\r\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\r\n});\r\n\r\ntest(\"val(String)\", function() {\r\n\texpect(2);\r\n\tdocument.getElementById('text1').value = \"bla\";\r\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\r\n\t$(\"#text1\").val('test');\r\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\r\n});\r\n\r\ntest(\"html(String)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.html(\"<b>test</b>\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\r\n\t}\r\n\tok( pass, \"Set HTML\" );\r\n});\r"}]},
{"id":"90b88f43d770ffe880c503415fc412b5f1134f73","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[730,743],"code":"test(\"filter()\", function() {\n\texpect(4);\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\n});\n\ntest(\"not()\", function() {\n\texpect(3);\n\tok( $(\"#main > p#ap > a\").not(\"#google\").length == 2, \"not('selector')\" );\n\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\n\tisSet( $(\"p\").not($(\"#ap, #sndp, .result\")).get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not(jQuery)\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[483,498],"code":"test(\"filter()\", function() {\r\n\texpect(4);\r\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\r\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\r\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\r\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\r\n});\r\n\r\ntest(\"not(String)\", function() {\r\n\texpect(2);\r\n\tok( $(\"#main > p#ap > a\").not(\"#google\").length == 2, \"not('selector')\" );\r\n\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\r\n});\r\n\r\n\r\ntest(\"siblings([String])\", function() {\r"}]},
{"id":"52781a8aebd40fd67becc0909ec02d9eb2463770","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[742,752],"code":"\tisSet( $(\"p\").not($(\"#ap, #sndp, .result\")).get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not(jQuery)\" );\n});\n\ntest(\"siblings([String])\", function() {\n\texpect(5);\n\tisSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );\n\tisSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \n\tisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );\n\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"lengthtest\", \"floatTest\"), \"Check for multiple filters\" );\n\tisSet( $(\"#en, #sndp\").siblings().get(), q(\"sndp\", \"sap\", \"en\"), \"Check for unique results from siblings\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[494,504],"code":"\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\r\n});\r\n\r\n\r\ntest(\"siblings([String])\", function() {\r\n\texpect(4);\r\n\tisSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );\r\n\tisSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \r\n\tisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );\r\n\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"floatTest\"), \"Check for multiple filters\" );\r\n});\r"}]},
{"id":"2c65f8540bf58a2b88bcf4641755f7765fd7224c","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[751,768],"code":"\tisSet( $(\"#en, #sndp\").siblings().get(), q(\"sndp\", \"sap\", \"en\"), \"Check for unique results from siblings\" );\n});\n\ntest(\"children([String])\", function() {\n\texpect(3);\n\tisSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );\n\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent([String])\", function() {\n\texpect(5);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\tisSet( $(\"#en, #sndp\").parent().get(), q(\"foo\"), \"Check for unique results from parent\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[503,520],"code":"\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"floatTest\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"children([String])\", function() {\r\n\texpect(3);\r\n\tisSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );\r\n\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\r\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"parent[s]([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\r\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\r\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\r\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\r\n\t\r\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\r"}]},
{"id":"921dad760a0c965ce07588cb28c8049d86730ff8","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[806,824],"code":"\tvar div = $(\"div\");\n\tdiv.addClass(\"test\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n\t}\n\tok( pass, \"Add Class\" );\n});\n\ntest(\"removeClass(String) - simple\", function() {\n\texpect(3);\n\tvar div = $(\"div\").addClass(\"test\").removeClass(\"test\"),\n\t\tpass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n\t}\n\tok( pass, \"Remove Class\" );\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[549,568],"code":"\tvar div = $(\"div\");\r\n\tdiv.addClass(\"test\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n\t}\r\n\tok( pass, \"Add Class\" );\r\n});\r\n\r\ntest(\"removeClass(String) - simple\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\").addClass(\"test\").removeClass(\"test\"),\r\n\t\tpass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n\t}\r\n\tok( pass, \"Remove Class\" );\r\n});\r\n\r\ntest(\"removeClass(String) - add three classes and remove again\", function() {\r"}]},
{"id":"6bc05b7c4aaccb99d127e949b54f3060cbda92fa","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[835,852],"code":"\tok( div.is('.test'), \"Empty string passed to removeClass\" );\n\t\n});\n\ntest(\"toggleClass(String)\", function() {\n\texpect(3);\n\tvar e = $(\"#firstp\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n\te.toggleClass(\"test\");\n\tok( e.is(\".test\"), \"Assert class present\" ); \n\te.toggleClass(\"test\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n});\n\ntest(\"removeAttr(String\", function() {\n\texpect(1);\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[576,591],"code":"\tok( pass, \"Remove multiple classes\" );\r\n});\r\n\r\ntest(\"toggleClass(String)\", function() {\r\n\texpect(3);\r\n\tvar e = $(\"#firstp\");\r\n\tok( !e.is(\".test\"), \"Assert class not present\" );\r\n\te.toggleClass(\"test\");\r\n\tok( e.is(\".test\"), \"Assert class present\" ); \r\n\te.toggleClass(\"test\");\r\n\tok( !e.is(\".test\"), \"Assert class not present\" );\r\n});\r\n\r\ntest(\"removeAttr(String\", function() {\r\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});\r"}]},
{"id":"f30bfbf6034071e5ed0462ca1ffb17ffda6ed884","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[851,899],"code":"\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});\n\ntest(\"text(String)\", function() {\n\texpect(1);\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\n});\n\ntest(\"$.each(Object,Function)\", function() {\n\texpect(8);\n\t$.each( [0,1,2], function(i, n){\n\t\tok( i == n, \"Check array iteration\" );\n\t});\n\t\n\t$.each( [5,6,7], function(i, n){\n\t\tok( i == n - 5, \"Check array iteration\" );\n\t});\n\t \n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tok( i == n, \"Check object iteration\" );\n\t});\n});\n\ntest(\"$.prop\", function() {\n\texpect(2);\n\tvar handle = function() { return this.id };\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\n});\n\ntest(\"$.className\", function() {\n\texpect(6);\n\tvar x = $(\"<p>Hi</p>\")[0];\n\tvar c = $.className;\n\tc.add(x, \"hi\");\n\tok( x.className == \"hi\", \"Check single added class\" );\n\tc.add(x, \"foo bar\");\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );\n\tc.remove(x);\n\tok( x.className == \"\", \"Remove all classes\" );\n\tc.add(x, \"hi foo bar\");\n\tc.remove(x, \"foo\");\n\tok( x.className == \"hi bar\", \"Check removal of one class\" );\n\tok( c.has(x, \"hi\"), \"Check has1\" );\n\tok( c.has(x, \"bar\"), \"Check has2\" );\n});\n\ntest(\"remove()\", function() {\n\texpect(4);"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[590,638],"code":"\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});\r\n\r\ntest(\"text(String)\", function() {\r\n\texpect(1);\r\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\r\n});\r\n\r\ntest(\"$.each(Object,Function)\", function() {\r\n\texpect(8);\r\n\t$.each( [0,1,2], function(i, n){\r\n\t\tok( i == n, \"Check array iteration\" );\r\n\t});\r\n\t\r\n\t$.each( [5,6,7], function(i, n){\r\n\t\tok( i == n - 5, \"Check array iteration\" );\r\n\t});\r\n\t \r\n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\r\n\t\tok( i == n, \"Check object iteration\" );\r\n\t});\r\n});\r\n\r\ntest(\"$.prop\", function() {\r\n\texpect(2);\r\n\tvar handle = function() { return this.id };\r\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\r\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\r\n});\r\n\r\ntest(\"$.className\", function() {\r\n\texpect(6);\r\n\tvar x = $(\"<p>Hi</p>\")[0];\r\n\tvar c = $.className;\r\n\tc.add(x, \"hi\");\r\n\tok( x.className == \"hi\", \"Check single added class\" );\r\n\tc.add(x, \"foo bar\");\r\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );\r\n\tc.remove(x);\r\n\tok( x.className == \"\", \"Remove all classes\" );\r\n\tc.add(x, \"hi foo bar\");\r\n\tc.remove(x, \"foo\");\r\n\tok( x.className == \"hi bar\", \"Check removal of one class\" );\r\n\tok( c.has(x, \"hi\"), \"Check has1\" );\r\n\tok( c.has(x, \"bar\"), \"Check has2\" );\r\n});\r\n\r\ntest(\"remove()\", function() {\r\n\t$(\"#ap\").children().remove();\r"}]},
{"id":"1a91d20efdd35d76dde6894cf7660a92624d3c0d","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[147,203],"code":"/**\n * Initialize a new jQuery object\n *\n * @private\n * @name init\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\ninit: function(a,c) {\n\t// Make sure that a selection was provided\n\ta = a || document;\n\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = quickExpr.exec(a);\n\t\tif ( m && (m[1] || !c) ) {\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tif ( m[1] )\n\t\t\t\ta = jQuery.clean( [ m[1] ] );\n\n\t\t\t// HANDLE: $(\"#id\")\n\t\t\telse {\n\t\t\t\tvar tmp = document.getElementById( m[3] );\n\t\t\t\tif ( tmp )\n\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t// by name instead of ID\n\t\t\t\t\tif ( tmp.id != m[3] )\n\t\t\t\t\t\treturn jQuery().find( a );\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis[0] = tmp;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\ta = [];\n\t\t\t}\n\n\t\t// HANDLE: $(expr)\n\t\t} else\n\t\t\treturn new jQuery( c ).find( a );\n\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t} else if ( jQuery.isFunction(a) )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[15,60],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Make sure that a selection was provided\n\ta = a || document;\n\t\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t// Safari reports typeof on DOM NodeLists as a function\n\tif ( jQuery.isFunction(a) && !a.nodeType && a[0] == undefined )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\t\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\n\n\t\ta = m ?\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tjQuery.clean( [ m[1] ] ) :\n\t\t\n\t\t\t// HANDLE: $(expr)\n\t\t\tjQuery.find( a, c );\n\t}\n\t\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );"}]},
{"id":"6e3774655a08fa7a78b8d253adf00fde413f800b","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1474,1504],"code":"\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\treturn jQuery.inArray( c, (t.className || t).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif ( jQuery(e).is(':visible') ) {"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1288,1319],"code":"\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\tt = t.className || t;\n\t\treturn t && new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\").test( t );\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {"}]},
{"id":"0f4c4328e51d464cd6aa31d60441f813f8a05345","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1504,1514],"code":"if ( jQuery(e).is(':visible') ) {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1319,1329],"code":"if (jQuery.css(e,\"display\") != \"none\") {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\");"}]},
{"id":"d2fdb72a07d2bb542811f4d5f06fd40fadafa784","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1651,1667],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.lastChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1423,1439],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( tb[n].nodeName.toUpperCase() == \"TBODY\" && !tb[n].childNodes.length )"}]},
{"id":"a69e6062a38087bf24f750b7a80eef000a15ed8f","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1916,1927],"code":"var result = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1661,1672],"code":"var result = [], r = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"}]},
{"id":"164a6bfc436f3316a792374acda119c4b8b9f52e","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1997,2152],"code":"\t\tmaxlength: \"maxLength\"\n\t}\n});\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Use an optional expression to filter the matched set.\n *\n * \tOnly the immediately previous sibling is returned, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev\n * @type jQuery\n * @param String expr (optional) An expression to filter the previous Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing all of the unique siblings of each of the\n * matched set of elements."},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1732,1884],"code":"\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling, not all next siblings.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * It only returns the immediately previous sibling, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev\n * @type jQuery\n * @param String expr (optional) An expression to filter the previous Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing all of the unique siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions."}]},
{"id":"e5b210b114d6540fa6dfbdb07652c9e2d1d4ce7b","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[2150,2424],"code":"\t\treturn this.pushStack( jQuery.unique(ret) );\n\t};\n});\n\n/**\n * Append all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).append(B), in that instead of appending B to A, you're appending\n * A to B.\n *\n * @example $(\"p\").appendTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"></div>\n * @result <div id=\"foo\"><p>I would like to say: </p></div>\n * @desc Appends all paragraphs to the element with the ID \"foo\"\n *\n * @name appendTo\n * @type jQuery\n * @param <Content> content Content to append to the selected element to.\n * @cat DOM/Manipulation\n * @see append(<Content>)\n */\n\n/**\n * Prepend all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n * A to B.\n *\n * @example $(\"p\").prependTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n * @desc Prepends all paragraphs to the element with the ID \"foo\"\n *\n * @name prependTo\n * @type jQuery\n * @param <Content> content Content to prepend to the selected element to.\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n */\n\n/**\n * Insert all of the matched elements before another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).before(B), in that instead of inserting B before A, you're inserting\n * A before B.\n *\n * @example $(\"p\").insertBefore(\"#foo\");\n * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @desc Same as $(\"#foo\").before(\"p\")\n *\n * @name insertBefore\n * @type jQuery\n * @param <Content> content Content to insert the selected element before.\n * @cat DOM/Manipulation\n * @see before(<Content>)\n */\n\n/**\n * Insert all of the matched elements after another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).after(B), in that instead of inserting B after A, you're inserting\n * A after B.\n *\n * @example $(\"p\").insertAfter(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @desc Same as $(\"#foo\").after(\"p\")\n *\n * @name insertAfter\n * @type jQuery\n * @param <Content> content Content to insert the selected element after.\n * @cat DOM/Manipulation\n * @see after(<Content>)\n */\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\"\n}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );\n\t\t});\n\t};\n});\n\n/**\n * Remove an attribute from each of the matched elements.\n *\n * @example $(\"input\").removeAttr(\"disabled\")\n * @before <input disabled=\"disabled\"/>\n * @result <input/>\n *\n * @name removeAttr\n * @type jQuery"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1882,2156],"code":"\t\treturn this.pushStack( ret );\n\t};\n});\n\n/**\n * Append all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).append(B), in that instead of appending B to A, you're appending\n * A to B.\n *\n * @example $(\"p\").appendTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"></div>\n * @result <div id=\"foo\"><p>I would like to say: </p></div>\n * @desc Appends all paragraphs to the element with the ID \"foo\"\n *\n * @name appendTo\n * @type jQuery\n * @param <Content> content Content to append to the selected element to.\n * @cat DOM/Manipulation\n * @see append(<Content>)\n */\n\n/**\n * Prepend all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n * A to B.\n *\n * @example $(\"p\").prependTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n * @desc Prepends all paragraphs to the element with the ID \"foo\"\n *\n * @name prependTo\n * @type jQuery\n * @param <Content> content Content to prepend to the selected element to.\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n */\n\n/**\n * Insert all of the matched elements before another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).before(B), in that instead of inserting B before A, you're inserting\n * A before B.\n *\n * @example $(\"p\").insertBefore(\"#foo\");\n * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @desc Same as $(\"#foo\").before(\"p\")\n *\n * @name insertBefore\n * @type jQuery\n * @param <Content> content Content to insert the selected element before.\n * @cat DOM/Manipulation\n * @see before(<Content>)\n */\n\n/**\n * Insert all of the matched elements after another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).after(B), in that instead of inserting B after A, you're inserting\n * A after B.\n *\n * @example $(\"p\").insertAfter(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @desc Same as $(\"#foo\").after(\"p\")\n *\n * @name insertAfter\n * @type jQuery\n * @param <Content> content Content to insert the selected element after.\n * @cat DOM/Manipulation\n * @see after(<Content>)\n */\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\"\n}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );\n\t\t});\n\t};\n});\n\n/**\n * Remove an attribute from each of the matched elements.\n *\n * @example $(\"input\").removeAttr(\"disabled\")\n * @before <input disabled=\"disabled\"/>\n * @result <input/>\n *\n * @name removeAttr\n * @type jQuery"}]},
{"id":"a996a7de5e98be57c6e555a3c516add737625e72","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[2426,2498],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});\n\n/**\n * Get the current computed, pixel, width of the first matched element.\n *\n * @example $(\"p\").width();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name width\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").width(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").width(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20em;\">This is just a test.</p>\n *\n * @name width\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n \n/**\n * Get the current computed, pixel, height of the first matched element.\n *\n * @example $(\"p\").height();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name height\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS height of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").height(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").height(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20em;\">This is just a test.</p>\n *\n * @name height\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n\njQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[2157,2229],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});\n\n/**\n * Get the current computed, pixel, width of the first matched element.\n *\n * @example $(\"p\").width();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name width\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").width(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").width(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20em;\">This is just a test.</p>\n *\n * @name width\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n \n/**\n * Get the current computed, pixel, height of the first matched element.\n *\n * @example $(\"p\").height();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name height\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").height(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").height(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20em;\">This is just a test.</p>\n *\n * @name height\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n\njQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"}]},
{"id":"eb5ebb297f34dded6aed2bb15554caf4a367f4b7","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[9,30],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"!jQuery.nth(a.parentNode.lastChild,2,'previousSibling')\",\n\n\t\t\t// Parent Checks\n\t\t\tparent: \"a.firstChild\","},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[1,20],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\",\n\t\t\t\"first-child\": \"jQuery.nth(a.parentNode.firstChild,1,'nextSibling')==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"jQuery.sibling(a.parentNode.firstChild).length==1\","}]},
{"id":"10b053689d44f7f08bab005747ee1c44f2cfce43","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[81,112],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// DEPRECATED"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[92,123],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression"}]},
{"id":"4effcbd7579653212f20cb6dac0ec0ef35b7bc3b","instances":[{"path":"./jquery-data/1.1.4/src/selector/selectorTest.js","lines":[104,124],"code":"\tt( \"Comma Support\", \"a.blog,p\", [\"mark\",\"simon\",\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );\n});\n\ntest(\"child and adjacent\", function() {\n\texpect(19);\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n\t\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Nth Child\", \"p:nth-child(1)\", [\"firstp\",\"sndp\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[41,62],"code":"\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r\n\texpect(14);\r\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\r\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r"}]},
{"id":"c591ca65ac8588ea03130d644fa918128bb8b600","instances":[{"path":"./jquery-data/1.1.4/src/selector/selectorTest.js","lines":[129,146],"code":"\tt( \"Nth-child\", \"#main form > *:nth-child(2)\", [\"text2\",\"idTest\"] );\n\tt( \"Nth-child\", \"#main form > :nth-child(2)\", [\"text2\",\"idTest\"] );\n});\n\ntest(\"attributes\", function() {\n\texpect(20);\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n\t\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\t\n\tt( \"Attribute selector using UTF8\", \"span[@lang=中文]\", [\"台北\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[58,75],"code":"\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r\n\texpect(19);\r\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\r\n\t\r\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\r\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r"}]},
{"id":"be1e56e69873ac22c3b1295982f832d402889718","instances":[{"path":"./jquery-data/1.1.4/src/selector/selectorTest.js","lines":[146,169],"code":"\tt( \"Attribute selector using UTF8\", \"span[@lang=中文]\", [\"台北\"] );\n\t\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n\t\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\n\t\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\n\t\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\n});\n\ntest(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[73,96],"code":"\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\r\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\r\n\t\r\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\r\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\r\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\r\n\t\r\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\r\n\t\r\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\r\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\r\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\r\n});\r\n\r\ntest(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r"}]},
{"id":"1244d0e0d9c6188b75865e69127082c91e0715cf","instances":[{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"}]}]
