[{"id":"c8c0542ab40191f136c1f7af8efb74a8562c7990","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[94,108],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[121,135],"code":"\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[94,108],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[121,135],"code":"\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"a24ee1d9fce4447841baa5996d46d9f7fd519741","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"}]},
{"id":"62ce5e110055d3f9941223c03dc7ed8f84bbe29e","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[74,380],"code":"\twindow.foobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\tfoobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"}]},
{"id":"eb8f34f7612b136218f62f079a52e06719fa52b6","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[507,552],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[551,596],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[292,337],"code":"\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[336,381],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$(document.getElementById('first')).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$(\"#mark, #first\").insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r"}]},
{"id":"57eece61797ce7b0f4956352baa7065cb03bd40c","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[734,749],"code":"\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent[s]([String])\", function() {\n\texpect(8);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\t\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\n\tok( $(\"#groups\").parents(\"p\")[0].id == \"ap\", \"Filtered parents check\" );\n\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[747,762],"code":"\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});\n\ntest(\"next/prev([String])\", function() {\n\texpect(8);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n\t\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[509,524],"code":"\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\r\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"parent[s]([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\r\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\r\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\r\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\r\n\t\r\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\r\n\tok( $(\"#groups\").parents(\"p\")[0].id == \"ap\", \"Filtered parents check\" );\r\n\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\r\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\r\n});\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[522,537],"code":"\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\r\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"next/prev([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\r\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\r\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\r\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\r\n\t\r\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\r\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\r\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\r\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\r\n});\r"}]},
{"id":"7bf698ff0b72b495a0f539809b027bdf988269b8","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[1,53],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[1,53],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";"}]},
{"id":"2a65dd928fef10ab89566b329d5b653fd92d831e","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[22,135],"code":"\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdata: params,\n\t\t\tifModified: ifModified,\n\t\t\tcomplete: function(res, status){\n\t\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\t\tself.attr(\"innerHTML\", res.responseText)\n\t\t\t\t\t  // Execute all the scripts inside of the newly-injected HTML\n\t\t\t\t\t  .evalScripts()\n\t\t\t\t\t  // Execute callback\n\t\t\t\t\t  .each( callback, [res.responseText, status, res] );\n\t\t\t\telse\n\t\t\t\t\tcallback.apply( self, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Serializes a set of input elements into a string of data.\n\t * This will serialize all given elements.\n\t *\n\t * A serialization similar to the form submit of a browser is\n\t * provided by the [http://www.malsup.com/jquery/form/ Form Plugin].\n\t * It also takes multiple-selects \n\t * into account, while this method recognizes only a single option.\n\t *\n\t * @example $(\"input[@type=text]\").serialize();\n\t * @before <input type='text' name='name' value='John'/>\n\t * <input type='text' name='location' value='Boston'/>\n\t * @after name=John&amp;location=Boston\n\t * @desc Serialize a selection of input elements to a string\n\t *\n\t * @name serialize\n\t * @type String\n\t * @cat Ajax\n\t */\n\tserialize: function() {\n\t\treturn jQuery.param( this );\n\t},\n\n\t/**\n\t * Evaluate all script tags inside this jQuery. If they have a src attribute,\n\t * the script is loaded, otherwise it's content is evaluated.\n\t *\n\t * @name evalScripts\n\t * @type jQuery\n\t * @private"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[22,134],"code":"\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params.constructor ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdata: params,\n\t\t\tifModified: ifModified,\n\t\t\tcomplete: function(res, status){\n\t\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\t\tself.attr(\"innerHTML\", res.responseText)\n\t\t\t\t\t  // Execute all the scripts inside of the newly-injected HTML\n\t\t\t\t\t  .evalScripts()\n\t\t\t\t\t  // Execute callback\n\t\t\t\t\t  .each( callback, [res.responseText, status, res] );\n\t\t\t\telse\n\t\t\t\t\tcallback.apply( self, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Serializes a set of input elements into a string of data.\n\t * This will serialize all given elements.\n\t *\n\t * A serialization similar to the form submit of a browser is\n\t * provided by the form plugin. It also takes multiple-selects \n\t * into account, while this method recognizes only a single option.\n\t *\n\t * @example $(\"input[@type=text]\").serialize();\n\t * @before <input type='text' name='name' value='John'/>\n\t * <input type='text' name='location' value='Boston'/>\n\t * @after name=John&location=Boston\n\t * @desc Serialize a selection of input elements to a string\n\t *\n\t * @name serialize\n\t * @type String\n\t * @cat Ajax\n\t */\n\tserialize: function() {\n\t\treturn jQuery.param( this );\n\t},\n\n\t/**\n\t * Evaluate all script tags inside this jQuery. If they have a src attribute,\n\t * the script is loaded, otherwise it's content is evaluated.\n\t *\n\t * @name evalScripts\n\t * @type jQuery\n\t * @private\n\t * @cat Ajax"}]},
{"id":"713ac7449bee5491b408435b9c625c8207bc88a1","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[411,604],"code":"/**\n * Set the timeout in milliseconds of all AJAX requests to a specific amount of time.\n * This will make all future AJAX requests timeout after a specified amount\n * of time.\n *\n * Set to null or 0 to disable timeouts (default).\n *\n * You can manually abort requests with the XMLHttpRequest's (returned by\n * all ajax functions) abort() method.\n *\n * Deprecated. Use $.ajaxSetup instead.\n *\n * @example $.ajaxTimeout( 5000 );\n * @desc Make all AJAX requests timeout after 5 seconds.\n *\n * @name $.ajaxTimeout\n * @type undefined\n * @param Number time How long before an AJAX request times out, in milliseconds.\n * @cat Ajax\n */\najaxTimeout: function( timeout ) {\n\tjQuery.ajaxSettings.timeout = timeout;\n},\n\n/**\n * Setup global settings for AJAX requests.\n *\n * See $.ajax for a description of all available options.\n *\n * @example $.ajaxSetup( {\n *   url: \"/xmlhttp/\",\n *   global: false,\n *   type: \"POST\"\n * } );\n * $.ajax({ data: myData });\n * @desc Sets the defaults for AJAX requests to the url \"/xmlhttp/\",\n * disables global handlers and uses POST instead of GET. The following\n * AJAX requests then sends some data without having to set anything else.\n *\n * @name $.ajaxSetup\n * @type undefined\n * @param Map settings Key/value pairs to use for all AJAX requests\n * @cat Ajax\n */\najaxSetup: function( settings ) {\n\tjQuery.extend( jQuery.ajaxSettings, settings );\n},\n\najaxSettings: {\n\tglobal: true,\n\ttype: \"GET\",\n\ttimeout: 0,\n\tcontentType: \"application/x-www-form-urlencoded\",\n\tprocessData: true,\n\tasync: true,\n\tdata: null\n},\n\n// Last-Modified header cache for next request\nlastModified: {},\n\n/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[406,597],"code":"/**\n * Set the timeout of all AJAX requests to a specific amount of time.\n * This will make all future AJAX requests timeout after a specified amount\n * of time.\n *\n * Set to null or 0 to disable timeouts (default).\n *\n * You can manually abort requests with the XMLHttpRequest's (returned by\n * all ajax functions) abort() method.\n *\n * Deprecated. Use $.ajaxSetup instead.\n *\n * @example $.ajaxTimeout( 5000 );\n * @desc Make all AJAX requests timeout after 5 seconds.\n *\n * @name $.ajaxTimeout\n * @type undefined\n * @param Number time How long before an AJAX request times out.\n * @cat Ajax\n */\najaxTimeout: function( timeout ) {\n\tjQuery.ajaxSettings.timeout = timeout;\n},\n\n/**\n * Setup global settings for AJAX requests.\n *\n * See $.ajax for a description of all available options.\n *\n * @example $.ajaxSetup( {\n *   url: \"/xmlhttp/\",\n *   global: false,\n *   type: \"POST\"\n * } );\n * $.ajax({ data: myData });\n * @desc Sets the defaults for AJAX requests to the url \"/xmlhttp/\",\n * disables global handlers and uses POST instead of GET. The following\n * AJAX requests then sends some data without having to set anything else.\n *\n * @name $.ajaxSetup\n * @type undefined\n * @param Map settings Key/value pairs to use for all AJAX requests\n * @cat Ajax\n */\najaxSetup: function( settings ) {\n\tjQuery.extend( jQuery.ajaxSettings, settings );\n},\n\najaxSettings: {\n\tglobal: true,\n\ttype: \"GET\",\n\ttimeout: 0,\n\tcontentType: \"application/x-www-form-urlencoded\",\n\tprocessData: true,\n\tasync: true,\n\tdata: null\n},\n\n// Last-Modified header cache for next request\nlastModified: {},\n\n/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions.\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header."}]},
{"id":"b6e7abc821c0bdaadf2a15be3636fdce7d00481a","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[656,698],"code":"var status;\ntry {\n\tstatus = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n\t// Make sure that the request was successful or notmodified\n\tif ( status != \"error\" ) {\n\t\t// Cache Last-Modified header, if ifModified mode.\n\t\tvar modRes;\n\t\ttry {\n\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\t\tif ( s.ifModified && modRes )\n\t\t\tjQuery.lastModified[s.url] = modRes;\n\t\n\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\tvar data = jQuery.httpData( xml, s.dataType );\n\t\n\t\t// If a local callback was specified, fire it and pass it the data\n\t\tif ( s.success )\n\t\t\ts.success( data, status );\n\t\n\t\t// Fire the global callback\n\t\tif( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n\t} else\n\t\tjQuery.handleError(s, xml, status);\n} catch(e) {\n\tstatus = \"error\";\n\tjQuery.handleError(s, xml, status, e);\n}\n\n// The request was completed\nif( s.global )\n\tjQuery.event.trigger( \"ajaxComplete\", [xml, s] );\n\n// Handle the global AJAX counter\nif ( s.global && ! --jQuery.active )\n\tjQuery.event.trigger( \"ajaxStop\" );\n\n// Process result\nif ( s.complete )\n\ts.complete(xml, status);"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[642,684],"code":"var status;\ntry {\n\tstatus = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n\t// Make sure that the request was successful or notmodified\n\tif ( status != \"error\" ) {\n\t\t// Cache Last-Modified header, if ifModified mode.\n\t\tvar modRes;\n\t\ttry {\n\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\t\tif ( s.ifModified && modRes )\n\t\t\tjQuery.lastModified[s.url] = modRes;\n\t\n\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\tvar data = jQuery.httpData( xml, s.dataType );\n\t\n\t\t// If a local callback was specified, fire it and pass it the data\n\t\tif ( s.success )\n\t\t\ts.success( data, status );\n\t\n\t\t// Fire the global callback\n\t\tif( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n\t} else\n\t\tjQuery.handleError(s, xml, status);\n} catch(e) {\n\tstatus = \"error\";\n\tjQuery.handleError(s, xml, status, e);\n}\n\n// The request was completed\nif( s.global )\n\tjQuery.event.trigger( \"ajaxComplete\", [xml, s] );\n\n// Handle the global AJAX counter\nif ( s.global && ! --jQuery.active )\n\tjQuery.event.trigger( \"ajaxStop\" );\n\n// Process result\nif ( s.complete )\n\ts.complete(xml, status);"}]},
{"id":"3c421ec359cf944c828fe55a9559ad5c9a8173b0","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[472,788],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[467,775],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions.\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\",\n *  async: false\n * }).responseText;"}]},
{"id":"bed65b9bc10da415045f7b1fa0289edf31c41063","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[771,815],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\t// evaluate scripts within html\n\tif ( type == \"html\" )\n\t\tjQuery(\"<div>\").html(data).evalScripts();\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[758,802],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\teval( \"data = \" + data );\n\n\t// evaluate scripts within html\n\tif ( type == \"html\" )\n\t\tjQuery(\"<div>\").html(data).evalScripts();\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j].constructor == Array )"}]},
{"id":"c9d7ed595998352392922f13ab33212ef00eb606","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[1,72],"code":"module(\"ajax\");\n\nif ( location.protocol != \"file:\" ) {\n\ntest(\"serialize()\", function() {\n\texpect(1);\n\tvar data = $(':input').not('button').serialize();\n\t// ignore button, IE takes text content as value, not relevant for this test\n\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );\n\t\n\tparams = {\"foo[bar]\":\"baz\", \"foo[beep]\":42, \"foo[quux]\":\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us\", \"even more arrays\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(7);\n\tstop(true);\n\tvar count = 0;\n\tvar success = function() {\n\t\tif(count++ == 6)\n\t\t\tstart();\n\t}\n\tvar target = \"data/name.php\";\n\tok( $.get(url(target), success), \"get\" );\n\tok( $.getIfModified(url(target), success), \"getIfModified\" );\n\tok( $.post(url(target), success), \"post\" );\n\tok( $.getScript(url(\"data/test.js\"), success), \"script\" );\n\tok( $.getJSON(url(\"data/json.php\"), success), \"json\" );\n\tok( $.ajax({url: url(target), success: success}), \"generic\" );\n});\n\ntest(\"synchronous request\", function() {\n\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();\n\t$('#first').load(url(\"data/name.php\"), function() {\n\t\tok( /^ERROR/.test($('#first').text()), 'Check if content was injected into the DOM' );\n\t\tstart();\n\t});\n});\n\ntest(\"load(String, Object, Function) - inject without callback\", function() {\n\texpect(1);\n\tstop(true); // check if load can be called with only url\n\t$('#first').load(\"data/name.php\");\n});\n\ntest(\"load(String, Object, Function) - check scripts\", function() {\n\texpect(7);\n\tstop();"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[1,72],"code":"module(\"ajax\");\n\nif ( location.protocol != \"file:\" ) {\n\ntest(\"serialize()\", function() {\n\texpect(1);\n\tvar data = $(':input').not('button').serialize();\n\t// ignore button, IE takes text content as value, not relevant for this test\n\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );\n\t\n\tparams = {\"foo[bar]\":\"baz\", \"foo[beep]\":42, \"foo[quux]\":\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us\", \"even more arrays\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(7);\n\tstop(true);\n\tvar count = 0;\n\tvar success = function() {\n\t\tif(count++ == 6)\n\t\t\tstart();\n\t}\n\tvar target = \"data/name.php\";\n\tok( $.get(url(target), success), \"get\" );\n\tok( $.getIfModified(url(target), success), \"getIfModified\" );\n\tok( $.post(url(target), success), \"post\" );\n\tok( $.getScript(url(\"data/test.js\"), success), \"script\" );\n\tok( $.getJSON(url(\"data/json.php\"), success), \"json\" );\n\tok( $.ajax({url: url(target), success: success}), \"generic\" );\n});\n\ntest(\"synchronous request\", function() {\n\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();\n\t$('#first').load(url(\"data/name.php\"), function() {\n\t\tok( /^ERROR/.test($('#first').text()), 'Check if content was injected into the DOM' );\n\t\tstart();\n\t});\n});\n\ntest(\"load(String, Object, Function) - inject without callback\", function() {\n\texpect(1);\n\tstop(true); // check if load can be called with only url\n\t$('#first').load(\"data/name.php\");\n});\n\ntest(\"load(String, Object, Function) - check scripts\", function() {\n\texpect(7);\n\tstop();"}]},
{"id":"efd6fe846d94baf581c424ff7b5df4b7a4b04a6a","instances":[{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[168,192],"code":"\tvar c = this.$events && this.$events[event.type], args = [].slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tval = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie)\n\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\tevent.handler = event.data = null;\n\n\treturn val;\n},\n\nfix: function(event) {"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[108,130],"code":"\tvar args = [].slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\treturnValue = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie) event.target = event.preventDefault = event.stopPropagation = event.handler = event.data = null;\n\n\treturn returnValue;\n},\n\nfix: function(event) {"}]},
{"id":"ee8f0905f32c94e4e151dbf41dfdfde04f66b203","instances":[{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[498,576],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[401,480],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risc of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the shortcut for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"}]},
{"id":"64eb965bb559426ce2fed9276b3acf417a6e19a5","instances":[{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[557,952],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t\t\n\t\t\t// Remove script element used by IE hack\n\t\t\tif( !window.frames.length ) // don't remove if frames are present (#1187)\n\t\t\t\tjQuery(window).load(function(){ jQuery(\"#__ie_init\").remove(); });\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t/**\n\t * Bind a function to the scroll event of each matched element.\n\t *\n\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element.\n\t *\n\t * @example $(\"#myform\").submit( function() {\n\t *   return $(\"input\", this).val().length > 0;\n\t * } );\n\t * @before <form id=\"myform\"><input /></form>\n\t * @desc Prevents the form submission when the input has no value entered.\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @param Function fn A function to bind to the submit event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the submit event of each matched element. This causes all of the functions\n\t * that have been bound to that submit event to be executed, and calls the browser's\n\t * default submit action on the matching element(s). This default action can be prevented\n\t * by returning false from one of the functions bound to the submit event.\n\t *\n\t * Note: This does not execute the submit method of the form element! If you need to\n\t * submit the form via code, you have to use the DOM method, eg. $(\"form\")[0].submit();\n\t *\n\t * @example $(\"form\").submit();\n\t * @desc Triggers all submit events registered to the matched form(s), and submits them.\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element.\n\t *\n\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the focus event of each matched element. This causes all of the functions\n\t * that have been bound to thet focus event to be executed.\n\t *\n\t * Note: This does not execute the focus method of the underlying elements! If you need to\n\t * focus an element via code, you have to use the DOM method, eg. $(\"#myinput\")[0].focus();\n\t *\n\t * @example $(\"p\").focus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name focus"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[461,846],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t/**\n\t * Bind a function to the scroll event of each matched element.\n\t *\n\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element.\n\t *\n\t * @example $(\"#myform\").submit( function() {\n\t *   return $(\"input\", this).val().length > 0;\n\t * } );\n\t * @before <form id=\"myform\"><input /></form>\n\t * @desc Prevents the form submission when the input has no value entered.\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @param Function fn A function to bind to the submit event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the submit event of each matched element. This causes all of the functions\n\t * that have been bound to thet submit event to be executed.\n\t *\n\t * Note: This does not execute the submit method of the form element! If you need to\n\t * submit the form via code, you have to use the DOM method, eg. $(\"form\")[0].submit();\n\t *\n\t * @example $(\"form\").submit();\n\t * @desc Triggers all submit events registered for forms, but does not submit the form\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element.\n\t *\n\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the focus event of each matched element. This causes all of the functions\n\t * that have been bound to thet focus event to be executed.\n\t *\n\t * Note: This does not execute the focus method of the underlying elements! If you need to\n\t * focus an element via code, you have to use the DOM method, eg. $(\"#myinput\")[0].focus();\n\t *\n\t * @example $(\"p\").focus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the keydown event of each matched element."}]},
{"id":"d1c0bfe3ebb44b575cd38ded1b6aaef18d0791ab","instances":[{"path":"./jquery-data/1.1.3/src/event/eventTest.js","lines":[71,83],"code":"test(\"unbind(event)\", function() {\n\texpect(6);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n\t\n\tel.click(function() { return; });"},{"path":"./jquery-data/1.1/src/event/eventTest.js","lines":[13,26],"code":"test(\"unbind(event)\", function() {\n\texpect(3);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n});\n\ntest(\"trigger(event, [data]\", function() {"}]},
{"id":"38c805a9000b18b180e8ab7f76ed9f6c96036445","instances":[{"path":"./jquery-data/1.1.3/src/event/eventTest.js","lines":[96,108],"code":"test(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {\n\texpect(4);\n\tvar count = 0,"},{"path":"./jquery-data/1.1/src/event/eventTest.js","lines":[26,38],"code":"test(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"bind() with data\", function() {\n\texpect(2);\n\tvar handler = function(event) {"}]},
{"id":"b4a8b2707e96370a990cfbb643bca06b11a577b4","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[276,367],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop )\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing || (jQuery.easing.swing ? \"swing\" : \"linear\")"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[279,362],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only 'linear' is provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (Plugin Required).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\tvar opt = jQuery.speed(speed, easing, callback);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, opt, p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing"}]},
{"id":"0e6b7c288b76913e83313f500db63e2ee8a9c531","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[394,410],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[382,404],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){"}]},
{"id":"d3325d3069335339d04878dc9d178cb07d66b6fb","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[1,15],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {\n\texpect(3);"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[1,15],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"length\", function() {\r\n\tok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\r"}]},
{"id":"4de89431fd87ac52c28d94f99062778f27b56aaa","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[145,198],"code":"\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n\t\n\t$('<a id=\"tAnchor5\"></a>').attr('href', '#5').appendTo('#main'); // using innerHTML in IE causes href attribute to be serialized to the full path\n\tok( $('#tAnchor5').attr('href') == \"#5\", 'Check for non-absolute href (an anchor)' );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[31,84],"code":"\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\t\r\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\r\n\t\r\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n\t\r\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n});\r\n\r\ntest(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\r\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\r\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\r\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\r\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\r\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\r\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\r\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\r\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\r\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\r\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\r\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\r\n});\r\n\r\ntest(\"attr(String, Function)\", function() {\r"}]},
{"id":"84f62252a5d4e70a0876f12b360ba2b54004d868","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[215,237],"code":"\tok( $('#text1').attr('title', function(i) { return i }).attr('title') == \"0\", \"Set value with an index\");\n});\n\ntest(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);\n\tvar div = $(\"div\");\n\tdiv.attr(\"foo\", \"bar\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n\t}\n\tok( pass, \"Set Attribute\" );\n\n\tok( $(\"#foo\").attr({\"width\": null}), \"Try to set an attribute to nothing\" );\t"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[86,108],"code":"\tok( $('#text1').attr('value', function() { return this.id })[0].value == \"text1\", \"Set value from id\" );\r\n});\r\n\r\ntest(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r"}]},
{"id":"d5939eb0c017d8f66cbdd818f5c2529942365ae3","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[250,289],"code":"\tok( document.getElementById('name').maxLength == '5', 'Set maxlength attribute' );\n});\n\nif ( location.protocol != \"file:\" ) {\n\ttest(\"attr(String, Object)x\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get('data/dashboard.xml', function(xml) { \n\t  \tvar titles = [];\n\t  \t$('tab', xml).each(function() {\n\t    \ttitles.push($(this).attr('title'));\n\t  \t});\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n\t  \tstart();\n\t\t});\n\t});\n}\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);\n\t\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\n\t\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css({display: 'none'});\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css({display: 'block'});\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css({styleFloat: 'right'});\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\n\t$('#floatTest').css({cssFloat: 'left'});\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\n\t$('#floatTest').css({'float': 'right'});\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\n\t$('#floatTest').css({'font-size': '30px'});\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[117,157],"code":"\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r"}]},
{"id":"ea20365be20b3a3b1b6972ae271064075fea9565","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[295,316],"code":"\t$('#foo').css({opacity: ''});\n\tok( $('#foo').css('opacity') == '1', \"Assert opacity is 1 when set to an empty String\" );\n});\n\ntest(\"css(String, Object)\", function() {\n\texpect(18);\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css('display', 'none');\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css('display', 'block');\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css('styleFloat', 'left');\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\n\t$('#floatTest').css('cssFloat', 'right');\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\n\t$('#floatTest').css('float', 'left');\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\n\t$('#floatTest').css('font-size', '20px');\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[153,175],"code":"\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r"}]},
{"id":"325f1ea86ccf7420d2cccdb7743345d24c7f86cb","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[328,345],"code":"\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\n});\n\ntest(\"wrap(String|Element)\", function() {\n\texpect(7);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\n\n\treset();\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap(document.getElementById('empty')).parent();\n\tok( result.is('ol'), 'Check for element wrapping' );\n\tok( result.text() == defaultText, 'Check for element wrapping' );\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[176,194],"code":"\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap(document.getElementById('empty')).parent();\r\n\tok( result.is('ol'), 'Check for element wrapping' );\r\n\tok( result.text() == defaultText, 'Check for element wrapping' );\r\n});\r\n\r\ntest(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r"}]},
{"id":"e337d0b2f8042177d048e76eab5d249aa53234b4","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[360,367],"code":"test(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(17);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').append('<b>buga</b>');\n\tok( result.text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('#select3').append('<option value=\"appendTest\">Append Test</option>').find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[194,201],"code":"test(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(9);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').append('<b>buga</b>');\r\n\tok( result.text() == defaultText + 'buga', 'Check if text appending works' );\r\n\tok( $('#select3').append('<option value=\"appendTest\">Append Test</option>').find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"1fb5627cfb69ff48428fce2902355d5b1bac0b8c","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[428,438],"code":"\tt( \"Append Select\", \"#appendSelect1, #appendSelect2\", [\"appendSelect1\", \"appendSelect2\"] );\n});\n\ntest(\"appendTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').appendTo('#first');\n\tok( $(\"#first\").text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('<option value=\"appendTest\">Append Test</option>').appendTo('#select3').parent().find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[223,233],"code":"\tok( $(\"#sap\").append(document.getElementsByTagName(\"foo\")), \"Check for appending an empty nodelist.\" );\r\n});\r\n\r\ntest(\"appendTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\t$('<b>buga</b>').appendTo('#first');\r\n\tok( $(\"#first\").text() == defaultText + 'buga', 'Check if text appending works' );\r\n\tok( $('<option value=\"appendTest\">Append Test</option>').appendTo('#select3').parent().find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"08434b714d5582ce1f2bc579218d37bcbb896780","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[455,465],"code":"\tt( 'Append select', '#foo select', ['select1'] );\n});\n\ntest(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(5);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').prepend('<b>buga</b>');\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[246,256],"code":"\tok( expected == $('#sap').text(), \"Check for appending of jQuery object\" );\r\n});\r\n\r\ntest(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').prepend('<b>buga</b>');\r\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\r\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"8264c2b6a0f1f7c321e27b416e1a9e6dc303aef7","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[466,488],"code":"\tvar expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend(document.getElementById('first'));\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\n\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\n\t\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend($(\"#first, #yahoo\"));\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\n});\n\ntest(\"prependTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').prependTo('#first');\n\tok( $('#first').text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[257,279],"code":"\texpected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$('#sap').prepend(document.getElementById('first'));\r\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\r\n\r\n\treset();\r\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\r\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\r\n\t\r\n\treset();\r\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$('#sap').prepend($(\"#first, #yahoo\"));\r\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"prependTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(5);\r\n\tvar defaultText = 'Try them out:'\r\n\t$('<b>buga</b>').prependTo('#first');\r\n\tok( $('#first').text() == 'buga' + defaultText, 'Check if text prepending works' );\r\n\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\r\n\t\r\n\treset();\r"}]},
{"id":"6b486038eee2accbd09f5a366ad6176e760a1f39","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[507,611],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"end()\", function() {\n\texpect(3);\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\n\t\n\tvar x = $('#yahoo');\n\tx.parent();\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[292,395],"code":"\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$(document.getElementById('first')).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$(\"#mark, #first\").insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"end()\", function() {\r\n\texpect(3);\r\n\tok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\r\n\tok( $('#yahoo').end(), 'Check for end with nothing to end' );\r\n\t\r\n\tvar x = $('#yahoo');\r\n\tx.parent();\r\n\tok( 'Yahoo' == $('#yahoo').text(), 'Check for non-destructive behaviour' );\r\n});\r"}]},
{"id":"eb6d3a71dfb1e12ea173c6d126774018c431baaf","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[610,644],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\n});\n\ntest(\"clone()\", function() {\n\texpect(3);\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\n\tvar clone = $('#yahoo').clone();\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\n});\n\ntest(\"is(String)\", function() {\n\texpect(26);\n\tok( $('#form').is('form'), 'Check for element: A form must be a form' );\n\tok( !$('#form').is('div'), 'Check for element: A form is not a div' );\n\tok( $('#mark').is('.blog'), 'Check for class: Expected class \"blog\"' );\n\tok( !$('#mark').is('.link'), 'Check for class: Did not expect class \"link\"' );\n\tok( $('#simon').is('.blog.link'), 'Check for multiple classes: Expected classes \"blog\" and \"link\"' );\n\tok( !$('#simon').is('.blogTest'), 'Check for multiple classes: Expected classes \"blog\" and \"link\", but not \"blogTest\"' );\n\tok( $('#en').is('[@lang=\"en\"]'), 'Check for attribute: Expected attribute lang to be \"en\"' );\n\tok( !$('#en').is('[@lang=\"de\"]'), 'Check for attribute: Expected attribute lang to be \"en\", not \"de\"' );\n\tok( $('#text1').is('[@type=\"text\"]'), 'Check for attribute: Expected attribute type to be \"text\"' );\n\tok( !$('#text1').is('[@type=\"radio\"]'), 'Check for attribute: Expected attribute type to be \"text\", not \"radio\"' );\n\tok( $('#text2').is(':disabled'), 'Check for pseudoclass: Expected to be disabled' );\n\tok( !$('#text1').is(':disabled'), 'Check for pseudoclass: Expected not disabled' );\n\tok( $('#radio2').is(':checked'), 'Check for pseudoclass: Expected to be checked' );\n\tok( !$('#radio1').is(':checked'), 'Check for pseudoclass: Expected not checked' );\n\tok( $('#foo').is('[p]'), 'Check for child: Expected a child \"p\" element' );\n\tok( !$('#foo').is('[ul]'), 'Check for child: Did not expect \"ul\" element' );\n\tok( $('#foo').is('[p][a][code]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements' );\n\tok( !$('#foo').is('[p][a][code][ol]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements, but no \"ol\"' );\n\tok( !$('#foo').is(0), 'Expected false for an invalid expression - 0' );\n\tok( !$('#foo').is(null), 'Expected false for an invalid expression - null' );\n\tok( !$('#foo').is(''), 'Expected false for an invalid expression - \"\"' );\n\tok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[394,429],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r\n});\r\n\r\ntest(\"clone()\", function() {\r\n\texpect(3);\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\r\n\tvar clone = $('#yahoo').clone();\r\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\r\n});\r\n\r\ntest(\"is(String)\", function() {\r\n\texpect(22);\r\n\tok( $('#form').is('form'), 'Check for element: A form must be a form' );\r\n\tok( !$('#form').is('div'), 'Check for element: A form is not a div' );\r\n\tok( $('#mark').is('.blog'), 'Check for class: Expected class \"blog\"' );\r\n\tok( !$('#mark').is('.link'), 'Check for class: Did not expect class \"link\"' );\r\n\tok( $('#simon').is('.blog.link'), 'Check for multiple classes: Expected classes \"blog\" and \"link\"' );\r\n\tok( !$('#simon').is('.blogTest'), 'Check for multiple classes: Expected classes \"blog\" and \"link\", but not \"blogTest\"' );\r\n\tok( $('#en').is('[@lang=\"en\"]'), 'Check for attribute: Expected attribute lang to be \"en\"' );\r\n\tok( !$('#en').is('[@lang=\"de\"]'), 'Check for attribute: Expected attribute lang to be \"en\", not \"de\"' );\r\n\tok( $('#text1').is('[@type=\"text\"]'), 'Check for attribute: Expected attribute type to be \"text\"' );\r\n\tok( !$('#text1').is('[@type=\"radio\"]'), 'Check for attribute: Expected attribute type to be \"text\", not \"radio\"' );\r\n\tok( $('#text2').is(':disabled'), 'Check for pseudoclass: Expected to be disabled' );\r\n\tok( !$('#text1').is(':disabled'), 'Check for pseudoclass: Expected not disabled' );\r\n\tok( $('#radio2').is(':checked'), 'Check for pseudoclass: Expected to be checked' );\r\n\tok( !$('#radio1').is(':checked'), 'Check for pseudoclass: Expected not checked' );\r\n\tok( $('#foo').is('[p]'), 'Check for child: Expected a child \"p\" element' );\r\n\tok( !$('#foo').is('[ul]'), 'Check for child: Did not expect \"ul\" element' );\r\n\tok( $('#foo').is('[p][a][code]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements' );\r\n\tok( !$('#foo').is('[p][a][code][ol]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements, but no \"ol\"' );\r\n\tok( !$('#foo').is(0), 'Expected false for an invalid expression - 0' );\r\n\tok( !$('#foo').is(null), 'Expected false for an invalid expression - null' );\r\n\tok( !$('#foo').is(''), 'Expected false for an invalid expression - \"\"' );\r\n\tok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );\r\n});\r"}]},
{"id":"a61425bd754e675141ee0dd6e1cd0919bb3c694a","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[650,702],"code":"\tok( $('#en').is('[@lang=\"de\"] , [@lang=\"en\"]'), 'Comma-seperated; Check for lang attribute: Expect en or de' );\n});\n\ntest(\"$.extend(Object, Object)\", function() {\n\texpect(2);\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\n\tjQuery.extend(settings, options);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );\n\tisObj( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n});\n\ntest(\"$.extend(Object, Object, Object, Object)\", function() {\n\texpect(4);\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );\n\tisObj( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[428,481],"code":"\tok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );\r\n});\r\n\r\ntest(\"$.extend(Object, Object)\", function() {\r\n\texpect(2);\r\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\r\n\tjQuery.extend(settings, options);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( options, optionsCopy, \"Check if not modified: options must not be modified\" );\r\n});\r\n\r\ntest(\"$.extend(Object, Object, Object, Object)\", function() {\r\n\texpect(4);\r\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\r\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\r\n\tisSet ( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\r\n});\r\n\r\ntest(\"val()\", function() {\r\n\texpect(2);\r\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\r\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\r\n});\r\n\r\ntest(\"val(String)\", function() {\r\n\texpect(2);\r\n\tdocument.getElementById('text1').value = \"bla\";\r\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\r\n\t$(\"#text1\").val('test');\r\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\r\n});\r\n\r\ntest(\"html(String)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.html(\"<b>test</b>\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\r\n\t}\r\n\tok( pass, \"Set HTML\" );\r\n});\r"}]},
{"id":"90b88f43d770ffe880c503415fc412b5f1134f73","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[708,721],"code":"test(\"filter()\", function() {\n\texpect(4);\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\n});\n\ntest(\"not()\", function() {\n\texpect(3);\n\tok( $(\"#main > p#ap > a\").not(\"#google\").length == 2, \"not('selector')\" );\n\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\n\tisSet( $(\"p\").not($(\"#ap, #sndp, .result\")).get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not(jQuery)\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[483,498],"code":"test(\"filter()\", function() {\r\n\texpect(4);\r\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\r\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\r\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\r\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\r\n});\r\n\r\ntest(\"not(String)\", function() {\r\n\texpect(2);\r\n\tok( $(\"#main > p#ap > a\").not(\"#google\").length == 2, \"not('selector')\" );\r\n\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\r\n});\r\n\r\n\r\ntest(\"siblings([String])\", function() {\r"}]},
{"id":"52781a8aebd40fd67becc0909ec02d9eb2463770","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[720,729],"code":"\tisSet( $(\"p\").not($(\"#ap, #sndp, .result\")).get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not(jQuery)\" );\n});\n\ntest(\"siblings([String])\", function() {\n\texpect(4);\n\tisSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );\n\tisSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \n\tisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );\n\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"lengthtest\", \"floatTest\"), \"Check for multiple filters\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[494,504],"code":"\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\r\n});\r\n\r\n\r\ntest(\"siblings([String])\", function() {\r\n\texpect(4);\r\n\tisSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );\r\n\tisSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \r\n\tisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );\r\n\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"floatTest\"), \"Check for multiple filters\" );\r\n});\r"}]},
{"id":"921dad760a0c965ce07588cb28c8049d86730ff8","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[775,793],"code":"\tvar div = $(\"div\");\n\tdiv.addClass(\"test\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n\t}\n\tok( pass, \"Add Class\" );\n});\n\ntest(\"removeClass(String) - simple\", function() {\n\texpect(3);\n\tvar div = $(\"div\").addClass(\"test\").removeClass(\"test\"),\n\t\tpass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n\t}\n\tok( pass, \"Remove Class\" );\n\t\n\treset();"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[549,568],"code":"\tvar div = $(\"div\");\r\n\tdiv.addClass(\"test\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n\t}\r\n\tok( pass, \"Add Class\" );\r\n});\r\n\r\ntest(\"removeClass(String) - simple\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\").addClass(\"test\").removeClass(\"test\"),\r\n\t\tpass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n\t}\r\n\tok( pass, \"Remove Class\" );\r\n});\r\n\r\ntest(\"removeClass(String) - add three classes and remove again\", function() {\r"}]},
{"id":"6bc05b7c4aaccb99d127e949b54f3060cbda92fa","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[804,821],"code":"\tok( div.is('.test'), \"Empty string passed to removeClass\" );\n\t\n});\n\ntest(\"toggleClass(String)\", function() {\n\texpect(3);\n\tvar e = $(\"#firstp\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n\te.toggleClass(\"test\");\n\tok( e.is(\".test\"), \"Assert class present\" ); \n\te.toggleClass(\"test\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n});\n\ntest(\"removeAttr(String\", function() {\n\texpect(1);\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[576,591],"code":"\tok( pass, \"Remove multiple classes\" );\r\n});\r\n\r\ntest(\"toggleClass(String)\", function() {\r\n\texpect(3);\r\n\tvar e = $(\"#firstp\");\r\n\tok( !e.is(\".test\"), \"Assert class not present\" );\r\n\te.toggleClass(\"test\");\r\n\tok( e.is(\".test\"), \"Assert class present\" ); \r\n\te.toggleClass(\"test\");\r\n\tok( !e.is(\".test\"), \"Assert class not present\" );\r\n});\r\n\r\ntest(\"removeAttr(String\", function() {\r\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});\r"}]},
{"id":"f30bfbf6034071e5ed0462ca1ffb17ffda6ed884","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[820,868],"code":"\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});\n\ntest(\"text(String)\", function() {\n\texpect(1);\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\n});\n\ntest(\"$.each(Object,Function)\", function() {\n\texpect(8);\n\t$.each( [0,1,2], function(i, n){\n\t\tok( i == n, \"Check array iteration\" );\n\t});\n\t\n\t$.each( [5,6,7], function(i, n){\n\t\tok( i == n - 5, \"Check array iteration\" );\n\t});\n\t \n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tok( i == n, \"Check object iteration\" );\n\t});\n});\n\ntest(\"$.prop\", function() {\n\texpect(2);\n\tvar handle = function() { return this.id };\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\n});\n\ntest(\"$.className\", function() {\n\texpect(6);\n\tvar x = $(\"<p>Hi</p>\")[0];\n\tvar c = $.className;\n\tc.add(x, \"hi\");\n\tok( x.className == \"hi\", \"Check single added class\" );\n\tc.add(x, \"foo bar\");\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );\n\tc.remove(x);\n\tok( x.className == \"\", \"Remove all classes\" );\n\tc.add(x, \"hi foo bar\");\n\tc.remove(x, \"foo\");\n\tok( x.className == \"hi bar\", \"Check removal of one class\" );\n\tok( c.has(x, \"hi\"), \"Check has1\" );\n\tok( c.has(x, \"bar\"), \"Check has2\" );\n});\n\ntest(\"remove()\", function() {\n\texpect(4);"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[590,638],"code":"\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});\r\n\r\ntest(\"text(String)\", function() {\r\n\texpect(1);\r\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\r\n});\r\n\r\ntest(\"$.each(Object,Function)\", function() {\r\n\texpect(8);\r\n\t$.each( [0,1,2], function(i, n){\r\n\t\tok( i == n, \"Check array iteration\" );\r\n\t});\r\n\t\r\n\t$.each( [5,6,7], function(i, n){\r\n\t\tok( i == n - 5, \"Check array iteration\" );\r\n\t});\r\n\t \r\n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\r\n\t\tok( i == n, \"Check object iteration\" );\r\n\t});\r\n});\r\n\r\ntest(\"$.prop\", function() {\r\n\texpect(2);\r\n\tvar handle = function() { return this.id };\r\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\r\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\r\n});\r\n\r\ntest(\"$.className\", function() {\r\n\texpect(6);\r\n\tvar x = $(\"<p>Hi</p>\")[0];\r\n\tvar c = $.className;\r\n\tc.add(x, \"hi\");\r\n\tok( x.className == \"hi\", \"Check single added class\" );\r\n\tc.add(x, \"foo bar\");\r\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );\r\n\tc.remove(x);\r\n\tok( x.className == \"\", \"Remove all classes\" );\r\n\tc.add(x, \"hi foo bar\");\r\n\tc.remove(x, \"foo\");\r\n\tok( x.className == \"hi bar\", \"Check removal of one class\" );\r\n\tok( c.has(x, \"hi\"), \"Check has1\" );\r\n\tok( c.has(x, \"bar\"), \"Check has2\" );\r\n});\r\n\r\ntest(\"remove()\", function() {\r\n\t$(\"#ap\").children().remove();\r"}]},
{"id":"89c6b3c546e996299aa150049c874848e9411b19","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[143,182],"code":"/**\n * Initialize a new jQuery object\n *\n * @private\n * @name init\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\ninit: function(a,c) {\n\t// Make sure that a selection was provided\n\ta = a || document;\n\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\tif ( jQuery.isFunction(a) )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\t// HANDLE: $(html) -> $(array)\n\t\tvar m = /^[^<]*(<(.|\\s)+>)[^>]*$/.exec(a);\n\t\tif ( m )\n\t\t\ta = jQuery.clean( [ m[1] ] );\n\n\t\t// HANDLE: $(expr)\n\t\telse\n\t\t\treturn new jQuery( c ).find( a );\n\t}\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[15,60],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Make sure that a selection was provided\n\ta = a || document;\n\t\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t// Safari reports typeof on DOM NodeLists as a function\n\tif ( jQuery.isFunction(a) && !a.nodeType && a[0] == undefined )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\t\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\n\n\t\ta = m ?\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tjQuery.clean( [ m[1] ] ) :\n\t\t\n\t\t\t// HANDLE: $(expr)\n\t\t\tjQuery.find( a, c );\n\t}\n\t\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );"}]},
{"id":"9ed2823574fc590dbeb3a490364cb6422ea5fd73","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[367,630],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * If the element does not have an attribute with such a\n\t * name, undefined is returned.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements.\n *\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n * @desc Sets src and alt attributes to all images.\n *\n * @name attr\n * @type jQuery\n * @param Map properties Key/value pairs to set as object properties.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a single property to a value, on all matched elements.\n *\n * Note that you can't set the name property of input elements in IE.\n * Use $(html) or .append(html) or .html(html) to create elements\n * on the fly including the name property.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n * @desc Sets src attribute to all images.\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM/Attributes\n */\n \n/**\n * Set a single property to a computed value, on all matched elements.\n *\n * Instead of supplying a string value as described\n * [[DOM/Attributes#attr.28_key.2C_value_.29|above]],\n * a function is provided that computes the value.\n *\n * @example $(\"img\").attr(\"title\", function() { return this.src });\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute.\n *\n * @example $(\"img\").attr(\"title\", function(index) { return this.title + (i + 1); });\n * @before <img title=\"pic\" /><img title=\"pic\" /><img title=\"pic\" />\n * @result <img title=\"pic1\" /><img title=\"pic2\" /><img title=\"pic3\" />\n * @desc Enumerate title attribute.\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Function value A function returning the value to set.\n * \t \t  Scope: Current element, argument: Index of current element\n * @cat DOM/Attributes\n */\nattr: function( key, value, type ) {\n\tvar obj = key;\n\t\n\t// Look for the case where we're accessing a style value\n\tif ( key.constructor == String )\n\t\tif ( value == undefined )\n\t\t\treturn this.length && jQuery[ type || \"attr\" ]( this[0], key ) || undefined;\n\t\telse {\n\t\t\tobj = {};\n\t\t\tobj[ key ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(index){\n\t\t// Set all the styles\n\t\tfor ( var prop in obj )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ? this.style : this,\n\t\t\t\tprop, jQuery.prop(this, obj[prop], type, index, prop)\n\t\t\t);\n\t});"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[345,604],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements.\n *\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n * @desc Sets src and alt attributes to all images.\n *\n * @name attr\n * @type jQuery\n * @param Map properties Key/value pairs to set as object properties.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a single property to a value, on all matched elements.\n *\n * Can compute values provided as ${formula}, see second example.\n *\n * Note that you can't set the name property of input elements in IE.\n * Use $(html) or .append(html) or .html(html) to create elements\n * on the fly including the name property.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n * @desc Sets src attribute to all images.\n *\n * @example $(\"img\").attr(\"title\", \"${this.src}\");\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute, a shortcut for attr(String,Function)\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM/Attributes\n */\n \n/**\n * Set a single property to a computed value, on all matched elements.\n *\n * Instead of a value, a function is provided, that computes the value.\n *\n * @example $(\"img\").attr(\"title\", function() { return this.src });\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute.\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Function value A function returning the value to set.\n * @cat DOM/Attributes\n */\nattr: function( key, value, type ) {\n\tvar obj = key;\n\t\n\t// Look for the case where we're accessing a style value\n\tif ( key.constructor == String )\n\t\tif ( value == undefined )\n\t\t\treturn jQuery[ type || \"attr\" ]( this[0], key );\n\t\telse {\n\t\t\tobj = {};\n\t\t\tobj[ key ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(){\n\t\t// Set all the styles\n\t\tfor ( var prop in obj )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ? this.style : this,\n\t\t\t\tprop, jQuery.prop(this, obj[prop], type)\n\t\t\t);\n\t});\n},\n\n/**\n * Access a style property on the first matched element."}]},
{"id":"ba8a101567263cd52348c3b543414edbe749a322","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1307,1346],"code":"/**\n * A generic iterator function, which can be used to seamlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * The callback has two arguments:the key (objects) or index (arrays) as first\n * the first, and the value as the second.\n *\n * @example $.each( [0,1,2], function(i, n){\n *   alert( \"Item #\" + i + \": \" + n );\n * });\n * @desc This is an example of iterating over the items in an array,\n * accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n *   alert( \"Name: \" + i + \", Value: \" + n );\n * });\n *\n * @desc This is an example of iterating over the properties in an\n * Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat JavaScript\n */\n// args is for internal usage only\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )\n\t\t\tif ( fn.apply( obj[i], args || [i, obj[i]] ) === false ) break;\n\treturn obj;\n},\n\nprop: function(elem, value, type, index, prop){"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1220,1259],"code":"/**\n * A generic iterator function, which can be used to seemlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * The callback has two arguments:the key (objects) or index (arrays) as first\n * the first, and the value as the second.\n *\n * @example $.each( [0,1,2], function(i, n){\n *   alert( \"Item #\" + i + \": \" + n );\n * });\n * @desc This is an example of iterating over the items in an array,\n * accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n *   alert( \"Name: \" + i + \", Value: \" + n );\n * });\n *\n * @desc This is an example of iterating over the properties in an\n * Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat JavaScript\n */\n// args is for internal usage only\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )\n\t\t\tif ( fn.apply( obj[i], args || [i, obj[i]] ) === false ) break;\n\treturn obj;\n},\n\nprop: function(elem, value, type){"}]},
{"id":"e97933afb155ec8a7e45ae4975d9c218897e2aa5","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1357,1371],"code":"\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){\n\t\t\tif ( !jQuery.className.has( elem.className, cur ) )\n\t\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + cur;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, c ){\n\t\telem.className = c != undefined ?"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1268,1282],"code":"\t\treturn value;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){\n\t\t\tif ( !jQuery.className.has( elem.className, cur ) )\n\t\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + cur;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, c ){\n\t\telem.className = c ?"}]},
{"id":"6e3774655a08fa7a78b8d253adf00fde413f800b","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1377,1407],"code":"\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\treturn jQuery.inArray( c, (t.className || t).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif ( jQuery(e).is(':visible') ) {"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1288,1319],"code":"\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\tt = t.className || t;\n\t\treturn t && new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\").test( t );\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {"}]},
{"id":"0f4c4328e51d464cd6aa31d60441f813f8a05345","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1407,1417],"code":"if ( jQuery(e).is(':visible') ) {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1319,1329],"code":"if (jQuery.css(e,\"display\") != \"none\") {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\");"}]},
{"id":"38adfe18eedf6623aeab242dea5a4545374a7896","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1454,1477],"code":"\t\t\tprop = \"float\";\n\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\t\tif ( cur )\n\t\t\tret = cur.getPropertyValue(prop);\n\t\telse if ( prop == \"display\" )\n\t\t\tret = \"none\";\n\t\telse\n\t\t\tjQuery.swap(elem, { display: \"block\" }, function() {\n\t\t\t    var c = document.defaultView.getComputedStyle(this, \"\");\n\t\t\t    ret = c && c.getPropertyValue(prop) || \"\";\n\t\t\t});\n\n\t} else if (elem.currentStyle) {\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t}\n\n\treturn ret;\n},\n\nclean: function(a, doc) {"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1364,1389],"code":"\t\t\tprop = \"float\";\n\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\t\tif ( cur )\n\t\t\tret = cur.getPropertyValue(prop);\n\t\telse if ( prop == \"display\" )\n\t\t\tret = \"none\";\n\t\telse\n\t\t\tjQuery.swap(elem, { display: \"block\" }, function() {\n\t\t\t    var c = document.defaultView.getComputedStyle(this, \"\");\n\t\t\t    ret = c && c.getPropertyValue(prop) || \"\";\n\t\t\t});\n\n\t} else if (elem.currentStyle) {\n\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t\t\n\t}\n\n\treturn ret;\n},\n\nclean: function(a) {"}]},
{"id":"b20a216104e1ff915fdb19306bedf7145e3549d0","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1518,1534],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1423,1439],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( tb[n].nodeName.toUpperCase() == \"TBODY\" && !tb[n].childNodes.length )"}]},
{"id":"90a0ca7a589373d7ebbdd8189e22acf5809b1354","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1679,1759],"code":"/**\n * Filter items out of an array, by using a filter function.\n *\n * The specified function will be passed two arguments: The\n * current array item and the index of the item in the array. The\n * function must return 'true' to keep the item in the array, \n * false to remove it.\n *\n * @example $.grep( [0,1,2], function(i){\n *   return i > 0;\n * });\n * @result [1, 2]\n *\n * @name $.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n * @cat JavaScript\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\n\tvar result = [];\n\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0, el = elems.length; i < el; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\n\treturn result;\n},\n\n/**\n * Translate all items in an array to another array of items.\n *\n * The translation function that is provided to this method is \n * called for each item in the array and is passed one argument: \n * The item to be translated.\n *\n * The function can then return the translated value, 'null'\n * (to remove the item), or  an array of values - which will\n * be flattened into the full array.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i + 4;\n * });\n * @result [4, 5, 6]\n * @desc Maps the original array to a new one and adds 4 to each value.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i > 0 ? i + 1 : null;\n * });\n * @result [2, 3]\n * @desc Maps the original array to a new one and adds 1 to each\n * value if it is bigger then zero, otherwise it's removed-\n * \n * @example $.map( [0,1,2], function(i){\n *   return [ i, i + 1 ];\n * });\n * @result [0, 1, 1, 2, 2, 3]\n * @desc Maps the original array to a new one, each element is added\n * with it's original value and the value plus one.\n *\n * @name $.map\n * @type Array\n * @param Array array The Array to translate.\n * @param Function fn The function to process each item against.\n * @cat JavaScript\n */\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"return \" + fn);\n\n\tvar result = [];"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1581,1661],"code":"/**\n * Filter items out of an array, by using a filter function.\n *\n * The specified function will be passed two arguments: The\n * current array item and the index of the item in the array. The\n * function must return 'true' to keep the item in the array, \n * false to remove it.\n *\n * @example $.grep( [0,1,2], function(i){\n *   return i > 0;\n * });\n * @result [1, 2]\n *\n * @name $.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n * @cat JavaScript\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\n\tvar result = [];\n\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0, el = elems.length; i < el; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\n\treturn result;\n},\n\n/**\n * Translate all items in an array to another array of items.\n *\n * The translation function that is provided to this method is \n * called for each item in the array and is passed one argument: \n * The item to be translated.\n *\n * The function can then return the translated value, 'null'\n * (to remove the item), or  an array of values - which will\n * be flattened into the full array.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i + 4;\n * });\n * @result [4, 5, 6]\n * @desc Maps the original array to a new one and adds 4 to each value.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i > 0 ? i + 1 : null;\n * });\n * @result [2, 3]\n * @desc Maps the original array to a new one and adds 1 to each\n * value if it is bigger then zero, otherwise it's removed-\n * \n * @example $.map( [0,1,2], function(i){\n *   return [ i, i + 1 ];\n * });\n * @result [0, 1, 1, 2, 2, 3]\n * @desc Maps the original array to a new one, each element is added\n * with it's original value and the value plus one.\n *\n * @name $.map\n * @type Array\n * @param Array array The Array to translate.\n * @param Function fn The function to process each item against.\n * @cat JavaScript\n */\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"return \" + fn);\n\n\tvar result = [], r = [];"}]},
{"id":"a69e6062a38087bf24f750b7a80eef000a15ed8f","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1759,1770],"code":"var result = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1661,1672],"code":"var result = [], r = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"}]},
{"id":"a5279e64752b57d8a9f315a22a7f0e5fe1ebc498","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1838,2338],"code":"\t\tmaxlength: \"maxLength\"\n\t};\n};\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Use an optional expression to filter the matched set.\n *\n * \tOnly the immediately previous sibling is returned, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev\n * @type jQuery\n * @param String expr (optional) An expression to filter the previous Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing all of the unique siblings of each of the\n * matched set of elements."},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1732,2229],"code":"\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling, not all next siblings.\n *\n * Can be filtered with an optional expressions.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions.\n *\n * It only returns the immediately previous sibling, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev\n * @type jQuery\n * @param String expr (optional) An expression to filter the previous Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing all of the unique siblings of each of the\n * matched set of elements.\n *\n * Can be filtered with an optional expressions."}]},
{"id":"f4a68402426a055c5dc0b711299ff729800967d8","instances":[{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[1,22],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"!jQuery.nth(a.parentNode.lastChild,2,'previousSibling')\",\n\n\t\t\t// Parent Checks\n\t\t\tparent: \"a.firstChild\","},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[1,20],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\",\n\t\t\t\"first-child\": \"jQuery.nth(a.parentNode.firstChild,1,'nextSibling')==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"jQuery.sibling(a.parentNode.firstChild).length==1\","}]},
{"id":"a2935856a85a1496661a709d6f5073be1c570ac1","instances":[{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[69,106],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[92,129],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") ) {"}]},
{"id":"d1b47f73dd66f59e659317bc75ed969bd56d354c","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[1,12],"code":"module(\"selector\");\n\ntest(\"element\", function() {\n\texpect(9);\n\tok( $(\"*\").size() >= 30, \"Select all\" );\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n\tt( \"Element Selector\", \"body\", [\"body\"] );\n\tt( \"Element Selector\", \"html\", [\"html\"] );\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\n\t\n\tok( $(\"#length\").length, '&lt;input name=\"length\"&gt; cannot be found under IE, see #945' );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[1,13],"code":"module(\"selector\");\r\n\r\ntest(\"expressions - element\", function() {\r\n\texpect(6);\r\n\tok( $(\"*\").size() >= 30, \"Select all\" );\r\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\r\n\tt( \"Element Selector\", \"body\", [\"body\"] );\r\n\tt( \"Element Selector\", \"html\", [\"html\"] );\r\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\r\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\r\n});\r\n\r\ntest(\"expressions - id\", function() {\r"}]},
{"id":"6fe717cc51917b595ee4ccfb9ee7d58bead4ec00","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[82,110],"code":"\tt( \"Child escaped Class\", \"form > .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n});\n\ntest(\"multiple\", function() {\n\texpect(4);\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n});\n\ntest(\"child and adjacent\", function() {\n\texpect(19);\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n\t\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Nth Child\", \"p:nth-child(1)\", [\"firstp\",\"sndp\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[33,62],"code":"\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\r\n});\r\n\r\ntest(\"expressions - multiple\", function() {\r\n\texpect(4);\r\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r\n\texpect(14);\r\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\r\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r"}]},
{"id":"c591ca65ac8588ea03130d644fa918128bb8b600","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[115,132],"code":"\tt( \"Nth-child\", \"#main form > *:nth-child(2)\", [\"text2\",\"idTest\"] );\n\tt( \"Nth-child\", \"#main form > :nth-child(2)\", [\"text2\",\"idTest\"] );\n});\n\ntest(\"attributes\", function() {\n\texpect(20);\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n\t\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\t\n\tt( \"Attribute selector using UTF8\", \"span[@lang=中文]\", [\"台北\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[58,75],"code":"\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r\n\texpect(19);\r\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\r\n\t\r\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\r\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r"}]},
{"id":"be1e56e69873ac22c3b1295982f832d402889718","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[132,155],"code":"\tt( \"Attribute selector using UTF8\", \"span[@lang=中文]\", [\"台北\"] );\n\t\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n\t\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\n\t\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\n\t\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\n});\n\ntest(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[73,96],"code":"\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\r\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\r\n\t\r\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\r\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\r\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\r\n\t\r\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\r\n\t\r\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\r\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\r\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\r\n});\r\n\r\ntest(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r"}]},
{"id":"bbb68b5b10ab845fd2436ca5d7c6cf6e6a7b9f77","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[179,198],"code":"\tt( \"Form element :text\", \":text\", [\"text1\", \"text2\", \"hidden2\", \"name\", \"length\", \"idTest\"] );\n\tt( \"Form element :radio:checked\", \":radio:checked\", [\"radio2\"] );\n\tt( \"Form element :checkbox:checked\", \":checkbox:checked\", [\"check1\"] );\n\tt( \"Form element :checkbox:checked, :radio:checked\", \":checkbox:checked, :radio:checked\", [\"check1\", \"radio2\"] );\n});\n\ntest(\"basic xpath\", function() {\n\texpect(15);\n\tok( jQuery.find(\"//*\").length >= 30, \"All Elements (//*)\" );\n\tt( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\n\tt( \"Absolute Path\", \"/html/body\", [\"body\"] );\n\tt( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\n\tt( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\n\tt( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\n\tt( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\n\tt( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\n\tt( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );\n\tt( \"Attribute Equals\", \"//a[@rel='bookmark']\", [\"simon1\"] );\n\tt( \"Parent Axis\", \"//p/..\", [\"main\",\"foo\"] );\n\tt( \"Sibling Axis\", \"//p/../\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"floatTest\",\"iframe\",\"lengthtest\",\"table\",\"sndp\",\"en\",\"sap\"] );"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[120,139],"code":"\tt( \"Form element :text\", \":text\", [\"text1\", \"text2\", \"hidden2\", \"name\"] );\r\n\tt( \"Form element :radio:checked\", \":radio:checked\", [\"radio2\"] );\r\n\tt( \"Form element :checkbox:checked\", \":checkbox:checked\", [\"check1\"] );\r\n\tt( \"Form element :checkbox:checked, :radio:checked\", \":checkbox:checked, :radio:checked\", [\"check1\", \"radio2\"] );\r\n});\r\n\r\ntest(\"expressions - basic xpath\", function() {\r\n\texpect(14);\r\n\tok( jQuery.find(\"//*\").length >= 30, \"All Elements (//*)\" );\r\n\tt( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\r\n\tt( \"Absolute Path\", \"/html/body\", [\"body\"] );\r\n\tt( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\r\n\tt( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\r\n\tt( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\r\n\tt( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Equals\", \"//a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Parent Axis\", \"//p/..\", [\"main\",\"foo\"] );\r\n\tt( \"Sibling Axis\", \"//p/../\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"floatTest\",\"sndp\",\"en\",\"sap\"] );\r"}]}]
