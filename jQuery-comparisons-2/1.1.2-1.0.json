[{"id":"f96e6f9b843050eff946e4e84e9ae7046fe00d72","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[757,795],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );"},{"path":"./jquery-data/1.0/src/ajax/ajax.js","lines":[239,275],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function(r) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Get the data out of an XMLHttpRequest.\n// Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n// otherwise return plain text.\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it\n\tif ( type == \"script\" ) eval.call( window, data );"}]},
{"id":"1ed61e14610059c0ae2f00bc5750479482ef0d5e","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[94,108],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[121,135],"code":"\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"1244d0e0d9c6188b75865e69127082c91e0715cf","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"}]},
{"id":"88c4cbd79c3ce40d39667c8e030a214d3c16c2cd","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[281,362],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only 'linear' is provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (Plugin Required).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\tvar opt = jQuery.speed(speed, easing, callback);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, opt, p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[259,306],"code":"\t/**\n\t * @private\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = prop;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {"}]},
{"id":"7831c7dd777002a7a831fbd0ad3645568b25c8ee","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[387,413],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The styles"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[354,380],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options"}]},
{"id":"81221f66caba37c880aa1f77074452ca3252ef17","instances":[{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[303,347],"code":"\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\r\n\t\r\n\treset();\r\n\texpected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$(document.getElementById('first')).prependTo('#sap');\r\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\r\n\r\n\treset();\r\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$([document.getElementById('yahoo'), document.getElementById('first')]).prependTo('#sap');\r\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\r\n\t\r\n\treset();\r\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\t$(\"#yahoo, #first\").prependTo('#sap');\r\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\r\n});\r\n\r\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('#yahoo').before('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$('#yahoo').before(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$('#yahoo').before($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: bugaYahoo';\r\n\t$('<b>buga</b>').insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String before' );\r"},{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[347,391],"code":"\tok( expected == $('#en').text(), 'Insert String before' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:Yahoo\";\r\n\t$(document.getElementById('first')).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert element before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\r\n\t$(\"#first, #mark\").insertBefore('#yahoo');\r\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\r\n});\r\n\r\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('#yahoo').after('<b>buga</b>');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:\";\r\n\t$('#yahoo').after(document.getElementById('first'));\r\n\tok( expected == $('#en').text(), \"Insert element after\" );\r\n\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\r\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\r\n\t\r\n\treset();\r\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\r\n\t$('#yahoo').after($(\"#first, #mark\"));\r\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\r\n});\r\n\r\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\r\n\texpect(4);\r\n\tvar expected = 'This is a normal link: Yahoobuga';\r\n\t$('<b>buga</b>').insertAfter('#yahoo');\r\n\tok( expected == $('#en').text(), 'Insert String after' );\r"}]},
{"id":"ff0a5e888dc383e6d6e352f2a3bd40abcf34a24a","instances":[{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[542,557],"code":"\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\r\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"parent[s]([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\r\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\r\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\r\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\r\n\t\r\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\r\n\tok( $(\"#groups\").parents(\"p\")[0].id == \"ap\", \"Filtered parents check\" );\r\n\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\r\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\r\n});\r"},{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[555,570],"code":"\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\r\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\r\n});\r\n\r\ntest(\"next/prev([String])\", function() {\r\n\texpect(8);\r\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\r\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\r\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\r\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\r\n\t\r\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\r\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\r\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\r\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\r\n});\r"}]},
{"id":"48e8c48b6ecbdc479e329a4731c04bd2f8b4faa9","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[533,629],"code":"/**\n * Set the text contents of all matched elements.\n *\n * Similar to html(), but escapes HTML (replace \"<\" and \">\" with their\n * HTML entities).\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\");\n * @before <p>Test Paragraph.</p>\n * @result <p>&lt;b&gt;Some&lt;/b&gt; new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\", true);\n * @before <p>Test Paragraph.</p>\n * @result <p>Some new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @name text\n * @type String\n * @param String val The text value to set the contents of the element to.\n * @cat DOM/Attributes\n */\ntext: function(e) {\n\tif ( typeof e == \"string\" )\n\t\treturn this.empty().append( document.createTextNode( e ) );\n\n\tvar t = \"\";\n\tjQuery.each( e || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tt += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue : jQuery.fn.text([ this ]);\n\t\t});\n\t});\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a = jQuery.clean(arguments);\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;"},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[362,424],"code":"/**\n * Retreive the text contents of all matched elements. The result is\n * a string that contains the combined text contents of all matched\n * elements. This method works on both HTML and XML documents.\n *\n * @example $(\"p\").text();\n * @before <p>Test Paragraph.</p>\n * @result Test Paragraph.\n *\n * @name text\n * @type String\n * @cat DOM\n */\ntext: function(e) {\n\te = e || this;\n\tvar t = \"\";\n\tfor ( var j = 0; j < e.length; j++ ) {\n\t\tvar r = e[j].childNodes;\n\t\tfor ( var i = 0; i < r.length; i++ )\n\t\t\tif ( r[i].nodeType != 8 )\n\t\t\t\tt += r[i].nodeType != 1 ?\n\t\t\t\t\tr[i].nodeValue : jQuery.fn.text([ r[i] ]);\n\t}\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * The way that is works is that it goes through the first element argument\n * provided and finds the deepest element within the structure - it is that\n * element that will en-wrap everything else.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @any String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @any Element elem A DOM element that will be wrapped.\n * @any Array<Element> elems An array of elements, the first of which will be wrapped.\n * @any Object obj Any object, converted to a string, then a text node.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a = jQuery.clean(arguments);\n\t\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\t\t\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\t\t\n\t\t// Find he deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;"}]},
{"id":"16e6da46b0fede38694602be57eeda53aa5e1c9d","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1353,1369],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[899,915],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"}]},
{"id":"4fa1c18690cff809313d3654771dd5941c531682","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1775,1796],"code":"/*\n * Whether the W3C compliant box model is being used.\n *\n * @property\n * @name $.boxModel\n * @type Boolean\n * @cat JavaScript\n */\nnew function() {\n\tvar b = navigator.userAgent.toLowerCase();\n\n\t// Figure out what browser is being used\n\tjQuery.browser = {\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};"},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[1523,1661],"code":"\t/*\n\t * A number of helper functions used for managing events.\n\t * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n\t */\n\tevent: {\n\t\n\t\t// Bind an event to an element\n\t\t// Original by Dean Edwards\n\t\tadd: function(element, type, handler) {\n\t\t\t// For whatever reason, IE has trouble passing the window object\n\t\t\t// around, causing it to be cloned in the process\n\t\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\t\telement = window;\n\t\t\n\t\t\t// Make sure that the function being executed has a unique ID\n\t\t\tif ( !handler.guid )\n\t\t\t\thandler.guid = this.guid++;\n\t\t\t\t\n\t\t\t// Init the element's event structure\n\t\t\tif (!element.events)\n\t\t\t\telement.events = {};\n\t\t\t\n\t\t\t// Get the current list of functions bound to this event\n\t\t\tvar handlers = element.events[type];\n\t\t\t\n\t\t\t// If it hasn't been initialized yet\n\t\t\tif (!handlers) {\n\t\t\t\t// Init the event handler queue\n\t\t\t\thandlers = element.events[type] = {};\n\t\t\t\t\n\t\t\t\t// Remember an existing handler, if it's already there\n\t\t\t\tif (element[\"on\" + type])\n\t\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t\t}\n\n\t\t\t// Add the function to the element's handler list\n\t\t\thandlers[handler.guid] = handler;\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\telement[\"on\" + type] = this.handle;\n\t\n\t\t\t// Remember the function in a global list (for triggering)\n\t\t\tif (!this.global[type])\n\t\t\t\tthis.global[type] = [];\n\t\t\tthis.global[type].push( element );\n\t\t},\n\t\t\n\t\tguid: 1,\n\t\tglobal: {},\n\t\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function(element, type, handler) {\n\t\t\tif (element.events)\n\t\t\t\tif (type && element.events[type])\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\t\telse\n\t\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\t\tthis.remove( element, j );\n\t\t},\n\t\t\n\t\ttrigger: function(type,data,element) {\n\t\t\t// Touch up the incoming data\n\t\t\tdata = data || [];\n\t\n\t\t\t// Handle a global trigger\n\t\t\tif ( !element ) {\n\t\t\t\tvar g = this.global[type];\n\t\t\t\tif ( g )\n\t\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\t\tthis.trigger( type, data, g[i] );\n\t\n\t\t\t// Handle triggering a single element\n\t\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t\t// Pass along a fake event\n\t\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\t\n\t\t\t\t// Trigger the event\n\t\t\t\telement[\"on\" + type].apply( element, data );\n\t\t\t}\n\t\t},\n\t\t\n\t\thandle: function(event) {\n\t\t\tif ( typeof jQuery == \"undefined\" ) return;\n\n\t\t\tevent = event || jQuery.event.fix( window.event );\n\t\n\t\t\t// If no correct event was found, fail\n\t\t\tif ( !event ) return;\n\t\t\n\t\t\tvar returnValue = true;\n\n\t\t\tvar c = this.events[event.type];\n\t\t\n\t\t\tfor ( var j in c ) {\n\t\t\t\tif ( c[j].apply( this, [event] ) === false ) {\n\t\t\t\t\tevent.preventDefault();"}]},
{"id":"c2d8340ae877687ca4f19afa049015fad7ccfc52","instances":[{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[2,40],"code":"expr: {\n\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\",\n\t\t\"first-child\": \"jQuery.nth(a.parentNode.firstChild,1,'nextSibling')==a\",\n\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\"only-child\": \"jQuery.sibling(a.parentNode.firstChild).length==1\",\n\n\t\t// Parent Checks\n\t\tparent: \"a.firstChild\",\n\t\tempty: \"!a.firstChild\",\n\n\t\t// Text Check\n\t\tcontains: \"jQuery.fn.text.apply([a]).indexOf(m[3])>=0\",\n\n\t\t// Visibility\n\t\tvisible: 'a.type!=\"hidden\"&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\t\thidden: 'a.type==\"hidden\"||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t\t// Form attributes\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t\t// Form elements\n\t\ttext: \"a.type=='text'\","},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[1014,1051],"code":"expr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\t\t\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\t\t\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\t\t\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\",\n\t\t\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\t\t\n\t\t// Form elements\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected\"\n\t},\n\t\".\": \"jQuery.className.has(a,m[2])\","}]}]
