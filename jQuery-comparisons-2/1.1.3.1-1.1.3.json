[{"id":"c8c0542ab40191f136c1f7af8efb74a8562c7990","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[94,108],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[121,135],"code":"\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[94,108],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[121,135],"code":"\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"a24ee1d9fce4447841baa5996d46d9f7fd519741","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"}]},
{"id":"22c07ffca6c10866c95e48b5925fe49455b145dd","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[1,390],"code":"module(\"ajax\");\n\nif ( location.protocol != \"file:\" ) {\n\ntest(\"serialize()\", function() {\n\texpect(1);\n\tvar data = $(':input').not('button').serialize();\n\t// ignore button, IE takes text content as value, not relevant for this test\n\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );\n\t\n\tparams = {\"foo[bar]\":\"baz\", \"foo[beep]\":42, \"foo[quux]\":\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us\", \"even more arrays\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(7);\n\tstop(true);\n\tvar count = 0;\n\tvar success = function() {\n\t\tif(count++ == 6)\n\t\t\tstart();\n\t}\n\tvar target = \"data/name.php\";\n\tok( $.get(url(target), success), \"get\" );\n\tok( $.getIfModified(url(target), success), \"getIfModified\" );\n\tok( $.post(url(target), success), \"post\" );\n\tok( $.getScript(url(\"data/test.js\"), success), \"script\" );\n\tok( $.getJSON(url(\"data/json.php\"), success), \"json\" );\n\tok( $.ajax({url: url(target), success: success}), \"generic\" );\n});\n\ntest(\"synchronous request\", function() {\n\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();\n\t$('#first').load(url(\"data/name.php\"), function() {\n\t\tok( /^ERROR/.test($('#first').text()), 'Check if content was injected into the DOM' );\n\t\tstart();\n\t});\n});\n\ntest(\"load(String, Object, Function) - inject without callback\", function() {\n\texpect(1);\n\tstop(true); // check if load can be called with only url\n\t$('#first').load(\"data/name.php\");\n});\n\ntest(\"load(String, Object, Function) - check scripts\", function() {\n\texpect(7);\n\tstop();\n\twindow.testFoo = undefined;\n\twindow.foobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);"},{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[1,390],"code":"module(\"ajax\");\n\nif ( location.protocol != \"file:\" ) {\n\ntest(\"serialize()\", function() {\n\texpect(1);\n\tvar data = $(':input').not('button').serialize();\n\t// ignore button, IE takes text content as value, not relevant for this test\n\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );\n\t\n\tparams = {\"foo[bar]\":\"baz\", \"foo[beep]\":42, \"foo[quux]\":\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us\", \"even more arrays\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(7);\n\tstop(true);\n\tvar count = 0;\n\tvar success = function() {\n\t\tif(count++ == 6)\n\t\t\tstart();\n\t}\n\tvar target = \"data/name.php\";\n\tok( $.get(url(target), success), \"get\" );\n\tok( $.getIfModified(url(target), success), \"getIfModified\" );\n\tok( $.post(url(target), success), \"post\" );\n\tok( $.getScript(url(\"data/test.js\"), success), \"script\" );\n\tok( $.getJSON(url(\"data/json.php\"), success), \"json\" );\n\tok( $.ajax({url: url(target), success: success}), \"generic\" );\n});\n\ntest(\"synchronous request\", function() {\n\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();\n\t$('#first').load(url(\"data/name.php\"), function() {\n\t\tok( /^ERROR/.test($('#first').text()), 'Check if content was injected into the DOM' );\n\t\tstart();\n\t});\n});\n\ntest(\"load(String, Object, Function) - inject without callback\", function() {\n\texpect(1);\n\tstop(true); // check if load can be called with only url\n\t$('#first').load(\"data/name.php\");\n});\n\ntest(\"load(String, Object, Function) - check scripts\", function() {\n\texpect(7);\n\tstop();\n\twindow.testFoo = undefined;\n\twindow.foobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);"}]},
{"id":"eb8f34f7612b136218f62f079a52e06719fa52b6","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[507,552],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[551,596],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[507,552],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[551,596],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"}]},
{"id":"57eece61797ce7b0f4956352baa7065cb03bd40c","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[734,749],"code":"\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent[s]([String])\", function() {\n\texpect(8);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\t\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\n\tok( $(\"#groups\").parents(\"p\")[0].id == \"ap\", \"Filtered parents check\" );\n\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[747,762],"code":"\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});\n\ntest(\"next/prev([String])\", function() {\n\texpect(8);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n\t\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[734,749],"code":"\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent[s]([String])\", function() {\n\texpect(8);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\t\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );\n\tok( $(\"#groups\").parents(\"p\")[0].id == \"ap\", \"Filtered parents check\" );\n\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[747,762],"code":"\tok( $(\"#groups\").parents(\"div\")[0].id == \"main\", \"Filtered parents check2\" );\n\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});\n\ntest(\"next/prev([String])\", function() {\n\texpect(8);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n\t\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});"}]},
{"id":"7bf698ff0b72b495a0f539809b027bdf988269b8","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[1,53],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";"},{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[1,53],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";"}]},
{"id":"853d942ecfb4447e3b1bb5cd494c837f5ed30ec6","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[22,620],"code":"\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdata: params,\n\t\t\tifModified: ifModified,\n\t\t\tcomplete: function(res, status){\n\t\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\t\tself.attr(\"innerHTML\", res.responseText)\n\t\t\t\t\t  // Execute all the scripts inside of the newly-injected HTML\n\t\t\t\t\t  .evalScripts()\n\t\t\t\t\t  // Execute callback\n\t\t\t\t\t  .each( callback, [res.responseText, status, res] );\n\t\t\t\telse\n\t\t\t\t\tcallback.apply( self, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Serializes a set of input elements into a string of data.\n\t * This will serialize all given elements.\n\t *\n\t * A serialization similar to the form submit of a browser is\n\t * provided by the [http://www.malsup.com/jquery/form/ Form Plugin].\n\t * It also takes multiple-selects \n\t * into account, while this method recognizes only a single option.\n\t *\n\t * @example $(\"input[@type=text]\").serialize();\n\t * @before <input type='text' name='name' value='John'/>\n\t * <input type='text' name='location' value='Boston'/>\n\t * @after name=John&amp;location=Boston\n\t * @desc Serialize a selection of input elements to a string\n\t *\n\t * @name serialize\n\t * @type String\n\t * @cat Ajax\n\t */\n\tserialize: function() {\n\t\treturn jQuery.param( this );\n\t},\n\n\t/**\n\t * Evaluate all script tags inside this jQuery. If they have a src attribute,\n\t * the script is loaded, otherwise it's content is evaluated.\n\t *\n\t * @name evalScripts\n\t * @type jQuery\n\t * @private"},{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[22,620],"code":"\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdata: params,\n\t\t\tifModified: ifModified,\n\t\t\tcomplete: function(res, status){\n\t\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\t\tself.attr(\"innerHTML\", res.responseText)\n\t\t\t\t\t  // Execute all the scripts inside of the newly-injected HTML\n\t\t\t\t\t  .evalScripts()\n\t\t\t\t\t  // Execute callback\n\t\t\t\t\t  .each( callback, [res.responseText, status, res] );\n\t\t\t\telse\n\t\t\t\t\tcallback.apply( self, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Serializes a set of input elements into a string of data.\n\t * This will serialize all given elements.\n\t *\n\t * A serialization similar to the form submit of a browser is\n\t * provided by the [http://www.malsup.com/jquery/form/ Form Plugin].\n\t * It also takes multiple-selects \n\t * into account, while this method recognizes only a single option.\n\t *\n\t * @example $(\"input[@type=text]\").serialize();\n\t * @before <input type='text' name='name' value='John'/>\n\t * <input type='text' name='location' value='Boston'/>\n\t * @after name=John&amp;location=Boston\n\t * @desc Serialize a selection of input elements to a string\n\t *\n\t * @name serialize\n\t * @type String\n\t * @cat Ajax\n\t */\n\tserialize: function() {\n\t\treturn jQuery.param( this );\n\t},\n\n\t/**\n\t * Evaluate all script tags inside this jQuery. If they have a src attribute,\n\t * the script is loaded, otherwise it's content is evaluated.\n\t *\n\t * @name evalScripts\n\t * @type jQuery\n\t * @private"}]},
{"id":"c0b96e40c94f798e0c54475f0f74b2ed9548ec86","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[618,707],"code":"// Create the request object; Microsoft failed to properly\n// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\nvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\n\n// Open the socket\nxml.open(s.type, s.url, s.async);\n\n// Set the correct header, if data is being sent\nif ( s.data )\n\txml.setRequestHeader(\"Content-Type\", s.contentType);\n\n// Set the If-Modified-Since header, if ifModified mode.\nif ( s.ifModified )\n\txml.setRequestHeader(\"If-Modified-Since\",\n\t\tjQuery.lastModified[s.url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n// Set header so the called script knows that it's an XMLHttpRequest\nxml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n// Allow custom headers/mimetypes\nif( s.beforeSend )\n\ts.beforeSend(xml);\n\t\nif ( s.global )\n    jQuery.event.trigger(\"ajaxSend\", [xml, s]);\n\n// Wait for a response to come back\nvar onreadystatechange = function(isTimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( xml && (xml.readyState == 4 || isTimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\t\t\n\t\t// clear poll interval\n\t\tif (ival) {\n\t\t\tclearInterval(ival);\n\t\t\tival = null;\n\t\t}\n\t\t\n\t\tvar status;\n\t\ttry {\n\t\t\tstatus = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\t\t\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes;\n\t\t\t\ttry {\n\t\t\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\t\t\t\tif ( s.ifModified && modRes )\n\t\t\t\t\tjQuery.lastModified[s.url] = modRes;\n\t\n\t\t\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\t\t\tvar data = jQuery.httpData( xml, s.dataType );\n\t\n\t\t\t\t// If a local callback was specified, fire it and pass it the data\n\t\t\t\tif ( s.success )\n\t\t\t\t\ts.success( data, status );\n\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tif( s.global )\n\t\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n\t\t\t} else\n\t\t\t\tjQuery.handleError(s, xml, status);\n\t\t} catch(e) {\n\t\t\tstatus = \"error\";\n\t\t\tjQuery.handleError(s, xml, status, e);\n\t\t}\n\n\t\t// The request was completed\n\t\tif( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxComplete\", [xml, s] );\n\n\t\t// Handle the global AJAX counter\n\t\tif ( s.global && ! --jQuery.active )\n\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t// Process result\n\t\tif ( s.complete )\n\t\t\ts.complete(xml, status);\n\n\t\t// Stop memory leaks\n\t\tif(s.async)\n\t\t\txml = null;\n\t}\n};\n\n// don't attach the handler to the request, just poll it instead\nvar ival = setInterval(onreadystatechange, 13); "},{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[618,707],"code":"// Create the request object; Microsoft failed to properly\n// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\nvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\n\n// Open the socket\nxml.open(s.type, s.url, s.async);\n\n// Set the correct header, if data is being sent\nif ( s.data )\n\txml.setRequestHeader(\"Content-Type\", s.contentType);\n\n// Set the If-Modified-Since header, if ifModified mode.\nif ( s.ifModified )\n\txml.setRequestHeader(\"If-Modified-Since\",\n\t\tjQuery.lastModified[s.url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n// Set header so the called script knows that it's an XMLHttpRequest\nxml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n// Allow custom headers/mimetypes\nif( s.beforeSend )\n\ts.beforeSend(xml);\n\t\nif ( s.global )\n    jQuery.event.trigger(\"ajaxSend\", [xml, s]);\n\n// Wait for a response to come back\nvar onreadystatechange = function(isTimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( xml && (xml.readyState == 4 || isTimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\t\t\n\t\t// clear poll interval\n\t\tif (ival) {\n\t\t\tclearInterval(ival);\n\t\t\tival = null;\n\t\t}\n\t\t\n\t\tvar status;\n\t\ttry {\n\t\t\tstatus = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\t\t\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes;\n\t\t\t\ttry {\n\t\t\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\t\t\t\tif ( s.ifModified && modRes )\n\t\t\t\t\tjQuery.lastModified[s.url] = modRes;\n\t\n\t\t\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\t\t\tvar data = jQuery.httpData( xml, s.dataType );\n\t\n\t\t\t\t// If a local callback was specified, fire it and pass it the data\n\t\t\t\tif ( s.success )\n\t\t\t\t\ts.success( data, status );\n\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tif( s.global )\n\t\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n\t\t\t} else\n\t\t\t\tjQuery.handleError(s, xml, status);\n\t\t} catch(e) {\n\t\t\tstatus = \"error\";\n\t\t\tjQuery.handleError(s, xml, status, e);\n\t\t}\n\n\t\t// The request was completed\n\t\tif( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxComplete\", [xml, s] );\n\n\t\t// Handle the global AJAX counter\n\t\tif ( s.global && ! --jQuery.active )\n\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t// Process result\n\t\tif ( s.complete )\n\t\t\ts.complete(xml, status);\n\n\t\t// Stop memory leaks\n\t\tif(s.async)\n\t\t\txml = null;\n\t}\n};\n\n// don't attach the handler to the request, just poll it instead\nvar ival = setInterval(onreadystatechange, 13); "}]},
{"id":"a52e7c2bcdb06cc4ed81f874ea9f3385ae21b2cf","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[472,820],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","},{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[472,820],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","}]},
{"id":"e920ae32431b2e90124171973c28c0ffc9f89ac7","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[1,108],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\t\t\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// if data is passed, bind to handler \n\t\tif( data != undefined ) { \n        \t// Create temporary function pointer to original handler \n\t\t\tvar fn = handler; \n\n\t\t\t// Create unique handler function, wrapped around original handler \n\t\t\thandler = function() { \n\t\t\t\t// Pass arguments and context to original handler \n\t\t\t\treturn fn.apply(this, arguments); \n\t\t\t};\n\n\t\t\t// Store data in unique handler \n\t\t\thandler.data = data;\n\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\t\thandler.guid = fn.guid;\n\t\t}\n\n\t\t// Init the element's event structure\n\t\tif (!element.$events)\n\t\t\telement.$events = {};\n\t\t\n\t\tif (!element.$handle)\n\t\t\telement.$handle = function() {\n\t\t\t\t// returned undefined or false\n\t\t\t\tvar val;\n\n\t\t\t\t// Handle the second event of a trigger and when\n\t\t\t\t// an event is called after a page has unloaded\n\t\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\t  return val;\n\t\t\t\t\n\t\t\t\tval = jQuery.event.handle.apply(element, arguments);\n\t\t\t\t\n\t\t\t\treturn val;\n\t\t\t};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.$events[type];\n\n\t\t// Init the event handler queue\n\t\tif (!handlers) {\n\t\t\thandlers = element.$events[type] = {};\t\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\tif (element.addEventListener)\n\t\t\t\telement.addEventListener(type, element.$handle, false);\n\t\t\telse\n\t\t\t\telement.attachEvent(\"on\" + type, element.$handle);\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\t// Only add the element to the global list once\n\t\tif (jQuery.inArray(element, this.global[type]) == -1)\n\t\t\tthis.global[type].push( element );\n\t},\n\n\tguid: 1,\n\tglobal: {},\n\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tvar events = element.$events, ret, index;\n\n\t\tif ( events ) {\n\t\t\t// type is actually an event object here\n\t\t\tif ( type && type.type ) {\n\t\t\t\thandler = type.handler;\n\t\t\t\ttype = type.type;\n\t\t\t}\n\t\t\t\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events )\n\t\t\t\t\tthis.remove( element, type );\n\n\t\t\t} else if ( events[type] ) {"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[1,108],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\t\t\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// if data is passed, bind to handler \n\t\tif( data != undefined ) { \n        \t// Create temporary function pointer to original handler \n\t\t\tvar fn = handler; \n\n\t\t\t// Create unique handler function, wrapped around original handler \n\t\t\thandler = function() { \n\t\t\t\t// Pass arguments and context to original handler \n\t\t\t\treturn fn.apply(this, arguments); \n\t\t\t};\n\n\t\t\t// Store data in unique handler \n\t\t\thandler.data = data;\n\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\t\thandler.guid = fn.guid;\n\t\t}\n\n\t\t// Init the element's event structure\n\t\tif (!element.$events)\n\t\t\telement.$events = {};\n\t\t\n\t\tif (!element.$handle)\n\t\t\telement.$handle = function() {\n\t\t\t\t// returned undefined or false\n\t\t\t\tvar val;\n\n\t\t\t\t// Handle the second event of a trigger and when\n\t\t\t\t// an event is called after a page has unloaded\n\t\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\t  return val;\n\t\t\t\t\n\t\t\t\tval = jQuery.event.handle.apply(element, arguments);\n\t\t\t\t\n\t\t\t\treturn val;\n\t\t\t};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.$events[type];\n\n\t\t// Init the event handler queue\n\t\tif (!handlers) {\n\t\t\thandlers = element.$events[type] = {};\t\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\tif (element.addEventListener)\n\t\t\t\telement.addEventListener(type, element.$handle, false);\n\t\t\telse\n\t\t\t\telement.attachEvent(\"on\" + type, element.$handle);\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\t// Only add the element to the global list once\n\t\tif (jQuery.inArray(element, this.global[type]) == -1)\n\t\t\tthis.global[type].push( element );\n\t},\n\n\tguid: 1,\n\tglobal: {},\n\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tvar events = element.$events, ret, index;\n\n\t\tif ( events ) {\n\t\t\t// type is actually an event object here\n\t\t\tif ( type && type.type ) {\n\t\t\t\thandler = type.handler;\n\t\t\t\ttype = type.type;\n\t\t\t}\n\t\t\t\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events )\n\t\t\t\t\tthis.remove( element, type );\n\n\t\t\t} else if ( events[type] ) {"}]},
{"id":"636fbeb79ce5c54e79e32fc73a9b40cf6fa7efa6","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[105,123],"code":"// remove all handlers for the given type\nelse\n\tfor ( handler in element.$events[type] )\n\t\tdelete events[type][handler];\n\n// remove generic event handler if no more handlers exist\nfor ( ret in events[type] ) break;\nif ( !ret ) {\n\tif (element.removeEventListener)\n\t\telement.removeEventListener(type, element.$handle, false);\n\telse\n\t\telement.detachEvent(\"on\" + type, element.$handle);\n\tret = null;\n\tdelete events[type];\n\t\n\t// Remove element from the global event type cache\n\twhile ( this.global[type] && ( (index = jQuery.inArray(element, this.global[type])) >= 0 ) )\n\t\tdelete this.global[type][index];\n}"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[105,123],"code":"// remove all handlers for the given type\nelse\n\tfor ( handler in element.$events[type] )\n\t\tdelete events[type][handler];\n\n// remove generic event handler if no more handlers exist\nfor ( ret in events[type] ) break;\nif ( !ret ) {\n\tif (element.removeEventListener)\n\t\telement.removeEventListener(type, element.$handle, false);\n\telse\n\t\telement.detachEvent(\"on\" + type, element.$handle);\n\tret = null;\n\tdelete events[type];\n\t\n\t// Remove element from the global event type cache\n\twhile ( this.global[type] && ( (index = jQuery.inArray(element, this.global[type])) >= 0 ) )\n\t\tdelete this.global[type][index];\n}"}]},
{"id":"cc47c2164061ea419dbad2d8f873099be2416dee","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[85,485],"code":"\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tvar events = element.$events, ret, index;\n\n\t\tif ( events ) {\n\t\t\t// type is actually an event object here\n\t\t\tif ( type && type.type ) {\n\t\t\t\thandler = type.handler;\n\t\t\t\ttype = type.type;\n\t\t\t}\n\t\t\t\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events )\n\t\t\t\t\tthis.remove( element, type );\n\n\t\t\t} else if ( events[type] ) {\n\t\t\t\t// remove the given handler for the given type\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete events[type][handler.guid];\n\t\t\t\t\n\t\t\t\t// remove all handlers for the given type\n\t\t\t\telse\n\t\t\t\t\tfor ( handler in element.$events[type] )\n\t\t\t\t\t\tdelete events[type][handler];\n\n\t\t\t\t// remove generic event handler if no more handlers exist\n\t\t\t\tfor ( ret in events[type] ) break;\n\t\t\t\tif ( !ret ) {\n\t\t\t\t\tif (element.removeEventListener)\n\t\t\t\t\t\telement.removeEventListener(type, element.$handle, false);\n\t\t\t\t\telse\n\t\t\t\t\t\telement.detachEvent(\"on\" + type, element.$handle);\n\t\t\t\t\tret = null;\n\t\t\t\t\tdelete events[type];\n\t\t\t\t\t\n\t\t\t\t\t// Remove element from the global event type cache\n\t\t\t\t\twhile ( this.global[type] && ( (index = jQuery.inArray(element, this.global[type])) >= 0 ) )\n\t\t\t\t\t\tdelete this.global[type][index];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove the expando if it's no longer used\n\t\t\tfor ( ret in events ) break;\n\t\t\tif ( !ret )\n\t\t\t\telement.$handle = element.$events = null;\n\t\t}\n\t},\n\n\ttrigger: function(type, data, element) {\n\t\t// Clone the incoming data, if any\n\t\tdata = jQuery.makeArray(data || []);\n\n\t\t// Handle a global trigger\n\t\tif ( !element )\n\t\t\tjQuery.each( this.global[type] || [], function(){\n\t\t\t\tjQuery.event.trigger( type, data, this );\n\t\t\t});\n\n\t\t// Handle triggering a single element\n\t\telse {\n\t\t\tvar val, ret, fn = jQuery.isFunction( element[ type ] || null );\n\t\t\t\n\t\t\t// Pass along a fake event\n\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\n\t\t\t// Trigger the event\n\t\t\tif ( jQuery.isFunction(element.$handle) && (val = element.$handle.apply( element, data )) !== false )\n\t\t\t\tthis.triggered = true;\n\n\t\t\tif ( fn && val !== false && !jQuery.nodeName(element, 'a') )\n\t\t\t\telement[ type ]();\n\n\t\t\tthis.triggered = false;\n\t\t}\n\t},\n\n\thandle: function(event) {\n\t\t// returned undefined or false\n\t\tvar val;\n\n\t\t// Empty object is for triggered events with no data\n\t\tevent = jQuery.event.fix( event || window.event || {} ); \n\n\t\tvar c = this.$events && this.$events[event.type], args = [].slice.call( arguments, 1 );\n\t\targs.unshift( event );\n\n\t\tfor ( var j in c ) {\n\t\t\t// Pass in a reference to the handler function itself\n\t\t\t// So that we can later remove it\n\t\t\targs[0].handler = c[j];\n\t\t\targs[0].data = c[j].data;\n\n\t\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tval = false;\n\t\t\t}\n\t\t}\n\n\t\t// Clean up added properties in IE to prevent memory leak"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[85,485],"code":"\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tvar events = element.$events, ret, index;\n\n\t\tif ( events ) {\n\t\t\t// type is actually an event object here\n\t\t\tif ( type && type.type ) {\n\t\t\t\thandler = type.handler;\n\t\t\t\ttype = type.type;\n\t\t\t}\n\t\t\t\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events )\n\t\t\t\t\tthis.remove( element, type );\n\n\t\t\t} else if ( events[type] ) {\n\t\t\t\t// remove the given handler for the given type\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete events[type][handler.guid];\n\t\t\t\t\n\t\t\t\t// remove all handlers for the given type\n\t\t\t\telse\n\t\t\t\t\tfor ( handler in element.$events[type] )\n\t\t\t\t\t\tdelete events[type][handler];\n\n\t\t\t\t// remove generic event handler if no more handlers exist\n\t\t\t\tfor ( ret in events[type] ) break;\n\t\t\t\tif ( !ret ) {\n\t\t\t\t\tif (element.removeEventListener)\n\t\t\t\t\t\telement.removeEventListener(type, element.$handle, false);\n\t\t\t\t\telse\n\t\t\t\t\t\telement.detachEvent(\"on\" + type, element.$handle);\n\t\t\t\t\tret = null;\n\t\t\t\t\tdelete events[type];\n\t\t\t\t\t\n\t\t\t\t\t// Remove element from the global event type cache\n\t\t\t\t\twhile ( this.global[type] && ( (index = jQuery.inArray(element, this.global[type])) >= 0 ) )\n\t\t\t\t\t\tdelete this.global[type][index];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove the expando if it's no longer used\n\t\t\tfor ( ret in events ) break;\n\t\t\tif ( !ret )\n\t\t\t\telement.$handle = element.$events = null;\n\t\t}\n\t},\n\n\ttrigger: function(type, data, element) {\n\t\t// Clone the incoming data, if any\n\t\tdata = jQuery.makeArray(data || []);\n\n\t\t// Handle a global trigger\n\t\tif ( !element )\n\t\t\tjQuery.each( this.global[type] || [], function(){\n\t\t\t\tjQuery.event.trigger( type, data, this );\n\t\t\t});\n\n\t\t// Handle triggering a single element\n\t\telse {\n\t\t\tvar val, ret, fn = jQuery.isFunction( element[ type ] || null );\n\t\t\t\n\t\t\t// Pass along a fake event\n\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\n\t\t\t// Trigger the event\n\t\t\tif ( jQuery.isFunction(element.$handle) && (val = element.$handle.apply( element, data )) !== false )\n\t\t\t\tthis.triggered = true;\n\n\t\t\tif ( fn && val !== false && !jQuery.nodeName(element, 'a') )\n\t\t\t\telement[ type ]();\n\n\t\t\tthis.triggered = false;\n\t\t}\n\t},\n\n\thandle: function(event) {\n\t\t// returned undefined or false\n\t\tvar val;\n\n\t\t// Empty object is for triggered events with no data\n\t\tevent = jQuery.event.fix( event || window.event || {} ); \n\n\t\tvar c = this.$events && this.$events[event.type], args = [].slice.call( arguments, 1 );\n\t\targs.unshift( event );\n\n\t\tfor ( var j in c ) {\n\t\t\t// Pass in a reference to the handler function itself\n\t\t\t// So that we can later remove it\n\t\t\targs[0].handler = c[j];\n\t\t\targs[0].data = c[j].data;\n\n\t\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tval = false;\n\t\t\t}\n\t\t}\n\n\t\t// Clean up added properties in IE to prevent memory leak"}]},
{"id":"adbd94240852ed26daf47a56009d4942359fc039","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[452,952],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"hover\");\n\t * },function(){\n\t *   $(this).removeClass(\"hover\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for handling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[452,952],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"hover\");\n\t * },function(){\n\t *   $(this).removeClass(\"hover\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for handling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*"}]},
{"id":"42e123c59adf8660d8b972b13ec893fbccd50df3","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[951,997],"code":"\t\t// Use the defer script hack\n\t\tvar script = document.getElementById(\"__ie_init\");\n\t\t\n\t\t// script does not exist if jQuery is loaded dynamically\n\t\tif ( script ) \n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\tif ( this.readyState != \"complete\" ) return;\n\t\t\t\tjQuery.ready();\n\t\t\t};\n\t\n\t\t// Clear from memory\n\t\tscript = null;\n\t\n\t// If Safari  is used\n\t} else if ( jQuery.browser.safari )\n\t\t// Continually check to see if the document.readyState is valid\n\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {\n\t\tvar global = jQuery.event.global;\n\t\tfor ( var type in global ) {\n\t\t\tvar els = global[type], i = els.length;\n\t\t\tif ( i && type != 'unload' )\n\t\t\t\tdo\n\t\t\t\t\tels[i-1] && jQuery.event.remove(els[i-1], type);\n\t\t\t\twhile (--i);\n\t\t}\n\t});"},{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[951,997],"code":"\t\t// Use the defer script hack\n\t\tvar script = document.getElementById(\"__ie_init\");\n\t\t\n\t\t// script does not exist if jQuery is loaded dynamically\n\t\tif ( script ) \n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\tif ( this.readyState != \"complete\" ) return;\n\t\t\t\tjQuery.ready();\n\t\t\t};\n\t\n\t\t// Clear from memory\n\t\tscript = null;\n\t\n\t// If Safari  is used\n\t} else if ( jQuery.browser.safari )\n\t\t// Continually check to see if the document.readyState is valid\n\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {\n\t\tvar global = jQuery.event.global;\n\t\tfor ( var type in global ) {\n\t\t\tvar els = global[type], i = els.length;\n\t\t\tif ( i && type != 'unload' )\n\t\t\t\tdo\n\t\t\t\t\tels[i-1] && jQuery.event.remove(els[i-1], type);\n\t\t\t\twhile (--i);\n\t\t}\n\t});"}]},
{"id":"3f0abc2befbd8fe0c702a4518ec0e5efbb9ee521","instances":[{"path":"./jquery-data/1.1.3.1/src/event/eventTest.js","lines":[1,31],"code":"module(\"event\");\n\ntest(\"bind()\", function() {\n\texpect(12);\n\n\tvar handler = function(event) {\n\t\tok( event.data, \"bind() with data, check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"bind() with data, Check value of passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).click().unbind(\"click\", handler);\n\t\n\tok( !$(\"#firstp\").get(0).$events, \"Event handler unbound when using data.\" );\n\t\n\treset();\n\tvar handler = function(event, data) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t\tok( data, \"Check trigger data\" );\n\t\tok( data.bar == \"foo\", \"Check value of trigger data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).trigger(\"click\", [{bar: \"foo\"}]).unbind(handler);\n\t\n\treset();\n\tvar handler = function(event) {\n\t\tok ( !event.data, \"Check that no data is added to the event object\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\");\n\t\n\t\n\t// events don't work with iframes, see #939\n\tvar tmp = document.createElement('iframe');"},{"path":"./jquery-data/1.1.3/src/event/eventTest.js","lines":[1,31],"code":"module(\"event\");\n\ntest(\"bind()\", function() {\n\texpect(12);\n\n\tvar handler = function(event) {\n\t\tok( event.data, \"bind() with data, check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"bind() with data, Check value of passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).click().unbind(\"click\", handler);\n\t\n\tok( !$(\"#firstp\").get(0).$events, \"Event handler unbound when using data.\" );\n\t\n\treset();\n\tvar handler = function(event, data) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t\tok( data, \"Check trigger data\" );\n\t\tok( data.bar == \"foo\", \"Check value of trigger data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).trigger(\"click\", [{bar: \"foo\"}]).unbind(handler);\n\t\n\treset();\n\tvar handler = function(event) {\n\t\tok ( !event.data, \"Check that no data is added to the event object\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\");\n\t\n\t\n\t// events don't work with iframes, see #939\n\tvar tmp = document.createElement('iframe');"}]},
{"id":"bad3bab70127e26bf08f89ba720cc0a7fe11be28","instances":[{"path":"./jquery-data/1.1.3.1/src/event/eventTest.js","lines":[30,126],"code":"\t// events don't work with iframes, see #939\n\tvar tmp = document.createElement('iframe');\n\tdocument.body.appendChild( tmp );\n\tvar doc = tmp.contentWindow.document;\n\tdoc.open();\n\tdoc.write(\"<html><body><input type='text'/></body></html>\");\n\tdoc.close();\n\t \n\tvar input = doc.getElementsByTagName(\"input\")[0];\n\t \n\t$(input).bind(\"click\",function() {\n\t\tok( true, \"Binding to element inside iframe\" );\n\t});\n\t \n\ttriggerEvent( input, \"click\" );\n\t \n\tdocument.body.removeChild( tmp );\n\t\n\tvar counter = 0;\n\tfunction selectOnChange(event) {\n\t\tequals( event.data, counter++, \"Event.data is not a global event object\" );\n\t};\n\t$(\"select\").each(function(i){\n\t\t$(this).bind('change', i, selectOnChange);\n\t}).trigger('change');\n});\n\ntest(\"click()\", function() {\n\texpect(3);\n\t$('<li><a href=\"#\">Change location</a></li>').prependTo('#firstUL').find('a').bind('click', function() {\n\t    var close = $('spanx', this); // same with $(this).find('span');\n\t    ok( close.length == 0, \"Context element does not exist, length must be zero\" );\n\t    ok( !close[0], \"Context element does not exist, direct access to element must return undefined\" );\n\t    return false;\n\t}).click();\n\t\n\t$(\"#check1\").click(function() {\n\t\tok( true, \"click event handler for checkbox gets fired twice, see #815\" );\n\t}).click();\n});\n\ntest(\"unbind(event)\", function() {\n\texpect(6);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n\t\n\tel.click(function() { return; });\n\tel.unbind('click');\n\tok( !el[0].onclick, \"Handler is removed\" ); // Bug #964\n\n\tel.click(function() { return; });\n\tel.unbind('change',function(){ return; });\n\tfor (var ret in el[0].$events['click']) break;\n\tok( ret, \"Extra handlers weren't accidentally removed.\" );\n\n\tel.unbind('click');\n\tok( !el[0].$events, \"Removed the events expando after all handlers are unbound.\" );\n});\n\ntest(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {\n\texpect(4);\n\tvar count = 0,\n\t\tfn1 = function(e) { count++; },\n\t\tfn2 = function(e) { count--; },\n\t\tpreventDefault = function(e) { e.preventDefault() },\n\t\tlink = $('#mark');\n\tlink.click(preventDefault).click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n\t\n\tvar first = 0;\n\t$(\"#simon1\").one(\"click\", function() {\n\t\tok( true, \"Execute event only once\" );\n\t\t$(this).toggle(function() {\n\t\t\tok( first++ == 0, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t}, function() {\n\t\t\tok( first == 1, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t});\n\t\treturn false;\n\t}).click().click().click();\n});"},{"path":"./jquery-data/1.1.3/src/event/eventTest.js","lines":[30,126],"code":"\t// events don't work with iframes, see #939\n\tvar tmp = document.createElement('iframe');\n\tdocument.body.appendChild( tmp );\n\tvar doc = tmp.contentWindow.document;\n\tdoc.open();\n\tdoc.write(\"<html><body><input type='text'/></body></html>\");\n\tdoc.close();\n\t \n\tvar input = doc.getElementsByTagName(\"input\")[0];\n\t \n\t$(input).bind(\"click\",function() {\n\t\tok( true, \"Binding to element inside iframe\" );\n\t});\n\t \n\ttriggerEvent( input, \"click\" );\n\t \n\tdocument.body.removeChild( tmp );\n\t\n\tvar counter = 0;\n\tfunction selectOnChange(event) {\n\t\tequals( event.data, counter++, \"Event.data is not a global event object\" );\n\t};\n\t$(\"select\").each(function(i){\n\t\t$(this).bind('change', i, selectOnChange);\n\t}).trigger('change');\n});\n\ntest(\"click()\", function() {\n\texpect(3);\n\t$('<li><a href=\"#\">Change location</a></li>').prependTo('#firstUL').find('a').bind('click', function() {\n\t    var close = $('spanx', this); // same with $(this).find('span');\n\t    ok( close.length == 0, \"Context element does not exist, length must be zero\" );\n\t    ok( !close[0], \"Context element does not exist, direct access to element must return undefined\" );\n\t    return false;\n\t}).click();\n\t\n\t$(\"#check1\").click(function() {\n\t\tok( true, \"click event handler for checkbox gets fired twice, see #815\" );\n\t}).click();\n});\n\ntest(\"unbind(event)\", function() {\n\texpect(6);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n\t\n\tel.click(function() { return; });\n\tel.unbind('click');\n\tok( !el[0].onclick, \"Handler is removed\" ); // Bug #964\n\n\tel.click(function() { return; });\n\tel.unbind('change',function(){ return; });\n\tfor (var ret in el[0].$events['click']) break;\n\tok( ret, \"Extra handlers weren't accidentally removed.\" );\n\n\tel.unbind('click');\n\tok( !el[0].$events, \"Removed the events expando after all handlers are unbound.\" );\n});\n\ntest(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {\n\texpect(4);\n\tvar count = 0,\n\t\tfn1 = function(e) { count++; },\n\t\tfn2 = function(e) { count--; },\n\t\tpreventDefault = function(e) { e.preventDefault() },\n\t\tlink = $('#mark');\n\tlink.click(preventDefault).click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n\t\n\tvar first = 0;\n\t$(\"#simon1\").one(\"click\", function() {\n\t\tok( true, \"Execute event only once\" );\n\t\t$(this).toggle(function() {\n\t\t\tok( first++ == 0, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t}, function() {\n\t\t\tok( first == 1, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t});\n\t\treturn false;\n\t}).click().click().click();\n});"}]},
{"id":"5f6191dd4bfece000745da3778607edf6fdadb9d","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[1,318],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Displays each of the set of matched elements if they are hidden.\n\t *\n\t * @example $(\"p\").show()\n\t * @before <p style=\"display: none\">Hello</p>\n\t * @result [ <p style=\"display: block\">Hello</p> ]\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Show all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see hide(String|Number,Function)\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t}).end();\n\t},\n\t\n\t/**\n\t * Hides each of the set of matched elements if they are shown.\n\t *\n\t * @example $(\"p\").hide()\n\t * @before <p>Hello</p>\n\t * @result [ <p style=\"display: none\">Hello</p> ]\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see show(String|Number,Function)\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tif ( this.oldblock == \"none\" )\n\t\t\t\t\tthis.oldblock = \"block\";\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggles each of the set of matched elements. If they are shown,\n\t * toggle makes them hidden. If they are hidden, toggle\n\t * makes them shown."},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[1,318],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Displays each of the set of matched elements if they are hidden.\n\t *\n\t * @example $(\"p\").show()\n\t * @before <p style=\"display: none\">Hello</p>\n\t * @result [ <p style=\"display: block\">Hello</p> ]\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Show all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see hide(String|Number,Function)\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t}).end();\n\t},\n\t\n\t/**\n\t * Hides each of the set of matched elements if they are shown.\n\t *\n\t * @example $(\"p\").hide()\n\t * @before <p>Hello</p>\n\t * @result [ <p style=\"display: none\">Hello</p> ]\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see show(String|Number,Function)\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tif ( this.oldblock == \"none\" )\n\t\t\t\t\tthis.oldblock = \"block\";\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggles each of the set of matched elements. If they are shown,\n\t * toggle makes them hidden. If they are hidden, toggle\n\t * makes them shown."}]},
{"id":"36d99b2d85fad330de9c1b668ab4d4d2966fa477","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[276,416],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {"},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[276,404],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop )\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing || (jQuery.easing.swing ? \"swing\" : \"linear\")\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;"}]},
{"id":"c30d67d044d21622168e947e54e399a137a62cb6","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[438,535],"code":"z.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse {\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\ty.display = \"block\"; // Set display property to block for animation\n\t}\n};\n\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tjQuery.timers.push(function(){\n\t\treturn z.step(from, to);\n\t});\n\n\tif ( jQuery.timers.length == 1 ) {\n\t\tvar timer = setInterval(function(){\n\t\t\tvar timers = jQuery.timers;\n\t\t\t\n\t\t\tfor ( var i = 0; i < timers.length; i++ )\n\t\t\t\tif ( !timers[i]() )\n\t\t\t\t\ttimers.splice(i--, 1);\n\n\t\t\tif ( !timers.length )\n\t\t\t\tclearInterval( timer );\n\t\t}, 13);\n\t}\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, this.cur());\n\n\t// Make sure that we start at a small width/height to avoid any\n\t// flash of content\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n\t\n\t// Start by showing the element\n\tjQuery(elem).show();\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(this.cur(), 0);\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\n\tif (t > options.duration + z.startTime) {\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tif (elem.curAnim) elem.curAnim[ prop ] = true;\n\n\t\tvar done = true;\n\t\tfor ( var i in elem.curAnim )\n\t\t\tif ( elem.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\n\t\tif ( done ) {\n\t\t\tif ( options.display != null ) {"},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[435,532],"code":"z.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse {\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\ty.display = \"block\"; // Set display property to block for animation\n\t}\n};\n\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tjQuery.timers.push(function(){\n\t\treturn z.step(from, to);\n\t});\n\n\tif ( jQuery.timers.length == 1 ) {\n\t\tvar timer = setInterval(function(){\n\t\t\tvar timers = jQuery.timers;\n\t\t\t\n\t\t\tfor ( var i = 0; i < timers.length; i++ )\n\t\t\t\tif ( !timers[i]() )\n\t\t\t\t\ttimers.splice(i--, 1);\n\n\t\t\tif ( !timers.length )\n\t\t\t\tclearInterval( timer );\n\t\t}, 13);\n\t}\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, this.cur());\n\n\t// Make sure that we start at a small width/height to avoid any\n\t// flash of content\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n\t\n\t// Start by showing the element\n\tjQuery(elem).show();\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(this.cur(), 0);\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\n\tif (t > options.duration + z.startTime) {\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tif (elem.curAnim) elem.curAnim[ prop ] = true;\n\n\t\tvar done = true;\n\t\tfor ( var i in elem.curAnim )\n\t\t\tif ( elem.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\n\t\tif ( done ) {\n\t\t\tif ( oldDisplay != null ) {"}]},
{"id":"0537e9a1fe28aaff966502ae1fdbb8a0f0b1b9cb","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fxTest.js","lines":[1,22],"code":"module(\"fx\");\n\ntest(\"animate(Hash, Object, Function)\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 0, function() {\n\t\tok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t\tstart();\n\t});\n});\n\ntest(\"toggle()\", function() {\n\texpect(3);\n\tvar x = $(\"#foo\");\n\tok( x.is(\":visible\") );\n\tx.toggle();\n\tok( x.is(\":hidden\") );\n\tx.toggle();\n\tok( x.is(\":visible\") );\n});"},{"path":"./jquery-data/1.1.3/src/fx/fxTest.js","lines":[1,22],"code":"module(\"fx\");\n\ntest(\"animate(Hash, Object, Function)\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 0, function() {\n\t\tok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t\tstart();\n\t});\n});\n\ntest(\"toggle()\", function() {\n\texpect(3);\n\tvar x = $(\"#foo\");\n\tok( x.is(\":visible\") );\n\tx.toggle();\n\tok( x.is(\":hidden\") );\n\tx.toggle();\n\tok( x.is(\":visible\") );\n});"}]},
{"id":"368b49f828f1d76b20bbf78ac46721d8ae160bd3","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[1,55],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {\n\texpect(3);\n\t\n\tvar main = $(\"#main\");\n\tisSet( $(\"div p\", main).get(), q(\"sndp\", \"en\", \"sap\"), \"Basic selector with jQuery object as context\" );\n\t\n\t// make sure this is handled\n\t$('<p>\\r\\n</p>');\n\tok( true, \"Check for \\\\r and \\\\n in jQuery()\" );\n\t\n\tvar pass = true;\n\ttry {\n\t\tvar f = document.getElementById(\"iframe\").contentDocument;\n\t\tf.open();\n\t\tf.write(\"<html><body></body></html>\");\n\t\tf.close();\n\t\t$(\"<div>Testing</div>\").appendTo(f.body);\n\t} catch(e){\n\t\tpass = false;\n\t}\n\tok( pass, \"$('&lt;tag&gt;') needs optional document parameter to ease cross-frame DOM wrangling, see #968\" );\n});\n\ntest(\"isFunction\", function() {\n\texpect(21);\n\n\t// Make sure that false values return false\n\tok( !jQuery.isFunction(), \"No Value\" );\n\tok( !jQuery.isFunction( null ), \"null Value\" );\n\tok( !jQuery.isFunction( undefined ), \"undefined Value\" );\n\tok( !jQuery.isFunction( \"\" ), \"Empty String Value\" );\n\tok( !jQuery.isFunction( 0 ), \"0 Value\" );\n\n\t// Check built-ins\n\t// Safari uses \"(Internal Function)\"\n\tok( jQuery.isFunction(String), \"String Function\" );\n\tok( jQuery.isFunction(Array), \"Array Function\" );\n\tok( jQuery.isFunction(Object), \"Object Function\" );\n\tok( jQuery.isFunction(Function), \"Function Function\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar mystr = \"function\";"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[1,55],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {\n\texpect(3);\n\t\n\tvar main = $(\"#main\");\n\tisSet( $(\"div p\", main).get(), q(\"sndp\", \"en\", \"sap\"), \"Basic selector with jQuery object as context\" );\n\t\n\t// make sure this is handled\n\t$('<p>\\r\\n</p>');\n\tok( true, \"Check for \\\\r and \\\\n in jQuery()\" );\n\t\n\tvar pass = true;\n\ttry {\n\t\tvar f = document.getElementById(\"iframe\").contentDocument;\n\t\tf.open();\n\t\tf.write(\"<html><body></body></html>\");\n\t\tf.close();\n\t\t$(\"<div>Testing</div>\").appendTo(f.body);\n\t} catch(e){\n\t\tpass = false;\n\t}\n\tok( pass, \"$('&lt;tag&gt;') needs optional document parameter to ease cross-frame DOM wrangling, see #968\" );\n});\n\ntest(\"isFunction\", function() {\n\texpect(21);\n\n\t// Make sure that false values return false\n\tok( !jQuery.isFunction(), \"No Value\" );\n\tok( !jQuery.isFunction( null ), \"null Value\" );\n\tok( !jQuery.isFunction( undefined ), \"undefined Value\" );\n\tok( !jQuery.isFunction( \"\" ), \"Empty String Value\" );\n\tok( !jQuery.isFunction( 0 ), \"0 Value\" );\n\n\t// Check built-ins\n\t// Safari uses \"(Internal Function)\"\n\tok( jQuery.isFunction(String), \"String Function\" );\n\tok( jQuery.isFunction(Array), \"Array Function\" );\n\tok( jQuery.isFunction(Object), \"Object Function\" );\n\tok( jQuery.isFunction(Function), \"Function Function\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar mystr = \"function\";"}]},
{"id":"65d3dd6f6903be1d701cbe0abef9707b0f197887","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[106,891],"code":"\t// Recursive function calls have lengths and array-like properties\n\tfunction callme(callback){\n\t\tfunction fn(response){\n\t\t\tcallback(response);\n\t\t}\n\n\t\tok( jQuery.isFunction(fn), \"Recursive Function Call\" );\n\n    \tfn({ some: \"data\" });\n\t};\n\n\tcallme(function(){\n    \tcallme(function(){});\n\t});\n});\n\ntest(\"length\", function() {\n\texpect(1);\n\tok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\n});\n\ntest(\"size()\", function() {\n\texpect(1);\n\tok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );\n});\n\ntest(\"get()\", function() {\n\texpect(1);\n\tisSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n});\n\ntest(\"get(Number)\", function() {\n\texpect(1);\n\tok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\n});\n\ntest(\"add(String|Element|Array)\", function() {\n\texpect(7);\n\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n\t\n\t$('<a id=\"tAnchor5\"></a>').attr('href', '#5').appendTo('#main'); // using innerHTML in IE causes href attribute to be serialized to the full path\n\tok( $('#tAnchor5').attr('href') == \"#5\", 'Check for non-absolute href (an anchor)' );\n});\n\nif ( location.protocol != \"file:\" ) {\n\ttest(\"attr(String) in XML Files\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get(\"data/dashboard.xml\", function(xml) {\n\t\t\tok( $(\"locations\", xml).attr(\"class\") == \"foo\", \"Check class attribute in XML document\" );"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[106,891],"code":"\t// Recursive function calls have lengths and array-like properties\n\tfunction callme(callback){\n\t\tfunction fn(response){\n\t\t\tcallback(response);\n\t\t}\n\n\t\tok( jQuery.isFunction(fn), \"Recursive Function Call\" );\n\n    \tfn({ some: \"data\" });\n\t};\n\n\tcallme(function(){\n    \tcallme(function(){});\n\t});\n});\n\ntest(\"length\", function() {\n\texpect(1);\n\tok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\n});\n\ntest(\"size()\", function() {\n\texpect(1);\n\tok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );\n});\n\ntest(\"get()\", function() {\n\texpect(1);\n\tisSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n});\n\ntest(\"get(Number)\", function() {\n\texpect(1);\n\tok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\n});\n\ntest(\"add(String|Element|Array)\", function() {\n\texpect(7);\n\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n\t\n\t$('<a id=\"tAnchor5\"></a>').attr('href', '#5').appendTo('#main'); // using innerHTML in IE causes href attribute to be serialized to the full path\n\tok( $('#tAnchor5').attr('href') == \"#5\", 'Check for non-absolute href (an anchor)' );\n});\n\nif ( location.protocol != \"file:\" ) {\n\ttest(\"attr(String) in XML Files\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get(\"data/dashboard.xml\", function(xml) {\n\t\t\tok( $(\"locations\", xml).attr(\"class\") == \"foo\", \"Check class attribute in XML document\" );"}]},
{"id":"6b2e719ea5fa6d2e150f722bf79819273fd58c91","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[15,645],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this || !this.init )\n\t\treturn new jQuery(a,c);\n\t\n\treturn this.init(a,c);\n};\n\n// Map over the $ in case of overwrite\nif ( typeof $ != \"undefined\" )\n\tjQuery._$ = $;\n\t\n// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\n/**\n * This function accepts a string containing a CSS or\n * basic XPath selector which is then used to match a set of elements.\n *\n * The core functionality of jQuery centers around this function.\n * Everything in jQuery is based upon this, or uses this in some way.\n * The most basic use of this function is to pass in an expression\n * (usually consisting of CSS or XPath), which then finds all matching\n * elements.\n *\n * By default, if no context is specified, $() looks for DOM elements within the context of the\n * current HTML document. If you do specify a context, such as a DOM\n * element or jQuery object, the expression will be matched against\n * the contents of that context.\n *\n * See [[DOM/Traversing/Selectors]] for the allowed CSS/XPath syntax for expressions.\n *\n * @example $(\"div > p\")\n * @desc Finds all p elements that are children of a div element.\n * @before <p>one</p> <div><p>two</p></div> <p>three</p>\n * @result [ <p>two</p> ]\n *\n * @example $(\"input:radio\", document.forms[0])\n * @desc Searches for all inputs of type radio within the first form in the document\n *\n * @example $(\"div\", xml.responseXML)\n * @desc This finds all div elements within the specified XML document.\n *\n * @name $\n * @param String expr An expression to search with\n * @param Element|jQuery context (optional) A DOM Element, Document or jQuery to use as context\n * @cat Core\n * @type jQuery\n * @see $(Element)\n * @see $(Element<Array>)\n */\n \n/**\n * Create DOM elements on-the-fly from the provided String of raw HTML.\n *\n * @example $(\"<div><p>Hello</p></div>\").appendTo(\"body\")\n * @desc Creates a div element (and all of its contents) dynamically, \n * and appends it to the body element. Internally, an\n * element is created and its innerHTML property set to the given markup.\n * It is therefore both quite flexible and limited. \n *\n * @name $\n * @param String html A string of HTML to create on the fly.\n * @cat Core\n * @type jQuery\n * @see appendTo(String)\n */\n\n/**\n * Wrap jQuery functionality around a single or multiple DOM Element(s).\n *\n * This function also accepts XML Documents and Window objects\n * as valid arguments (even though they are not DOM Elements).\n *\n * @example $(document.body).css( \"background\", \"black\" );\n * @desc Sets the background color of the page to black.\n *\n * @example $( myForm.elements ).hide()\n * @desc Hides all the input elements within a form\n *\n * @name $\n * @param Element|Array<Element> elems DOM element(s) to be encapsulated by a jQuery object.\n * @cat Core\n * @type jQuery\n */\n\n/**\n * A shorthand for $(document).ready(), allowing you to bind a function\n * to be executed when the DOM document has finished loading. This function\n * behaves just like $(document).ready(), in that it should be used to wrap"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[15,645],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this || !this.init )\n\t\treturn new jQuery(a,c);\n\t\n\treturn this.init(a,c);\n};\n\n// Map over the $ in case of overwrite\nif ( typeof $ != \"undefined\" )\n\tjQuery._$ = $;\n\t\n// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\n/**\n * This function accepts a string containing a CSS or\n * basic XPath selector which is then used to match a set of elements.\n *\n * The core functionality of jQuery centers around this function.\n * Everything in jQuery is based upon this, or uses this in some way.\n * The most basic use of this function is to pass in an expression\n * (usually consisting of CSS or XPath), which then finds all matching\n * elements.\n *\n * By default, if no context is specified, $() looks for DOM elements within the context of the\n * current HTML document. If you do specify a context, such as a DOM\n * element or jQuery object, the expression will be matched against\n * the contents of that context.\n *\n * See [[DOM/Traversing/Selectors]] for the allowed CSS/XPath syntax for expressions.\n *\n * @example $(\"div > p\")\n * @desc Finds all p elements that are children of a div element.\n * @before <p>one</p> <div><p>two</p></div> <p>three</p>\n * @result [ <p>two</p> ]\n *\n * @example $(\"input:radio\", document.forms[0])\n * @desc Searches for all inputs of type radio within the first form in the document\n *\n * @example $(\"div\", xml.responseXML)\n * @desc This finds all div elements within the specified XML document.\n *\n * @name $\n * @param String expr An expression to search with\n * @param Element|jQuery context (optional) A DOM Element, Document or jQuery to use as context\n * @cat Core\n * @type jQuery\n * @see $(Element)\n * @see $(Element<Array>)\n */\n \n/**\n * Create DOM elements on-the-fly from the provided String of raw HTML.\n *\n * @example $(\"<div><p>Hello</p></div>\").appendTo(\"body\")\n * @desc Creates a div element (and all of its contents) dynamically, \n * and appends it to the body element. Internally, an\n * element is created and its innerHTML property set to the given markup.\n * It is therefore both quite flexible and limited. \n *\n * @name $\n * @param String html A string of HTML to create on the fly.\n * @cat Core\n * @type jQuery\n * @see appendTo(String)\n */\n\n/**\n * Wrap jQuery functionality around a single or multiple DOM Element(s).\n *\n * This function also accepts XML Documents and Window objects\n * as valid arguments (even though they are not DOM Elements).\n *\n * @example $(document.body).css( \"background\", \"black\" );\n * @desc Sets the background color of the page to black.\n *\n * @example $( myForm.elements ).hide()\n * @desc Hides all the input elements within a form\n *\n * @name $\n * @param Element|Array<Element> elems DOM element(s) to be encapsulated by a jQuery object.\n * @cat Core\n * @type jQuery\n */\n\n/**\n * A shorthand for $(document).ready(), allowing you to bind a function\n * to be executed when the DOM document has finished loading. This function\n * behaves just like $(document).ready(), in that it should be used to wrap"}]},
{"id":"bf87cffcc154b43a8e4eb8adaae463c867e47452","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[582,865],"code":"/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a, args = arguments;\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\tif ( !a )\n\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;\n\n\t\t// Move the matched element to within the wrap structure\n\t\tb.appendChild( this );\n\t});\n},\n\n/**\n * Append content to the inside of every matched element.\n *\n * This operation is similar to doing an appendChild to all the\n * specified elements, adding them into the document.\n *\n * @example $(\"p\").append(\"<b>Hello</b>\");\n * @before <p>I would like to say: </p>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends some HTML to all paragraphs.\n *\n * @example $(\"p\").append( $(\"#foo\")[0] );\n * @before <p>I would like to say: </p><b id=\"foo\">Hello</b>\n * @result <p>I would like to say: <b id=\"foo\">Hello</b></p>\n * @desc Appends an Element to all paragraphs.\n *\n * @example $(\"p\").append( $(\"b\") );\n * @before <p>I would like to say: </p><b>Hello</b>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\n *\n * @name append\n * @type jQuery\n * @param <Content> content Content to append to the target\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n * @see before(<Content>)\n * @see after(<Content>)\n */\nappend: function() {"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[582,865],"code":"/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a, args = arguments;\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\tif ( !a )\n\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;\n\n\t\t// Move the matched element to within the wrap structure\n\t\tb.appendChild( this );\n\t});\n},\n\n/**\n * Append content to the inside of every matched element.\n *\n * This operation is similar to doing an appendChild to all the\n * specified elements, adding them into the document.\n *\n * @example $(\"p\").append(\"<b>Hello</b>\");\n * @before <p>I would like to say: </p>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends some HTML to all paragraphs.\n *\n * @example $(\"p\").append( $(\"#foo\")[0] );\n * @before <p>I would like to say: </p><b id=\"foo\">Hello</b>\n * @result <p>I would like to say: <b id=\"foo\">Hello</b></p>\n * @desc Appends an Element to all paragraphs.\n *\n * @example $(\"p\").append( $(\"b\") );\n * @before <p>I would like to say: </p><b>Hello</b>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\n *\n * @name append\n * @type jQuery\n * @param <Content> content Content to append to the target\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n * @see before(<Content>)\n * @see after(<Content>)\n */\nappend: function() {"}]},
{"id":"b513ec8e584cf5ebc27747f657a6443856582073","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[838,1520],"code":"\t/**\n\t * Clone matched DOM Elements and select the clones. \n\t *\n\t * This is useful for moving copies of the elements to another\n\t * location in the DOM.\n\t *\n\t * @example $(\"b\").clone().prependTo(\"p\");\n\t * @before <b>Hello</b><p>, how are you?</p>\n\t * @result <b>Hello</b><p><b>Hello</b>, how are you?</p>\n\t * @desc Clones all b elements (and selects the clones) and prepends them to all paragraphs.\n\t *\n\t * @name clone\n\t * @type jQuery\n\t * @param Boolean deep (Optional) Set to false if you don't want to clone all descendant nodes, in addition to the element itself.\n\t * @cat DOM/Manipulation\n\t */\n\tclone: function(deep) {\n\t\t// Need to remove events on the element and its descendants\n\t\tvar $this = this.add(this.find(\"*\"));\n\t\t$this.each(function() {\n\t\t\tthis._$events = {};\n\t\t\tfor (var type in this.$events)\n\t\t\t\tthis._$events[type] = jQuery.extend({},this.$events[type]);\n\t\t}).unbind();\n\n\t\t// Do the clone\n\t\tvar r = this.pushStack( jQuery.map( this, function(a){\n\t\t\treturn a.cloneNode( deep != undefined ? deep : true );\n\t\t}) );\n\n\t\t// Add the events back to the original and its descendants\n\t\t$this.each(function() {\n\t\t\tvar events = this._$events;\n\t\t\tfor (var type in events)\n\t\t\t\tfor (var handler in events[type])\n\t\t\t\t\tjQuery.event.add(this, type, events[type][handler], events[type][handler].data);\n\t\t\tthis._$events = null;\n\t\t});\n\n\t\t// Return the cloned set\n\t\treturn r;\n\t},\n\n\t/**\n\t * Removes all elements from the set of matched elements that do not\n\t * match the specified expression(s). This method is used to narrow down\n\t * the results of a search.\n\t *\n\t * Provide a comma-separated list of expressions to apply multiple filters at once.\n\t *\n\t * @example $(\"p\").filter(\".selected\")\n\t * @before <p class=\"selected\">Hello</p><p>How are you?</p>\n\t * @result [ <p class=\"selected\">Hello</p> ]\n\t * @desc Selects all paragraphs and removes those without a class \"selected\".\n\t *\n\t * @example $(\"p\").filter(\".selected, :first\")\n\t * @before <p>Hello</p><p>Hello Again</p><p class=\"selected\">And Again</p>\n\t * @result [ <p>Hello</p>, <p class=\"selected\">And Again</p> ]\n\t * @desc Selects all paragraphs and removes those without class \"selected\" and being the first one.\n\t *\n\t * @name filter\n\t * @type jQuery\n\t * @param String expression Expression(s) to search with.\n\t * @cat DOM/Traversing\n\t */\n\t \n\t/**\n\t * Removes all elements from the set of matched elements that do not\n\t * pass the specified filter. This method is used to narrow down\n\t * the results of a search.\n\t *\n\t * @example $(\"p\").filter(function(index) {\n\t *   return $(\"ol\", this).length == 0;\n\t * })\n\t * @before <p><ol><li>Hello</li></ol></p><p>How are you?</p>\n\t * @result [ <p>How are you?</p> ]\n\t * @desc Remove all elements that have a child ol element\n\t *\n\t * @name filter\n\t * @type jQuery\n\t * @param Function filter A function to use for filtering\n\t * @cat DOM/Traversing\n\t */\n\tfilter: function(t) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.isFunction( t ) &&\n\t\t\tjQuery.grep(this, function(el, index){\n\t\t\t\treturn t.apply(el, [index])\n\t\t\t}) ||\n\n\t\t\tjQuery.multiFilter(t,this) );\n\t},\n\n\t/**\n\t * Removes the specified Element from the set of matched elements. This\n\t * method is used to remove a single Element from a jQuery object.\n\t *\n\t * @example $(\"p\").not( $(\"#selected\")[0] )\n\t * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n\t * @result [ <p>Hello</p> ]"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[838,1520],"code":"\t/**\n\t * Clone matched DOM Elements and select the clones. \n\t *\n\t * This is useful for moving copies of the elements to another\n\t * location in the DOM.\n\t *\n\t * @example $(\"b\").clone().prependTo(\"p\");\n\t * @before <b>Hello</b><p>, how are you?</p>\n\t * @result <b>Hello</b><p><b>Hello</b>, how are you?</p>\n\t * @desc Clones all b elements (and selects the clones) and prepends them to all paragraphs.\n\t *\n\t * @name clone\n\t * @type jQuery\n\t * @param Boolean deep (Optional) Set to false if you don't want to clone all descendant nodes, in addition to the element itself.\n\t * @cat DOM/Manipulation\n\t */\n\tclone: function(deep) {\n\t\t// Need to remove events on the element and its descendants\n\t\tvar $this = this.add(this.find(\"*\"));\n\t\t$this.each(function() {\n\t\t\tthis._$events = {};\n\t\t\tfor (var type in this.$events)\n\t\t\t\tthis._$events[type] = jQuery.extend({},this.$events[type]);\n\t\t}).unbind();\n\n\t\t// Do the clone\n\t\tvar r = this.pushStack( jQuery.map( this, function(a){\n\t\t\treturn a.cloneNode( deep != undefined ? deep : true );\n\t\t}) );\n\n\t\t// Add the events back to the original and its descendants\n\t\t$this.each(function() {\n\t\t\tvar events = this._$events;\n\t\t\tfor (var type in events)\n\t\t\t\tfor (var handler in events[type])\n\t\t\t\t\tjQuery.event.add(this, type, events[type][handler], events[type][handler].data);\n\t\t\tthis._$events = null;\n\t\t});\n\n\t\t// Return the cloned set\n\t\treturn r;\n\t},\n\n\t/**\n\t * Removes all elements from the set of matched elements that do not\n\t * match the specified expression(s). This method is used to narrow down\n\t * the results of a search.\n\t *\n\t * Provide a comma-separated list of expressions to apply multiple filters at once.\n\t *\n\t * @example $(\"p\").filter(\".selected\")\n\t * @before <p class=\"selected\">Hello</p><p>How are you?</p>\n\t * @result [ <p class=\"selected\">Hello</p> ]\n\t * @desc Selects all paragraphs and removes those without a class \"selected\".\n\t *\n\t * @example $(\"p\").filter(\".selected, :first\")\n\t * @before <p>Hello</p><p>Hello Again</p><p class=\"selected\">And Again</p>\n\t * @result [ <p>Hello</p>, <p class=\"selected\">And Again</p> ]\n\t * @desc Selects all paragraphs and removes those without class \"selected\" and being the first one.\n\t *\n\t * @name filter\n\t * @type jQuery\n\t * @param String expression Expression(s) to search with.\n\t * @cat DOM/Traversing\n\t */\n\t \n\t/**\n\t * Removes all elements from the set of matched elements that do not\n\t * pass the specified filter. This method is used to narrow down\n\t * the results of a search.\n\t *\n\t * @example $(\"p\").filter(function(index) {\n\t *   return $(\"ol\", this).length == 0;\n\t * })\n\t * @before <p><ol><li>Hello</li></ol></p><p>How are you?</p>\n\t * @result [ <p>How are you?</p> ]\n\t * @desc Remove all elements that have a child ol element\n\t *\n\t * @name filter\n\t * @type jQuery\n\t * @param Function filter A function to use for filtering\n\t * @cat DOM/Traversing\n\t */\n\tfilter: function(t) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.isFunction( t ) &&\n\t\t\tjQuery.grep(this, function(el, index){\n\t\t\t\treturn t.apply(el, [index])\n\t\t\t}) ||\n\n\t\t\tjQuery.multiFilter(t,this) );\n\t},\n\n\t/**\n\t * Removes the specified Element from the set of matched elements. This\n\t * method is used to remove a single Element from a jQuery object.\n\t *\n\t * @example $(\"p\").not( $(\"#selected\")[0] )\n\t * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n\t * @result [ <p>Hello</p> ]"}]},
{"id":"a22785b4a1e8dffb1f202ca8ec15273b9b4a92f4","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1518,1570],"code":"\t\t\t// Move to the right depth\n\t\t\twhile ( wrap[0]-- )\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\n\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\tif ( jQuery.browser.msie ) {\n\t\t\t\t\n\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\t\t\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\t\t\t\n\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\t\t\t\ttb = div.childNodes;\n\n\t\t\t\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\t\t\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\t\t\t\ttb[n].parentNode.removeChild(tb[n]);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\targ = jQuery.makeArray( div.childNodes );\n\t\t}\n\n\t\tif ( 0 === arg.length && (!jQuery.nodeName(arg, \"form\") && !jQuery.nodeName(arg, \"select\")) )\n\t\t\treturn;\n\n\t\tif ( arg[0] == undefined || jQuery.nodeName(arg, \"form\") || arg.options )\n\t\t\tr.push( arg );\n\t\telse\n\t\t\tr = jQuery.merge( r, arg );\n\n\t});\n\n\treturn r;\n},\n\nattr: function(elem, name, value){\n\tvar fix = jQuery.isXMLDoc(elem) ? {} : jQuery.props;\n\t\n\t// Certain attributes only work when accessed via the old DOM 0 way\n\tif ( fix[name] ) {\n\t\tif ( value != undefined ) elem[fix[name]] = value;\n\t\treturn elem[fix[name]];\n\n\t} else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\t\treturn elem.getAttributeNode(name).nodeValue;\n\n\t// IE elem.getAttribute passes even for style\n\telse if ( elem.tagName ) {\n\t\t\n\n\t\tif ( value != undefined ) elem.setAttribute( name, value );"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1518,1569],"code":"\t\t\t// Move to the right depth\n\t\t\twhile ( wrap[0]-- )\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\n\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\tif ( jQuery.browser.msie ) {\n\t\t\t\t\n\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\t\t\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\t\t\t\n\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\t\t\t\ttb = div.childNodes;\n\n\t\t\t\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\t\t\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\t\t\t\ttb[n].parentNode.removeChild(tb[n]);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\targ = jQuery.makeArray( div.childNodes );\n\t\t}\n\n\t\tif ( 0 === arg.length && (!jQuery.nodeName(arg, \"form\") && !jQuery.nodeName(arg, \"select\")) )\n\t\t\treturn;\n\n\t\tif ( arg[0] == undefined || jQuery.nodeName(arg, \"form\") || arg.options )\n\t\t\tr.push( arg );\n\t\telse\n\t\t\tr = jQuery.merge( r, arg );\n\n\t});\n\n\treturn r;\n},\n\nattr: function(elem, name, value){\n\tvar fix = jQuery.isXMLDoc(elem) ? {} : jQuery.props;\n\t\n\t// Certain attributes only work when accessed via the old DOM 0 way\n\tif ( fix[name] ) {\n\t\tif ( value != undefined ) elem[fix[name]] = value;\n\t\treturn elem[fix[name]];\n\n\t} else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\t\treturn elem.getAttributeNode(name).nodeValue;\n\n\t// IE elem.getAttribute passes even for style\n\telse if ( elem.tagName ) {\n\t\t// IE actually uses filters for opacity ... elem is actually elem.style\n\t\tif ( name == \"opacity\" && jQuery.browser.msie ) {"}]},
{"id":"65d42b6e91498e660af3d61f8029ca884eab3828","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1573,1590],"code":"\treturn elem.getAttribute( name );\n\n// elem is actually elem.style ... set the style\n} else {\n\t// IE actually uses filters for opacity\n\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\tif ( value != undefined ) {\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\telem.zoom = 1; \n\t\n\t\t\t// Set the alpha filter to set the opacity\n\t\t\telem.filter = (elem.filter || \"\").replace(/alpha\\([^)]*\\)/,\"\") +\n\t\t\t\t(parseFloat(value).toString() == \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\");\n\t\t}\n\t\n\t\treturn elem.filter ? \n\t\t\t(parseFloat( elem.filter.match(/opacity=([^)]*)/)[1] ) / 100).toString() : \"\";"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1567,1581],"code":"else if ( elem.tagName ) {\n\t// IE actually uses filters for opacity ... elem is actually elem.style\n\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\tif ( value != undefined ) {\n\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t// Force it by setting the zoom level\n\t\t\telem.zoom = 1; \n\t\n\t\t\t// Set the alpha filter to set the opacity\n\t\t\telem.filter = (elem.filter || \"\").replace(/alpha\\([^)]*\\)/,\"\") +\n\t\t\t\t(parseFloat(value).toString() == \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\");\n\t\t}\n\t\n\t\treturn elem.filter ? \n\t\t\t(parseFloat( elem.filter.match(/opacity=([^)]*)/)[1] ) / 100).toString() : \"\";"}]},
{"id":"c4e3b2ac7ad7c2310e14cd636d6842b9b58250b4","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1592,1814],"code":"\t\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\t\tif ( value != undefined ) elem[name] = value;\n\t\t\treturn elem[name];\n\t\t}\n\t},\n\t\n\t/**\n\t * Remove the whitespace from the beginning and end of a string.\n\t *\n\t * @example $.trim(\"  hello, how are you?  \");\n\t * @result \"hello, how are you?\"\n\t *\n\t * @name $.trim\n\t * @type String\n\t * @param String str The string to trim.\n\t * @cat JavaScript\n\t */\n\ttrim: function(t){\n\t\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n\t},\n\n\tmakeArray: function( a ) {\n\t\tvar r = [];\n\n\t\t// Need to use typeof to fight Safari childNodes crashes\n\t\tif ( typeof a != \"array\" )\n\t\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\t\tr.push( a[i] );\n\t\telse\n\t\t\tr = a.slice( 0 );\n\n\t\treturn r;\n\t},\n\n\tinArray: function( b, a ) {\n\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\tif ( a[i] == b )\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Merge two arrays together by concatenating them.\n\t *\n\t * @example $.merge( [0,1,2], [2,3,4] )\n\t * @result [0,1,2,2,3,4]\n\t * @desc Merges two arrays.\n\t *\n\t * @name $.merge\n\t * @type Array\n\t * @param Array first The first array to merge, the elements of second are added.\n\t * @param Array second The second array to append to the first, unaltered.\n\t * @cat JavaScript\n\t */\n\tmerge: function(first, second) {\n\t\t// We have to loop this way because IE & Opera overwrite the length\n\t\t// expando of getElementsByTagName\n\t\tfor ( var i = 0; second[i]; i++ )\n\t\t\tfirst.push(second[i]);\n\t\treturn first;\n\t},\n\n\t/**\n\t * Reduce an array (of jQuery objects only) to its unique elements.\n\t *\n\t * @example $.unique( [x1, x2, x3, x2, x3] )\n\t * @result [x1, x2, x3]\n\t * @desc Reduces the arrays of jQuery objects to unique elements by removing the duplicates of x2 and x3\n\t *\n\t * @name $.unique\n\t * @type Array\n\t * @param Array array The array to reduce to its unique jQuery objects.\n\t * @cat JavaScript\n\t */\n\tunique: function(first) {\n\t\tvar r = [], num = jQuery.mergeNum++;\n\n\t\tfor ( var i = 0, fl = first.length; i < fl; i++ )\n\t\t\tif ( num != first[i].mergeNum ) {\n\t\t\t\tfirst[i].mergeNum = num;\n\t\t\t\tr.push(first[i]);\n\t\t\t}\n\n\t\treturn r;\n\t},\n\n\tmergeNum: 0,\n\n\t/**\n\t * Filter items out of an array, by using a filter function.\n\t *\n\t * The specified function will be passed two arguments: The\n\t * current array item and the index of the item in the array. The\n\t * function must return 'true' to keep the item in the array, \n\t * false to remove it.\n\t *\n\t * @example $.grep( [0,1,2], function(i){\n\t *   return i > 0;\n\t * });\n\t * @result [1, 2]"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1591,1813],"code":"\t\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\t\tif ( value != undefined ) elem[name] = value;\n\t\t\treturn elem[name];\n\t\t}\n\t},\n\t\n\t/**\n\t * Remove the whitespace from the beginning and end of a string.\n\t *\n\t * @example $.trim(\"  hello, how are you?  \");\n\t * @result \"hello, how are you?\"\n\t *\n\t * @name $.trim\n\t * @type String\n\t * @param String str The string to trim.\n\t * @cat JavaScript\n\t */\n\ttrim: function(t){\n\t\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n\t},\n\n\tmakeArray: function( a ) {\n\t\tvar r = [];\n\n\t\t// Need to use typeof to fight Safari childNodes crashes\n\t\tif ( typeof a != \"array\" )\n\t\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\t\tr.push( a[i] );\n\t\telse\n\t\t\tr = a.slice( 0 );\n\n\t\treturn r;\n\t},\n\n\tinArray: function( b, a ) {\n\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\tif ( a[i] == b )\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Merge two arrays together by concatenating them.\n\t *\n\t * @example $.merge( [0,1,2], [2,3,4] )\n\t * @result [0,1,2,2,3,4]\n\t * @desc Merges two arrays.\n\t *\n\t * @name $.merge\n\t * @type Array\n\t * @param Array first The first array to merge, the elements of second are added.\n\t * @param Array second The second array to append to the first, unaltered.\n\t * @cat JavaScript\n\t */\n\tmerge: function(first, second) {\n\t\t// We have to loop this way because IE & Opera overwrite the length\n\t\t// expando of getElementsByTagName\n\t\tfor ( var i = 0; second[i]; i++ )\n\t\t\tfirst.push(second[i]);\n\t\treturn first;\n\t},\n\n\t/**\n\t * Reduce an array (of jQuery objects only) to its unique elements.\n\t *\n\t * @example $.unique( [x1, x2, x3, x2, x3] )\n\t * @result [x1, x2, x3]\n\t * @desc Reduces the arrays of jQuery objects to unique elements by removing the duplicates of x2 and x3\n\t *\n\t * @name $.unique\n\t * @type Array\n\t * @param Array array The array to reduce to its unique jQuery objects.\n\t * @cat JavaScript\n\t */\n\tunique: function(first) {\n\t\tvar r = [], num = jQuery.mergeNum++;\n\n\t\tfor ( var i = 0, fl = first.length; i < fl; i++ )\n\t\t\tif ( num != first[i].mergeNum ) {\n\t\t\t\tfirst[i].mergeNum = num;\n\t\t\t\tr.push(first[i]);\n\t\t\t}\n\n\t\treturn r;\n\t},\n\n\tmergeNum: 0,\n\n\t/**\n\t * Filter items out of an array, by using a filter function.\n\t *\n\t * The specified function will be passed two arguments: The\n\t * current array item and the index of the item in the array. The\n\t * function must return 'true' to keep the item in the array, \n\t * false to remove it.\n\t *\n\t * @example $.grep( [0,1,2], function(i){\n\t *   return i > 0;\n\t * });\n\t * @result [1, 2]"}]},
{"id":"8891ec41f231d3102f4ebabace6f3d9456321834","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1814,2339],"code":"\t\tversion: (b.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/) || [])[1],\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n\n\tjQuery.styleFloat = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\n\tjQuery.props = {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": jQuery.styleFloat,\n\t\tcssFloat: jQuery.styleFloat,\n\t\tstyleFloat: jQuery.styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\",\n\t\tmaxlength: \"maxLength\"\n\t};\n};\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the"},{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1813,2338],"code":"\t\tversion: b.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/)[1],\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n\n\tjQuery.styleFloat = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\n\tjQuery.props = {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": jQuery.styleFloat,\n\t\tcssFloat: jQuery.styleFloat,\n\t\tstyleFloat: jQuery.styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\",\n\t\tmaxlength: \"maxLength\"\n\t};\n};\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the"}]},
{"id":"66e46a82305dc5e6d3502721e1cd5540bdb70089","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[1,66],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"!jQuery.nth(a.parentNode.lastChild,2,'previousSibling')\",\n\n\t\t\t// Parent Checks\n\t\t\tparent: \"a.firstChild\",\n\t\t\tempty: \"!a.firstChild\",\n\n\t\t\t// Text Check\n\t\t\tcontains: \"(a.textContent||a.innerText||'').indexOf(m[3])>=0\",\n\n\t\t\t// Visibility\n\t\t\tvisible: '\"hidden\"!=a.type&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\t\t\thidden: '\"hidden\"==a.type||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t\t\t// Form attributes\n\t\t\tenabled: \"!a.disabled\",\n\t\t\tdisabled: \"a.disabled\",\n\t\t\tchecked: \"a.checked\",\n\t\t\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t\t\t// Form elements\n\t\t\ttext: \"'text'==a.type\",\n\t\t\tradio: \"'radio'==a.type\",\n\t\t\tcheckbox: \"'checkbox'==a.type\",\n\t\t\tfile: \"'file'==a.type\",\n\t\t\tpassword: \"'password'==a.type\",\n\t\t\tsubmit: \"'submit'==a.type\",\n\t\t\timage: \"'image'==a.type\",\n\t\t\treset: \"'reset'==a.type\",\n\t\t\tbutton: '\"button\"==a.type||jQuery.nodeName(a,\"button\")',\n\t\t\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n\t\t},\n\t\t\"[\": \"jQuery.find(m[2],a).length\"\n\t},\n\t\n\t// The regular expressions that power the parsing engine\n\tparse: [\n\t\t// Match: [@value='test'], [@foo]\n\t\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t\t// Match: [div], [div p]\n\t\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t\t// Match: :contains('foo')\n\t\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t\t// Match: :even, :last-chlid, #id, .class\n\t\tnew RegExp(\"^([:.#]*)(\" + \n\t\t\t( jQuery.chars = jQuery.browser.safari && jQuery.browser.version < \"3.0.0\" ? \"\\\\w\" : \"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\" ) + \"+)\")"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[1,66],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"!jQuery.nth(a.parentNode.lastChild,2,'previousSibling')\",\n\n\t\t\t// Parent Checks\n\t\t\tparent: \"a.firstChild\",\n\t\t\tempty: \"!a.firstChild\",\n\n\t\t\t// Text Check\n\t\t\tcontains: \"(a.textContent||a.innerText||'').indexOf(m[3])>=0\",\n\n\t\t\t// Visibility\n\t\t\tvisible: '\"hidden\"!=a.type&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\t\t\thidden: '\"hidden\"==a.type||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t\t\t// Form attributes\n\t\t\tenabled: \"!a.disabled\",\n\t\t\tdisabled: \"a.disabled\",\n\t\t\tchecked: \"a.checked\",\n\t\t\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t\t\t// Form elements\n\t\t\ttext: \"'text'==a.type\",\n\t\t\tradio: \"'radio'==a.type\",\n\t\t\tcheckbox: \"'checkbox'==a.type\",\n\t\t\tfile: \"'file'==a.type\",\n\t\t\tpassword: \"'password'==a.type\",\n\t\t\tsubmit: \"'submit'==a.type\",\n\t\t\timage: \"'image'==a.type\",\n\t\t\treset: \"'reset'==a.type\",\n\t\t\tbutton: '\"button\"==a.type||jQuery.nodeName(a,\"button\")',\n\t\t\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n\t\t},\n\t\t\"[\": \"jQuery.find(m[2],a).length\"\n\t},\n\t\n\t// The regular expressions that power the parsing engine\n\tparse: [\n\t\t// Match: [@value='test'], [@foo]\n\t\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t\t// Match: [div], [div p]\n\t\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t\t// Match: :contains('foo')\n\t\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t\t// Match: :even, :last-chlid, #id, .class\n\t\tnew RegExp(\"^([:.#]*)(\" + \n\t\t\t( jQuery.chars = \"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\" ) + \"+)\")"}]},
{"id":"b9569522fa8c96646fd307f6702eaf64655a7ecc","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[53,128],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + \n\t\t( jQuery.chars = jQuery.browser.safari && jQuery.browser.version < \"3.0.0\" ? \"\\\\w\" : \"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\" ) + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[53,128],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + \n\t\t( jQuery.chars = \"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\" ) + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");"}]},
{"id":"ed0146c3c5062760801c91037e8a1ca486069a6d","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[126,137],"code":"// An attempt at speeding up child selectors that\n// point to a specific element tag\nvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");\nvar m = re.exec(t);\n\nif ( m ) {\n\tvar nodeName = m[1].toUpperCase();\n\n\t// Perform our own iteration and filter\n\tfor ( var i = 0; ret[i]; i++ )\n\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[126,137],"code":"// An attempt at speeding up child selectors that\n// point to a specific element tag\nvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");\nvar m = re.exec(t);\n\nif ( m ) {\n\tvar nodeName = m[1].toUpperCase();\n\n\t// Perform our own iteration and filter\n\tfor ( var i = 0; ret[i]; i++ )\n\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName == nodeName.toUpperCase()) )"}]},
{"id":"9f52146a68a1549c71b0cf7f6f00921d49761b13","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[137,160],"code":"\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )\n\t\t\t\tr.push( c );\n\n\tret = r;\n\tt = t.replace( re, \"\" );\n\tif ( t.indexOf(\" \") == 0 ) continue;\n\tfoundToken = true;\n} else {\n\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*([a-z]*)/i;\n\n\tif ( (m = re.exec(t)) != null ) {\n\t\tr = [];\n\n\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\tm = m[1];\n\n\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName.toUpperCase() ) {"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[137,160],"code":"\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName == nodeName.toUpperCase()) )\n\t\t\t\tr.push( c );\n\n\tret = r;\n\tt = t.replace( re, \"\" );\n\tif ( t.indexOf(\" \") == 0 ) continue;\n\tfoundToken = true;\n} else {\n\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*([a-z]*)/i;\n\n\tif ( (m = re.exec(t)) != null ) {\n\t\tr = [];\n\n\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\tm = m[1];\n\n\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!nodeName || n.nodeName == nodeName.toUpperCase() ) {"}]},
{"id":"af7324f7a14b9b797f1a826d295010c5e9fe3054","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[82,343],"code":"/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\tvar nodeName = m[1].toUpperCase();\n\n\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*([a-z]*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName.toUpperCase() ) {\n\t\t\t\t\t\t\t\t\tif ( m == \"~\" ) n.mergeNum = mergeNum;\n\t\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tr.push( ret[j].parentNode );\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[82,343],"code":"/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\tvar nodeName = m[1].toUpperCase();\n\n\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName == nodeName.toUpperCase()) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*([a-z]*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!nodeName || n.nodeName == nodeName.toUpperCase() ) {\n\t\t\t\t\t\t\t\t\tif ( m == \"~\" ) n.mergeNum = mergeNum;\n\t\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tr.push( ret[j].parentNode );\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions"}]},
{"id":"53faca0b14e22e1ba5f227756bbdb35d874570f5","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[306,470],"code":"\t// Look for common filter expressions\n\twhile ( t  && t != last ) {\n\t\tlast = t;\n\n\t\tvar p = jQuery.parse, m;\n\n\t\tfor ( var i = 0; p[i]; i++ ) {\n\t\t\tm = p[i].exec( t );\n\n\t\t\tif ( m ) {\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.substring( m[0].length );\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( !m )\n\t\t\tbreak;\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3], r, true).r;\n\n\t\t// We can get a big speed boost by filtering by class here\n\t\telse if ( m[1] == \".\" )\n\t\t\tr = jQuery.classFilter(r, m[2], not);\n\n\t\telse if ( m[1] == \"@\" ) {\n\t\t\tvar tmp = [], type = m[3];\n\t\t\t\n\t\t\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\t\t\tvar a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\n\t\t\t\t\n\t\t\t\tif ( z == null || /href|src/.test(m[2]) )\n\t\t\t\t\tz = jQuery.attr(a,m[2]) || '';\n\n\t\t\t\tif ( (type == \"\" && !!z ||\n\t\t\t\t\t type == \"=\" && z == m[5] ||\n\t\t\t\t\t type == \"!=\" && z != m[5] ||\n\t\t\t\t\t type == \"^=\" && z && !z.indexOf(m[5]) ||\n\t\t\t\t\t type == \"$=\" && z.substr(z.length - m[5].length) == m[5] ||\n\t\t\t\t\t (type == \"*=\" || type == \"~=\") && z.indexOf(m[5]) >= 0) ^ not )\n\t\t\t\t\t\ttmp.push( a );\n\t\t\t}\n\t\t\t\n\t\t\tr = tmp;\n\n\t\t// We can get a speed boost by handling nth-child here\n\t\t} else if ( m[1] == \":\" && m[2] == \"nth-child\" ) {\n\t\t\tvar num = jQuery.mergeNum++, tmp = [],\n\t\t\t\ttest = /(\\d*)n\\+?(\\d*)/.exec(\n\t\t\t\t\tm[3] == \"even\" && \"2n\" || m[3] == \"odd\" && \"2n+1\" ||\n\t\t\t\t\t!/\\D/.test(m[3]) && \"n+\" + m[3] || m[3]),\n\t\t\t\tfirst = (test[1] || 1) - 0, last = test[2] - 0;\n\n\t\t\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\t\t\tvar node = r[i], parentNode = node.parentNode;\n\n\t\t\t\tif ( num != parentNode.mergeNum ) {\n\t\t\t\t\tvar c = 1;\n\n\t\t\t\t\tfor ( var n = parentNode.firstChild; n; n = n.nextSibling )\n\t\t\t\t\t\tif ( n.nodeType == 1 )\n\t\t\t\t\t\t\tn.nodeIndex = c++;\n\n\t\t\t\t\tparentNode.mergeNum = num;\n\t\t\t\t}\n\n\t\t\t\tvar add = false;\n\n\t\t\t\tif ( first == 1 ) {\n\t\t\t\t\tif ( last == 0 || node.nodeIndex == last )\n\t\t\t\t\t\tadd = true;\n\t\t\t\t} else if ( (node.nodeIndex + last) % first == 0 )\n\t\t\t\t\tadd = true;\n\n\t\t\t\tif ( add ^ not )\n\t\t\t\t\ttmp.push( node );\n\t\t\t}\n\n\t\t\tr = tmp;\n\n\t\t// Otherwise, find the expression to execute\n\t\t} else {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( typeof f != \"string\" )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){return \" + f + \"}\");\n\n\t\t\t// Execute it against the current filter\n\t\t\tr = jQuery.grep( r, f, not );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)"},{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[306,470],"code":"\t// Look for common filter expressions\n\twhile ( t  && t != last ) {\n\t\tlast = t;\n\n\t\tvar p = jQuery.parse, m;\n\n\t\tfor ( var i = 0; p[i]; i++ ) {\n\t\t\tm = p[i].exec( t );\n\n\t\t\tif ( m ) {\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.substring( m[0].length );\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif ( !m )\n\t\t\tbreak;\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3], r, true).r;\n\n\t\t// We can get a big speed boost by filtering by class here\n\t\telse if ( m[1] == \".\" )\n\t\t\tr = jQuery.classFilter(r, m[2], not);\n\n\t\telse if ( m[1] == \"@\" ) {\n\t\t\tvar tmp = [], type = m[3];\n\t\t\t\n\t\t\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\t\t\tvar a = r[i], z = a[ jQuery.props[m[2]] || m[2] ];\n\t\t\t\t\n\t\t\t\tif ( z == null || /href|src/.test(m[2]) )\n\t\t\t\t\tz = jQuery.attr(a,m[2]);\n\n\t\t\t\tif ( (type == \"\" && !!z ||\n\t\t\t\t\t type == \"=\" && z == m[5] ||\n\t\t\t\t\t type == \"!=\" && z != m[5] ||\n\t\t\t\t\t type == \"^=\" && z && !z.indexOf(m[5]) ||\n\t\t\t\t\t type == \"$=\" && z.substr(z.length - m[5].length) == m[5] ||\n\t\t\t\t\t (type == \"*=\" || type == \"~=\") && z.indexOf(m[5]) >= 0) ^ not )\n\t\t\t\t\t\ttmp.push( a );\n\t\t\t}\n\t\t\t\n\t\t\tr = tmp;\n\n\t\t// We can get a speed boost by handling nth-child here\n\t\t} else if ( m[1] == \":\" && m[2] == \"nth-child\" ) {\n\t\t\tvar num = jQuery.mergeNum++, tmp = [],\n\t\t\t\ttest = /(\\d*)n\\+?(\\d*)/.exec(\n\t\t\t\t\tm[3] == \"even\" && \"2n\" || m[3] == \"odd\" && \"2n+1\" ||\n\t\t\t\t\t!/\\D/.test(m[3]) && \"n+\" + m[3] || m[3]),\n\t\t\t\tfirst = (test[1] || 1) - 0, last = test[2] - 0;\n\n\t\t\tfor ( var i = 0, rl = r.length; i < rl; i++ ) {\n\t\t\t\tvar node = r[i], parentNode = node.parentNode;\n\n\t\t\t\tif ( num != parentNode.mergeNum ) {\n\t\t\t\t\tvar c = 1;\n\n\t\t\t\t\tfor ( var n = parentNode.firstChild; n; n = n.nextSibling )\n\t\t\t\t\t\tif ( n.nodeType == 1 )\n\t\t\t\t\t\t\tn.nodeIndex = c++;\n\n\t\t\t\t\tparentNode.mergeNum = num;\n\t\t\t\t}\n\n\t\t\t\tvar add = false;\n\n\t\t\t\tif ( first == 1 ) {\n\t\t\t\t\tif ( last == 0 || node.nodeIndex == last )\n\t\t\t\t\t\tadd = true;\n\t\t\t\t} else if ( (node.nodeIndex + last) % first == 0 )\n\t\t\t\t\tadd = true;\n\n\t\t\t\tif ( add ^ not )\n\t\t\t\t\ttmp.push( node );\n\t\t\t}\n\n\t\t\tr = tmp;\n\n\t\t// Otherwise, find the expression to execute\n\t\t} else {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( typeof f != \"string\" )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){return \" + f + \"}\");\n\n\t\t\t// Execute it against the current filter\n\t\t\tr = jQuery.grep( r, f, not );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)"}]},
{"id":"41135a6fc0b314fff8369bcb37a7085aa3aeade9","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selectorTest.js","lines":[1,203],"code":"module(\"selector\");\n\ntest(\"element\", function() {\n\texpect(9);\n\tok( $(\"*\").size() >= 30, \"Select all\" );\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n\tt( \"Element Selector\", \"body\", [\"body\"] );\n\tt( \"Element Selector\", \"html\", [\"html\"] );\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\n\t\n\tok( $(\"#length\").length, '&lt;input name=\"length\"&gt; cannot be found under IE, see #945' );\n\tok( $(\"#lengthtest input\").length, '&lt;input name=\"length\"&gt; cannot be found under IE, see #945' );\n\n\tt( \"Element Selector with underscore\", \"foo_bar\", [\"foobar\"] );\n});\n\ntest(\"broken\", function() {\n\texpect(7);\n\tt( \"Broken Selector\", \"[\", [] );\n\tt( \"Broken Selector\", \"(\", [] );\n\tt( \"Broken Selector\", \"{\", [] );\n\tt( \"Broken Selector\", \"<\", [] );\n\tt( \"Broken Selector\", \"()\", [] );\n\tt( \"Broken Selector\", \"<>\", [] );\n\tt( \"Broken Selector\", \"{}\", [] );\n});\n\ntest(\"id\", function() {\n\texpect(24);\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\n\tt( \"ID selector with existing ID descendant\", \"#firstp #simon1\", [\"simon1\"] );\n\tt( \"ID selector with non-existant descendant\", \"#firstp #foobar\", [] );\n\tt( \"ID selector using UTF8\", \"#台北Táiběi\", [\"台北Táiběi\"] );\n\tt( \"Multiple ID selectors using UTF8\", \"#台北Táiběi, #台北\", [\"台北Táiběi\",\"台北\"] );\n\tt( \"Descendant ID selector using UTF8\", \"div #台北\", [\"台北\"] );\n\tt( \"Child ID selector using UTF8\", \"form > #台北\", [\"台北\"] );\n\t\n\tt( \"Escaped ID\", \"#foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped ID\", \"#test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant escaped ID\", \"div #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant escaped ID\", \"div #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped ID\", \"form > #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped ID\", \"form > #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\t\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\n\t\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"] );\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", [] );\n\t\n\t$('<a name=\"tName1\">tName1 A</a><a name=\"tName2\">tName2 A</a><div id=\"tName1\">tName1 Div</div>').appendTo('#main');\n\tok( $(\"#tName1\")[0].id == 'tName1', \"ID selector with same value for a name attribute\" );\n\tok( $(\"#tName2\").length == 0, \"ID selector non-existing but name attribute on an A tag\" );\n\tt( \"ID Selector on Form with an input that has a name of 'id'\", \"#lengthtest\", [\"lengthtest\"] );\n\t\n\tt( \"ID selector with non-existant ancestor\", \"#asdfasdf #foobar\", [] ); // bug #986\n});\n\ntest(\"class\", function() {\n\texpect(16);\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n\t\n\tt( \"Class selector using UTF8\", \".台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi.台北\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi, .台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Descendant class selector using UTF8\", \"div .台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Child class selector using UTF8\", \"form > .台北Táiběi\", [\"utf8class1\"] );\n\t\n\tt( \"Escaped Class\", \".foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped Class\", \".test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant scaped Class\", \"div .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant scaped Class\", \"div .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped Class\", \"form > .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped Class\", \"form > .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n});\n\ntest(\"multiple\", function() {\n\texpect(4);\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n});\n\ntest(\"child and adjacent\", function() {\n\texpect(19);\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );"},{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[1,203],"code":"module(\"selector\");\n\ntest(\"element\", function() {\n\texpect(9);\n\tok( $(\"*\").size() >= 30, \"Select all\" );\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n\tt( \"Element Selector\", \"body\", [\"body\"] );\n\tt( \"Element Selector\", \"html\", [\"html\"] );\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\n\t\n\tok( $(\"#length\").length, '&lt;input name=\"length\"&gt; cannot be found under IE, see #945' );\n\tok( $(\"#lengthtest input\").length, '&lt;input name=\"length\"&gt; cannot be found under IE, see #945' );\n\n\tt( \"Element Selector with underscore\", \"foo_bar\", [\"foobar\"] );\n});\n\ntest(\"broken\", function() {\n\texpect(7);\n\tt( \"Broken Selector\", \"[\", [] );\n\tt( \"Broken Selector\", \"(\", [] );\n\tt( \"Broken Selector\", \"{\", [] );\n\tt( \"Broken Selector\", \"<\", [] );\n\tt( \"Broken Selector\", \"()\", [] );\n\tt( \"Broken Selector\", \"<>\", [] );\n\tt( \"Broken Selector\", \"{}\", [] );\n});\n\ntest(\"id\", function() {\n\texpect(24);\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\n\tt( \"ID selector with existing ID descendant\", \"#firstp #simon1\", [\"simon1\"] );\n\tt( \"ID selector with non-existant descendant\", \"#firstp #foobar\", [] );\n\tt( \"ID selector using UTF8\", \"#台北Táiběi\", [\"台北Táiběi\"] );\n\tt( \"Multiple ID selectors using UTF8\", \"#台北Táiběi, #台北\", [\"台北Táiběi\",\"台北\"] );\n\tt( \"Descendant ID selector using UTF8\", \"div #台北\", [\"台北\"] );\n\tt( \"Child ID selector using UTF8\", \"form > #台北\", [\"台北\"] );\n\t\n\tt( \"Escaped ID\", \"#foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped ID\", \"#test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant escaped ID\", \"div #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant escaped ID\", \"div #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped ID\", \"form > #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped ID\", \"form > #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\t\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\n\t\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"] );\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", [] );\n\t\n\t$('<a name=\"tName1\">tName1 A</a><a name=\"tName2\">tName2 A</a><div id=\"tName1\">tName1 Div</div>').appendTo('#main');\n\tok( $(\"#tName1\")[0].id == 'tName1', \"ID selector with same value for a name attribute\" );\n\tok( $(\"#tName2\").length == 0, \"ID selector non-existing but name attribute on an A tag\" );\n\tt( \"ID Selector on Form with an input that has a name of 'id'\", \"#lengthtest\", [\"lengthtest\"] );\n\t\n\tt( \"ID selector with non-existant ancestor\", \"#asdfasdf #foobar\", [] ); // bug #986\n});\n\ntest(\"class\", function() {\n\texpect(16);\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n\t\n\tt( \"Class selector using UTF8\", \".台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi.台北\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi, .台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Descendant class selector using UTF8\", \"div .台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Child class selector using UTF8\", \"form > .台北Táiběi\", [\"utf8class1\"] );\n\t\n\tt( \"Escaped Class\", \".foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped Class\", \".test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant scaped Class\", \"div .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant scaped Class\", \"div .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped Class\", \"form > .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped Class\", \"form > .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n});\n\ntest(\"multiple\", function() {\n\texpect(4);\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n});\n\ntest(\"child and adjacent\", function() {\n\texpect(19);\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );"}]}]
