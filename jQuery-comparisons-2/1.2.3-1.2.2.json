[{"id":"c70de9eedddaac2af68e83c55997fda9dcc9c739","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[350,370],"code":"mouseenter: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseenter\n\t\targuments[0].type = \"mouseenter\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n},"},{"path":"./jquery-data/1.2.3/src/event.js","lines":[372,392],"code":"mouseleave: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseleave\n\t\targuments[0].type = \"mouseleave\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n}"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[343,363],"code":"mouseenter: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseenter\n\t\targuments[0].type = \"mouseenter\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n},"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[365,385],"code":"mouseleave: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseleave\n\t\targuments[0].type = \"mouseleave\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n}"}]},
{"id":"17bd6ceee7f6b2cced756fb611fbb3c6ee375318","instances":[{"path":"./jquery-data/1.2.3/src/ajax.js","lines":[1,235],"code":"jQuery.fn.extend({\n\tload: function( url, params, callback ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tvar off = url.indexOf(\" \");\n\t\tif ( off >= 0 ) {\n\t\t\tvar selector = url.slice(off, url.length);\n\t\t\turl = url.slice(0, off);\n\t\t}\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params,\n\t\t\tcomplete: function(res, status){\n\t\t\t\t// If successful, inject the HTML into all the matched elements\n\t\t\t\tif ( status == \"success\" || status == \"notmodified\" )\n\t\t\t\t\t// See if a selector was specified\n\t\t\t\t\tself.html( selector ?\n\t\t\t\t\t\t// Create a dummy div to hold the results\n\t\t\t\t\t\tjQuery(\"<div/>\")\n\t\t\t\t\t\t\t// inject the contents of the document in, removing the scripts\n\t\t\t\t\t\t\t// to avoid any 'Permission Denied' errors in IE\n\t\t\t\t\t\t\t.append(res.responseText.replace(/<script(.|\\s)*?\\/script>/g, \"\"))\n\n\t\t\t\t\t\t\t// Locate the specified elements\n\t\t\t\t\t\t\t.find(selector) :\n\n\t\t\t\t\t\t// If not, just inject the full result\n\t\t\t\t\t\tres.responseText );\n\n\t\t\t\tself.each( callback, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\tserialize: function() {\n\t\treturn jQuery.param(this.serializeArray());\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\treturn jQuery.nodeName(this, \"form\") ?\n\t\t\t\tjQuery.makeArray(this.elements) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\treturn this.name && !this.disabled && \n\t\t\t\t(this.checked || /select|textarea/i.test(this.nodeName) || \n\t\t\t\t\t/text|hidden|password/i.test(this.type));\n\t\t})\n\t\t.map(function(i, elem){\n\t\t\tvar val = jQuery(this).val();\n\t\t\treturn val == null ? null :\n\t\t\t\tval.constructor == Array ?\n\t\t\t\t\tjQuery.map( val, function(val, i){\n\t\t\t\t\t\treturn {name: elem.name, value: val};\n\t\t\t\t\t}) :\n\t\t\t\t\t{name: elem.name, value: val};\n\t\t}).get();\n\t}\n});\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"), function(i,o){\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n});\n\nvar jsc = (new Date).getTime();\n\njQuery.extend({\n\tget: function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was ommited\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\tcallback = data;"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[1,235],"code":"jQuery.fn.extend({\n\tload: function( url, params, callback ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tvar off = url.indexOf(\" \");\n\t\tif ( off >= 0 ) {\n\t\t\tvar selector = url.slice(off, url.length);\n\t\t\turl = url.slice(0, off);\n\t\t}\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params,\n\t\t\tcomplete: function(res, status){\n\t\t\t\t// If successful, inject the HTML into all the matched elements\n\t\t\t\tif ( status == \"success\" || status == \"notmodified\" )\n\t\t\t\t\t// See if a selector was specified\n\t\t\t\t\tself.html( selector ?\n\t\t\t\t\t\t// Create a dummy div to hold the results\n\t\t\t\t\t\tjQuery(\"<div/>\")\n\t\t\t\t\t\t\t// inject the contents of the document in, removing the scripts\n\t\t\t\t\t\t\t// to avoid any 'Permission Denied' errors in IE\n\t\t\t\t\t\t\t.append(res.responseText.replace(/<script(.|\\s)*?\\/script>/g, \"\"))\n\n\t\t\t\t\t\t\t// Locate the specified elements\n\t\t\t\t\t\t\t.find(selector) :\n\n\t\t\t\t\t\t// If not, just inject the full result\n\t\t\t\t\t\tres.responseText );\n\n\t\t\t\tself.each( callback, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\tserialize: function() {\n\t\treturn jQuery.param(this.serializeArray());\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\treturn jQuery.nodeName(this, \"form\") ?\n\t\t\t\tjQuery.makeArray(this.elements) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\treturn this.name && !this.disabled && \n\t\t\t\t(this.checked || /select|textarea/i.test(this.nodeName) || \n\t\t\t\t\t/text|hidden|password/i.test(this.type));\n\t\t})\n\t\t.map(function(i, elem){\n\t\t\tvar val = jQuery(this).val();\n\t\t\treturn val == null ? null :\n\t\t\t\tval.constructor == Array ?\n\t\t\t\t\tjQuery.map( val, function(val, i){\n\t\t\t\t\t\treturn {name: elem.name, value: val};\n\t\t\t\t\t}) :\n\t\t\t\t\t{name: elem.name, value: val};\n\t\t}).get();\n\t}\n});\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"), function(i,o){\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n});\n\nvar jsc = (new Date).getTime();\n\njQuery.extend({\n\tget: function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was ommited\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\tcallback = data;"}]},
{"id":"e32b32c30380e302ee0039a3b954287ed8d643c3","instances":[{"path":"./jquery-data/1.2.3/src/ajax.js","lines":[235,487],"code":"\tif ( (!s.url.indexOf(\"http\") || !s.url.indexOf(\"//\")) && s.dataType == \"script\" && s.type.toLowerCase() == \"get\" ) {\n\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.src = s.url;\n\t\tif (s.scriptCharset)\n\t\t\tscript.charset = s.scriptCharset;\n\n\t\t// Handle Script loading\n\t\tif ( !jsonp ) {\n\t\t\tvar done = false;\n\n\t\t\t// Attach handlers for all browsers\n\t\t\tscript.onload = script.onreadystatechange = function(){\n\t\t\t\tif ( !done && (!this.readyState || \n\t\t\t\t\t\tthis.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tsuccess();\n\t\t\t\t\tcomplete();\n\t\t\t\t\thead.removeChild( script );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\thead.appendChild(script);\n\n\t\t// We handle everything using the script element injection\n\t\treturn undefined;\n\t}\n\n\tvar requestDone = false;\n\n\t// Create the request object; Microsoft failed to properly\n\t// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\n\tvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(s.type, s.url, s.async, s.username, s.password);\n\n\t// Need an extra try/catch for cross domain requests in Firefox 3\n\ttry {\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data )\n\t\t\txml.setRequestHeader(\"Content-Type\", s.contentType);\n\n\t\t// Set the If-Modified-Since header, if ifModified mode.\n\t\tif ( s.ifModified )\n\t\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\t\tjQuery.lastModified[s.url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n\t\t// Set header so the called script knows that it's an XMLHttpRequest\n\t\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\txml.setRequestHeader(\"Accept\", s.dataType && s.accepts[ s.dataType ] ?\n\t\t\ts.accepts[ s.dataType ] + \", */*\" :\n\t\t\ts.accepts._default );\n\t} catch(e){}\n\n\t// Allow custom headers/mimetypes\n\tif ( s.beforeSend )\n\t\ts.beforeSend(xml);\n\t\t\n\tif ( s.global )\n\t\tjQuery.event.trigger(\"ajaxSend\", [xml, s]);\n\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(isTimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( !requestDone && xml && (xml.readyState == 4 || isTimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\t\t\t\n\t\t\t// clear poll interval\n\t\t\tif (ival) {\n\t\t\t\tclearInterval(ival);\n\t\t\t\tival = null;\n\t\t\t}\n\t\t\t\n\t\t\tstatus = isTimeout == \"timeout\" && \"timeout\" ||\n\t\t\t\t!jQuery.httpSuccess( xml ) && \"error\" ||\n\t\t\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) && \"notmodified\" ||\n\t\t\t\t\"success\";\n\n\t\t\tif ( status == \"success\" ) {\n\t\t\t\t// Watch for, and catch, XML document parse errors\n\t\t\t\ttry {\n\t\t\t\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\t\t\t\tdata = jQuery.httpData( xml, s.dataType );\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstatus = \"parsererror\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status == \"success\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes;\n\t\t\t\ttry {\n\t\t\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[235,487],"code":"\tif ( (!s.url.indexOf(\"http\") || !s.url.indexOf(\"//\")) && ( s.dataType == \"script\" || s.dataType ==\"json\" ) && s.type.toLowerCase() == \"get\" ) {\n\t\tvar head = document.getElementsByTagName(\"head\")[0];\n\t\tvar script = document.createElement(\"script\");\n\t\tscript.src = s.url;\n\t\tif (s.scriptCharset)\n\t\t\tscript.charset = s.scriptCharset;\n\n\t\t// Handle Script loading\n\t\tif ( !jsonp ) {\n\t\t\tvar done = false;\n\n\t\t\t// Attach handlers for all browsers\n\t\t\tscript.onload = script.onreadystatechange = function(){\n\t\t\t\tif ( !done && (!this.readyState || \n\t\t\t\t\t\tthis.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tsuccess();\n\t\t\t\t\tcomplete();\n\t\t\t\t\thead.removeChild( script );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\thead.appendChild(script);\n\n\t\t// We handle everything using the script element injection\n\t\treturn undefined;\n\t}\n\n\tvar requestDone = false;\n\n\t// Create the request object; Microsoft failed to properly\n\t// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\n\tvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(s.type, s.url, s.async, s.username, s.password);\n\n\t// Need an extra try/catch for cross domain requests in Firefox 3\n\ttry {\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data )\n\t\t\txml.setRequestHeader(\"Content-Type\", s.contentType);\n\n\t\t// Set the If-Modified-Since header, if ifModified mode.\n\t\tif ( s.ifModified )\n\t\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\t\tjQuery.lastModified[s.url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n\t\t// Set header so the called script knows that it's an XMLHttpRequest\n\t\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\txml.setRequestHeader(\"Accept\", s.dataType && s.accepts[ s.dataType ] ?\n\t\t\ts.accepts[ s.dataType ] + \", */*\" :\n\t\t\ts.accepts._default );\n\t} catch(e){}\n\n\t// Allow custom headers/mimetypes\n\tif ( s.beforeSend )\n\t\ts.beforeSend(xml);\n\t\t\n\tif ( s.global )\n\t\tjQuery.event.trigger(\"ajaxSend\", [xml, s]);\n\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(isTimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( !requestDone && xml && (xml.readyState == 4 || isTimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\t\t\t\n\t\t\t// clear poll interval\n\t\t\tif (ival) {\n\t\t\t\tclearInterval(ival);\n\t\t\t\tival = null;\n\t\t\t}\n\t\t\t\n\t\t\tstatus = isTimeout == \"timeout\" && \"timeout\" ||\n\t\t\t\t!jQuery.httpSuccess( xml ) && \"error\" ||\n\t\t\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) && \"notmodified\" ||\n\t\t\t\t\"success\";\n\n\t\t\tif ( status == \"success\" ) {\n\t\t\t\t// Watch for, and catch, XML document parse errors\n\t\t\t\ttry {\n\t\t\t\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\t\t\t\tdata = jQuery.httpData( xml, s.dataType );\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstatus = \"parsererror\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status == \"success\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes;\n\t\t\t\ttry {\n\t\t\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n"}]},
{"id":"ce96176a307e73169ff9b61496b07d6d484dd2d2","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[1,306],"code":"/*\n * jQuery @VERSION - New Wave Javascript\n *\n * Copyright (c) 2008 John Resig (jquery.com)\n * Dual licensed under the MIT (MIT-LICENSE.txt)\n * and GPL (GPL-LICENSE.txt) licenses.\n *\n * $Date$\n * $Rev$\n */\n\n// Map over jQuery in case of overwrite\nif ( window.jQuery )\n\tvar _jQuery = window.jQuery;\n\nvar jQuery = window.jQuery = function( selector, context ) {\n\t// The jQuery object is actually just the init constructor 'enhanced'\n\treturn new jQuery.prototype.init( selector, context );\n};\n\n// Map over the $ in case of overwrite\nif ( window.$ )\n\tvar _$ = window.$;\n\t\n// Map the jQuery namespace to the '$' one\nwindow.$ = jQuery;\n\n// A simple way to check for HTML strings or ID strings\n// (both of which we optimize for)\nvar quickExpr = /^[^<]*(<(.|\\s)+>)[^>]*$|^#(\\w+)$/;\n\n// Is it a simple selector\nvar isSimple = /^.[^:#\\[\\.]*$/;\n\njQuery.fn = jQuery.prototype = {\n\tinit: function( selector, context ) {\n\t\t// Make sure that a selection was provided\n\t\tselector = selector || document;\n\n\t\t// Handle $(DOMElement)\n\t\tif ( selector.nodeType ) {\n\t\t\tthis[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// Handle HTML strings\n\t\t} else if ( typeof selector == \"string\" ) {\n\t\t\t// Are we dealing with HTML string or an ID?\n\t\t\tvar match = quickExpr.exec( selector );\n\n\t\t\t// Verify a match, and that no context was specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] )\n\t\t\t\t\tselector = jQuery.clean( [ match[1] ], context );\n\n\t\t\t\t// HANDLE: $(\"#id\")\n\t\t\t\telse {\n\t\t\t\t\tvar elem = document.getElementById( match[3] );\n\n\t\t\t\t\t// Make sure an element was located\n\t\t\t\t\tif ( elem )\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id != match[3] )\n\t\t\t\t\t\t\treturn jQuery().find( selector );\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\telse\n\t\t\t\t\t\tselector = [];\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, [context])\n\t\t\t// (which is just equivalent to: $(content).find(expr)\n\t\t\t} else\n\t\t\t\treturn new jQuery( context ).find( selector );\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) )\n\t\t\treturn new jQuery( document )[ jQuery.fn.ready ? \"ready\" : \"load\" ]( selector );\n\n\t\treturn this.setArray(\n\t\t\t// HANDLE: $(array)\n\t\t\tselector.constructor == Array && selector ||\n\n\t\t\t// HANDLE: $(arraylike)\n\t\t\t// Watch for when an array-like object, contains DOM nodes, is passed in as the selector\n\t\t\t(selector.jquery || selector.length && selector != window && !selector.nodeType && selector[0] != undefined && selector[0].nodeType) && jQuery.makeArray( selector ) ||\n\n\t\t\t// HANDLE: $(*)\n\t\t\t[ selector ] );\n\t},"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[1,306],"code":"/*\n * jQuery @VERSION - New Wave Javascript\n *\n * Copyright (c) 2007 John Resig (jquery.com)\n * Dual licensed under the MIT (MIT-LICENSE.txt)\n * and GPL (GPL-LICENSE.txt) licenses.\n *\n * $Date$\n * $Rev$\n */\n\n// Map over jQuery in case of overwrite\nif ( window.jQuery )\n\tvar _jQuery = window.jQuery;\n\nvar jQuery = window.jQuery = function( selector, context ) {\n\t// The jQuery object is actually just the init constructor 'enhanced'\n\treturn new jQuery.prototype.init( selector, context );\n};\n\n// Map over the $ in case of overwrite\nif ( window.$ )\n\tvar _$ = window.$;\n\t\n// Map the jQuery namespace to the '$' one\nwindow.$ = jQuery;\n\n// A simple way to check for HTML strings or ID strings\n// (both of which we optimize for)\nvar quickExpr = /^[^<]*(<(.|\\s)+>)[^>]*$|^#(\\w+)$/;\n\n// Is it a simple selector\nvar isSimple = /^.[^:#\\[\\.]*$/;\n\njQuery.fn = jQuery.prototype = {\n\tinit: function( selector, context ) {\n\t\t// Make sure that a selection was provided\n\t\tselector = selector || document;\n\n\t\t// Handle $(DOMElement)\n\t\tif ( selector.nodeType ) {\n\t\t\tthis[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// Handle HTML strings\n\t\t} else if ( typeof selector == \"string\" ) {\n\t\t\t// Are we dealing with HTML string or an ID?\n\t\t\tvar match = quickExpr.exec( selector );\n\n\t\t\t// Verify a match, and that no context was specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] )\n\t\t\t\t\tselector = jQuery.clean( [ match[1] ], context );\n\n\t\t\t\t// HANDLE: $(\"#id\")\n\t\t\t\telse {\n\t\t\t\t\tvar elem = document.getElementById( match[3] );\n\n\t\t\t\t\t// Make sure an element was located\n\t\t\t\t\tif ( elem )\n\t\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id != match[3] )\n\t\t\t\t\t\t\treturn jQuery().find( selector );\n\n\t\t\t\t\t\t// Otherwise, we inject the element directly into the jQuery object\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\telse\n\t\t\t\t\t\tselector = [];\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, [context])\n\t\t\t// (which is just equivalent to: $(content).find(expr)\n\t\t\t} else\n\t\t\t\treturn new jQuery( context ).find( selector );\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) )\n\t\t\treturn new jQuery( document )[ jQuery.fn.ready ? \"ready\" : \"load\" ]( selector );\n\n\t\treturn this.setArray(\n\t\t\t// HANDLE: $(array)\n\t\t\tselector.constructor == Array && selector ||\n\n\t\t\t// HANDLE: $(arraylike)\n\t\t\t// Watch for when an array-like object, contains DOM nodes, is passed in as the selector\n\t\t\t(selector.jquery || selector.length && selector != window && !selector.nodeType && selector[0] != undefined && selector[0].nodeType) && jQuery.makeArray( selector ) ||\n\n\t\t\t// HANDLE: $(*)\n\t\t\t[ selector ] );\n\t},"}]},
{"id":"81fc9ab9401c3df715120765c591358c804018bc","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[310,481],"code":"\t\t\treturn this.cloneNode(true);\n\t});\n\n\t// Need to set the expando to null on the cloned set if it exists\n\t// removeData doesn't work here, IE removes it from the original as well\n\t// this is primarily for IE but the data expando shouldn't be copied over in any browser\n\tvar clone = ret.find(\"*\").andSelf().each(function(){\n\t\tif ( this[ expando ] != undefined )\n\t\t\tthis[ expando ] = null;\n\t});\n\t\n\t// Copy the events from the original to the clone\n\tif ( events === true )\n\t\tthis.find(\"*\").andSelf().each(function(i){\n\t\t\tif (this.nodeType == 3)\n\t\t\t\treturn;\n\t\t\tvar events = jQuery.data( this, \"events\" );\n\n\t\t\tfor ( var type in events )\n\t\t\t\tfor ( var handler in events[ type ] )\n\t\t\t\t\tjQuery.event.add( clone[ i ], type, events[ type ][ handler ], events[ type ][ handler ].data );\n\t\t});\n\n\t// Return the cloned set\n\treturn ret;\n},\n\nfilter: function( selector ) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( selector ) &&\n\t\tjQuery.grep(this, function(elem, i){\n\t\t\treturn selector.call( elem, i );\n\t\t}) ||\n\n\t\tjQuery.multiFilter( selector, this ) );\n},\n\nnot: function( selector ) {\n\tif ( selector.constructor == String )\n\t\t// test special case where just one selector is passed in\n\t\tif ( isSimple.test( selector ) )\n\t\t\treturn this.pushStack( jQuery.multiFilter( selector, this, true ) );\n\t\telse\n\t\t\tselector = jQuery.multiFilter( selector, this );\n\n\tvar isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector.nodeType;\n\treturn this.filter(function() {\n\t\treturn isArrayLike ? jQuery.inArray( this, selector ) < 0 : this != selector;\n\t});\n},\n\nadd: function( selector ) {\n\treturn !selector ? this : this.pushStack( jQuery.merge( \n\t\tthis.get(),\n\t\tselector.constructor == String ? \n\t\t\tjQuery( selector ).get() :\n\t\t\tselector.length != undefined && (!selector.nodeName || jQuery.nodeName(selector, \"form\")) ?\n\t\t\t\tselector : [selector] ) );\n},\n\nis: function( selector ) {\n\treturn selector ?\n\t\tjQuery.multiFilter( selector, this ).length > 0 :\n\t\tfalse;\n},\n\nhasClass: function( selector ) {\n\treturn this.is( \".\" + selector );\n},\n\nval: function( value ) {\n\tif ( value == undefined ) {\n\n\t\tif ( this.length ) {\n\t\t\tvar elem = this[0];\n\n\t\t\t// We need to handle select boxes special\n\t\t\tif ( jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\tvar index = elem.selectedIndex,\n\t\t\t\t\tvalues = [],\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tone = elem.type == \"select-one\";\n\t\t\t\t\n\t\t\t\t// Nothing was selected\n\t\t\t\tif ( index < 0 )\n\t\t\t\t\treturn null;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {\n\t\t\t\t\tvar option = options[ i ];\n\n\t\t\t\t\tif ( option.selected ) {\n\t\t\t\t\t\t// Get the specifc value for the option\n\t\t\t\t\t\tvalue = jQuery.browser.msie && !option.attributes.value.specified ? option.text : option.value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one )\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Multi-Selects return an array"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[312,483],"code":"\t\t\treturn this.cloneNode(true);\n\t});\n\n\t// Need to set the expando to null on the cloned set if it exists\n\t// removeData doesn't work here, IE removes it from the original as well\n\t// this is primarily for IE but the data expando shouldn't be copied over in any browser\n\tvar clone = ret.find(\"*\").andSelf().each(function(){\n\t\tif ( this[ expando ] != undefined )\n\t\t\tthis[ expando ] = null;\n\t});\n\t\n\t// Copy the events from the original to the clone\n\tif ( events === true )\n\t\tthis.find(\"*\").andSelf().each(function(i){\n\t\t\tif (this.nodeType == 3)\n\t\t\t\treturn;\n\t\t\tvar events = jQuery.data( this, \"events\" );\n\n\t\t\tfor ( var type in events )\n\t\t\t\tfor ( var handler in events[ type ] )\n\t\t\t\t\tjQuery.event.add( clone[ i ], type, events[ type ][ handler ], events[ type ][ handler ].data );\n\t\t});\n\n\t// Return the cloned set\n\treturn ret;\n},\n\nfilter: function( selector ) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( selector ) &&\n\t\tjQuery.grep(this, function(elem, i){\n\t\t\treturn selector.call( elem, i );\n\t\t}) ||\n\n\t\tjQuery.multiFilter( selector, this ) );\n},\n\nnot: function( selector ) {\n\tif ( selector.constructor == String )\n\t\t// test special case where just one selector is passed in\n\t\tif ( isSimple.test( selector ) )\n\t\t\treturn this.pushStack( jQuery.multiFilter( selector, this, true ) );\n\t\telse\n\t\t\tselector = jQuery.multiFilter( selector, this );\n\n\tvar isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector.nodeType;\n\treturn this.filter(function() {\n\t\treturn isArrayLike ? jQuery.inArray( this, selector ) < 0 : this != selector;\n\t});\n},\n\nadd: function( selector ) {\n\treturn !selector ? this : this.pushStack( jQuery.merge( \n\t\tthis.get(),\n\t\tselector.constructor == String ? \n\t\t\tjQuery( selector ).get() :\n\t\t\tselector.length != undefined && (!selector.nodeName || jQuery.nodeName(selector, \"form\")) ?\n\t\t\t\tselector : [selector] ) );\n},\n\nis: function( selector ) {\n\treturn selector ?\n\t\tjQuery.multiFilter( selector, this ).length > 0 :\n\t\tfalse;\n},\n\nhasClass: function( selector ) {\n\treturn this.is( \".\" + selector );\n},\n\nval: function( value ) {\n\tif ( value == undefined ) {\n\n\t\tif ( this.length ) {\n\t\t\tvar elem = this[0];\n\n\t\t\t// We need to handle select boxes special\n\t\t\tif ( jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\tvar index = elem.selectedIndex,\n\t\t\t\t\tvalues = [],\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tone = elem.type == \"select-one\";\n\t\t\t\t\n\t\t\t\t// Nothing was selected\n\t\t\t\tif ( index < 0 )\n\t\t\t\t\treturn null;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {\n\t\t\t\t\tvar option = options[ i ];\n\n\t\t\t\t\tif ( option.selected ) {\n\t\t\t\t\t\t// Get the specifc value for the option\n\t\t\t\t\t\tvalue = jQuery.browser.msie && !option.attributes.value.specified ? option.text : option.value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one )\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Multi-Selects return an array"}]},
{"id":"4179e5f6f6f4505cf9631bdba7e0fd1570bce57f","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[502,805],"code":"\t\t\tjQuery.removeData( this, key );\n\t\t});\n\t},\n\t\n\tdomManip: function( args, table, reverse, callback ) {\n\t\tvar clone = this.length > 1, elems; \n\n\t\treturn this.each(function(){\n\t\t\tif ( !elems ) {\n\t\t\t\telems = jQuery.clean( args, this.ownerDocument );\n\n\t\t\t\tif ( reverse )\n\t\t\t\t\telems.reverse();\n\t\t\t}\n\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && jQuery.nodeName( this, \"table\" ) && jQuery.nodeName( elems[0], \"tr\" ) )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild( this.ownerDocument.createElement(\"tbody\") );\n\n\t\t\tvar scripts = jQuery( [] );\n\n\t\t\tjQuery.each(elems, function(){\n\t\t\t\tvar elem = clone ?\n\t\t\t\t\tjQuery( this ).clone( true )[0] :\n\t\t\t\t\tthis;\n\n\t\t\t\t// execute all scripts after the elements have been injected\n\t\t\t\tif ( jQuery.nodeName( elem, \"script\" ) ) {\n\t\t\t\t\tscripts = scripts.add( elem );\n\t\t\t\t} else {\n\t\t\t\t\t// Remove any inner scripts for later evaluation\n\t\t\t\t\tif ( elem.nodeType == 1 )\n\t\t\t\t\t\tscripts = scripts.add( jQuery( \"script\", elem ).remove() );\n\n\t\t\t\t\t// Inject the elements into the document\n\t\t\t\t\tcallback.call( obj, elem );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscripts.each( evalScript );\n\t\t});\n\t}\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.prototype.init.prototype = jQuery.prototype;\n\nfunction evalScript( i, elem ) {\n\tif ( elem.src )\n\t\tjQuery.ajax({\n\t\t\turl: elem.src,\n\t\t\tasync: false,\n\t\t\tdataType: \"script\"\n\t\t});\n\n\telse\n\t\tjQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || \"\" );\n\n\tif ( elem.parentNode )\n\t\telem.parentNode.removeChild( elem );\n}\n\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;\n\n\t// Handle a deep copy situation\n\tif ( target.constructor == Boolean ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target != \"object\" && typeof target != \"function\" )\n\t\ttarget = {};\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length == 1 ) {\n\t\ttarget = this;\n\t\ti = 0;\n\t}\n\n\tfor ( ; i < length; i++ )\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null )\n\t\t\t// Extend the base object\n\t\t\tfor ( var name in options ) {\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === options[ name ] )\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Recurse if we're merging object values\n\t\t\t\tif ( deep && options[ name ] && typeof options[ name ] == \"object\" && target[ name ] && !options[ name ].nodeType )\n\t\t\t\t\ttarget[ name ] = jQuery.extend( target[ name ], options[ name ] );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\telse if ( options[ name ] != undefined )"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[480,782],"code":"\t\treturn this.add( this.prevObject );\n\t},\n\t\n\tdomManip: function( args, table, reverse, callback ) {\n\t\tvar clone = this.length > 1, elems; \n\n\t\treturn this.each(function(){\n\t\t\tif ( !elems ) {\n\t\t\t\telems = jQuery.clean( args, this.ownerDocument );\n\n\t\t\t\tif ( reverse )\n\t\t\t\t\telems.reverse();\n\t\t\t}\n\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && jQuery.nodeName( this, \"table\" ) && jQuery.nodeName( elems[0], \"tr\" ) )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild( this.ownerDocument.createElement(\"tbody\") );\n\n\t\t\tvar scripts = jQuery( [] );\n\n\t\t\tjQuery.each(elems, function(){\n\t\t\t\tvar elem = clone ?\n\t\t\t\t\tjQuery( this ).clone( true )[0] :\n\t\t\t\t\tthis;\n\n\t\t\t\t// execute all scripts after the elements have been injected\n\t\t\t\tif ( jQuery.nodeName( elem, \"script\" ) ) {\n\t\t\t\t\tscripts = scripts.add( elem );\n\t\t\t\t} else {\n\t\t\t\t\t// Remove any inner scripts for later evaluation\n\t\t\t\t\tif ( elem.nodeType == 1 )\n\t\t\t\t\t\tscripts = scripts.add( jQuery( \"script\", elem ).remove() );\n\n\t\t\t\t\t// Inject the elements into the document\n\t\t\t\t\tcallback.call( obj, elem );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscripts.each( evalScript );\n\t\t});\n\t}\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.prototype.init.prototype = jQuery.prototype;\n\nfunction evalScript( i, elem ) {\n\tif ( elem.src )\n\t\tjQuery.ajax({\n\t\t\turl: elem.src,\n\t\t\tasync: false,\n\t\t\tdataType: \"script\"\n\t\t});\n\n\telse\n\t\tjQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || \"\" );\n\n\tif ( elem.parentNode )\n\t\telem.parentNode.removeChild( elem );\n}\n\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;\n\n\t// Handle a deep copy situation\n\tif ( target.constructor == Boolean ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target != \"object\" && typeof target != \"function\" )\n\t\ttarget = {};\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length == 1 ) {\n\t\ttarget = this;\n\t\ti = 0;\n\t}\n\n\tfor ( ; i < length; i++ )\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null )\n\t\t\t// Extend the base object\n\t\t\tfor ( var name in options ) {\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === options[ name ] )\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// Recurse if we're merging object values\n\t\t\t\tif ( deep && options[ name ] && typeof options[ name ] == \"object\" && target[ name ] && !options[ name ].nodeType )\n\t\t\t\t\ttarget[ name ] = jQuery.extend( target[ name ], options[ name ] );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\telse if ( options[ name ] != undefined )\n\t\t\t\t\ttarget[ name ] = options[ name ];"}]},
{"id":"03e9c83048916629f7ff0f4cfc6bf03fb02eefdb","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[803,906],"code":"\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},\n\ncss: function( elem, name, force ) {\n\tif ( name == \"width\" || name == \"height\" ) {\n\t\tvar val, props = { position: \"absolute\", visibility: \"hidden\", display:\"block\" }, which = name == \"width\" ? [ \"Left\", \"Right\" ] : [ \"Top\", \"Bottom\" ];\n\t\n\t\tfunction getWH() {\n\t\t\tval = name == \"width\" ? elem.offsetWidth : elem.offsetHeight;\n\t\t\tvar padding = 0, border = 0;\n\t\t\tjQuery.each( which, function() {\n\t\t\t\tpadding += parseFloat(jQuery.curCSS( elem, \"padding\" + this, true)) || 0;\n\t\t\t\tborder += parseFloat(jQuery.curCSS( elem, \"border\" + this + \"Width\", true)) || 0;\n\t\t\t});\n\t\t\tval -= Math.round(padding + border);\n\t\t}\n\t\n\t\tif ( jQuery(elem).is(\":visible\") )\n\t\t\tgetWH();\n\t\telse\n\t\t\tjQuery.swap( elem, props, getWH );\n\t\t\n\t\treturn Math.max(0, val);\n\t}\n\t\n\treturn jQuery.curCSS( elem, name, force );\n},\n\ncurCSS: function( elem, name, force ) {\n\tvar ret;\n\n\t// A helper method for determining if an element's values are broken\n\tfunction color( elem ) {\n\t\tif ( !jQuery.browser.safari )\n\t\t\treturn false;\n\n\t\tvar ret = document.defaultView.getComputedStyle( elem, null );\n\t\treturn !ret || ret.getPropertyValue(\"color\") == \"\";\n\t}\n\n\t// We need to handle opacity special in IE\n\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\tret = jQuery.attr( elem.style, \"opacity\" );\n\n\t\treturn ret == \"\" ?\n\t\t\t\"1\" :\n\t\t\tret;\n\t}\n\t// Opera sometimes will give the wrong display answer, this fixes it, see #2037\n\tif ( jQuery.browser.opera && name == \"display\" ) {\n\t\tvar save = elem.style.display;\n\t\telem.style.display = \"block\";\n\t\telem.style.display = save;\n\t}\n\t\n\t// Make sure we're using the right name for getting the float value\n\tif ( name.match( /float/i ) )\n\t\tname = styleFloat;\n\n\tif ( !force && elem.style && elem.style[ name ] )\n\t\tret = elem.style[ name ];\n\n\telse if ( document.defaultView && document.defaultView.getComputedStyle ) {\n\n\t\t// Only \"float\" is needed here\n\t\tif ( name.match( /float/i ) )\n\t\t\tname = \"float\";\n\n\t\tname = name.replace( /([A-Z])/g, \"-$1\" ).toLowerCase();\n\n\t\tvar getComputedStyle = document.defaultView.getComputedStyle( elem, null );\n\n\t\tif ( getComputedStyle && !color( elem ) )\n\t\t\tret = getComputedStyle.getPropertyValue( name );\n\n\t\t// If the element isn't reporting its values properly in Safari\n\t\t// then some display: none elements are involved\n\t\telse {\n\t\t\tvar swap = [], stack = [];\n\n\t\t\t// Locate all of the parent display: none elements\n\t\t\tfor ( var a = elem; a && color(a); a = a.parentNode )\n\t\t\t\tstack.unshift(a);\n\n\t\t\t// Go through and make them visible, but in reverse\n\t\t\t// (It would be better if we knew the exact display type that they had)\n\t\t\tfor ( var i = 0; i < stack.length; i++ )\n\t\t\t\tif ( color( stack[ i ] ) ) {\n\t\t\t\t\tswap[ i ] = stack[ i ].style.display;\n\t\t\t\t\tstack[ i ].style.display = \"block\";\n\t\t\t\t}\n\n\t\t\t// Since we flip the display style, we have to handle that\n\t\t\t// one special, otherwise get the value\n\t\t\tret = name == \"display\" && swap[ stack.length - 1 ] != null ?\n\t\t\t\t\"none\" :\n\t\t\t\t( getComputedStyle && getComputedStyle.getPropertyValue( name ) ) || \"\";\n"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[780,883],"code":"\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},\n\ncss: function( elem, name, force ) {\n\tif ( name == \"width\" || name == \"height\" ) {\n\t\tvar val, props = { position: \"absolute\", visibility: \"hidden\", display:\"block\" }, which = name == \"width\" ? [ \"Left\", \"Right\" ] : [ \"Top\", \"Bottom\" ];\n\t\n\t\tfunction getWH() {\n\t\t\tval = name == \"width\" ? elem.offsetWidth : elem.offsetHeight;\n\t\t\tvar padding = 0, border = 0;\n\t\t\tjQuery.each( which, function() {\n\t\t\t\tpadding += parseFloat(jQuery.curCSS( elem, \"padding\" + this, true)) || 0;\n\t\t\t\tborder += parseFloat(jQuery.curCSS( elem, \"border\" + this + \"Width\", true)) || 0;\n\t\t\t});\n\t\t\tval -= Math.round(padding + border);\n\t\t}\n\t\n\t\tif ( jQuery(elem).is(\":visible\") )\n\t\t\tgetWH();\n\t\telse\n\t\t\tjQuery.swap( elem, props, getWH );\n\t\t\n\t\treturn Math.max(0, val);\n\t}\n\t\n\treturn jQuery.curCSS( elem, name, force );\n},\n\ncurCSS: function( elem, name, force ) {\n\tvar ret;\n\n\t// A helper method for determining if an element's values are broken\n\tfunction color( elem ) {\n\t\tif ( !jQuery.browser.safari )\n\t\t\treturn false;\n\n\t\tvar ret = document.defaultView.getComputedStyle( elem, null );\n\t\treturn !ret || ret.getPropertyValue(\"color\") == \"\";\n\t}\n\n\t// We need to handle opacity special in IE\n\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\tret = jQuery.attr( elem.style, \"opacity\" );\n\n\t\treturn ret == \"\" ?\n\t\t\t\"1\" :\n\t\t\tret;\n\t}\n\t// Opera sometimes will give the wrong display answer, this fixes it, see #2037\n\tif ( jQuery.browser.opera && name == \"display\" ) {\n\t\tvar save = elem.style.display;\n\t\telem.style.display = \"block\";\n\t\telem.style.display = save;\n\t}\n\t\n\t// Make sure we're using the right name for getting the float value\n\tif ( name.match( /float/i ) )\n\t\tname = styleFloat;\n\n\tif ( !force && elem.style && elem.style[ name ] )\n\t\tret = elem.style[ name ];\n\n\telse if ( document.defaultView && document.defaultView.getComputedStyle ) {\n\n\t\t// Only \"float\" is needed here\n\t\tif ( name.match( /float/i ) )\n\t\t\tname = \"float\";\n\n\t\tname = name.replace( /([A-Z])/g, \"-$1\" ).toLowerCase();\n\n\t\tvar getComputedStyle = document.defaultView.getComputedStyle( elem, null );\n\n\t\tif ( getComputedStyle && !color( elem ) )\n\t\t\tret = getComputedStyle.getPropertyValue( name );\n\n\t\t// If the element isn't reporting its values properly in Safari\n\t\t// then some display: none elements are involved\n\t\telse {\n\t\t\tvar swap = [], stack = [];\n\n\t\t\t// Locate all of the parent display: none elements\n\t\t\tfor ( var a = elem; a && color(a); a = a.parentNode )\n\t\t\t\tstack.unshift(a);\n\n\t\t\t// Go through and make them visible, but in reverse\n\t\t\t// (It would be better if we knew the exact display type that they had)\n\t\t\tfor ( var i = 0; i < stack.length; i++ )\n\t\t\t\tif ( color( stack[ i ] ) ) {\n\t\t\t\t\tswap[ i ] = stack[ i ].style.display;\n\t\t\t\t\tstack[ i ].style.display = \"block\";\n\t\t\t\t}\n\n\t\t\t// Since we flip the display style, we have to handle that\n\t\t\t// one special, otherwise get the value\n\t\t\tret = name == \"display\" && swap[ stack.length - 1 ] != null ?\n\t\t\t\t\"none\" :\n\t\t\t\t( getComputedStyle && getComputedStyle.getPropertyValue( name ) ) || \"\";\n"}]},
{"id":"956588c582d4508764ef2df18d212c461d050314","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[903,1180],"code":"\t\t\t// Finally, revert the display styles back\n\t\t\tfor ( var i = 0; i < swap.length; i++ )\n\t\t\t\tif ( swap[ i ] != null )\n\t\t\t\t\tstack[ i ].style.display = swap[ i ];\n\t\t}\n\n\t\t// We should always get a number back from opacity\n\t\tif ( name == \"opacity\" && ret == \"\" )\n\t\t\tret = \"1\";\n\n\t} else if ( elem.currentStyle ) {\n\t\tvar camelCase = name.replace(/\\-(\\w)/g, function(all, letter){\n\t\t\treturn letter.toUpperCase();\n\t\t});\n\n\t\tret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];\n\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t\t// If we're not dealing with a regular pixel number\n\t\t// but a number that has a weird ending, we need to convert it to pixels\n\t\tif ( !/^\\d+(px)?$/i.test( ret ) && /^\\d/.test( ret ) ) {\n\t\t\t// Remember the original values\n\t\t\tvar style = elem.style.left, runtimeStyle = elem.runtimeStyle.left;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\telem.runtimeStyle.left = elem.currentStyle.left;\n\t\t\telem.style.left = ret || 0;\n\t\t\tret = elem.style.pixelLeft + \"px\";\n\n\t\t\t// Revert the changed values\n\t\t\telem.style.left = style;\n\t\t\telem.runtimeStyle.left = runtimeStyle;\n\t\t}\n\t}\n\n\treturn ret;\n},\n\nclean: function( elems, context ) {\n\tvar ret = [];\n\tcontext = context || document;\n\t// !context.createElement fails in IE with an error but returns typeof 'object'\n\tif (typeof context.createElement == 'undefined') \n\t\tcontext = context.ownerDocument || context[0] && context[0].ownerDocument || document;\n\n\tjQuery.each(elems, function(i, elem){\n\t\tif ( !elem )\n\t\t\treturn;\n\n\t\tif ( elem.constructor == Number )\n\t\t\telem = elem.toString();\n\t\t\n\t\t// Convert html string into DOM nodes\n\t\tif ( typeof elem == \"string\" ) {\n\t\t\t// Fix \"XHTML\"-style tags in all browsers\n\t\t\telem = elem.replace(/(<(\\w+)[^>]*?)\\/>/g, function(all, front, tag){\n\t\t\t\treturn tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?\n\t\t\t\t\tall :\n\t\t\t\t\tfront + \"></\" + tag + \">\";\n\t\t\t});\n\n\t\t\t// Trim whitespace, otherwise indexOf won't work as expected\n\t\t\tvar tags = jQuery.trim( elem ).toLowerCase(), div = context.createElement(\"div\");\n\n\t\t\tvar wrap =\n\t\t\t\t// option or optgroup\n\t\t\t\t!tags.indexOf(\"<opt\") &&\n\t\t\t\t[ 1, \"<select multiple='multiple'>\", \"</select>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<leg\") &&\n\t\t\t\t[ 1, \"<fieldset>\", \"</fieldset>\" ] ||\n\t\t\t\t\n\t\t\t\ttags.match(/^<(thead|tbody|tfoot|colg|cap)/) &&\n\t\t\t\t[ 1, \"<table>\", \"</table>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<tr\") &&\n\t\t\t\t[ 2, \"<table><tbody>\", \"</tbody></table>\" ] ||\n\t\t\t\t\n\t\t\t \t// <thead> matched above\n\t\t\t\t(!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\")) &&\n\t\t\t\t[ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<col\") &&\n\t\t\t\t[ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ] ||\n\n\t\t\t\t// IE can't serialize <link> and <script> tags normally\n\t\t\t\tjQuery.browser.msie &&\n\t\t\t\t[ 1, \"div<div>\", \"</div>\" ] ||\n\t\t\t\t\n\t\t\t\t[ 0, \"\", \"\" ];\n\n\t\t\t// Go to html and back, then peel off extra wrappers\n\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];\n\t\t\t\n\t\t\t// Move to the right depth\n\t\t\twhile ( wrap[0]-- )\n\t\t\t\tdiv = div.lastChild;\n\t\t\t"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[880,1157],"code":"\t\t\t// Finally, revert the display styles back\n\t\t\tfor ( var i = 0; i < swap.length; i++ )\n\t\t\t\tif ( swap[ i ] != null )\n\t\t\t\t\tstack[ i ].style.display = swap[ i ];\n\t\t}\n\n\t\t// We should always get a number back from opacity\n\t\tif ( name == \"opacity\" && ret == \"\" )\n\t\t\tret = \"1\";\n\n\t} else if ( elem.currentStyle ) {\n\t\tvar camelCase = name.replace(/\\-(\\w)/g, function(all, letter){\n\t\t\treturn letter.toUpperCase();\n\t\t});\n\n\t\tret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];\n\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t\t// If we're not dealing with a regular pixel number\n\t\t// but a number that has a weird ending, we need to convert it to pixels\n\t\tif ( !/^\\d+(px)?$/i.test( ret ) && /^\\d/.test( ret ) ) {\n\t\t\t// Remember the original values\n\t\t\tvar style = elem.style.left, runtimeStyle = elem.runtimeStyle.left;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\telem.runtimeStyle.left = elem.currentStyle.left;\n\t\t\telem.style.left = ret || 0;\n\t\t\tret = elem.style.pixelLeft + \"px\";\n\n\t\t\t// Revert the changed values\n\t\t\telem.style.left = style;\n\t\t\telem.runtimeStyle.left = runtimeStyle;\n\t\t}\n\t}\n\n\treturn ret;\n},\n\nclean: function( elems, context ) {\n\tvar ret = [];\n\tcontext = context || document;\n\t// !context.createElement fails in IE with an error but returns typeof 'object'\n\tif (typeof context.createElement == 'undefined') \n\t\tcontext = context.ownerDocument || context[0] && context[0].ownerDocument || document;\n\n\tjQuery.each(elems, function(i, elem){\n\t\tif ( !elem )\n\t\t\treturn;\n\n\t\tif ( elem.constructor == Number )\n\t\t\telem = elem.toString();\n\t\t\n\t\t// Convert html string into DOM nodes\n\t\tif ( typeof elem == \"string\" ) {\n\t\t\t// Fix \"XHTML\"-style tags in all browsers\n\t\t\telem = elem.replace(/(<(\\w+)[^>]*?)\\/>/g, function(all, front, tag){\n\t\t\t\treturn tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?\n\t\t\t\t\tall :\n\t\t\t\t\tfront + \"></\" + tag + \">\";\n\t\t\t});\n\n\t\t\t// Trim whitespace, otherwise indexOf won't work as expected\n\t\t\tvar tags = jQuery.trim( elem ).toLowerCase(), div = context.createElement(\"div\");\n\n\t\t\tvar wrap =\n\t\t\t\t// option or optgroup\n\t\t\t\t!tags.indexOf(\"<opt\") &&\n\t\t\t\t[ 1, \"<select multiple='multiple'>\", \"</select>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<leg\") &&\n\t\t\t\t[ 1, \"<fieldset>\", \"</fieldset>\" ] ||\n\t\t\t\t\n\t\t\t\ttags.match(/^<(thead|tbody|tfoot|colg|cap)/) &&\n\t\t\t\t[ 1, \"<table>\", \"</table>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<tr\") &&\n\t\t\t\t[ 2, \"<table><tbody>\", \"</tbody></table>\" ] ||\n\t\t\t\t\n\t\t\t \t// <thead> matched above\n\t\t\t\t(!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\")) &&\n\t\t\t\t[ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<col\") &&\n\t\t\t\t[ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ] ||\n\n\t\t\t\t// IE can't serialize <link> and <script> tags normally\n\t\t\t\tjQuery.browser.msie &&\n\t\t\t\t[ 1, \"div<div>\", \"</div>\" ] ||\n\t\t\t\t\n\t\t\t\t[ 0, \"\", \"\" ];\n\n\t\t\t// Go to html and back, then peel off extra wrappers\n\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];\n\t\t\t\n\t\t\t// Move to the right depth\n\t\t\twhile ( wrap[0]-- )\n\t\t\t\tdiv = div.lastChild;\n\t\t\t"}]},
{"id":"b47a39a65433ed3d0e526259a3a24c8f2e824ce6","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[1181,1253],"code":"\t\tvar ret = [];\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( var i = 0, length = elems.length; i < length; i++ )\n\t\t\tif ( !inv && callback( elems[ i ], i ) || inv && !callback( elems[ i ], i ) )\n\t\t\t\tret.push( elems[ i ] );\n\n\t\treturn ret;\n\t},\n\n\tmap: function( elems, callback ) {\n\t\tvar ret = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\t// new value (or values).\n\t\tfor ( var i = 0, length = elems.length; i < length; i++ ) {\n\t\t\tvar value = callback( elems[ i ], i );\n\n\t\t\tif ( value !== null && value != undefined ) {\n\t\t\t\tif ( value.constructor != Array )\n\t\t\t\t\tvalue = [ value ];\n\n\t\t\t\tret = ret.concat( value );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n});\n\nvar userAgent = navigator.userAgent.toLowerCase();\n\n// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match( /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/ ) || [])[1],\n\tsafari: /webkit/.test( userAgent ),\n\topera: /opera/.test( userAgent ),\n\tmsie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),\n\tmozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )\n};\n\nvar styleFloat = jQuery.browser.msie ?\n\t\"styleFloat\" :\n\t\"cssFloat\";\n\t\njQuery.extend({\n\t// Check to see if the W3C box model is being used\n\tboxModel: !jQuery.browser.msie || document.compatMode == \"CSS1Compat\",\n\t\n\tprops: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": styleFloat,\n\t\tcssFloat: styleFloat,\n\t\tstyleFloat: styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\",\n\t\tmaxlength: \"maxLength\",\n\t\tselectedIndex: \"selectedIndex\",\n\t\tdefaultValue: \"defaultValue\",\n\t\ttagName: \"tagName\",\n\t\tnodeName: \"nodeName\"\n\t}\n});\n\njQuery.each({\n\tparent: function(elem){return elem.parentNode;},"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[1163,1235],"code":"\t\tvar ret = [];\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( var i = 0, length = elems.length; i < length; i++ )\n\t\t\tif ( !inv && callback( elems[ i ], i ) || inv && !callback( elems[ i ], i ) )\n\t\t\t\tret.push( elems[ i ] );\n\n\t\treturn ret;\n\t},\n\n\tmap: function( elems, callback ) {\n\t\tvar ret = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\t// new value (or values).\n\t\tfor ( var i = 0, length = elems.length; i < length; i++ ) {\n\t\t\tvar value = callback( elems[ i ], i );\n\n\t\t\tif ( value !== null && value != undefined ) {\n\t\t\t\tif ( value.constructor != Array )\n\t\t\t\t\tvalue = [ value ];\n\n\t\t\t\tret = ret.concat( value );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n});\n\nvar userAgent = navigator.userAgent.toLowerCase();\n\n// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match( /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/ ) || [])[1],\n\tsafari: /webkit/.test( userAgent ),\n\topera: /opera/.test( userAgent ),\n\tmsie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),\n\tmozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )\n};\n\nvar styleFloat = jQuery.browser.msie ?\n\t\"styleFloat\" :\n\t\"cssFloat\";\n\t\njQuery.extend({\n\t// Check to see if the W3C box model is being used\n\tboxModel: !jQuery.browser.msie || document.compatMode == \"CSS1Compat\",\n\t\n\tprops: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": styleFloat,\n\t\tcssFloat: styleFloat,\n\t\tstyleFloat: styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\",\n\t\tmaxlength: \"maxLength\",\n\t\tselectedIndex: \"selectedIndex\",\n\t\tdefaultValue: \"defaultValue\",\n\t\ttagName: \"tagName\",\n\t\tnodeName: \"nodeName\"\n\t}\n});\n\njQuery.each({\n\tparent: \"elem.parentNode\","}]},
{"id":"69cfa08cd434d14428e54fd05ef3f7e48fce980e","instances":[{"path":"./jquery-data/1.2.3/src/core.js","lines":[1263,1366],"code":"\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar ret = jQuery.map( this, fn );\n\n\t\tif ( selector && typeof selector == \"string\" )\n\t\t\tret = jQuery.multiFilter( selector, ret );\n\n\t\treturn this.pushStack( jQuery.unique( ret ) );\n\t};\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function(name, original){\n\tjQuery.fn[ name ] = function() {\n\t\tvar args = arguments;\n\n\t\treturn this.each(function(){\n\t\t\tfor ( var i = 0, length = args.length; i < length; i++ )\n\t\t\t\tjQuery( args[ i ] )[ original ]( this );\n\t\t});\n\t};\n});\n\njQuery.each({\n\tremoveAttr: function( name ) {\n\t\tjQuery.attr( this, name, \"\" );\n\t\tif (this.nodeType == 1) \n\t\t\tthis.removeAttribute( name );\n\t},\n\n\taddClass: function( classNames ) {\n\t\tjQuery.className.add( this, classNames );\n\t},\n\n\tremoveClass: function( classNames ) {\n\t\tjQuery.className.remove( this, classNames );\n\t},\n\n\ttoggleClass: function( classNames ) {\n\t\tjQuery.className[ jQuery.className.has( this, classNames ) ? \"remove\" : \"add\" ]( this, classNames );\n\t},\n\n\tremove: function( selector ) {\n\t\tif ( !selector || jQuery.filter( selector, [ this ] ).r.length ) {\n\t\t\t// Prevent memory leaks\n\t\t\tjQuery( \"*\", this ).add(this).each(function(){\n\t\t\t\tjQuery.event.remove(this);\n\t\t\t\tjQuery.removeData(this);\n\t\t\t});\n\t\t\tif (this.parentNode)\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t}\n\t},\n\n\tempty: function() {\n\t\t// Remove element nodes and prevent memory leaks\n\t\tjQuery( \">*\", this ).remove();\n\t\t\n\t\t// Remove any remaining nodes\n\t\twhile ( this.firstChild )\n\t\t\tthis.removeChild( this.firstChild );\n\t}\n}, function(name, fn){\n\tjQuery.fn[ name ] = function(){\n\t\treturn this.each( fn, arguments );\n\t};\n});\n\njQuery.each([ \"Height\", \"Width\" ], function(i, name){\n\tvar type = name.toLowerCase();\n\t\n\tjQuery.fn[ type ] = function( size ) {\n\t\t// Get window width or height\n\t\treturn this[0] == window ?\n\t\t\t// Opera reports document.body.client[Width/Height] properly in both quirks and standards\n\t\t\tjQuery.browser.opera && document.body[ \"client\" + name ] || \n\t\t\t\n\t\t\t// Safari reports inner[Width/Height] just fine (Mozilla and Opera include scroll bar widths)\n\t\t\tjQuery.browser.safari && window[ \"inner\" + name ] ||\n\t\t\t\n\t\t\t// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode\n\t\t\tdocument.compatMode == \"CSS1Compat\" && document.documentElement[ \"client\" + name ] || document.body[ \"client\" + name ] :\n\t\t\n\t\t\t// Get document width or height\n\t\t\tthis[0] == document ?\n\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height], whichever is greater\n\t\t\t\tMath.max( \n\t\t\t\t\tMath.max(document.body[\"scroll\" + name], document.documentElement[\"scroll\" + name]), \n\t\t\t\t\tMath.max(document.body[\"offset\" + name], document.documentElement[\"offset\" + name]) \n\t\t\t\t) :\n\n\t\t\t\t// Get or set width or height on the element\n\t\t\t\tsize == undefined ?\n\t\t\t\t\t// Get width or height on the element\n\t\t\t\t\t(this.length ? jQuery.css( this[0], type ) : null) :\n"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[1247,1350],"code":"\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar ret = jQuery.map( this, fn );\n\n\t\tif ( selector && typeof selector == \"string\" )\n\t\t\tret = jQuery.multiFilter( selector, ret );\n\n\t\treturn this.pushStack( jQuery.unique( ret ) );\n\t};\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function(name, original){\n\tjQuery.fn[ name ] = function() {\n\t\tvar args = arguments;\n\n\t\treturn this.each(function(){\n\t\t\tfor ( var i = 0, length = args.length; i < length; i++ )\n\t\t\t\tjQuery( args[ i ] )[ original ]( this );\n\t\t});\n\t};\n});\n\njQuery.each({\n\tremoveAttr: function( name ) {\n\t\tjQuery.attr( this, name, \"\" );\n\t\tif (this.nodeType == 1) \n\t\t\tthis.removeAttribute( name );\n\t},\n\n\taddClass: function( classNames ) {\n\t\tjQuery.className.add( this, classNames );\n\t},\n\n\tremoveClass: function( classNames ) {\n\t\tjQuery.className.remove( this, classNames );\n\t},\n\n\ttoggleClass: function( classNames ) {\n\t\tjQuery.className[ jQuery.className.has( this, classNames ) ? \"remove\" : \"add\" ]( this, classNames );\n\t},\n\n\tremove: function( selector ) {\n\t\tif ( !selector || jQuery.filter( selector, [ this ] ).r.length ) {\n\t\t\t// Prevent memory leaks\n\t\t\tjQuery( \"*\", this ).add(this).each(function(){\n\t\t\t\tjQuery.event.remove(this);\n\t\t\t\tjQuery.removeData(this);\n\t\t\t});\n\t\t\tif (this.parentNode)\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t}\n\t},\n\n\tempty: function() {\n\t\t// Remove element nodes and prevent memory leaks\n\t\tjQuery( \">*\", this ).remove();\n\t\t\n\t\t// Remove any remaining nodes\n\t\twhile ( this.firstChild )\n\t\t\tthis.removeChild( this.firstChild );\n\t}\n}, function(name, fn){\n\tjQuery.fn[ name ] = function(){\n\t\treturn this.each( fn, arguments );\n\t};\n});\n\njQuery.each([ \"Height\", \"Width\" ], function(i, name){\n\tvar type = name.toLowerCase();\n\t\n\tjQuery.fn[ type ] = function( size ) {\n\t\t// Get window width or height\n\t\treturn this[0] == window ?\n\t\t\t// Opera reports document.body.client[Width/Height] properly in both quirks and standards\n\t\t\tjQuery.browser.opera && document.body[ \"client\" + name ] || \n\t\t\t\n\t\t\t// Safari reports inner[Width/Height] just fine (Mozilla and Opera include scroll bar widths)\n\t\t\tjQuery.browser.safari && window[ \"inner\" + name ] ||\n\t\t\t\n\t\t\t// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode\n\t\t\tdocument.compatMode == \"CSS1Compat\" && document.documentElement[ \"client\" + name ] || document.body[ \"client\" + name ] :\n\t\t\n\t\t\t// Get document width or height\n\t\t\tthis[0] == document ?\n\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height], whichever is greater\n\t\t\t\tMath.max( \n\t\t\t\t\tMath.max(document.body[\"scroll\" + name], document.documentElement[\"scroll\" + name]), \n\t\t\t\t\tMath.max(document.body[\"offset\" + name], document.documentElement[\"offset\" + name]) \n\t\t\t\t) :\n\n\t\t\t\t// Get or set width or height on the element\n\t\t\t\tsize == undefined ?\n\t\t\t\t\t// Get width or height on the element\n\t\t\t\t\t(this.length ? jQuery.css( this[0], type ) : null) :\n"}]},
{"id":"7b0250f95da6fcaf39ed0dc37410979bfc6e7267","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[1,112],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(elem, types, handler, data) {\n\t\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\t\treturn;\n\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && elem.setInterval != undefined )\n\t\t\telem = window;\n\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// if data is passed, bind to handler \n\t\tif( data != undefined ) { \n\t\t\t// Create temporary function pointer to original handler \n\t\t\tvar fn = handler; \n\n\t\t\t// Create unique handler function, wrapped around original handler \n\t\t\thandler = function() { \n\t\t\t\t// Pass arguments and context to original handler \n\t\t\t\treturn fn.apply(this, arguments); \n\t\t\t};\n\n\t\t\t// Store data in unique handler \n\t\t\thandler.data = data;\n\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\t\thandler.guid = fn.guid;\n\t\t}\n\n\t\t// Init the element's event structure\n\t\tvar events = jQuery.data(elem, \"events\") || jQuery.data(elem, \"events\", {}),\n\t\t\thandle = jQuery.data(elem, \"handle\") || jQuery.data(elem, \"handle\", function(){\n\t\t\t\t// returned undefined or false\n\t\t\t\tvar val;\n\n\t\t\t\t// Handle the second event of a trigger and when\n\t\t\t\t// an event is called after a page has unloaded\n\t\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\t\treturn val;\n\t\t\n\t\t\t\tval = jQuery.event.handle.apply(arguments.callee.elem, arguments);\n\t\t\n\t\t\t\treturn val;\n\t\t\t});\n\t\t// Add elem as a property of the handle function\n\t\t// This is to prevent a memory leak with non-native\n\t\t// event in IE.\n\t\thandle.elem = elem;\n\t\t\t\n\t\t\t// Handle multiple events seperated by a space\n\t\t\t// jQuery(...).bind(\"mouseover mouseout\", fn);\n\t\t\tjQuery.each(types.split(/\\s+/), function(index, type) {\n\t\t\t\t// Namespaced event handlers\n\t\t\t\tvar parts = type.split(\".\");\n\t\t\t\ttype = parts[0];\n\t\t\t\thandler.type = parts[1];\n\n\t\t\t\t// Get the current list of functions bound to this event\n\t\t\t\tvar handlers = events[type];\n\n\t\t\t\t// Init the event handler queue\n\t\t\t\tif (!handlers) {\n\t\t\t\t\thandlers = events[type] = {};\n\t\t\n\t\t\t\t\t// Check for a special event handler\n\t\t\t\t\t// Only use addEventListener/attachEvent if the special\n\t\t\t\t\t// events handler returns false\n\t\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].setup.call(elem) === false ) {\n\t\t\t\t\t\t// Bind the global event handler to the element\n\t\t\t\t\t\tif (elem.addEventListener)\n\t\t\t\t\t\t\telem.addEventListener(type, handle, false);\n\t\t\t\t\t\telse if (elem.attachEvent)\n\t\t\t\t\t\t\telem.attachEvent(\"on\" + type, handle);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Add the function to the element's handler list\n\t\t\t\thandlers[handler.guid] = handler;\n\n\t\t\t\t// Keep track of which events have been used, for global triggering\n\t\t\t\tjQuery.event.global[type] = true;\n\t\t\t});\n\t\t\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\tguid: 1,\n\tglobal: {},"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[1,112],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(elem, types, handler, data) {\n\t\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\t\treturn;\n\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && elem.setInterval != undefined )\n\t\t\telem = window;\n\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// if data is passed, bind to handler \n\t\tif( data != undefined ) { \n\t\t\t// Create temporary function pointer to original handler \n\t\t\tvar fn = handler; \n\n\t\t\t// Create unique handler function, wrapped around original handler \n\t\t\thandler = function() { \n\t\t\t\t// Pass arguments and context to original handler \n\t\t\t\treturn fn.apply(this, arguments); \n\t\t\t};\n\n\t\t\t// Store data in unique handler \n\t\t\thandler.data = data;\n\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\t\thandler.guid = fn.guid;\n\t\t}\n\n\t\t// Init the element's event structure\n\t\tvar events = jQuery.data(elem, \"events\") || jQuery.data(elem, \"events\", {}),\n\t\t\thandle = jQuery.data(elem, \"handle\") || jQuery.data(elem, \"handle\", function(){\n\t\t\t\t// returned undefined or false\n\t\t\t\tvar val;\n\n\t\t\t\t// Handle the second event of a trigger and when\n\t\t\t\t// an event is called after a page has unloaded\n\t\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\t\treturn val;\n\t\t\n\t\t\t\tval = jQuery.event.handle.apply(arguments.callee.elem, arguments);\n\t\t\n\t\t\t\treturn val;\n\t\t\t});\n\t\t// Add elem as a property of the handle function\n\t\t// This is to prevent a memory leak with non-native\n\t\t// event in IE.\n\t\thandle.elem = elem;\n\t\t\t\n\t\t\t// Handle multiple events seperated by a space\n\t\t\t// jQuery(...).bind(\"mouseover mouseout\", fn);\n\t\t\tjQuery.each(types.split(/\\s+/), function(index, type) {\n\t\t\t\t// Namespaced event handlers\n\t\t\t\tvar parts = type.split(\".\");\n\t\t\t\ttype = parts[0];\n\t\t\t\thandler.type = parts[1];\n\n\t\t\t\t// Get the current list of functions bound to this event\n\t\t\t\tvar handlers = events[type];\n\n\t\t\t\t// Init the event handler queue\n\t\t\t\tif (!handlers) {\n\t\t\t\t\thandlers = events[type] = {};\n\t\t\n\t\t\t\t\t// Check for a special event handler\n\t\t\t\t\t// Only use addEventListener/attachEvent if the special\n\t\t\t\t\t// events handler returns false\n\t\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].setup.call(elem) === false ) {\n\t\t\t\t\t\t// Bind the global event handler to the element\n\t\t\t\t\t\tif (elem.addEventListener)\n\t\t\t\t\t\t\telem.addEventListener(type, handle, false);\n\t\t\t\t\t\telse if (elem.attachEvent)\n\t\t\t\t\t\t\telem.attachEvent(\"on\" + type, handle);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Add the function to the element's handler list\n\t\t\t\thandlers[handler.guid] = handler;\n\n\t\t\t\t// Keep track of which events have been used, for global triggering\n\t\t\t\tjQuery.event.global[type] = true;\n\t\t\t});\n\t\t\n\t\t// Nullify elem to prevent memory leaks in IE\n\t\telem = null;\n\t},\n\n\tguid: 1,\n\tglobal: {},"}]},
{"id":"0490ab06272a38844f87e7f2e1a6fb35737f077c","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[115,139],"code":"else {\n\t// types is actually an event object here\n\tif ( types.type ) {\n\t\thandler = types.handler;\n\t\ttypes = types.type;\n\t}\n\t\n\t// Handle multiple events seperated by a space\n\t// jQuery(...).unbind(\"mouseover mouseout\", fn);\n\tjQuery.each(types.split(/\\s+/), function(index, type){\n\t\t// Namespaced event handlers\n\t\tvar parts = type.split(\".\");\n\t\ttype = parts[0];\n\t\t\n\t\tif ( events[type] ) {\n\t\t\t// remove the given handler for the given type\n\t\t\tif ( handler )\n\t\t\t\tdelete events[type][handler.guid];\n\n\t\t\t// remove all handlers for the given type\n\t\t\telse\n\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\tdelete events[type][handler];"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[115,139],"code":"else {\n\t// types is actually an event object here\n\tif ( types.type ) {\n\t\thandler = types.handler;\n\t\ttypes = types.type;\n\t}\n\t\n\t// Handle multiple events seperated by a space\n\t// jQuery(...).unbind(\"mouseover mouseout\", fn);\n\tjQuery.each(types.split(/\\s+/), function(index, type){\n\t\t// Namespaced event handlers\n\t\tvar parts = type.split(\".\");\n\t\ttype = parts[0];\n\t\t\n\t\tif ( events[type] ) {\n\t\t\t// remove the given handler for the given type\n\t\t\tif ( handler )\n\t\t\t\tdelete events[type][handler.guid];\n\n\t\t\t// remove all handlers for the given type\n\t\t\telse\n\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\tdelete events[type][handler];"}]},
{"id":"3184397edc90798d97df53b3fdf7763e00dfd8fa","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[134,170],"code":"\t\t\t\t\t// remove all handlers for the given type\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\t\t\tdelete events[type][handler];\n\n\t\t\t\t\t// remove generic event handler if no more handlers exist\n\t\t\t\t\tfor ( ret in events[type] ) break;\n\t\t\t\t\tif ( !ret ) {\n\t\t\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].teardown.call(elem) === false ) {\n\t\t\t\t\t\t\tif (elem.removeEventListener)\n\t\t\t\t\t\t\t\telem.removeEventListener(type, jQuery.data(elem, \"handle\"), false);\n\t\t\t\t\t\t\telse if (elem.detachEvent)\n\t\t\t\t\t\t\t\telem.detachEvent(\"on\" + type, jQuery.data(elem, \"handle\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret = null;\n\t\t\t\t\t\tdelete events[type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tfor ( ret in events ) break;\n\t\tif ( !ret ) {\n\t\t\tvar handle = jQuery.data( elem, \"handle\" );\n\t\t\tif ( handle ) handle.elem = null;\n\t\t\tjQuery.removeData( elem, \"events\" );\n\t\t\tjQuery.removeData( elem, \"handle\" );\n\t\t}\n\t}\n},\n\ntrigger: function(type, data, elem, donative, extra) {\n\t// Clone the incoming data, if any\n\tdata = jQuery.makeArray(data || []);"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[134,170],"code":"\t\t\t\t\t// remove all handlers for the given type\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\t\t\tdelete events[type][handler];\n\n\t\t\t\t\t// remove generic event handler if no more handlers exist\n\t\t\t\t\tfor ( ret in events[type] ) break;\n\t\t\t\t\tif ( !ret ) {\n\t\t\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].teardown.call(elem) === false ) {\n\t\t\t\t\t\t\tif (elem.removeEventListener)\n\t\t\t\t\t\t\t\telem.removeEventListener(type, jQuery.data(elem, \"handle\"), false);\n\t\t\t\t\t\t\telse if (elem.detachEvent)\n\t\t\t\t\t\t\t\telem.detachEvent(\"on\" + type, jQuery.data(elem, \"handle\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret = null;\n\t\t\t\t\t\tdelete events[type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tfor ( ret in events ) break;\n\t\tif ( !ret ) {\n\t\t\tvar handle = jQuery.data( elem, \"handle\" );\n\t\t\tif ( handle ) handle.elem = null;\n\t\t\tjQuery.removeData( elem, \"events\" );\n\t\t\tjQuery.removeData( elem, \"handle\" );\n\t\t}\n\t}\n},\n\ntrigger: function(type, data, elem, donative, extra) {\n\t// Clone the incoming data, if any\n\tdata = jQuery.makeArray(data || []);"}]},
{"id":"c4f8ccb7c581f060cae97fcad80e278925058100","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[178,198],"code":"if ( !elem ) {\n\t// Only trigger if we've ever bound an event for it\n\tif ( this.global[type] )\n\t\tjQuery(\"*\").add([window, document]).trigger(type, data);\n\n// Handle triggering a single element\n} else {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn undefined;\n\n\tvar val, ret, fn = jQuery.isFunction( elem[ type ] || null ),\n\t\t// Check to see if we need to provide a fake event, or not\n\t\tevent = !data[0] || !data[0].preventDefault;\n\t\n\t// Pass along a fake event\n\tif ( event )\n\t\tdata.unshift( this.fix({ type: type, target: elem }) );\n\n\t// Enforce the right trigger type\n\tdata[0].type = type;"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[173,193],"code":"if ( !elem ) {\n\t// Only trigger if we've ever bound an event for it\n\tif ( this.global[type] )\n\t\tjQuery(\"*\").add([window, document]).trigger(type, data);\n\n// Handle triggering a single element\n} else {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn undefined;\n\n\tvar val, ret, fn = jQuery.isFunction( elem[ type ] || null ),\n\t\t// Check to see if we need to provide a fake event, or not\n\t\tevent = !data[0] || !data[0].preventDefault;\n\t\n\t// Pass along a fake event\n\tif ( event )\n\t\tdata.unshift( this.fix({ type: type, target: elem }) );\n\n\t// Enforce the right trigger type\n\tdata[0].type = type;"}]},
{"id":"93f34b463c6db88c87553fa21dfafe1de9ff2836","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[203,260],"code":"\t\tif ( jQuery.isFunction( jQuery.data(elem, \"handle\") ) )\n\t\t\tval = jQuery.data(elem, \"handle\").apply( elem, data );\n\n\t\t// Handle triggering native .onfoo handlers\n\t\tif ( !fn && elem[\"on\"+type] && elem[\"on\"+type].apply( elem, data ) === false )\n\t\t\tval = false;\n\n\t\t// Extra functions don't get the custom event object\n\t\tif ( event )\n\t\t\tdata.shift();\n\n\t\t// Handle triggering of extra function\n\t\tif ( extra && jQuery.isFunction( extra ) ) {\n\t\t\t// call the extra function and tack the current return value on the end for possible inspection\n\t\t\tret = extra.apply( elem, val == null ? data : data.concat( val ) );\n\t\t\t// if anything is returned, give it precedence and have it overwrite the previous value\n\t\t\tif (ret !== undefined)\n\t\t\t\tval = ret;\n\t\t}\n\n\t\t// Trigger the native events (except for clicks on links)\n\t\tif ( fn && donative !== false && val !== false && !(jQuery.nodeName(elem, 'a') && type == \"click\") ) {\n\t\t\tthis.triggered = true;\n\t\t\ttry {\n\t\t\t\telem[ type ]();\n\t\t\t// prevent IE from throwing an error for some hidden elements\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\tthis.triggered = false;\n\t}\n\n\treturn val;\n},\n\nhandle: function(event) {\n\t// returned undefined or false\n\tvar val;\n\n\t// Empty object is for triggered events with no data\n\tevent = jQuery.event.fix( event || window.event || {} ); \n\n\t// Namespaced event handlers\n\tvar parts = event.type.split(\".\");\n\tevent.type = parts[0];\n\n\tvar handlers = jQuery.data(this, \"events\") && jQuery.data(this, \"events\")[event.type], args = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in handlers ) {\n\t\tvar handler = handlers[j];\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = handler;\n\t\targs[0].data = handler.data;\n\n\t\t// Filter the functions by class\n\t\tif ( !parts[1] && !event.exclusive || handler.type == parts[1] ) {"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[196,253],"code":"\t\tif ( jQuery.isFunction( jQuery.data(elem, \"handle\") ) )\n\t\t\tval = jQuery.data(elem, \"handle\").apply( elem, data );\n\n\t\t// Handle triggering native .onfoo handlers\n\t\tif ( !fn && elem[\"on\"+type] && elem[\"on\"+type].apply( elem, data ) === false )\n\t\t\tval = false;\n\n\t\t// Extra functions don't get the custom event object\n\t\tif ( event )\n\t\t\tdata.shift();\n\n\t\t// Handle triggering of extra function\n\t\tif ( extra && jQuery.isFunction( extra ) ) {\n\t\t\t// call the extra function and tack the current return value on the end for possible inspection\n\t\t\tret = extra.apply( elem, val == null ? data : data.concat( val ) );\n\t\t\t// if anything is returned, give it precedence and have it overwrite the previous value\n\t\t\tif (ret !== undefined)\n\t\t\t\tval = ret;\n\t\t}\n\n\t\t// Trigger the native events (except for clicks on links)\n\t\tif ( fn && donative !== false && val !== false && !(jQuery.nodeName(elem, 'a') && type == \"click\") ) {\n\t\t\tthis.triggered = true;\n\t\t\ttry {\n\t\t\t\telem[ type ]();\n\t\t\t// prevent IE from throwing an error for some hidden elements\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\tthis.triggered = false;\n\t}\n\n\treturn val;\n},\n\nhandle: function(event) {\n\t// returned undefined or false\n\tvar val;\n\n\t// Empty object is for triggered events with no data\n\tevent = jQuery.event.fix( event || window.event || {} ); \n\n\t// Namespaced event handlers\n\tvar parts = event.type.split(\".\");\n\tevent.type = parts[0];\n\n\tvar handlers = jQuery.data(this, \"events\") && jQuery.data(this, \"events\")[event.type], args = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in handlers ) {\n\t\tvar handler = handlers[j];\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = handler;\n\t\targs[0].data = handler.data;\n\n\t\t// Filter the functions by class\n\t\tif ( !parts[1] || handler.type == parts[1] ) {"}]},
{"id":"355cd63b04eea6b60ca8d52ebfb19121e31a584d","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[260,583],"code":"\t\t\tif ( !parts[1] && !event.exclusive || handler.type == parts[1] ) {\n\t\t\t\tvar ret = handler.apply( this, args );\n\n\t\t\t\tif ( val !== false )\n\t\t\t\t\tval = ret;\n\n\t\t\t\tif ( ret === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Clean up added properties in IE to prevent memory leak\n\t\tif (jQuery.browser.msie)\n\t\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\t\tevent.handler = event.data = null;\n\n\t\treturn val;\n\t},\n\n\tfix: function(event) {\n\t\t// store a copy of the original event object \n\t\t// and clone to set read-only properties\n\t\tvar originalEvent = event;\n\t\tevent = jQuery.extend({}, originalEvent);\n\t\t\n\t\t// add preventDefault and stopPropagation since \n\t\t// they will not work on the clone\n\t\tevent.preventDefault = function() {\n\t\t\t// if preventDefault exists run it on the original event\n\t\t\tif (originalEvent.preventDefault)\n\t\t\t\toriginalEvent.preventDefault();\n\t\t\t// otherwise set the returnValue property of the original event to false (IE)\n\t\t\toriginalEvent.returnValue = false;\n\t\t};\n\t\tevent.stopPropagation = function() {\n\t\t\t// if stopPropagation exists run it on the original event\n\t\t\tif (originalEvent.stopPropagation)\n\t\t\t\toriginalEvent.stopPropagation();\n\t\t\t// otherwise set the cancelBubble property of the original event to true (IE)\n\t\t\toriginalEvent.cancelBubble = true;\n\t\t};\n\t\t\n\t\t// Fix target property, if necessary\n\t\tif ( !event.target )\n\t\t\tevent.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either\n\t\t\t\t\n\t\t// check if target is a textnode (safari)\n\t\tif ( event.target.nodeType == 3 )\n\t\t\tevent.target = originalEvent.target.parentNode;\n\n\t\t// Add relatedTarget, if necessary\n\t\tif ( !event.relatedTarget && event.fromElement )\n\t\t\tevent.relatedTarget = event.fromElement == event.target ? event.toElement : event.fromElement;\n\n\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\tif ( event.pageX == null && event.clientX != null ) {\n\t\t\tvar doc = document.documentElement, body = document.body;\n\t\t\tevent.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc.clientLeft || 0);\n\t\t\tevent.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc.clientTop || 0);\n\t\t}\n\t\t\t\n\t\t// Add which for key events\n\t\tif ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) )\n\t\t\tevent.which = event.charCode || event.keyCode;\n\t\t\n\t\t// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)\n\t\tif ( !event.metaKey && event.ctrlKey )\n\t\t\tevent.metaKey = event.ctrlKey;\n\n\t\t// Add which for click: 1 == left; 2 == middle; 3 == right\n\t\t// Note: button is not normalized, so don't use it\n\t\tif ( !event.which && event.button )\n\t\t\tevent.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\n\t\t\t\n\t\treturn event;\n\t},\n\t\n\tspecial: {\n\t\tready: {\n\t\t\tsetup: function() {\n\t\t\t\t// Make sure the ready event is setup\n\t\t\t\tbindReady();\n\t\t\t\treturn;\n\t\t\t},\n\t\t\t\n\t\t\tteardown: function() { return; }\n\t\t},\n\t\t\n\t\tmouseenter: {\n\t\t\tsetup: function() {\n\t\t\t\tif ( jQuery.browser.msie ) return false;\n\t\t\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\n\t\t\tteardown: function() {\n\t\t\t\tif ( jQuery.browser.msie ) return false;\n\t\t\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[253,576],"code":"\t\t\tif ( !parts[1] || handler.type == parts[1] ) {\n\t\t\t\tvar ret = handler.apply( this, args );\n\n\t\t\t\tif ( val !== false )\n\t\t\t\t\tval = ret;\n\n\t\t\t\tif ( ret === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Clean up added properties in IE to prevent memory leak\n\t\tif (jQuery.browser.msie)\n\t\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\t\tevent.handler = event.data = null;\n\n\t\treturn val;\n\t},\n\n\tfix: function(event) {\n\t\t// store a copy of the original event object \n\t\t// and clone to set read-only properties\n\t\tvar originalEvent = event;\n\t\tevent = jQuery.extend({}, originalEvent);\n\t\t\n\t\t// add preventDefault and stopPropagation since \n\t\t// they will not work on the clone\n\t\tevent.preventDefault = function() {\n\t\t\t// if preventDefault exists run it on the original event\n\t\t\tif (originalEvent.preventDefault)\n\t\t\t\toriginalEvent.preventDefault();\n\t\t\t// otherwise set the returnValue property of the original event to false (IE)\n\t\t\toriginalEvent.returnValue = false;\n\t\t};\n\t\tevent.stopPropagation = function() {\n\t\t\t// if stopPropagation exists run it on the original event\n\t\t\tif (originalEvent.stopPropagation)\n\t\t\t\toriginalEvent.stopPropagation();\n\t\t\t// otherwise set the cancelBubble property of the original event to true (IE)\n\t\t\toriginalEvent.cancelBubble = true;\n\t\t};\n\t\t\n\t\t// Fix target property, if necessary\n\t\tif ( !event.target )\n\t\t\tevent.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either\n\t\t\t\t\n\t\t// check if target is a textnode (safari)\n\t\tif ( event.target.nodeType == 3 )\n\t\t\tevent.target = originalEvent.target.parentNode;\n\n\t\t// Add relatedTarget, if necessary\n\t\tif ( !event.relatedTarget && event.fromElement )\n\t\t\tevent.relatedTarget = event.fromElement == event.target ? event.toElement : event.fromElement;\n\n\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\tif ( event.pageX == null && event.clientX != null ) {\n\t\t\tvar doc = document.documentElement, body = document.body;\n\t\t\tevent.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc.clientLeft || 0);\n\t\t\tevent.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc.clientTop || 0);\n\t\t}\n\t\t\t\n\t\t// Add which for key events\n\t\tif ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) )\n\t\t\tevent.which = event.charCode || event.keyCode;\n\t\t\n\t\t// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)\n\t\tif ( !event.metaKey && event.ctrlKey )\n\t\t\tevent.metaKey = event.ctrlKey;\n\n\t\t// Add which for click: 1 == left; 2 == middle; 3 == right\n\t\t// Note: button is not normalized, so don't use it\n\t\tif ( !event.which && event.button )\n\t\t\tevent.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\n\t\t\t\n\t\treturn event;\n\t},\n\t\n\tspecial: {\n\t\tready: {\n\t\t\tsetup: function() {\n\t\t\t\t// Make sure the ready event is setup\n\t\t\t\tbindReady();\n\t\t\t\treturn;\n\t\t\t},\n\t\t\t\n\t\t\tteardown: function() { return; }\n\t\t},\n\t\t\n\t\tmouseenter: {\n\t\t\tsetup: function() {\n\t\t\t\tif ( jQuery.browser.msie ) return false;\n\t\t\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\n\t\t\tteardown: function() {\n\t\t\t\tif ( jQuery.browser.msie ) return false;\n\t\t\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);"}]},
{"id":"c1009edc91c0b52b8dc6da12ad82e092dc13b299","instances":[{"path":"./jquery-data/1.2.3/src/fx.js","lines":[1,419],"code":"jQuery.fn.extend({\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock || \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" ) {\n\t\t\t\t\tvar elem = jQuery(\"<\" + this.tagName + \" />\").appendTo(\"body\");\n\t\t\t\t\tthis.style.display = elem.css(\"display\");\n\t\t\t\t\t// handle an edge condition where css is - div { display:none; } or similar\n\t\t\t\t\tif (this.style.display == \"none\")\n\t\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t\t\telem.remove();\n\t\t\t\t}\n\t\t\t}).end();\n\t},\n\t\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\ttoggle: function( fn, fn2 ){\n\t\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\t\tthis._toggle( fn, fn2 ) :\n\t\t\tfn ?\n\t\t\t\tthis.animate({\n\t\t\t\t\theight: \"toggle\", width: \"toggle\", opacity: \"toggle\"\n\t\t\t\t}, fn, fn2) :\n\t\t\t\tthis.each(function(){\n\t\t\t\t\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ]();\n\t\t\t\t});\n\t},\n\t\n\tslideDown: function(speed,callback){\n\t\treturn this.animate({height: \"show\"}, speed, callback);\n\t},\n\t\n\tslideUp: function(speed,callback){\n\t\treturn this.animate({height: \"hide\"}, speed, callback);\n\t},\n\n\tslideToggle: function(speed, callback){\n\t\treturn this.animate({height: \"toggle\"}, speed, callback);\n\t},\n\t\n\tfadeIn: function(speed, callback){\n\t\treturn this.animate({opacity: \"show\"}, speed, callback);\n\t},\n\t\n\tfadeOut: function(speed, callback){\n\t\treturn this.animate({opacity: \"hide\"}, speed, callback);\n\t},\n\t\n\tfadeTo: function(speed,to,callback){\n\t\treturn this.animate({opacity: to}, speed, callback);\n\t},\n\t\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar optall = jQuery.speed(speed, easing, callback);\n\n\t\treturn this[ optall.queue === false ? \"each\" : \"queue\" ](function(){\n\t\t\tif ( this.nodeType != 1)\n\t\t\t\treturn false;\n\n\t\t\tvar opt = jQuery.extend({}, optall);\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"), self = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\topt.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[1,419],"code":"jQuery.fn.extend({\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock || \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" ) {\n\t\t\t\t\tvar elem = jQuery(\"<\" + this.tagName + \" />\").appendTo(\"body\");\n\t\t\t\t\tthis.style.display = elem.css(\"display\");\n\t\t\t\t\t// handle an edge condition where css is - div { display:none; } or similar\n\t\t\t\t\tif (this.style.display == \"none\")\n\t\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t\t\telem.remove();\n\t\t\t\t}\n\t\t\t}).end();\n\t},\n\t\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\ttoggle: function( fn, fn2 ){\n\t\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\t\tthis._toggle( fn, fn2 ) :\n\t\t\tfn ?\n\t\t\t\tthis.animate({\n\t\t\t\t\theight: \"toggle\", width: \"toggle\", opacity: \"toggle\"\n\t\t\t\t}, fn, fn2) :\n\t\t\t\tthis.each(function(){\n\t\t\t\t\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ]();\n\t\t\t\t});\n\t},\n\t\n\tslideDown: function(speed,callback){\n\t\treturn this.animate({height: \"show\"}, speed, callback);\n\t},\n\t\n\tslideUp: function(speed,callback){\n\t\treturn this.animate({height: \"hide\"}, speed, callback);\n\t},\n\n\tslideToggle: function(speed, callback){\n\t\treturn this.animate({height: \"toggle\"}, speed, callback);\n\t},\n\t\n\tfadeIn: function(speed, callback){\n\t\treturn this.animate({opacity: \"show\"}, speed, callback);\n\t},\n\t\n\tfadeOut: function(speed, callback){\n\t\treturn this.animate({opacity: \"hide\"}, speed, callback);\n\t},\n\t\n\tfadeTo: function(speed,to,callback){\n\t\treturn this.animate({opacity: to}, speed, callback);\n\t},\n\t\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar optall = jQuery.speed(speed, easing, callback);\n\n\t\treturn this[ optall.queue === false ? \"each\" : \"queue\" ](function(){\n\t\t\tif ( this.nodeType != 1)\n\t\t\t\treturn false;\n\n\t\t\tvar opt = jQuery.extend({}, optall);\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"), self = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\topt.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){"}]},
{"id":"b502c1039830917c7c5e7af29a62aff94c586a0f","instances":[{"path":"./jquery-data/1.2.3/src/offset.js","lines":[1,99],"code":"// The Offset Method\n// Originally By Brandon Aaron, part of the Dimension Plugin\n// http://jquery.com/plugins/project/dimensions\njQuery.fn.offset = function() {\n\tvar left = 0, top = 0, elem = this[0], results;\n\t\n\tif ( elem ) with ( jQuery.browser ) {\n\t\tvar parent       = elem.parentNode, \n\t\t    offsetChild  = elem,\n\t\t    offsetParent = elem.offsetParent, \n\t\t    doc          = elem.ownerDocument,\n\t\t    safari2      = safari && parseInt(version) < 522,\n\t\t    fixed        = jQuery.css(elem, \"position\") == \"fixed\";\n\t\n\t\t// Use getBoundingClientRect if available\n\t\tif ( elem.getBoundingClientRect ) {\n\t\t\tvar box = elem.getBoundingClientRect();\n\t\t\n\t\t\t// Add the document scroll offsets\n\t\t\tadd(box.left + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\n\t\t\t\tbox.top  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\n\t\t\n\t\t\t// IE adds the HTML element's border, by default it is medium which is 2px\n\t\t\t// IE 6 and 7 quirks mode the border width is overwritable by the following css html { border: 0; }\n\t\t\t// IE 7 standards mode, the border is always 2px\n\t\t\t// This border/offset is typically represented by the clientLeft and clientTop properties\n\t\t\t// However, in IE6 and 7 quirks mode the clientLeft and clientTop properties are not updated when overwriting it via CSS\n\t\t\t// Therefore this method will be off by 2px in IE while in quirksmode\n\t\t\tadd( -doc.documentElement.clientLeft, -doc.documentElement.clientTop );\n\t\n\t\t// Otherwise loop through the offsetParents and parentNodes\n\t\t} else {\n\t\t\n\t\t\t// Initial element offsets\n\t\t\tadd( elem.offsetLeft, elem.offsetTop );\n\t\t\t\n\t\t\t// Get parent offsets\n\t\t\twhile ( offsetParent ) {\n\t\t\t\t// Add offsetParent offsets\n\t\t\t\tadd( offsetParent.offsetLeft, offsetParent.offsetTop );\n\t\t\t\n\t\t\t\t// Mozilla and Safari > 2 does not include the border on offset parents\n\t\t\t\t// However Mozilla adds the border for table or table cells\n\t\t\t\tif ( mozilla && !/^t(able|d|h)$/i.test(offsetParent.tagName) || safari && !safari2 )\n\t\t\t\t\tborder( offsetParent );\n\t\t\t\t\t\n\t\t\t\t// Add the document scroll offsets if position is fixed on any offsetParent\n\t\t\t\tif ( !fixed && jQuery.css(offsetParent, \"position\") == \"fixed\" )\n\t\t\t\t\tfixed = true;\n\t\t\t\n\t\t\t\t// Set offsetChild to previous offsetParent unless it is the body element\n\t\t\t\toffsetChild  = /^body$/i.test(offsetParent.tagName) ? offsetChild : offsetParent;\n\t\t\t\t// Get next offsetParent\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\t\t\n\t\t\t// Get parent scroll offsets\n\t\t\twhile ( parent && parent.tagName && !/^body|html$/i.test(parent.tagName) ) {\n\t\t\t\t// Remove parent scroll UNLESS that parent is inline or a table to work around Opera inline/table scrollLeft/Top bug\n\t\t\t\tif ( !/^inline|table.*$/i.test(jQuery.css(parent, \"display\")) )\n\t\t\t\t\t// Subtract parent scroll offsets\n\t\t\t\t\tadd( -parent.scrollLeft, -parent.scrollTop );\n\t\t\t\n\t\t\t\t// Mozilla does not add the border for a parent that has overflow != visible\n\t\t\t\tif ( mozilla && jQuery.css(parent, \"overflow\") != \"visible\" )\n\t\t\t\t\tborder( parent );\n\t\t\t\n\t\t\t\t// Get next parent\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t\n\t\t\t// Safari <= 2 doubles body offsets with a fixed position element/offsetParent or absolutely positioned offsetChild\n\t\t\t// Mozilla doubles body offsets with a non-absolutely positioned offsetChild\n\t\t\tif ( (safari2 && (fixed || jQuery.css(offsetChild, \"position\") == \"absolute\")) || \n\t\t\t\t(mozilla && jQuery.css(offsetChild, \"position\") != \"absolute\") )\n\t\t\t\t\tadd( -doc.body.offsetLeft, -doc.body.offsetTop );\n\t\t\t\n\t\t\t// Add the document scroll offsets if position is fixed\n\t\t\tif ( fixed )\n\t\t\t\tadd(Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\n\t\t\t\t\tMath.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\n\t\t}\n\n\t\t// Return an object with top and left properties\n\t\tresults = { top: top, left: left };\n\t}\n\n\tfunction border(elem) {\n\t\tadd( jQuery.curCSS(elem, \"borderLeftWidth\", true), jQuery.curCSS(elem, \"borderTopWidth\", true) );\n\t}\n\n\tfunction add(l, t) {\n\t\tleft += parseInt(l) || 0;\n\t\ttop += parseInt(t) || 0;\n\t}\n\n\treturn results;\n};\n"},{"path":"./jquery-data/1.2.2/src/offset.js","lines":[1,99],"code":"// The Offset Method\n// Originally By Brandon Aaron, part of the Dimension Plugin\n// http://jquery.com/plugins/project/dimensions\njQuery.fn.offset = function() {\n\tvar left = 0, top = 0, elem = this[0], results;\n\t\n\tif ( elem ) with ( jQuery.browser ) {\n\t\tvar parent       = elem.parentNode, \n\t\t    offsetChild  = elem,\n\t\t    offsetParent = elem.offsetParent, \n\t\t    doc          = elem.ownerDocument,\n\t\t    safari2      = safari && parseInt(version) < 522,\n\t\t    fixed        = jQuery.css(elem, \"position\") == \"fixed\";\n\t\n\t\t// Use getBoundingClientRect if available\n\t\tif ( elem.getBoundingClientRect ) {\n\t\t\tvar box = elem.getBoundingClientRect();\n\t\t\n\t\t\t// Add the document scroll offsets\n\t\t\tadd(box.left + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\n\t\t\t\tbox.top  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\n\t\t\n\t\t\t// IE adds the HTML element's border, by default it is medium which is 2px\n\t\t\t// IE 6 and 7 quirks mode the border width is overwritable by the following css html { border: 0; }\n\t\t\t// IE 7 standards mode, the border is always 2px\n\t\t\t// This border/offset is typically represented by the clientLeft and clientTop properties\n\t\t\t// However, in IE6 and 7 quirks mode the clientLeft and clientTop properties are not updated when overwriting it via CSS\n\t\t\t// Therefore this method will be off by 2px in IE while in quirksmode\n\t\t\tadd( -doc.documentElement.clientLeft, -doc.documentElement.clientTop );\n\t\n\t\t// Otherwise loop through the offsetParents and parentNodes\n\t\t} else {\n\t\t\n\t\t\t// Initial element offsets\n\t\t\tadd( elem.offsetLeft, elem.offsetTop );\n\t\t\t\n\t\t\t// Get parent offsets\n\t\t\twhile ( offsetParent ) {\n\t\t\t\t// Add offsetParent offsets\n\t\t\t\tadd( offsetParent.offsetLeft, offsetParent.offsetTop );\n\t\t\t\n\t\t\t\t// Mozilla and Safari > 2 does not include the border on offset parents\n\t\t\t\t// However Mozilla adds the border for table or table cells\n\t\t\t\tif ( mozilla && !/^t(able|d|h)$/i.test(offsetParent.tagName) || safari && !safari2 )\n\t\t\t\t\tborder( offsetParent );\n\t\t\t\t\t\n\t\t\t\t// Add the document scroll offsets if position is fixed on any offsetParent\n\t\t\t\tif ( !fixed && jQuery.css(offsetParent, \"position\") == \"fixed\" )\n\t\t\t\t\tfixed = true;\n\t\t\t\n\t\t\t\t// Set offsetChild to previous offsetParent unless it is the body element\n\t\t\t\toffsetChild  = /^body$/i.test(offsetParent.tagName) ? offsetChild : offsetParent;\n\t\t\t\t// Get next offsetParent\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\t\t\n\t\t\t// Get parent scroll offsets\n\t\t\twhile ( parent && parent.tagName && !/^body|html$/i.test(parent.tagName) ) {\n\t\t\t\t// Remove parent scroll UNLESS that parent is inline or a table to work around Opera inline/table scrollLeft/Top bug\n\t\t\t\tif ( !/^inline|table.*$/i.test(jQuery.css(parent, \"display\")) )\n\t\t\t\t\t// Subtract parent scroll offsets\n\t\t\t\t\tadd( -parent.scrollLeft, -parent.scrollTop );\n\t\t\t\n\t\t\t\t// Mozilla does not add the border for a parent that has overflow != visible\n\t\t\t\tif ( mozilla && jQuery.css(parent, \"overflow\") != \"visible\" )\n\t\t\t\t\tborder( parent );\n\t\t\t\n\t\t\t\t// Get next parent\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t\n\t\t\t// Safari <= 2 doubles body offsets with a fixed position element/offsetParent or absolutely positioned offsetChild\n\t\t\t// Mozilla doubles body offsets with a non-absolutely positioned offsetChild\n\t\t\tif ( (safari2 && (fixed || jQuery.css(offsetChild, \"position\") == \"absolute\")) || \n\t\t\t\t(mozilla && jQuery.css(offsetChild, \"position\") != \"absolute\") )\n\t\t\t\t\tadd( -doc.body.offsetLeft, -doc.body.offsetTop );\n\t\t\t\n\t\t\t// Add the document scroll offsets if position is fixed\n\t\t\tif ( fixed )\n\t\t\t\tadd(Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\n\t\t\t\t\tMath.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\n\t\t}\n\n\t\t// Return an object with top and left properties\n\t\tresults = { top: top, left: left };\n\t}\n\n\tfunction border(elem) {\n\t\tadd( jQuery.curCSS(elem, \"borderLeftWidth\", true), jQuery.curCSS(elem, \"borderTopWidth\", true) );\n\t}\n\n\tfunction add(l, t) {\n\t\tleft += parseInt(l) || 0;\n\t\ttop += parseInt(t) || 0;\n\t}\n\n\treturn results;\n};\n"}]},
{"id":"126b5c830dbd244d709a662acde621453ea4f18a","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[1,11],"code":"\nvar chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?\n\t\t\"(?:[\\\\w*_-]|\\\\\\\\.)\" :\n\t\t\"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\",\n\tquickChild = new RegExp(\"^>\\\\s*(\" + chars + \"+)\"),\n\tquickID = new RegExp(\"^(\" + chars + \"+)(#)(\" + chars + \"+)\"),\n\tquickClass = new RegExp(\"^([#.]?)(\" + chars + \"*)\");\n\njQuery.extend({\n\texpr: {\n\t\t\"\": function(a,i,m){return m[2]==\"*\"||jQuery.nodeName(a,m[2]);},"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[1,11],"code":"\nvar chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?\n\t\t\"(?:[\\\\w*_-]|\\\\\\\\.)\" :\n\t\t\"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\",\n\tquickChild = new RegExp(\"^>\\\\s*(\" + chars + \"+)\"),\n\tquickID = new RegExp(\"^(\" + chars + \"+)(#)(\" + chars + \"+)\"),\n\tquickClass = new RegExp(\"^([#.]?)(\" + chars + \"*)\");\n\njQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\","}]},
{"id":"fc46fd7df6d7c33980adf0da959ed04f37b32b71","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[70,131],"code":"parse: [\n\t// Match: [@value='test'], [@foo]\n\t/^(\\[) *@?([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)\n\t\treturn [ ];\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last, nodeName;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t);\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = quickChild;\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\tnodeName = m[1].toUpperCase();\n\n\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\t\t\tr.push( c );"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[70,131],"code":"parse: [\n\t// Match: [@value='test'], [@foo]\n\t/^(\\[) *@?([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)\n\t\treturn [ ];\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last, nodeName;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t);\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = quickChild;\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\tnodeName = m[1].toUpperCase();\n\n\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\t\t\tr.push( c );"}]},
{"id":"aedb56d43a900592ffd7ebe43c335aa09662ab66","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[127,395],"code":"\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^([>+~])\\s*(\\w*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar merge = {};\n\t\t\t\tnodeName = m[2].toUpperCase();\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ ) {\n\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\tvar id = jQuery.data(n);\n\n\t\t\t\t\t\t\tif ( m == \"~\" && merge[id] ) break;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" ) merge[id] = true;\n\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions\n\t\t\tif ( !t.indexOf(\",\") ) {\n\t\t\t\t// Clean the result set\n\t\t\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t\t\t// Merge the result sets\n\t\t\t\tdone = jQuery.merge( done, ret );\n\n\t\t\t\t// Reset the context\n\t\t\t\tr = ret = [context];\n\n\t\t\t\t// Touch up the selector string\n\t\t\t\tt = \" \" + t.substr(1,t.length);\n\n\t\t\t} else {\n\t\t\t\t// Optimize for the case nodeName#idName\n\t\t\t\tvar re2 = quickID;\n\t\t\t\tvar m = re2.exec(t);\n\t\t\t\t\n\t\t\t\t// Re-organize the results, so that they're consistent\n\t\t\t\tif ( m ) {\n\t\t\t\t\tm = [ 0, m[2], m[3], m[1] ];\n\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t\t\t// ID, class, and element selectors\n\t\t\t\t\tre2 = quickClass;\n\t\t\t\t\tm = re2.exec(t);\n\t\t\t\t}\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\n\t\t\t\tvar elem = ret[ret.length-1];\n\n\t\t\t\t// Try to do a global search by ID, where we can\n\t\t\t\tif ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t\t\t\t\t// Optimization for HTML document case\n\t\t\t\t\tvar oid = elem.getElementById(m[2]);\n\t\t\t\t\t\n\t\t\t\t\t// Do a quick check for the existence of the actual ID attribute\n\t\t\t\t\t// to avoid selecting by the name attribute in IE\n\t\t\t\t\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\t\t\t\t\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\t\t\t\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t\t\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t\t\t// that div#foo searches will be really fast\n\t\t\t\t\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\t\t\t\t} else {\n\t\t\t\t\t// We need to find all descendant elements\n\t\t\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t\t\t// Grab the tag name being searched for"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[127,395],"code":"\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^([>+~])\\s*(\\w*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar merge = {};\n\t\t\t\tnodeName = m[2].toUpperCase();\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ ) {\n\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\tvar id = jQuery.data(n);\n\n\t\t\t\t\t\t\tif ( m == \"~\" && merge[id] ) break;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" ) merge[id] = true;\n\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions\n\t\t\tif ( !t.indexOf(\",\") ) {\n\t\t\t\t// Clean the result set\n\t\t\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t\t\t// Merge the result sets\n\t\t\t\tdone = jQuery.merge( done, ret );\n\n\t\t\t\t// Reset the context\n\t\t\t\tr = ret = [context];\n\n\t\t\t\t// Touch up the selector string\n\t\t\t\tt = \" \" + t.substr(1,t.length);\n\n\t\t\t} else {\n\t\t\t\t// Optimize for the case nodeName#idName\n\t\t\t\tvar re2 = quickID;\n\t\t\t\tvar m = re2.exec(t);\n\t\t\t\t\n\t\t\t\t// Re-organize the results, so that they're consistent\n\t\t\t\tif ( m ) {\n\t\t\t\t\tm = [ 0, m[2], m[3], m[1] ];\n\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t\t\t// ID, class, and element selectors\n\t\t\t\t\tre2 = quickClass;\n\t\t\t\t\tm = re2.exec(t);\n\t\t\t\t}\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\n\t\t\t\tvar elem = ret[ret.length-1];\n\n\t\t\t\t// Try to do a global search by ID, where we can\n\t\t\t\tif ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t\t\t\t\t// Optimization for HTML document case\n\t\t\t\t\tvar oid = elem.getElementById(m[2]);\n\t\t\t\t\t\n\t\t\t\t\t// Do a quick check for the existence of the actual ID attribute\n\t\t\t\t\t// to avoid selecting by the name attribute in IE\n\t\t\t\t\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\t\t\t\t\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\t\t\t\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t\t\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t\t\t// that div#foo searches will be really fast\n\t\t\t\t\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\t\t\t\t} else {\n\t\t\t\t\t// We need to find all descendant elements\n\t\t\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t\t\t// Grab the tag name being searched for"}]}]
