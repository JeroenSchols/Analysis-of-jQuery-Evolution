[{"id":"418dbd8332fd2666a108a1664640c036cce482ad","instances":[{"path":"./jquery-data/2.0.2/src/attributes.js","lines":[31,52],"code":"\tproceed = typeof value === \"string\" && value;\n\nif ( jQuery.isFunction( value ) ) {\n\treturn this.each(function( j ) {\n\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t});\n}\n\nif ( proceed ) {\n\t// The disjunction here is for better compressibility (see removeClass)\n\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\tfor ( ; i < len; i++ ) {\n\t\telem = this[ i ];\n\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\" \"\n\t\t);\n\n\t\tif ( cur ) {\n\t\t\tj = 0;\n\t\t\twhile ( (clazz = classes[j++]) ) {"},{"path":"./jquery-data/2.0.2/src/attributes.js","lines":[70,90],"code":"\tproceed = arguments.length === 0 || typeof value === \"string\" && value;\n\nif ( jQuery.isFunction( value ) ) {\n\treturn this.each(function( j ) {\n\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t});\n}\nif ( proceed ) {\n\tclasses = ( value || \"\" ).match( core_rnotwhite ) || [];\n\n\tfor ( ; i < len; i++ ) {\n\t\telem = this[ i ];\n\t\t// This expression is here for better compressibility (see addClass)\n\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\"\"\n\t\t);\n\n\t\tif ( cur ) {\n\t\t\tj = 0;\n\t\t\twhile ( (clazz = classes[j++]) ) {"}]},
{"id":"0510b787a437878839988d814bbb811cc2158162","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[350,370],"code":"mouseenter: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseenter\n\t\targuments[0].type = \"mouseenter\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n},"},{"path":"./jquery-data/1.2.3/src/event.js","lines":[372,392],"code":"mouseleave: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseleave\n\t\targuments[0].type = \"mouseleave\";\n\t\treturn jQuery.event.handle.apply(this, arguments);\n\t}\n}"}]}]
