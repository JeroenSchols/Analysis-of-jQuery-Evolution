[{"id":"5bbc5bec70b7e4d0ebc9bac2bd43987a879ccb80","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[758,768],"code":"\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent([String])\", function() {\n\texpect(5);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\tisSet( $(\"#en, #sndp\").parent().get(), q(\"foo\"), \"Check for unique results from parent\" );\n});"},{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[776,785],"code":"\tisSet( $(\"#en, #sndp\").parents().get(), q(\"foo\", \"main\", \"dl\", \"body\", \"html\"), \"Check for unique results from parents\" );\n});\n\ntest(\"next([String])\", function() {\n\texpect(4);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n});"},{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[784,793],"code":"\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );\n});\n\t\ntest(\"prev([String])\", function() {\n\texpect(4);\n\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[735,743],"code":"\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent[s]([String])\", function() {\n\texpect(8);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[748,756],"code":"\tisSet( $(\"#groups\").parents(\"p, div\").get(), q(\"ap\", \"main\"), \"Check for multiple filters\" );\n});\n\ntest(\"next/prev([String])\", function() {\n\texpect(8);\n\tok( $(\"#ap\").next()[0].id == \"foo\", \"Simple next check\" );\n\tok( $(\"#ap\").next(\"div\")[0].id == \"foo\", \"Filtered next check\" );\n\tok( $(\"#ap\").next(\"p\").length == 0, \"Filtered next check, no match\" );\n\tok( $(\"#ap\").next(\"div, p\")[0].id == \"foo\", \"Multiple filters\" );"}]},
{"id":"cf40f4b1a1140eefe5dde7d5f179221330c60221","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[189,198],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[224,233],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\t\n$.ajaxTimeout(0);"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[100,108],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[128,135],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n$.ajaxTimeout(0);"}]},
{"id":"eb8f34f7612b136218f62f079a52e06719fa52b6","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[516,561],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[560,605],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[507,552],"code":"\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$('#yahoo').before($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"insertBefore(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('<b>buga</b>').insertBefore('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$(document.getElementById('first')).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$([document.getElementById('first'), document.getElementById('mark')]).insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements before\" );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n\t$(\"#first, #mark\").insertBefore('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[551,596],"code":"\tok( expected == $('#en').text(), \"Insert jQuery before\" );\n});\n\ntest(\"after(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('#yahoo').after('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$('#yahoo').after(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$('#yahoo').after($(\"#first, #mark\"));\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});\n\ntest(\"insertAfter(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: Yahoobuga';\n\t$('<b>buga</b>').insertAfter('#yahoo');\n\tok( expected == $('#en').text(), 'Insert String after' );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:\";\n\t$(document.getElementById('first')).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert element after\" );\n\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$([document.getElementById('mark'), document.getElementById('first')]).insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert array of elements after\" );\n\t\n\treset();\n\texpected = \"This is a normal link: YahooTry them out:diveintomark\";\n\t$(\"#mark, #first\").insertAfter('#yahoo');\n\tok( expected == $('#en').text(), \"Insert jQuery after\" );\n});"}]},
{"id":"b5d5874bcc18fd33778ecb54f2374af04f8d54d7","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[47,81],"code":"load: function( url, params, callback, ifModified ) {\n\tif ( jQuery.isFunction( url ) )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";\n\n\t// If the second parameter was provided\n\tif ( params )\n\t\t// If it's a function\n\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\n\t\t// Otherwise, build a param string\n\t\t} else {\n\t\t\tparams = jQuery.param( params );\n\t\t\ttype = \"POST\";\n\t\t}\n\n\tvar self = this;\n\n\t// Request the remote document\n\tjQuery.ajax({\n\t\turl: url,\n\t\ttype: type,\n\t\tdata: params,\n\t\tifModified: ifModified,\n\t\tcomplete: function(res, status){\n\t\t\t// If successful, inject the HTML into all the matched elements\n\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\tself.html(res.responseText);"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[46,80],"code":"load: function( url, params, callback, ifModified ) {\n\tif ( jQuery.isFunction( url ) )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";\n\n\t// If the second parameter was provided\n\tif ( params )\n\t\t// If it's a function\n\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\n\t\t// Otherwise, build a param string\n\t\t} else {\n\t\t\tparams = jQuery.param( params );\n\t\t\ttype = \"POST\";\n\t\t}\n\n\tvar self = this;\n\n\t// Request the remote document\n\tjQuery.ajax({\n\t\turl: url,\n\t\ttype: type,\n\t\tdata: params,\n\t\tifModified: ifModified,\n\t\tcomplete: function(res, status){\n\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\tself.attr(\"innerHTML\", res.responseText)"}]},
{"id":"2b999e2122e9e03e25ca851996c76ce50411bd2f","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[122,308],"code":"// Attach a bunch of functions for handling common AJAX events\n\n/**\n * Attach a function to be executed whenever an AJAX request begins\n * and there is none already active.\n *\n * @example $(\"#loading\").ajaxStart(function(){\n *   $(this).show();\n * });\n * @desc Show a loading message whenever an AJAX request starts\n * (and none is already active).\n *\n * @name ajaxStart\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever all AJAX requests have ended.\n *\n * @example $(\"#loading\").ajaxStop(function(){\n *   $(this).hide();\n * });\n * @desc Hide a loading message after all the AJAX requests have stopped.\n *\n * @name ajaxStop\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxComplete(function(request, settings){\n *   $(this).append(\"<li>Request Complete.</li>\");\n * });\n * @desc Show a message when an AJAX request completes.\n *\n * @name ajaxComplete\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes\n * successfully.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSuccess(function(request, settings){\n *   $(this).append(\"<li>Successful Request!</li>\");\n * });\n * @desc Show a message when an AJAX request completes successfully.\n *\n * @name ajaxSuccess\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request fails.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback. A third argument, an exception object,\n * is passed if an exception occured while processing the request.\n *\n * @example $(\"#msg\").ajaxError(function(request, settings){\n *   $(this).append(\"<li>Error requesting page \" + settings.url + \"</li>\");\n * });\n * @desc Show a message when an AJAX request fails.\n *\n * @name ajaxError\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n \n/**\n * Attach a function to be executed before an AJAX request is sent.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSend(function(request, settings){\n *   $(this).append(\"<li>Starting request at \" + settings.url + \"</li>\");\n * });\n * @desc Show a message before an AJAX request is sent.\n *\n * @name ajaxSend\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[135,320],"code":"// Attach a bunch of functions for handling common AJAX events\n\n/**\n * Attach a function to be executed whenever an AJAX request begins\n * and there is none already active.\n *\n * @example $(\"#loading\").ajaxStart(function(){\n *   $(this).show();\n * });\n * @desc Show a loading message whenever an AJAX request starts\n * (and none is already active).\n *\n * @name ajaxStart\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever all AJAX requests have ended.\n *\n * @example $(\"#loading\").ajaxStop(function(){\n *   $(this).hide();\n * });\n * @desc Hide a loading message after all the AJAX requests have stopped.\n *\n * @name ajaxStop\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxComplete(function(request, settings){\n *   $(this).append(\"<li>Request Complete.</li>\");\n * });\n * @desc Show a message when an AJAX request completes.\n *\n * @name ajaxComplete\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes\n * successfully.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSuccess(function(request, settings){\n *   $(this).append(\"<li>Successful Request!</li>\");\n * });\n * @desc Show a message when an AJAX request completes successfully.\n *\n * @name ajaxSuccess\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request fails.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback. A third argument, an exception object,\n * is passed if an exception occured while processing the request.\n *\n * @example $(\"#msg\").ajaxError(function(request, settings){\n *   $(this).append(\"<li>Error requesting page \" + settings.url + \"</li>\");\n * });\n * @desc Show a message when an AJAX request fails.\n *\n * @name ajaxError\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n \n/**\n * Attach a function to be executed before an AJAX request is sent.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSend(function(request, settings){\n *   $(this).append(\"<li>Starting request at \" + settings.url + \"</li>\");\n * });\n * @desc Show a message before an AJAX request is sent.\n *\n * @name ajaxSend\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax"}]},
{"id":"d8290f74df9cfcb4ce91c81462f1a8a7e5bc804d","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[586,612],"code":"s = jQuery.extend(true, s, jQuery.extend(true, {}, jQuery.ajaxSettings, s));\n\n// if data available\nif ( s.data ) {\n\t// convert data if not already a string\n\tif ( s.processData && typeof s.data != \"string\" )\n\t\ts.data = jQuery.param(s.data);\n\n\t// append data to url for get requests\n\tif ( s.type.toLowerCase() == \"get\" ) {\n\t\t// \"?\" + data or \"&\" + data (in case there are already params)\n\t\ts.url += (s.url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + s.data;\n\n\t\t// IE likes to send both get and post data, prevent this\n\t\ts.data = null;\n\t}\n}\n\n// Watch for a new set of requests\nif ( s.global && ! jQuery.active++ )\n\tjQuery.event.trigger( \"ajaxStart\" );\n\nvar requestDone = false;\n\n// Create the request object; Microsoft failed to properly\n// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\nvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[596,620],"code":"s = jQuery.extend({}, jQuery.ajaxSettings, s);\n\n// if data available\nif ( s.data ) {\n\t// convert data if not already a string\n\tif (s.processData && typeof s.data != \"string\")\n  \t\t\ts.data = jQuery.param(s.data);\n\t// append data to url for get requests\n\tif( s.type.toLowerCase() == \"get\" ) {\n\t\t// \"?\" + data or \"&\" + data (in case there are already params)\n\t\ts.url += ((s.url.indexOf(\"?\") > -1) ? \"&\" : \"?\") + s.data;\n\t\t// IE likes to send both get and post data, prevent this\n\t\ts.data = null;\n\t}\n}\n\n// Watch for a new set of requests\nif ( s.global && ! jQuery.active++ )\n\tjQuery.event.trigger( \"ajaxStart\" );\n\nvar requestDone = false;\n\n// Create the request object; Microsoft failed to properly\n// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\nvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();"}]},
{"id":"48f001f28fccec6ccdbbfdbb6afc6ac8c7b84769","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[461,777],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","},{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[472,779],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions that are often easier to understand and use,\n * but don't offer as much functionality (such as error callbacks).\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * '''Note:''' If you specify the dataType option described below, make sure\n * the server sends the correct MIME type in the response (eg. xml as \"text/xml\").\n * Sending the wrong MIME type can lead to unexpected problems in your script.\n * See [[Specifying the Data Type for AJAX Requests]] for more information.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout in milliseconds to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\","}]},
{"id":"900a3971dc4362ae7c3e91b642947c56ccbf281e","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajax.js","lines":[769,817],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar xml = type == \"xml\" || !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = xml ? r.responseXML : r.responseText;\n\n\tif ( xml && data.documentElement.tagName == \"parsererror\" )\n\t\tthrow \"parsererror\";\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[771,820],"code":"/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\t// evaluate scripts within html\n\tif ( type == \"html\" )\n\t\tjQuery(\"<div>\").html(data).evalScripts();\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"}]},
{"id":"b1a156124807fbe9d338f4e53118566ba51e96ee","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[33,45],"code":"\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json_obj.js\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json_obj.js\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(1);\n\tstop(true);"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[45,57],"code":"\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();"}]},
{"id":"cab9fcf4f1543d47abd5def40a95b1742be7d82d","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[119,137],"code":"\t  equals( testFoo, \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.html'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[83,101],"code":"\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();"}]},
{"id":"b56a2c9eea072f7107a613295c8322bcebce974c","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[201,205],"code":"$.ajax({url: url(\"data/name.html\"), beforeSend: send, success: success, error: error, complete: function() {\n  equals( counter.error, 0, 'Check succesful request, error callback' );\n  equals( counter.success, 2, 'Check succesful request, success callback' );\n  equals( counter.complete, 3, 'Check succesful request, complete callback' );\n  equals( counter.send, 2, 'Check succesful request, send callback' );"},{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[211,217],"code":" $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\nequals( counter.error, 2, 'Check failed request, error callback' );\nequals( counter.success, 0, 'Check failed request, success callback' );\nequals( counter.complete, 3, 'Check failed request, failed callback' );\nequals( counter.send, 2, 'Check failed request, send callback' );\nstart();\n }});"}]},
{"id":"c1870926ce1c21819af508ee80df29dc724759db","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[224,241],"code":"expect( isLocal ? 4 : 8 );\nstop();\n\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n\t\n$.ajaxTimeout(0);\n\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\n$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[128,141],"code":"expect(8);\nstop();\nvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\tsuccess = function() { counter.success++ },\n\terror = function() { counter.error++ },\n\tcomplete = function() { counter.complete++ },\n\tsend = function() { counter.send++ };\n$.ajaxTimeout(0);\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );"}]},
{"id":"eab8adc78807924957b48f56a1d2747ba6cbc37f","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[244,256],"code":" counter.error = counter.success = counter.complete = counter.send = 0;\n $.ajaxTimeout(500);\n \n $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n var x = counter;\n ok( counter.error == 1, 'Check failed request without globals' );\n ok( counter.success == 0, 'Check failed request without globals' );\n ok( counter.complete == 0, 'Check failed request without globals' );\n ok( counter.send == 1, 'Check failed request without globals' );\n start();\n }});\n} else\n\t  start();"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[142,155],"code":"\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {"}]},
{"id":"5dd28db498f0ddb2d7a1ed235f0038c65957401e","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[306,343],"code":"test(\"$.getJSON(String, Hash, Function) - JSON array\", function() {\n\texpect(4);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {\n\t  ok( json.data.lang == 'en', 'Check JSON: lang' );\n\t  ok( json.data.length == 25, 'Check JSON: length' );\n\t  start();\n\t});\n});\n\ntest(\"$.post(String, Hash, Function) - simple with xml\", function() {\n\texpect(2);\n\tstop();\n\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\t\n\tvar passed = 0;"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[193,229],"code":"test(\"$.getJSON(String, Hash, Function) - JSON array\", function() {\n\texpect(4);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {\n\t  ok( json.data.lang == 'en', 'Check JSON: lang' );\n\t  ok( json.data.length == 25, 'Check JSON: length' );\n\t  start();\n\t});\n});\n\ntest(\"$.post(String, Hash, Function) - simple with xml\", function() {\n\texpect(2);\n\tstop();\n\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;"}]},
{"id":"b1e2a9e79e6010406b02961b1b5574136da3a202","instances":[{"path":"./jquery-data/1.1.4/src/ajax/ajaxTest.js","lines":[361,423],"code":"\t$('#main').ajaxError(pass);\n\t\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),\n\t  error: pass,\n\t  success: fail\n\t});\n\t\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajaxTimeout(Number) with localtimeout\", function() {\n\tstop(); $.ajaxTimeout(50);\n\t$.ajax({\n\t  type: \"GET\",\n\t  timeout: 5000,\n\t  url: url(\"data/name.php?wait=1\"),\n\t  error: function() {\n\t\t   ok( false, 'Check for local timeout failed' );\n\t\t   start();\n\t  },\n\t  success: function() {\n\t    ok( true, 'Check for local timeout' );\n\t    start();\n\t  }\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajax - simple get\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?name=foo\"),\n\t  success: function(msg){\n\t    ok( msg == 'bar', 'Check for GET' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - simple post\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: url(\"data/name.php\"),\n\t  data: \"name=peter\",\n\t  success: function(msg){\n\t    ok( msg == 'pan', 'Check for POST' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"ajaxSetup()\", function() {\n\texpect(1);\n\tstop();\n\t$.ajaxSetup({"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[246,306],"code":"\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),\n\t  error: pass,\n\t  success: fail\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajaxTimeout(Number) with localtimeout\", function() {\n\tstop(); $.ajaxTimeout(50);\n\t$.ajax({\n\t  type: \"GET\",\n\t  timeout: 5000,\n\t  url: url(\"data/name.php?wait=1\"),\n\t  error: function() {\n\t\t   ok( false, 'Check for local timeout failed' );\n\t\t   start();\n\t  },\n\t  success: function() {\n\t    ok( true, 'Check for local timeout' );\n\t    start();\n\t  }\n\t});\n\t// reset timeout\n\t$.ajaxTimeout(0);\n});\n\ntest(\"$.ajax - simple get\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?name=foo\"),\n\t  success: function(msg){\n\t    ok( msg == 'bar', 'Check for GET' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - simple post\", function() {\n\texpect(1);\n\tstop();\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: url(\"data/name.php\"),\n\t  data: \"name=peter\",\n\t  success: function(msg){\n\t    ok( msg == 'pan', 'Check for POST' );\n\t    start();\n\t  }\n\t});\n});\n\t\ntest(\"$.ajax - dataType html\", function() {\n\texpect(5);\n\tstop();\n\tfoobar = null;"}]},
{"id":"2b400e1d5e8958d527cb7613cc14631238fbee4d","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[1,74],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\t\t\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// if data is passed, bind to handler \n\t\tif( data != undefined ) { \n        \t// Create temporary function pointer to original handler \n\t\t\tvar fn = handler; \n\n\t\t\t// Create unique handler function, wrapped around original handler \n\t\t\thandler = function() { \n\t\t\t\t// Pass arguments and context to original handler \n\t\t\t\treturn fn.apply(this, arguments); \n\t\t\t};\n\n\t\t\t// Store data in unique handler \n\t\t\thandler.data = data;\n\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\t\thandler.guid = fn.guid;\n\t\t}\n\n\t\t// Init the element's event structure\n\t\tif (!element.$events)\n\t\t\telement.$events = {};\n\t\t\n\t\tif (!element.$handle)\n\t\t\telement.$handle = function() {\n\t\t\t\t// returned undefined or false\n\t\t\t\tvar val;\n\n\t\t\t\t// Handle the second event of a trigger and when\n\t\t\t\t// an event is called after a page has unloaded\n\t\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\t  return val;\n\t\t\t\t\n\t\t\t\tval = jQuery.event.handle.apply(element, arguments);\n\t\t\t\t\n\t\t\t\treturn val;\n\t\t\t};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.$events[type];\n\n\t\t// Init the event handler queue\n\t\tif (!handlers) {\n\t\t\thandlers = element.$events[type] = {};\t\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\tif (element.addEventListener)\n\t\t\t\telement.addEventListener(type, element.$handle, false);\n\t\t\telse\n\t\t\t\telement.attachEvent(\"on\" + type, element.$handle);\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// Keep track of which events have been used, for global triggering"},{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[1,74],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\t\t\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// if data is passed, bind to handler \n\t\tif( data != undefined ) { \n        \t// Create temporary function pointer to original handler \n\t\t\tvar fn = handler; \n\n\t\t\t// Create unique handler function, wrapped around original handler \n\t\t\thandler = function() { \n\t\t\t\t// Pass arguments and context to original handler \n\t\t\t\treturn fn.apply(this, arguments); \n\t\t\t};\n\n\t\t\t// Store data in unique handler \n\t\t\thandler.data = data;\n\n\t\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\t\thandler.guid = fn.guid;\n\t\t}\n\n\t\t// Init the element's event structure\n\t\tif (!element.$events)\n\t\t\telement.$events = {};\n\t\t\n\t\tif (!element.$handle)\n\t\t\telement.$handle = function() {\n\t\t\t\t// returned undefined or false\n\t\t\t\tvar val;\n\n\t\t\t\t// Handle the second event of a trigger and when\n\t\t\t\t// an event is called after a page has unloaded\n\t\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\t  return val;\n\t\t\t\t\n\t\t\t\tval = jQuery.event.handle.apply(element, arguments);\n\t\t\t\t\n\t\t\t\treturn val;\n\t\t\t};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.$events[type];\n\n\t\t// Init the event handler queue\n\t\tif (!handlers) {\n\t\t\thandlers = element.$events[type] = {};\t\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\tif (element.addEventListener)\n\t\t\t\telement.addEventListener(type, element.$handle, false);\n\t\t\telse\n\t\t\t\telement.attachEvent(\"on\" + type, element.$handle);\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// Remember the function in a global list (for triggering)"}]},
{"id":"2616756dd738b4a62bf156c9cf0c3379e63b6022","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[8,104],"code":"// Bind an event to an element\n// Original by Dean Edwards\nadd: function(element, type, handler, data) {\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\telement = window;\n\t\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\t\t\n\t// if data is passed, bind to handler \n\tif( data != undefined ) { \n       \t// Create temporary function pointer to original handler \n\t\tvar fn = handler; \n\n\t\t// Create unique handler function, wrapped around original handler \n\t\thandler = function() { \n\t\t\t// Pass arguments and context to original handler \n\t\t\treturn fn.apply(this, arguments); \n\t\t};\n\n\t\t// Store data in unique handler \n\t\thandler.data = data;\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\thandler.guid = fn.guid;\n\t}\n\n\t// Init the element's event structure\n\tif (!element.$events)\n\t\telement.$events = {};\n\t\n\tif (!element.$handle)\n\t\telement.$handle = function() {\n\t\t\t// returned undefined or false\n\t\t\tvar val;\n\n\t\t\t// Handle the second event of a trigger and when\n\t\t\t// an event is called after a page has unloaded\n\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t  return val;\n\t\t\t\n\t\t\tval = jQuery.event.handle.apply(element, arguments);\n\t\t\t\n\t\t\treturn val;\n\t\t};\n\n\t// Get the current list of functions bound to this event\n\tvar handlers = element.$events[type];\n\n\t// Init the event handler queue\n\tif (!handlers) {\n\t\thandlers = element.$events[type] = {};\t\n\t\t\n\t\t// And bind the global event handler to the element\n\t\tif (element.addEventListener)\n\t\t\telement.addEventListener(type, element.$handle, false);\n\t\telse\n\t\t\telement.attachEvent(\"on\" + type, element.$handle);\n\t}\n\n\t// Add the function to the element's handler list\n\thandlers[handler.guid] = handler;\n\n\t// Keep track of which events have been used, for global triggering\n\tthis.global[type] = true;\n},\n\nguid: 1,\nglobal: {},\n\n// Detach an event or set of events from an element\nremove: function(element, type, handler) {\n\tvar events = element.$events, ret, index;\n\n\tif ( events ) {\n\t\t// type is actually an event object here\n\t\tif ( type && type.type ) {\n\t\t\thandler = type.handler;\n\t\t\ttype = type.type;\n\t\t}\n\t\t\n\t\tif ( !type ) {\n\t\t\tfor ( type in events )\n\t\t\t\tthis.remove( element, type );\n\n\t\t} else if ( events[type] ) {\n\t\t\t// remove the given handler for the given type\n\t\t\tif ( handler )\n\t\t\t\tdelete events[type][handler.guid];\n\t\t\t\n\t\t\t// remove all handlers for the given type\n\t\t\telse\n\t\t\t\tfor ( handler in element.$events[type] )\n\t\t\t\t\tdelete events[type][handler];"},{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[8,108],"code":"// Bind an event to an element\n// Original by Dean Edwards\nadd: function(element, type, handler, data) {\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\telement = window;\n\t\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\t\t\n\t// if data is passed, bind to handler \n\tif( data != undefined ) { \n       \t// Create temporary function pointer to original handler \n\t\tvar fn = handler; \n\n\t\t// Create unique handler function, wrapped around original handler \n\t\thandler = function() { \n\t\t\t// Pass arguments and context to original handler \n\t\t\treturn fn.apply(this, arguments); \n\t\t};\n\n\t\t// Store data in unique handler \n\t\thandler.data = data;\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\thandler.guid = fn.guid;\n\t}\n\n\t// Init the element's event structure\n\tif (!element.$events)\n\t\telement.$events = {};\n\t\n\tif (!element.$handle)\n\t\telement.$handle = function() {\n\t\t\t// returned undefined or false\n\t\t\tvar val;\n\n\t\t\t// Handle the second event of a trigger and when\n\t\t\t// an event is called after a page has unloaded\n\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t  return val;\n\t\t\t\n\t\t\tval = jQuery.event.handle.apply(element, arguments);\n\t\t\t\n\t\t\treturn val;\n\t\t};\n\n\t// Get the current list of functions bound to this event\n\tvar handlers = element.$events[type];\n\n\t// Init the event handler queue\n\tif (!handlers) {\n\t\thandlers = element.$events[type] = {};\t\n\t\t\n\t\t// And bind the global event handler to the element\n\t\tif (element.addEventListener)\n\t\t\telement.addEventListener(type, element.$handle, false);\n\t\telse\n\t\t\telement.attachEvent(\"on\" + type, element.$handle);\n\t}\n\n\t// Add the function to the element's handler list\n\thandlers[handler.guid] = handler;\n\n\t// Remember the function in a global list (for triggering)\n\tif (!this.global[type])\n\t\tthis.global[type] = [];\n\t// Only add the element to the global list once\n\tif (jQuery.inArray(element, this.global[type]) == -1)\n\t\tthis.global[type].push( element );\n},\n\nguid: 1,\nglobal: {},\n\n// Detach an event or set of events from an element\nremove: function(element, type, handler) {\n\tvar events = element.$events, ret, index;\n\n\tif ( events ) {\n\t\t// type is actually an event object here\n\t\tif ( type && type.type ) {\n\t\t\thandler = type.handler;\n\t\t\ttype = type.type;\n\t\t}\n\t\t\n\t\tif ( !type ) {\n\t\t\tfor ( type in events )\n\t\t\t\tthis.remove( element, type );\n\n\t\t} else if ( events[type] ) {\n\t\t\t// remove the given handler for the given type\n\t\t\tif ( handler )\n\t\t\t\tdelete events[type][handler.guid];\n\t\t\t\n\t\t\t// remove all handlers for the given type\n\t\t\telse\n\t\t\t\tfor ( handler in element.$events[type] )"}]},
{"id":"7bd3a364e1269c3754e9caf7538cc07f11d8b19d","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[164,198],"code":"\tvar c = this.$events && this.$events[event.type], args = Array.prototype.slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tval = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie)\n\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\tevent.handler = event.data = null;\n\n\treturn val;\n},\n\nfix: function(event) {\n\t// store a copy of the original event object \n\t// and clone to set read-only properties\n\tvar originalEvent = event;\n\tevent = jQuery.extend({}, originalEvent);\n\t\n\t// add preventDefault and stopPropagation since \n\t// they will not work on the clone\n\tevent.preventDefault = function() {\n\t\t// if preventDefault exists run it on the original event\n\t\tif (originalEvent.preventDefault)"},{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[168,202],"code":"\tvar c = this.$events && this.$events[event.type], args = [].slice.call( arguments, 1 );\n\targs.unshift( event );\n\n\tfor ( var j in c ) {\n\t\t// Pass in a reference to the handler function itself\n\t\t// So that we can later remove it\n\t\targs[0].handler = c[j];\n\t\targs[0].data = c[j].data;\n\n\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tval = false;\n\t\t}\n\t}\n\n\t// Clean up added properties in IE to prevent memory leak\n\tif (jQuery.browser.msie)\n\t\tevent.target = event.preventDefault = event.stopPropagation =\n\t\t\tevent.handler = event.data = null;\n\n\treturn val;\n},\n\nfix: function(event) {\n\t// store a copy of the original event object \n\t// and clone to set read-only properties\n\tvar originalEvent = event;\n\tevent = jQuery.extend({}, originalEvent);\n\t\n\t// add preventDefault and stopPropagation since \n\t// they will not work on the clone\n\tevent.preventDefault = function() {\n\t\t// if preventDefault exists run it on the original event\n\t\tif (originalEvent.preventDefault)"}]},
{"id":"dbaa09aa61e8f97e9a24d5fdd59a78dbb0a498e3","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[231,481],"code":"\t\tif ( !event.which && (event.charCode || event.keyCode) )\n\t\t\tevent.which = event.charCode || event.keyCode;\n\t\t\n\t\t// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)\n\t\tif ( !event.metaKey && event.ctrlKey )\n\t\t\tevent.metaKey = event.ctrlKey;\n\n\t\t// Add which for click: 1 == left; 2 == middle; 3 == right\n\t\t// Note: button is not normalized, so don't use it\n\t\tif ( !event.which && event.button )\n\t\t\tevent.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\n\t\t\t\n\t\treturn event;\n\t}\n};\n\njQuery.fn.extend({\n\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second parameter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * Calling bind with an event type of \"unload\" will automatically\n\t * use the one method instead of bind to prevent memory leaks.\n\t *\n\t * @example $(\"p\").bind(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @example function handler(event) {\n\t *   alert(event.data.foo);\n\t * }\n\t * $(\"p\").bind(\"click\", {foo: \"bar\"}, handler)\n\t * @result alert(\"bar\")\n\t * @desc Pass some additional data to the event handler.\n\t *\n\t * @example $(\"form\").bind(\"submit\", function() { return false; })\n\t * @desc Cancel a default action and prevent it from bubbling by returning false\n\t * from your function.\n\t *\n\t * @example $(\"form\").bind(\"submit\", function(event){\n\t *   event.preventDefault();\n\t * });\n\t * @desc Cancel only the default action by using the preventDefault method.\n\t *\n\t *\n\t * @example $(\"form\").bind(\"submit\", function(event){\n\t *   event.stopPropagation();\n\t * });\n\t * @desc Stop only an event from bubbling by using the stopPropagation method.\n\t *\n\t * @name bind\n\t * @type jQuery\n\t * @param String type An event type\n\t * @param Object data (optional) Additional data passed to the event handler as event.data\n\t * @param Function fn A function to bind to the event on each of the set of matched elements\n\t * @cat Events\n\t */\n\tbind: function( type, data, fn ) {\n\t\treturn type == \"unload\" ? this.one(type, data, fn) : this.each(function(){\n\t\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t\t});\n\t},\n\t\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The handler is executed only once for each element. Otherwise, the same rules\n\t * as described in bind() apply.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second paramter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * @example $(\"p\").one(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @name one\n\t * @type jQuery\n\t * @param String type An event type\n\t * @param Object data (optional) Additional data passed to the event handler as event.data\n\t * @param Function fn A function to bind to the event on each of the set of matched elements\n\t * @cat Events\n\t */\n\tone: function( type, data, fn ) {"},{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[235,485],"code":"\t\tif ( !event.which && (event.charCode || event.keyCode) )\n\t\t\tevent.which = event.charCode || event.keyCode;\n\t\t\n\t\t// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)\n\t\tif ( !event.metaKey && event.ctrlKey )\n\t\t\tevent.metaKey = event.ctrlKey;\n\n\t\t// Add which for click: 1 == left; 2 == middle; 3 == right\n\t\t// Note: button is not normalized, so don't use it\n\t\tif ( !event.which && event.button )\n\t\t\tevent.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\n\t\t\t\n\t\treturn event;\n\t}\n};\n\njQuery.fn.extend({\n\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second parameter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * Calling bind with an event type of \"unload\" will automatically\n\t * use the one method instead of bind to prevent memory leaks.\n\t *\n\t * @example $(\"p\").bind(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @example function handler(event) {\n\t *   alert(event.data.foo);\n\t * }\n\t * $(\"p\").bind(\"click\", {foo: \"bar\"}, handler)\n\t * @result alert(\"bar\")\n\t * @desc Pass some additional data to the event handler.\n\t *\n\t * @example $(\"form\").bind(\"submit\", function() { return false; })\n\t * @desc Cancel a default action and prevent it from bubbling by returning false\n\t * from your function.\n\t *\n\t * @example $(\"form\").bind(\"submit\", function(event){\n\t *   event.preventDefault();\n\t * });\n\t * @desc Cancel only the default action by using the preventDefault method.\n\t *\n\t *\n\t * @example $(\"form\").bind(\"submit\", function(event){\n\t *   event.stopPropagation();\n\t * });\n\t * @desc Stop only an event from bubbling by using the stopPropagation method.\n\t *\n\t * @name bind\n\t * @type jQuery\n\t * @param String type An event type\n\t * @param Object data (optional) Additional data passed to the event handler as event.data\n\t * @param Function fn A function to bind to the event on each of the set of matched elements\n\t * @cat Events\n\t */\n\tbind: function( type, data, fn ) {\n\t\treturn type == \"unload\" ? this.one(type, data, fn) : this.each(function(){\n\t\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t\t});\n\t},\n\t\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The handler is executed only once for each element. Otherwise, the same rules\n\t * as described in bind() apply.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second paramter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * @example $(\"p\").one(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @name one\n\t * @type jQuery\n\t * @param String type An event type\n\t * @param Object data (optional) Additional data passed to the event handler as event.data\n\t * @param Function fn A function to bind to the event on each of the set of matched elements\n\t * @cat Events\n\t */\n\tone: function( type, data, fn ) {"}]},
{"id":"2250c487675d96ee3634d15894c3715486a8d1d5","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[494,579],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// Attach the listeners\n\t\tbindReady();\n\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]); } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t\t\n\t\t\t// Remove script element used by IE hack\n\t\t\tif( !window.frames.length ) // don't remove if frames are present (#1187)\n\t\t\t\tjQuery(window).load(function(){ jQuery(\"#__ie_init\").remove(); });"},{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[498,580],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t\t\n\t\t\t// Remove script element used by IE hack\n\t\t\tif( !window.frames.length ) // don't remove if frames are present (#1187)\n\t\t\t\tjQuery(window).load(function(){ jQuery(\"#__ie_init\").remove(); });"}]},
{"id":"9976e4a056287f56cfdb11c1c9f5a2a5c8770bcb","instances":[{"path":"./jquery-data/1.1.4/src/event/event.js","lines":[941,955],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"},{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[938,952],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"}]},
{"id":"cd2f92efa54f4cd9c954d80b287b5786596c7c67","instances":[{"path":"./jquery-data/1.1.4/src/event/eventTest.js","lines":[1,30],"code":"module(\"event\");\n\ntest(\"bind()\", function() {\n\texpect(11);\n\n\tvar handler = function(event) {\n\t\tok( event.data, \"bind() with data, check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"bind() with data, Check value of passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).click().unbind(\"click\", handler);\n\t\n\tok( !$(\"#firstp\").get(0).$events, \"Event handler unbound when using data.\" );\n\t\n\treset();\n\tvar handler = function(event, data) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t\tok( data, \"Check trigger data\" );\n\t\tok( data.bar == \"foo\", \"Check value of trigger data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).trigger(\"click\", [{bar: \"foo\"}]).unbind(handler);\n\t\n\treset();\n\tvar handler = function(event) {\n\t\tok ( !event.data, \"Check that no data is added to the event object\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\");\n\t\n\t\n\t// events don't work with iframes, see #939 - this test fails in IE because of contentDocument"},{"path":"./jquery-data/1.1.3.1/src/event/eventTest.js","lines":[1,30],"code":"module(\"event\");\n\ntest(\"bind()\", function() {\n\texpect(12);\n\n\tvar handler = function(event) {\n\t\tok( event.data, \"bind() with data, check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"bind() with data, Check value of passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).click().unbind(\"click\", handler);\n\t\n\tok( !$(\"#firstp\").get(0).$events, \"Event handler unbound when using data.\" );\n\t\n\treset();\n\tvar handler = function(event, data) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t\tok( data, \"Check trigger data\" );\n\t\tok( data.bar == \"foo\", \"Check value of trigger data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).trigger(\"click\", [{bar: \"foo\"}]).unbind(handler);\n\t\n\treset();\n\tvar handler = function(event) {\n\t\tok ( !event.data, \"Check that no data is added to the event object\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\");\n\t\n\t\n\t// events don't work with iframes, see #939"}]},
{"id":"513e8d812f9edb19d15fffbdaa238ca498fc6cd9","instances":[{"path":"./jquery-data/1.1.4/src/event/eventTest.js","lines":[42,61],"code":"\tfunction selectOnChange(event) {\n\t\tequals( event.data, counter++, \"Event.data is not a global event object\" );\n\t};\n\t$(\"select\").each(function(i){\n\t\t$(this).bind('change', i, selectOnChange);\n\t}).trigger('change');\n});\n\ntest(\"click()\", function() {\n\texpect(4);\n\t$('<li><a href=\"#\">Change location</a></li>').prependTo('#firstUL').find('a').bind('click', function() {\n\t    var close = $('spanx', this); // same with $(this).find('span');\n\t    ok( close.length == 0, \"Context element does not exist, length must be zero\" );\n\t    ok( !close[0], \"Context element does not exist, direct access to element must return undefined\" );\n\t    return false;\n\t}).click();\n\t\n\t$(\"#check1\").click(function() {\n\t\tok( true, \"click event handler for checkbox gets fired twice, see #815\" );\n\t}).click();"},{"path":"./jquery-data/1.1.3.1/src/event/eventTest.js","lines":[49,69],"code":"\tfunction selectOnChange(event) {\n\t\tequals( event.data, counter++, \"Event.data is not a global event object\" );\n\t};\n\t$(\"select\").each(function(i){\n\t\t$(this).bind('change', i, selectOnChange);\n\t}).trigger('change');\n});\n\ntest(\"click()\", function() {\n\texpect(3);\n\t$('<li><a href=\"#\">Change location</a></li>').prependTo('#firstUL').find('a').bind('click', function() {\n\t    var close = $('spanx', this); // same with $(this).find('span');\n\t    ok( close.length == 0, \"Context element does not exist, length must be zero\" );\n\t    ok( !close[0], \"Context element does not exist, direct access to element must return undefined\" );\n\t    return false;\n\t}).click();\n\t\n\t$(\"#check1\").click(function() {\n\t\tok( true, \"click event handler for checkbox gets fired twice, see #815\" );\n\t}).click();\n});"}]},
{"id":"636ceafe35492f949e7cb6c1d8c3448f29f5e63c","instances":[{"path":"./jquery-data/1.1.4/src/event/eventTest.js","lines":[71,126],"code":"test(\"unbind(event)\", function() {\n\texpect(6);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n\t\n\tel.click(function() { return; });\n\tel.unbind('click');\n\tok( !el[0].onclick, \"Handler is removed\" ); // Bug #964\n\n\tel.click(function() { return; });\n\tel.unbind('change',function(){ return; });\n\tfor (var ret in el[0].$events['click']) break;\n\tok( ret, \"Extra handlers weren't accidentally removed.\" );\n\n\tel.unbind('click');\n\tok( !el[0].$events, \"Removed the events expando after all handlers are unbound.\" );\n});\n\ntest(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {\n\texpect(4);\n\tvar count = 0,\n\t\tfn1 = function(e) { count++; },\n\t\tfn2 = function(e) { count--; },\n\t\tpreventDefault = function(e) { e.preventDefault() },\n\t\tlink = $('#mark');\n\tlink.click(preventDefault).click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n\t\n\tvar first = 0;\n\t$(\"#simon1\").one(\"click\", function() {\n\t\tok( true, \"Execute event only once\" );\n\t\t$(this).toggle(function() {\n\t\t\tok( first++ == 0, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t}, function() {\n\t\t\tok( first == 1, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t});\n\t\treturn false;\n\t}).click().click().click();\n});"},{"path":"./jquery-data/1.1.3.1/src/event/eventTest.js","lines":[71,126],"code":"test(\"unbind(event)\", function() {\n\texpect(6);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n\t\n\tel.click(function() { return; });\n\tel.unbind('click');\n\tok( !el[0].onclick, \"Handler is removed\" ); // Bug #964\n\n\tel.click(function() { return; });\n\tel.unbind('change',function(){ return; });\n\tfor (var ret in el[0].$events['click']) break;\n\tok( ret, \"Extra handlers weren't accidentally removed.\" );\n\n\tel.unbind('click');\n\tok( !el[0].$events, \"Removed the events expando after all handlers are unbound.\" );\n});\n\ntest(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t};\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"toggle(Function, Function)\", function() {\n\texpect(4);\n\tvar count = 0,\n\t\tfn1 = function(e) { count++; },\n\t\tfn2 = function(e) { count--; },\n\t\tpreventDefault = function(e) { e.preventDefault() },\n\t\tlink = $('#mark');\n\tlink.click(preventDefault).click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n\t\n\tvar first = 0;\n\t$(\"#simon1\").one(\"click\", function() {\n\t\tok( true, \"Execute event only once\" );\n\t\t$(this).toggle(function() {\n\t\t\tok( first++ == 0, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t}, function() {\n\t\t\tok( first == 1, \"toggle(Function,Function) assigned from within one('xxx'), see #1054\" );\n\t\t});\n\t\treturn false;\n\t}).click().click().click();\n});"}]},
{"id":"248cbd80ff635054afcc27d2e52f738c64509dec","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[1,339],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Displays each of the set of matched elements if they are hidden.\n\t *\n\t * @example $(\"p\").show()\n\t * @before <p style=\"display: none\">Hello</p>\n\t * @result [ <p style=\"display: block\">Hello</p> ]\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Show all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see hide(String|Number,Function)\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t}).end();\n\t},\n\t\n\t/**\n\t * Hides each of the set of matched elements if they are shown.\n\t *\n\t * @example $(\"p\").hide()\n\t * @before <p>Hello</p>\n\t * @result [ <p style=\"display: none\">Hello</p> ]\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see show(String|Number,Function)\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tif ( this.oldblock == \"none\" )\n\t\t\t\t\tthis.oldblock = \"block\";\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggles each of the set of matched elements. If they are shown,\n\t * toggle makes them hidden. If they are hidden, toggle\n\t * makes them shown."},{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[1,339],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Displays each of the set of matched elements if they are hidden.\n\t *\n\t * @example $(\"p\").show()\n\t * @before <p style=\"display: none\">Hello</p>\n\t * @result [ <p style=\"display: block\">Hello</p> ]\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Show all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see hide(String|Number,Function)\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t}).end();\n\t},\n\t\n\t/**\n\t * Hides each of the set of matched elements if they are shown.\n\t *\n\t * @example $(\"p\").hide()\n\t * @before <p>Hello</p>\n\t * @result [ <p style=\"display: none\">Hello</p> ]\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see show(String|Number,Function)\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tif ( this.oldblock == \"none\" )\n\t\t\t\t\tthis.oldblock = \"block\";\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggles each of the set of matched elements. If they are shown,\n\t * toggle makes them hidden. If they are hidden, toggle\n\t * makes them shown."}]},
{"id":"5aea1e47b682fc849f568936774bc796a28741eb","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[276,382],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur() || 0, val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\n\t\t\t// For JS strict compliance\n\t\t\treturn true;\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({"},{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[276,379],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {"}]},
{"id":"43a0842441ff229d27d080d9701f70ba04d29919","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[385,438],"code":"\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\topt.duration : \n\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\n\t// Queueing\n\topt.old = opt.complete;\n\topt.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( jQuery.isFunction( opt.old ) )\n\t\t\topt.old.apply( this );\n\t};\n\n\treturn opt;\n},\n\neasing: {\n\tlinear: function( p, n, firstNum, diff ) {\n\t\treturn firstNum + diff * p;\n\t},\n\tswing: function( p, n, firstNum, diff ) {\n\t\treturn ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;\n\t}\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The styles\n\tvar y = elem.style;"},{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[382,435],"code":"\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\topt.duration : \n\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\n\t// Queueing\n\topt.old = opt.complete;\n\topt.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( jQuery.isFunction( opt.old ) )\n\t\t\topt.old.apply( this );\n\t};\n\n\treturn opt;\n},\n\neasing: {\n\tlinear: function( p, n, firstNum, diff ) {\n\t\treturn firstNum + diff * p;\n\t},\n\tswing: function( p, n, firstNum, diff ) {\n\t\treturn ((-Math.cos(p*Math.PI)/2) + 0.5) * diff + firstNum;\n\t}\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\ntimers: [],\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The styles\n\tvar y = elem.style;"}]},
{"id":"4f4029b98c0f7181d0a617acb9501a3aafe9f090","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[437,448],"code":"// The styles\nvar y = elem.style;\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse {\n\t\ty[prop] = parseInt(z.now) + \"px\";"},{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[434,445],"code":"// The styles\nvar y = elem.style;\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse {\n\t\ty[prop] = parseInt(z.now) + \"px\";"}]},
{"id":"ab7e01055f498a5210f593b23a36cc756fc7695a","instances":[{"path":"./jquery-data/1.1.4/src/fx/fx.js","lines":[456,570],"code":"// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tjQuery.timers.push(function(){\n\t\treturn z.step(from, to);\n\t});\n\n\tif ( jQuery.timers.length == 1 ) {\n\t\tvar timer = setInterval(function(){\n\t\t\tvar timers = jQuery.timers;\n\t\t\t\n\t\t\tfor ( var i = 0; i < timers.length; i++ )\n\t\t\t\tif ( !timers[i]() )\n\t\t\t\t\ttimers.splice(i--, 1);\n\n\t\t\tif ( !timers.length )\n\t\t\t\tclearInterval( timer );\n\t\t}, 13);\n\t}\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, this.cur());\n\n\t// Make sure that we start at a small width/height to avoid any\n\t// flash of content\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n\t\n\t// Start by showing the element\n\tjQuery(elem).show();\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(this.cur(), 0);\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\n\tif (t > options.duration + z.startTime) {\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tif (elem.curAnim) elem.curAnim[ prop ] = true;\n\n\t\tvar done = true;\n\t\tfor ( var i in elem.curAnim )\n\t\t\tif ( elem.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\n\t\tif ( done ) {\n\t\t\tif ( options.display != null ) {\n\t\t\t\t// Reset the overflow\n\t\t\t\ty.overflow = options.overflow;\n\t\t\t\n\t\t\t\t// Reset the display\n\t\t\t\ty.display = options.display;\n\t\t\t\tif ( jQuery.css(elem, \"display\") == \"none\" )\n\t\t\t\t\ty.display = \"block\";\n\t\t\t}\n\n\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\tif ( options.hide )\n\t\t\t\ty.display = \"none\";\n\n\t\t\t// Reset the properties, if the item has been hidden or shown"},{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[450,564],"code":"// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tjQuery.timers.push(function(){\n\t\treturn z.step(from, to);\n\t});\n\n\tif ( jQuery.timers.length == 1 ) {\n\t\tvar timer = setInterval(function(){\n\t\t\tvar timers = jQuery.timers;\n\t\t\t\n\t\t\tfor ( var i = 0; i < timers.length; i++ )\n\t\t\t\tif ( !timers[i]() )\n\t\t\t\t\ttimers.splice(i--, 1);\n\n\t\t\tif ( !timers.length )\n\t\t\t\tclearInterval( timer );\n\t\t}, 13);\n\t}\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, this.cur());\n\n\t// Make sure that we start at a small width/height to avoid any\n\t// flash of content\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n\t\n\t// Start by showing the element\n\tjQuery(elem).show();\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(this.cur(), 0);\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\n\tif (t > options.duration + z.startTime) {\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tif (elem.curAnim) elem.curAnim[ prop ] = true;\n\n\t\tvar done = true;\n\t\tfor ( var i in elem.curAnim )\n\t\t\tif ( elem.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\n\t\tif ( done ) {\n\t\t\tif ( options.display != null ) {\n\t\t\t\t// Reset the overflow\n\t\t\t\ty.overflow = options.overflow;\n\t\t\t\n\t\t\t\t// Reset the display\n\t\t\t\ty.display = options.display;\n\t\t\t\tif ( jQuery.css(elem, \"display\") == \"none\" )\n\t\t\t\t\ty.display = \"block\";\n\t\t\t}\n\n\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\tif ( options.hide )\n\t\t\t\ty.display = \"none\";\n\n\t\t\t// Reset the properties, if the item has been hidden or shown"}]},
{"id":"0537e9a1fe28aaff966502ae1fdbb8a0f0b1b9cb","instances":[{"path":"./jquery-data/1.1.4/src/fx/fxTest.js","lines":[1,21],"code":"module(\"fx\");\n\ntest(\"animate(Hash, Object, Function)\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 0, function() {\n\t\tok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t\tstart();\n\t});\n});\n\ntest(\"toggle()\", function() {\n\texpect(3);\n\tvar x = $(\"#foo\");\n\tok( x.is(\":visible\") );\n\tx.toggle();\n\tok( x.is(\":hidden\") );\n\tx.toggle();\n\tok( x.is(\":visible\") );"},{"path":"./jquery-data/1.1.3.1/src/fx/fxTest.js","lines":[1,22],"code":"module(\"fx\");\n\ntest(\"animate(Hash, Object, Function)\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 0, function() {\n\t\tok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t\tstart();\n\t});\n});\n\ntest(\"toggle()\", function() {\n\texpect(3);\n\tvar x = $(\"#foo\");\n\tok( x.is(\":visible\") );\n\tx.toggle();\n\tok( x.is(\":hidden\") );\n\tx.toggle();\n\tok( x.is(\":visible\") );\n});"}]},
{"id":"9d6698a9a16b46a726386fa733d45bcfd363ddf5","instances":[{"path":"./jquery-data/1.1.4/src/fx/fxTest.js","lines":[178,187],"code":"\tok(jQuery.curCSS(this, \"opacity\") != \"\" || cur_o == t_o, \"Opacity should be explicitly set to \" + t_o + \", is instead: \" + cur_o);\n}\n\t\nif ( t_w.constructor == Number ) {\n\tok(this.style.width == t_w + \"px\", \"Final width should be \" + t_w + \": \" + this.style.width);\n\t\n\tvar cur_w = jQuery.css(this,\"width\");\n\n\tok(this.style.width != \"\" || cur_w == t_w, \"Width should be explicitly set to \" + t_w + \", is instead: \" + cur_w);\n}"},{"path":"./jquery-data/1.1.4/src/fx/fxTest.js","lines":[186,195],"code":"\tok(this.style.width != \"\" || cur_w == t_w, \"Width should be explicitly set to \" + t_w + \", is instead: \" + cur_w);\n}\n\t\nif ( t_h.constructor == Number ) {\n\tok(this.style.height == t_h + \"px\", \"Final height should be \" + t_h + \": \" + this.style.height);\n\t\n\tvar cur_h = jQuery.css(this,\"height\");\n\n\tok(this.style.height != \"\" || cur_h == t_h, \"Height should be explicitly set to \" + t_h + \", is instead: \" + cur_w);\n}"}]},
{"id":"09794f2f80203a35e5d498af2c87cc33c62a09fc","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[1,22],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {\n\texpect(2);\n\t\n\tvar main = $(\"#main\");\n\tisSet( $(\"div p\", main).get(), q(\"sndp\", \"en\", \"sap\"), \"Basic selector with jQuery object as context\" );\n\t\n\t// make sure this is handled\n\t$('<p>\\r\\n</p>');\n\tok( true, \"Check for \\\\r and \\\\n in jQuery()\" );"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[1,22],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {\n\texpect(3);\n\t\n\tvar main = $(\"#main\");\n\tisSet( $(\"div p\", main).get(), q(\"sndp\", \"en\", \"sap\"), \"Basic selector with jQuery object as context\" );\n\t\n\t// make sure this is handled\n\t$('<p>\\r\\n</p>');\n\tok( true, \"Check for \\\\r and \\\\n in jQuery()\" );"}]},
{"id":"aa746d5a720cfc137986a084438fb666775b4af6","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[34,52],"code":"test(\"isFunction\", function() {\n\texpect(21);\n\n\t// Make sure that false values return false\n\tok( !jQuery.isFunction(), \"No Value\" );\n\tok( !jQuery.isFunction( null ), \"null Value\" );\n\tok( !jQuery.isFunction( undefined ), \"undefined Value\" );\n\tok( !jQuery.isFunction( \"\" ), \"Empty String Value\" );\n\tok( !jQuery.isFunction( 0 ), \"0 Value\" );\n\n\t// Check built-ins\n\t// Safari uses \"(Internal Function)\"\n\tok( jQuery.isFunction(String), \"String Function\" );\n\tok( jQuery.isFunction(Array), \"Array Function\" );\n\tok( jQuery.isFunction(Object), \"Object Function\" );\n\tok( jQuery.isFunction(Function), \"Function Function\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar mystr = \"function\";"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[37,55],"code":"test(\"isFunction\", function() {\n\texpect(21);\n\n\t// Make sure that false values return false\n\tok( !jQuery.isFunction(), \"No Value\" );\n\tok( !jQuery.isFunction( null ), \"null Value\" );\n\tok( !jQuery.isFunction( undefined ), \"undefined Value\" );\n\tok( !jQuery.isFunction( \"\" ), \"Empty String Value\" );\n\tok( !jQuery.isFunction( 0 ), \"0 Value\" );\n\n\t// Check built-ins\n\t// Safari uses \"(Internal Function)\"\n\tok( jQuery.isFunction(String), \"String Function\" );\n\tok( jQuery.isFunction(Array), \"Array Function\" );\n\tok( jQuery.isFunction(Object), \"Object Function\" );\n\tok( jQuery.isFunction(Function), \"Function Function\" );\n\n\t// When stringified, this could be misinterpreted\n\tvar mystr = \"function\";"}]},
{"id":"9d55d30193954b3a5feba73578ccfb6d8c3d5a71","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[143,207],"code":"\tisSet( $(\"p\").get(), q(\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"), \"Get All Elements\" );\n});\n\ntest(\"get(Number)\", function() {\n\texpect(1);\n\tok( $(\"p\").get(0) == document.getElementById(\"firstp\"), \"Get A Single Element\" );\n});\n\ntest(\"add(String|Element|Array)\", function() {\n\texpect(7);\n\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length >= 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n\t\n\t$('<a id=\"tAnchor5\"></a>').attr('href', '#5').appendTo('#main'); // using innerHTML in IE causes href attribute to be serialized to the full path\n\tok( $('#tAnchor5').attr('href') == \"#5\", 'Check for non-absolute href (an anchor)' );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[134,198],"code":"\tisSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n});\n\ntest(\"get(Number)\", function() {\n\texpect(1);\n\tok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\n});\n\ntest(\"add(String|Element|Array)\", function() {\n\texpect(7);\n\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\n\t\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n\t\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\n});\n\ntest(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n\t\n\t$('<a id=\"tAnchor5\"></a>').attr('href', '#5').appendTo('#main'); // using innerHTML in IE causes href attribute to be serialized to the full path\n\tok( $('#tAnchor5').attr('href') == \"#5\", 'Check for non-absolute href (an anchor)' );\n});"}]},
{"id":"9cad04af148d72d96edfa86bca5a1b3282aa1268","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[209,258],"code":"test(\"attr(String) in XML Files\", function() {\n\texpect(2);\n\tstop();\n\t$.get(\"data/dashboard.xml\", function(xml) {\n\t\tok( $(\"locations\", xml).attr(\"class\") == \"foo\", \"Check class attribute in XML document\" );\n\t\tok( $(\"location\", xml).attr(\"for\") == \"bar\", \"Check for attribute in XML document\" );\n\t\tstart();\n\t});\n});\n\ntest(\"attr(String, Function)\", function() {\n\texpect(2);\n\tok( $('#text1').attr('value', function() { return this.id })[0].value == \"text1\", \"Set value from id\" );\n\tok( $('#text1').attr('title', function(i) { return i }).attr('title') == \"0\", \"Set value with an index\");\n});\n\ntest(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);\n\tvar div = $(\"div\");\n\tdiv.attr(\"foo\", \"bar\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n\t}\n\tok( pass, \"Set Attribute\" );\n\n\tok( $(\"#foo\").attr({\"width\": null}), \"Try to set an attribute to nothing\" );\t\n\t\n\t$(\"#name\").attr('name', 'something');\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\n\t$(\"#check2\").attr('checked', true);\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\n\t$(\"#check2\").attr('checked', false);\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\n\t$(\"#text1\").attr('readonly', true);\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\n\t$(\"#text1\").attr('readonly', false);\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\n\t$(\"#name\").attr('maxlength', '5');\n\tok( document.getElementById('name').maxLength == '5', 'Set maxlength attribute' );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[201,251],"code":"\ttest(\"attr(String) in XML Files\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get(\"data/dashboard.xml\", function(xml) {\n\t\t\tok( $(\"locations\", xml).attr(\"class\") == \"foo\", \"Check class attribute in XML document\" );\n\t\t\tok( $(\"location\", xml).attr(\"for\") == \"bar\", \"Check for attribute in XML document\" );\n\t\t\tstart();\n\t\t});\n\t});\n}\n\ntest(\"attr(String, Function)\", function() {\n\texpect(2);\n\tok( $('#text1').attr('value', function() { return this.id })[0].value == \"text1\", \"Set value from id\" );\n\tok( $('#text1').attr('title', function(i) { return i }).attr('title') == \"0\", \"Set value with an index\");\n});\n\ntest(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);\n\tvar div = $(\"div\");\n\tdiv.attr(\"foo\", \"bar\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n\t}\n\tok( pass, \"Set Attribute\" );\n\n\tok( $(\"#foo\").attr({\"width\": null}), \"Try to set an attribute to nothing\" );\t\n\t\n\t$(\"#name\").attr('name', 'something');\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\n\t$(\"#check2\").attr('checked', true);\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\n\t$(\"#check2\").attr('checked', false);\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\n\t$(\"#text1\").attr('readonly', true);\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\n\t$(\"#text1\").attr('readonly', false);\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\n\t$(\"#name\").attr('maxlength', '5');\n\tok( document.getElementById('name').maxLength == '5', 'Set maxlength attribute' );\n});"}]},
{"id":"9b5f19e2d9f30a547af2b1d4991bdf5c1ac5b7a4","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[260,350],"code":"test(\"attr(String, Object) - Loaded via XML document\", function() {\n\texpect(2);\n\tstop();\n\t$.get('data/dashboard.xml', function(xml) { \n  \t\tvar titles = [];\n  \t\t$('tab', xml).each(function() {\n    \t\t\ttitles.push($(this).attr('title'));\n  \t\t});\n  \t\tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n  \t\tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n  \t\tstart();\n\t});\n});\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);\n\t\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\n\t\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css({display: 'none'});\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css({display: 'block'});\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css({styleFloat: 'right'});\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\n\t$('#floatTest').css({cssFloat: 'left'});\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\n\t$('#floatTest').css({'float': 'right'});\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\n\t$('#floatTest').css({'font-size': '30px'});\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {\n\t\t$('#foo').css({opacity: n});\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a String\" );\n\t\t$('#foo').css({opacity: parseFloat(n)});\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a Number\" );\n\t});\t\n\t$('#foo').css({opacity: ''});\n\tok( $('#foo').css('opacity') == '1', \"Assert opacity is 1 when set to an empty String\" );\n});\n\ntest(\"css(String, Object)\", function() {\n\texpect(18);\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css('display', 'none');\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css('display', 'block');\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css('styleFloat', 'left');\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\n\t$('#floatTest').css('cssFloat', 'right');\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\n\t$('#floatTest').css('float', 'left');\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\n\t$('#floatTest').css('font-size', '20px');\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {\n\t\t$('#foo').css('opacity', n);\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a String\" );\n\t\t$('#foo').css('opacity', parseFloat(n));\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a Number\" );\n\t});\n\t$('#foo').css('opacity', '');\n\tok( $('#foo').css('opacity') == '1', \"Assert opacity is 1 when set to an empty String\" );\n});\n\ntest(\"text()\", function() {\n\texpect(1);\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\n});\n\ntest(\"wrap(String|Element)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\n\n\treset();\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap(document.getElementById('empty')).parent();\n\tok( result.is('ol'), 'Check for element wrapping' );\n\tok( result.text() == defaultText, 'Check for element wrapping' );\n\t\n\treset();"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[254,345],"code":"\ttest(\"attr(String, Object)x\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get('data/dashboard.xml', function(xml) { \n\t  \tvar titles = [];\n\t  \t$('tab', xml).each(function() {\n\t    \ttitles.push($(this).attr('title'));\n\t  \t});\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n\t  \tstart();\n\t\t});\n\t});\n}\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);\n\t\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\n\t\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css({display: 'none'});\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css({display: 'block'});\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css({styleFloat: 'right'});\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\n\t$('#floatTest').css({cssFloat: 'left'});\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\n\t$('#floatTest').css({'float': 'right'});\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\n\t$('#floatTest').css({'font-size': '30px'});\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {\n\t\t$('#foo').css({opacity: n});\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a String\" );\n\t\t$('#foo').css({opacity: parseFloat(n)});\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a Number\" );\n\t});\t\n\t$('#foo').css({opacity: ''});\n\tok( $('#foo').css('opacity') == '1', \"Assert opacity is 1 when set to an empty String\" );\n});\n\ntest(\"css(String, Object)\", function() {\n\texpect(18);\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n\t$('#foo').css('display', 'none');\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n\t$('#foo').css('display', 'block');\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\n\t\n\t$('#floatTest').css('styleFloat', 'left');\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\n\t$('#floatTest').css('cssFloat', 'right');\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\n\t$('#floatTest').css('float', 'left');\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\n\t$('#floatTest').css('font-size', '20px');\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\n\t\n\t$.each(\"0,0.25,0.5,0.75,1\".split(','), function(i, n) {\n\t\t$('#foo').css('opacity', n);\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a String\" );\n\t\t$('#foo').css('opacity', parseFloat(n));\n\t\tok( $('#foo').css('opacity') == parseFloat(n), \"Assert opacity is \" + parseFloat(n) + \" as a Number\" );\n\t});\n\t$('#foo').css('opacity', '');\n\tok( $('#foo').css('opacity') == '1', \"Assert opacity is 1 when set to an empty String\" );\n});\n\ntest(\"text()\", function() {\n\texpect(1);\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\n});\n\ntest(\"wrap(String|Element)\", function() {\n\texpect(7);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\n\n\treset();\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').wrap(document.getElementById('empty')).parent();\n\tok( result.is('ol'), 'Check for element wrapping' );\n\tok( result.text() == defaultText, 'Check for element wrapping' );\n\t\n\treset();"}]},
{"id":"c384910d0988bbde1866b78e0d4815f15b60466e","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[362,429],"code":"\t}).click();\n});\n\ntest(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(18);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').append('<b>buga</b>');\n\tok( result.text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('#select3').append('<option value=\"appendTest\">Append Test</option>').find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:\";\n\t$('#sap').append(document.getElementById('first'));\n\tok( expected == $('#sap').text(), \"Check for appending of element\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$('#sap').append([document.getElementById('first'), document.getElementById('yahoo')]);\n\tok( expected == $('#sap').text(), \"Check for appending of array of elements\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$('#sap').append($(\"#first, #yahoo\"));\n\tok( expected == $('#sap').text(), \"Check for appending of jQuery object\" );\n\n\treset();\n\t$(\"#sap\").append( 5 );\n\tok( $(\"#sap\")[0].innerHTML.match( /5$/ ), \"Check for appending a number\" );\n\n\treset();\n\t$(\"#sap\").append( \" text with spaces \" );\n\tok( $(\"#sap\")[0].innerHTML.match(/ text with spaces $/), \"Check for appending text with spaces\" );\n\n\treset();\n\tok( $(\"#sap\").append([]), \"Check for appending an empty array.\" );\n\tok( $(\"#sap\").append(\"\"), \"Check for appending an empty string.\" );\n\tok( $(\"#sap\").append(document.getElementsByTagName(\"foo\")), \"Check for appending an empty nodelist.\" );\n\t\n\treset();\n\t$(\"#sap\").append(document.getElementById('form'));\n\tok( $(\"#sap>form\").size() == 1, \"Check for appending a form\" );  // Bug #910\n\n\treset();\n\tvar pass = true;\n\ttry {\n\t\t$( $(\"iframe\")[0].contentWindow.document.body ).append(\"<div>test</div>\");\n\t} catch(e) {\n\t\tpass = false;\n\t}\n\n\tok( pass, \"Test for appending a DOM node to the contents of an IFrame\" );\n\t\n\treset();\n\t$('<fieldset/>').appendTo('#form').append('<legend id=\"legend\">test</legend>');\n\tt( 'Append legend', '#legend', ['legend'] );\n\t\n\treset();\n\t$('#select1').append('<OPTION>Test</OPTION>');\n\tok( $('#select1 option:last').text() == \"Test\", \"Appending &lt;OPTION&gt; (all caps)\" );\n\t\n\t$('#table').append('<colgroup></colgroup>');\n\tok( $('#table colgroup').length, \"Append colgroup\" );\n\t\n\t$('#table colgroup').append('<col/>');\n\tok( $('#table colgroup col').length, \"Append col\" );\n\t\n\treset();\n\t$('#table').append('<caption></caption>');"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[357,424],"code":"\t}).click();\n});\n\ntest(\"append(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(17);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').append('<b>buga</b>');\n\tok( result.text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('#select3').append('<option value=\"appendTest\">Append Test</option>').find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:\";\n\t$('#sap').append(document.getElementById('first'));\n\tok( expected == $('#sap').text(), \"Check for appending of element\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$('#sap').append([document.getElementById('first'), document.getElementById('yahoo')]);\n\tok( expected == $('#sap').text(), \"Check for appending of array of elements\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$('#sap').append($(\"#first, #yahoo\"));\n\tok( expected == $('#sap').text(), \"Check for appending of jQuery object\" );\n\n\treset();\n\t$(\"#sap\").append( 5 );\n\tok( $(\"#sap\")[0].innerHTML.match( /5$/ ), \"Check for appending a number\" );\n\n\treset();\n\t$(\"#sap\").append( \" text with spaces \" );\n\tok( $(\"#sap\")[0].innerHTML.match(/ text with spaces $/), \"Check for appending text with spaces\" );\n\n\treset();\n\tok( $(\"#sap\").append([]), \"Check for appending an empty array.\" );\n\tok( $(\"#sap\").append(\"\"), \"Check for appending an empty string.\" );\n\tok( $(\"#sap\").append(document.getElementsByTagName(\"foo\")), \"Check for appending an empty nodelist.\" );\n\t\n\treset();\n\t$(\"#sap\").append(document.getElementById('form'));\n\tok( $(\"#sap>form\").size() == 1, \"Check for appending a form\" );  // Bug #910\n\n\treset();\n\tvar pass = true;\n\ttry {\n\t\t$( $(\"iframe\")[0].contentWindow.document.body ).append(\"<div>test</div>\");\n\t} catch(e) {\n\t\tpass = false;\n\t}\n\n\tok( pass, \"Test for appending a DOM node to the contents of an IFrame\" );\n\t\n\treset();\n\t$('<fieldset>').appendTo('#form').append('<legend id=\"legend\">test</legend>');\n\tt( 'Append legend', '#legend', ['legend'] );\n\t\n\treset();\n\t$('#select1').append('<OPTION>Test</OPTION>');\n\tok( $('#select1 option:last').text() == \"Test\", \"Appending &lt;OPTION&gt; (all caps)\" );\n\t\n\t$('#table').append('<colgroup></colgroup>');\n\tok( $('#table colgroup').length, \"Append colgroup\" );\n\t\n\t$('#table colgroup').append('<col>');\n\tok( $('#table colgroup col').length, \"Append col\" );\n\t\n\treset();\n\t$('form:last')"}]},
{"id":"851cc07231f99b6526ffb6f5906d786e091201f3","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[429,668],"code":"\t$('#table').append('<caption></caption>');\n\tok( $('#table caption').length, \"Append caption\" );\n\n\treset();\n\t$('form:last')\n\t\t.append('<select id=\"appendSelect1\"></select>')\n\t\t.append('<select id=\"appendSelect2\"><option>Test</option></select>');\n\t\n\tt( \"Append Select\", \"#appendSelect1, #appendSelect2\", [\"appendSelect1\", \"appendSelect2\"] );\n});\n\ntest(\"appendTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').appendTo('#first');\n\tok( $(\"#first\").text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('<option value=\"appendTest\">Append Test</option>').appendTo('#select3').parent().find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:\";\n\t$(document.getElementById('first')).appendTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for appending of element\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$([document.getElementById('first'), document.getElementById('yahoo')]).appendTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for appending of array of elements\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$(\"#first, #yahoo\").appendTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for appending of jQuery object\" );\n\t\n\treset();\n\t$('#select1').appendTo('#foo');\n\tt( 'Append select', '#foo select', ['select1'] );\n});\n\ntest(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(5);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').prepend('<b>buga</b>');\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();\n\tvar expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend(document.getElementById('first'));\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\n\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\n\t\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend($(\"#first, #yahoo\"));\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\n});\n\ntest(\"prependTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').prependTo('#first');\n\tok( $('#first').text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();\n\tvar expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$(document.getElementById('first')).prependTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\n\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$([document.getElementById('yahoo'), document.getElementById('first')]).prependTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\n\t\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$(\"#yahoo, #first\").prependTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\n\t\n\treset();\n\t$('<select id=\"prependSelect1\"></select>').prependTo('form:last');\n\t$('<select id=\"prependSelect2\"><option>Test</option></select>').prependTo('form:last');\n\t\n\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[420,658],"code":"\t$('#table colgroup').append('<col>');\n\tok( $('#table colgroup col').length, \"Append col\" );\n\t\n\treset();\n\t$('form:last')\n\t\t.append('<select id=\"appendSelect1\"></select>')\n\t\t.append('<select id=\"appendSelect2\"><option>Test</option></select>');\n\t\n\tt( \"Append Select\", \"#appendSelect1, #appendSelect2\", [\"appendSelect1\", \"appendSelect2\"] );\n});\n\ntest(\"appendTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').appendTo('#first');\n\tok( $(\"#first\").text() == defaultText + 'buga', 'Check if text appending works' );\n\tok( $('<option value=\"appendTest\">Append Test</option>').appendTo('#select3').parent().find('option:last-child').attr('value') == 'appendTest', 'Appending html options to select element');\n\t\n\treset();\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:\";\n\t$(document.getElementById('first')).appendTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for appending of element\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$([document.getElementById('first'), document.getElementById('yahoo')]).appendTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for appending of array of elements\" );\n\t\n\treset();\n\texpected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n\t$(\"#first, #yahoo\").appendTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for appending of jQuery object\" );\n\t\n\treset();\n\t$('#select1').appendTo('#foo');\n\tt( 'Append select', '#foo select', ['select1'] );\n});\n\ntest(\"prepend(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(5);\n\tvar defaultText = 'Try them out:'\n\tvar result = $('#first').prepend('<b>buga</b>');\n\tok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('#select3').prepend('<option value=\"prependTest\">Prepend Test</option>').find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();\n\tvar expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend(document.getElementById('first'));\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\n\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\n\t\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$('#sap').prepend($(\"#first, #yahoo\"));\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\n});\n\ntest(\"prependTo(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(6);\n\tvar defaultText = 'Try them out:'\n\t$('<b>buga</b>').prependTo('#first');\n\tok( $('#first').text() == 'buga' + defaultText, 'Check if text prepending works' );\n\tok( $('<option value=\"prependTest\">Prepend Test</option>').prependTo('#select3').parent().find('option:first-child').attr('value') == 'prependTest', 'Prepending html options to select element');\n\t\n\treset();\n\tvar expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$(document.getElementById('first')).prependTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for prepending of element\" );\n\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$([document.getElementById('yahoo'), document.getElementById('first')]).prependTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );\n\t\n\treset();\n\texpected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n\t$(\"#yahoo, #first\").prependTo('#sap');\n\tok( expected == $('#sap').text(), \"Check for prepending of jQuery object\" );\n\t\n\treset();\n\t$('<select id=\"prependSelect1\"></select>').prependTo('form:last');\n\t$('<select id=\"prependSelect2\"><option>Test</option></select>').prependTo('form:last');\n\t\n\tt( \"Prepend Select\", \"#prependSelect1, #prependSelect2\", [\"prependSelect1\", \"prependSelect2\"] );\n});\n\ntest(\"before(String|Element|Array&lt;Element&gt;|jQuery)\", function() {\n\texpect(4);\n\tvar expected = 'This is a normal link: bugaYahoo';\n\t$('#yahoo').before('<b>buga</b>');\n\tok( expected == $('#en').text(), 'Insert String before' );\n\t\n\treset();\n\texpected = \"This is a normal link: Try them out:Yahoo\";\n\t$('#yahoo').before(document.getElementById('first'));\n\tok( expected == $('#en').text(), \"Insert element before\" );"}]},
{"id":"dd189872354d59fee76f924bf9374a0b978b1541","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[687,752],"code":"\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged2 = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged2, \"Check if extended: settings must be extended\" );\n\tisObj( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );\n\n\t// Ccommented out until we can resolve it\t\n\t// $(\"#main\").html('<script type=\"text/javascript\">ok( true, \"$().html().evalScripts() Evals Scripts Twice in Firefox, see #975\" );</script>').evalScripts();\n});\n\ntest(\"filter()\", function() {\n\texpect(4);\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\n});\n\ntest(\"not()\", function() {\n\texpect(3);\n\tok( $(\"#main > p#ap > a\").not(\"#google\").length == 2, \"not('selector')\" );\n\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\n\tisSet( $(\"p\").not($(\"#ap, #sndp, .result\")).get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not(jQuery)\" );\n});\n\ntest(\"siblings([String])\", function() {\n\texpect(5);\n\tisSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );\n\tisSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \n\tisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );\n\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"lengthtest\", \"floatTest\"), \"Check for multiple filters\" );\n\tisSet( $(\"#en, #sndp\").siblings().get(), q(\"sndp\", \"sap\", \"en\"), \"Check for unique results from siblings\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[666,731],"code":"\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );\n\tisObj( defaults, defaultsCopy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options1, options1Copy, \"Check if not modified: options1 must not be modified\" );\n\tisObj( options2, options2Copy, \"Check if not modified: options2 must not be modified\" );\n});\n\ntest(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );\n\n\t// Ccommented out until we can resolve it\t\n\t// $(\"#main\").html('<script type=\"text/javascript\">ok( true, \"$().html().evalScripts() Evals Scripts Twice in Firefox, see #975\" );</script>').evalScripts();\n});\n\ntest(\"filter()\", function() {\n\texpect(4);\n\tisSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"filter(String)\" );\n\tisSet( $(\"p\").filter(\"#ap, #sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String, String')\" );\n\tisSet( $(\"p\").filter(\"#ap,#sndp\").get(), q(\"ap\", \"sndp\"), \"filter('String,String')\" );\n\tisSet( $(\"p\").filter(function() { return !$(\"a\", this).length }).get(), q(\"sndp\", \"first\"), \"filter(Function)\" );\n});\n\ntest(\"not()\", function() {\n\texpect(3);\n\tok( $(\"#main > p#ap > a\").not(\"#google\").length == 2, \"not('selector')\" );\n\tisSet( $(\"p\").not(\"#ap, #sndp, .result\").get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not('selector, selector')\" );\n\tisSet( $(\"p\").not($(\"#ap, #sndp, .result\")).get(), q(\"firstp\", \"en\", \"sap\", \"first\"), \"not(jQuery)\" );\n});\n\ntest(\"siblings([String])\", function() {\n\texpect(4);\n\tisSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );\n\tisSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \n\tisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );\n\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"lengthtest\", \"floatTest\"), \"Check for multiple filters\" );\n});\n\ntest(\"children([String])\", function() {"}]},
{"id":"4c9ca866a8a03fce92627fd1d2a3e42e9c47ae7a","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[751,768],"code":"\tisSet( $(\"#en, #sndp\").siblings().get(), q(\"sndp\", \"sap\", \"en\"), \"Check for unique results from siblings\" );\n});\n\ntest(\"children([String])\", function() {\n\texpect(3);\n\tisSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );\n\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent([String])\", function() {\n\texpect(5);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\tisSet( $(\"#en, #sndp\").parent().get(), q(\"foo\"), \"Check for unique results from parent\" );\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[728,745],"code":"\tisSet( $(\"#foo\").siblings(\"form, b\").get(), q(\"form\", \"lengthtest\", \"floatTest\"), \"Check for multiple filters\" );\n});\n\ntest(\"children([String])\", function() {\n\texpect(3);\n\tisSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );\n\tisSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );\n\tisSet( $(\"#foo\").children(\"#en, #sap\").get(), q(\"en\", \"sap\"), \"Check for multiple filters\" );\n});\n\ntest(\"parent[s]([String])\", function() {\n\texpect(8);\n\tok( $(\"#groups\").parent()[0].id == \"ap\", \"Simple parent check\" );\n\tok( $(\"#groups\").parent(\"p\")[0].id == \"ap\", \"Filtered parent check\" );\n\tok( $(\"#groups\").parent(\"div\").length == 0, \"Filtered parent check, no match\" );\n\tok( $(\"#groups\").parent(\"div, p\")[0].id == \"ap\", \"Check for multiple filters\" );\n\t\n\tok( $(\"#groups\").parents()[0].id == \"ap\", \"Simple parents check\" );"}]},
{"id":"5f74474a7f659a42e834fe01a278e2097d7ed1ea","instances":[{"path":"./jquery-data/1.1.4/src/jquery/coreTest.js","lines":[789,922],"code":"\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});\n\ntest(\"show()\", function() {\n\texpect(1);\n\tvar pass = true, div = $(\"div\");\n\tdiv.show().each(function(){\n\t  if ( this.style.display == \"none\" ) pass = false;\n\t});\n\tok( pass, \"Show\" );\n});\n\ntest(\"addClass(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.addClass(\"test\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n\t}\n\tok( pass, \"Add Class\" );\n});\n\ntest(\"removeClass(String) - simple\", function() {\n\texpect(3);\n\tvar div = $(\"div\").addClass(\"test\").removeClass(\"test\"),\n\t\tpass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n\t}\n\tok( pass, \"Remove Class\" );\n\t\n\treset();\n\tvar div = $(\"div\").addClass(\"test\").addClass(\"foo\").addClass(\"bar\");\n\tdiv.removeClass(\"test\").removeClass(\"bar\").removeClass(\"foo\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t if ( div.get(i).className.match(/test|bar|foo/) ) pass = false;\n\t}\n\tok( pass, \"Remove multiple classes\" );\n\t\n\treset();\n\tvar div = $(\"div:eq(0)\").addClass(\"test\").removeClass(\"\");\n\tok( div.is('.test'), \"Empty string passed to removeClass\" );\n\t\n});\n\ntest(\"toggleClass(String)\", function() {\n\texpect(3);\n\tvar e = $(\"#firstp\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n\te.toggleClass(\"test\");\n\tok( e.is(\".test\"), \"Assert class present\" ); \n\te.toggleClass(\"test\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n});\n\ntest(\"removeAttr(String\", function() {\n\texpect(1);\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});\n\ntest(\"text(String)\", function() {\n\texpect(1);\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\n});\n\ntest(\"$.each(Object,Function)\", function() {\n\texpect(8);\n\t$.each( [0,1,2], function(i, n){\n\t\tok( i == n, \"Check array iteration\" );\n\t});\n\t\n\t$.each( [5,6,7], function(i, n){\n\t\tok( i == n - 5, \"Check array iteration\" );\n\t});\n\t \n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tok( i == n, \"Check object iteration\" );\n\t});\n});\n\ntest(\"$.prop\", function() {\n\texpect(2);\n\tvar handle = function() { return this.id };\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\n});\n\ntest(\"$.className\", function() {\n\texpect(6);\n\tvar x = $(\"<p>Hi</p>\")[0];\n\tvar c = $.className;\n\tc.add(x, \"hi\");\n\tok( x.className == \"hi\", \"Check single added class\" );\n\tc.add(x, \"foo bar\");\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[758,891],"code":"\tok( $(\"#foo\").prev()[0].id == \"ap\", \"Simple prev check\" );\n\tok( $(\"#foo\").prev(\"p\")[0].id == \"ap\", \"Filtered prev check\" );\n\tok( $(\"#foo\").prev(\"div\").length == 0, \"Filtered prev check, no match\" );\n\tok( $(\"#foo\").prev(\"p, div\")[0].id == \"ap\", \"Multiple filters\" );\n});\n\ntest(\"show()\", function() {\n\texpect(1);\n\tvar pass = true, div = $(\"div\");\n\tdiv.show().each(function(){\n\t  if ( this.style.display == \"none\" ) pass = false;\n\t});\n\tok( pass, \"Show\" );\n});\n\ntest(\"addClass(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.addClass(\"test\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n\t}\n\tok( pass, \"Add Class\" );\n});\n\ntest(\"removeClass(String) - simple\", function() {\n\texpect(3);\n\tvar div = $(\"div\").addClass(\"test\").removeClass(\"test\"),\n\t\tpass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n\t}\n\tok( pass, \"Remove Class\" );\n\t\n\treset();\n\tvar div = $(\"div\").addClass(\"test\").addClass(\"foo\").addClass(\"bar\");\n\tdiv.removeClass(\"test\").removeClass(\"bar\").removeClass(\"foo\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t if ( div.get(i).className.match(/test|bar|foo/) ) pass = false;\n\t}\n\tok( pass, \"Remove multiple classes\" );\n\t\n\treset();\n\tvar div = $(\"div:eq(0)\").addClass(\"test\").removeClass(\"\");\n\tok( div.is('.test'), \"Empty string passed to removeClass\" );\n\t\n});\n\ntest(\"toggleClass(String)\", function() {\n\texpect(3);\n\tvar e = $(\"#firstp\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n\te.toggleClass(\"test\");\n\tok( e.is(\".test\"), \"Assert class present\" ); \n\te.toggleClass(\"test\");\n\tok( !e.is(\".test\"), \"Assert class not present\" );\n});\n\ntest(\"removeAttr(String\", function() {\n\texpect(1);\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\n});\n\ntest(\"text(String)\", function() {\n\texpect(1);\n\tok( $(\"#foo\").text(\"<div><b>Hello</b> cruel world!</div>\")[0].innerHTML == \"&lt;div&gt;&lt;b&gt;Hello&lt;/b&gt; cruel world!&lt;/div&gt;\", \"Check escaped text\" );\n});\n\ntest(\"$.each(Object,Function)\", function() {\n\texpect(8);\n\t$.each( [0,1,2], function(i, n){\n\t\tok( i == n, \"Check array iteration\" );\n\t});\n\t\n\t$.each( [5,6,7], function(i, n){\n\t\tok( i == n - 5, \"Check array iteration\" );\n\t});\n\t \n\t$.each( { name: \"name\", lang: \"lang\" }, function(i, n){\n\t\tok( i == n, \"Check object iteration\" );\n\t});\n});\n\ntest(\"$.prop\", function() {\n\texpect(2);\n\tvar handle = function() { return this.id };\n\tok( $.prop($(\"#ap\")[0], handle) == \"ap\", \"Check with Function argument\" );\n\tok( $.prop($(\"#ap\")[0], \"value\") == \"value\", \"Check with value argument\" );\n});\n\ntest(\"$.className\", function() {\n\texpect(6);\n\tvar x = $(\"<p>Hi</p>\")[0];\n\tvar c = $.className;\n\tc.add(x, \"hi\");\n\tok( x.className == \"hi\", \"Check single added class\" );\n\tc.add(x, \"foo bar\");\n\tok( x.className == \"hi foo bar\", \"Check more added classes\" );"}]},
{"id":"a5d426f06be79ce7dc6b90bb04472147fb0689f7","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[147,327],"code":"/**\n * Initialize a new jQuery object\n *\n * @private\n * @name init\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\ninit: function(a,c) {\n\t// Make sure that a selection was provided\n\ta = a || document;\n\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = quickExpr.exec(a);\n\t\tif ( m && (m[1] || !c) ) {\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tif ( m[1] )\n\t\t\t\ta = jQuery.clean( [ m[1] ] );\n\n\t\t\t// HANDLE: $(\"#id\")\n\t\t\telse {\n\t\t\t\tvar tmp = document.getElementById( m[3] );\n\t\t\t\tif ( tmp )\n\t\t\t\t\t// Handle the case where IE and Opera return items\n\t\t\t\t\t// by name instead of ID\n\t\t\t\t\tif ( tmp.id != m[3] )\n\t\t\t\t\t\treturn jQuery().find( a );\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis[0] = tmp;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\treturn this;\n\t\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\ta = [];\n\t\t\t}\n\n\t\t// HANDLE: $(expr)\n\t\t} else\n\t\t\treturn new jQuery( c ).find( a );\n\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t} else if ( jQuery.isFunction(a) )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );\n},\n\n/**\n * The current version of jQuery.\n *\n * @private\n * @property\n * @name jquery\n * @type String\n * @cat Core\n */\njquery: \"@VERSION\",\n\n/**\n * The number of elements currently matched. The size function will return the same value.\n *\n * @example $(\"img\").length;\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @property\n * @name length\n * @type Number\n * @cat Core\n */\n\n/**\n * Get the number of elements currently matched. This returns the same\n * number as the 'length' property of the jQuery object.\n *\n * @example $(\"img\").size();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @name size\n * @type Number\n * @cat Core\n */\nsize: function() {\n\treturn this.length;\n},\n\nlength: 0,"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[143,306],"code":"/**\n * Initialize a new jQuery object\n *\n * @private\n * @name init\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\ninit: function(a,c) {\n\t// Make sure that a selection was provided\n\ta = a || document;\n\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\tif ( jQuery.isFunction(a) )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\t// HANDLE: $(html) -> $(array)\n\t\tvar m = /^[^<]*(<(.|\\s)+>)[^>]*$/.exec(a);\n\t\tif ( m )\n\t\t\ta = jQuery.clean( [ m[1] ] );\n\n\t\t// HANDLE: $(expr)\n\t\telse\n\t\t\treturn new jQuery( c ).find( a );\n\t}\n\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );\n},\n\n/**\n * The current version of jQuery.\n *\n * @private\n * @property\n * @name jquery\n * @type String\n * @cat Core\n */\njquery: \"@VERSION\",\n\n/**\n * The number of elements currently matched. The size function will return the same value.\n *\n * @example $(\"img\").length;\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @property\n * @name length\n * @type Number\n * @cat Core\n */\n\n/**\n * Get the number of elements currently matched. This returns the same\n * number as the 'length' property of the jQuery object.\n *\n * @example $(\"img\").size();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @name size\n * @type Number\n * @cat Core\n */\nsize: function() {\n\treturn this.length;\n},\n\nlength: 0,\n\n/**\n * Access all matched DOM elements. This serves as a backwards-compatible\n * way of accessing all matched elements (other than the jQuery object\n * itself, which is, in fact, an array of elements).\n *\n * It is useful if you need to operate on the DOM elements themselves instead of using built-in jQuery functions.\n *\n * @example $(\"img\").get();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result [ <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/> ]\n * @desc Selects all images in the document and returns the DOM Elements as an Array\n *\n * @name get\n * @type Array<Element>\n * @cat Core\n */"}]},
{"id":"f3f37b4e100d0e2834ab5c508c2271ac0dbb4e12","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[309,589],"code":"/**\n * Set the jQuery object to an array of elements. This operation is\n * completely destructive - be sure to use .pushStack() if you wish to maintain\n * the jQuery stack.\n *\n * @example $(\"img\").setArray([ document.body ]);\n * @result $(\"img\").setArray() == [ document.body ]\n *\n * @private\n * @name setArray\n * @type jQuery\n * @param Elements elems An array of elements\n * @cat Core\n */\nsetArray: function( a ) {\n\tthis.length = 0;\n\tArray.prototype.push.apply( this, a );\n\treturn this;\n},\n\n/**\n * Execute a function within the context of every matched element.\n * This means that every time the passed-in function is executed\n * (which is once for every element matched) the 'this' keyword\n * points to the specific DOM element.\n *\n * Additionally, the function, when executed, is passed a single\n * argument representing the position of the element in the matched\n * set (integer, zero-index).\n *\n * @example $(\"img\").each(function(i){\n *   this.src = \"test\" + i + \".jpg\";\n * });\n * @before <img/><img/>\n * @result <img src=\"test0.jpg\"/><img src=\"test1.jpg\"/>\n * @desc Iterates over two images and sets their src property\n *\n * @name each\n * @type jQuery\n * @param Function fn A function to execute\n * @cat Core\n */\neach: function( fn, args ) {\n\treturn jQuery.each( this, fn, args );\n},\n\n/**\n * Searches every matched element for the object and returns\n * the index of the element, if found, starting with zero. \n * Returns -1 if the object wasn't found.\n *\n * @example $(\"*\").index( $('#foobar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 0\n * @desc Returns the index for the element with ID foobar\n *\n * @example $(\"*\").index( $('#foo')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 2\n * @desc Returns the index for the element with ID foo within another element\n *\n * @example $(\"*\").index( $('#bar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result -1\n * @desc Returns -1, as there is no element with ID bar\n *\n * @name index\n * @type Number\n * @param Element subject Object to search for\n * @cat Core\n */\nindex: function( obj ) {\n\tvar pos = -1;\n\tthis.each(function(i){\n\t\tif ( this == obj ) pos = i;\n\t});\n\treturn pos;\n},\n\n/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * If the element does not have an attribute with such a\n\t * name, undefined is returned.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements."},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[288,568],"code":"/**\n * Set the jQuery object to an array of elements. This operation is\n * completely destructive - be sure to use .pushStack() if you wish to maintain\n * the jQuery stack.\n *\n * @example $(\"img\").setArray([ document.body ]);\n * @result $(\"img\").setArray() == [ document.body ]\n *\n * @private\n * @name setArray\n * @type jQuery\n * @param Elements elems An array of elements\n * @cat Core\n */\nsetArray: function( a ) {\n\tthis.length = 0;\n\t[].push.apply( this, a );\n\treturn this;\n},\n\n/**\n * Execute a function within the context of every matched element.\n * This means that every time the passed-in function is executed\n * (which is once for every element matched) the 'this' keyword\n * points to the specific DOM element.\n *\n * Additionally, the function, when executed, is passed a single\n * argument representing the position of the element in the matched\n * set (integer, zero-index).\n *\n * @example $(\"img\").each(function(i){\n *   this.src = \"test\" + i + \".jpg\";\n * });\n * @before <img/><img/>\n * @result <img src=\"test0.jpg\"/><img src=\"test1.jpg\"/>\n * @desc Iterates over two images and sets their src property\n *\n * @name each\n * @type jQuery\n * @param Function fn A function to execute\n * @cat Core\n */\neach: function( fn, args ) {\n\treturn jQuery.each( this, fn, args );\n},\n\n/**\n * Searches every matched element for the object and returns\n * the index of the element, if found, starting with zero. \n * Returns -1 if the object wasn't found.\n *\n * @example $(\"*\").index( $('#foobar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 0\n * @desc Returns the index for the element with ID foobar\n *\n * @example $(\"*\").index( $('#foo')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 2\n * @desc Returns the index for the element with ID foo within another element\n *\n * @example $(\"*\").index( $('#bar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result -1\n * @desc Returns -1, as there is no element with ID bar\n *\n * @name index\n * @type Number\n * @param Element subject Object to search for\n * @cat Core\n */\nindex: function( obj ) {\n\tvar pos = -1;\n\tthis.each(function(i){\n\t\tif ( this == obj ) pos = i;\n\t});\n\treturn pos;\n},\n\n/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * If the element does not have an attribute with such a\n\t * name, undefined is returned.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements."}]},
{"id":"295d1f58d00bb04e120d208bb5ac969de8b580cd","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[552,666],"code":"/**\n * Get the text contents of all matched elements. The result is\n * a string that contains the combined text contents of all matched\n * elements. This method works on both HTML and XML documents.\n *\n * @example $(\"p\").text();\n * @before <p><b>Test</b> Paragraph.</p><p>Paraparagraph</p>\n * @result Test Paragraph.Paraparagraph\n * @desc Gets the concatenated text of all paragraphs\n *\n * @name text\n * @type String\n * @cat DOM/Attributes\n */\n\n/**\n * Set the text contents of all matched elements.\n *\n * Similar to html(), but escapes HTML (replace \"<\" and \">\" with their\n * HTML entities).\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\");\n * @before <p>Test Paragraph.</p>\n * @result <p>&lt;b&gt;Some&lt;/b&gt; new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\", true);\n * @before <p>Test Paragraph.</p>\n * @result <p>Some new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @name text\n * @type String\n * @param String val The text value to set the contents of the element to.\n * @cat DOM/Attributes\n */\ntext: function(e) {\n\tif ( typeof e != \"object\" && e != null )\n\t\treturn this.empty().append( document.createTextNode( e ) );\n\n\tvar t = \"\";\n\tjQuery.each( e || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tt += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue : jQuery.fn.text([ this ]);\n\t\t});\n\t});\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a, args = arguments;"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[531,645],"code":"/**\n * Get the text contents of all matched elements. The result is\n * a string that contains the combined text contents of all matched\n * elements. This method works on both HTML and XML documents.\n *\n * @example $(\"p\").text();\n * @before <p><b>Test</b> Paragraph.</p><p>Paraparagraph</p>\n * @result Test Paragraph.Paraparagraph\n * @desc Gets the concatenated text of all paragraphs\n *\n * @name text\n * @type String\n * @cat DOM/Attributes\n */\n\n/**\n * Set the text contents of all matched elements.\n *\n * Similar to html(), but escapes HTML (replace \"<\" and \">\" with their\n * HTML entities).\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\");\n * @before <p>Test Paragraph.</p>\n * @result <p>&lt;b&gt;Some&lt;/b&gt; new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\", true);\n * @before <p>Test Paragraph.</p>\n * @result <p>Some new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @name text\n * @type String\n * @param String val The text value to set the contents of the element to.\n * @cat DOM/Attributes\n */\ntext: function(e) {\n\tif ( typeof e == \"string\" )\n\t\treturn this.empty().append( document.createTextNode( e ) );\n\n\tvar t = \"\";\n\tjQuery.each( e || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tt += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue : jQuery.fn.text([ this ]);\n\t\t});\n\t});\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a, args = arguments;"}]},
{"id":"4824fabeb8d1160e9c7331219b31729cdefdd209","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[603,875],"code":"/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a, args = arguments;\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\tif ( !a )\n\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;\n\n\t\t// Move the matched element to within the wrap structure\n\t\tb.appendChild( this );\n\t});\n},\n\n/**\n * Append content to the inside of every matched element.\n *\n * This operation is similar to doing an appendChild to all the\n * specified elements, adding them into the document.\n *\n * @example $(\"p\").append(\"<b>Hello</b>\");\n * @before <p>I would like to say: </p>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends some HTML to all paragraphs.\n *\n * @example $(\"p\").append( $(\"#foo\")[0] );\n * @before <p>I would like to say: </p><b id=\"foo\">Hello</b>\n * @result <p>I would like to say: <b id=\"foo\">Hello</b></p>\n * @desc Appends an Element to all paragraphs.\n *\n * @example $(\"p\").append( $(\"b\") );\n * @before <p>I would like to say: </p><b>Hello</b>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\n *\n * @name append\n * @type jQuery\n * @param <Content> content Content to append to the target\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n * @see before(<Content>)\n * @see after(<Content>)\n */\nappend: function() {"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[582,854],"code":"/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a, args = arguments;\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\tif ( !a )\n\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;\n\n\t\t// Move the matched element to within the wrap structure\n\t\tb.appendChild( this );\n\t});\n},\n\n/**\n * Append content to the inside of every matched element.\n *\n * This operation is similar to doing an appendChild to all the\n * specified elements, adding them into the document.\n *\n * @example $(\"p\").append(\"<b>Hello</b>\");\n * @before <p>I would like to say: </p>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends some HTML to all paragraphs.\n *\n * @example $(\"p\").append( $(\"#foo\")[0] );\n * @before <p>I would like to say: </p><b id=\"foo\">Hello</b>\n * @result <p>I would like to say: <b id=\"foo\">Hello</b></p>\n * @desc Appends an Element to all paragraphs.\n *\n * @example $(\"p\").append( $(\"b\") );\n * @before <p>I would like to say: </p><b>Hello</b>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\n *\n * @name append\n * @type jQuery\n * @param <Content> content Content to append to the target\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n * @see before(<Content>)\n * @see after(<Content>)\n */\nappend: function() {"}]},
{"id":"c7666a308a093465e33d1366b05bef852dbc7190","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[859,1187],"code":"/**\n * Clone matched DOM Elements and select the clones. \n *\n * This is useful for moving copies of the elements to another\n * location in the DOM.\n *\n * @example $(\"b\").clone().prependTo(\"p\");\n * @before <b>Hello</b><p>, how are you?</p>\n * @result <b>Hello</b><p><b>Hello</b>, how are you?</p>\n * @desc Clones all b elements (and selects the clones) and prepends them to all paragraphs.\n *\n * @name clone\n * @type jQuery\n * @param Boolean deep (Optional) Set to false if you don't want to clone all descendant nodes, in addition to the element itself.\n * @cat DOM/Manipulation\n */\nclone: function(deep) {\n\tdeep = deep != undefined ? deep : true;\n\tvar $this = this.add(this.find(\"*\"));\n\tif (jQuery.browser.msie) {\n\t\t// Need to remove events on the element and its descendants\n\t\t$this.each(function() {\n\t\t\tthis._$events = {};\n\t\t\tfor (var type in this.$events)\n\t\t\t\tthis._$events[type] = jQuery.extend({},this.$events[type]);\n\t\t}).unbind();\n\t}\n\n\t// Do the clone\n\tvar r = this.pushStack( jQuery.map( this, function(a){\n\t\treturn a.cloneNode( deep );\n\t}) );\n\n\tif (jQuery.browser.msie) {\n\t\t$this.each(function() {\n\t\t\t// Add the events back to the original and its descendants\n\t\t\tvar events = this._$events;\n\t\t\tfor (var type in events)\n\t\t\t\tfor (var handler in events[type])\n\t\t\t\t\tjQuery.event.add(this, type, events[type][handler], events[type][handler].data);\n\t\t\tthis._$events = null;\n\t\t});\n\t}\n\n\t// copy form values over\n\tif (deep) {\n\t\tvar inputs = r.add(r.find('*')).filter('select,input[@type=checkbox]');\n\t\t$this.filter('select,input[@type=checkbox]').each(function(i) {\n\t\t\tif (this.selectedIndex)\n\t\t\t\tinputs[i].selectedIndex = this.selectedIndex;\n\t\t\tif (this.checked)\n\t\t\t\tinputs[i].checked = true;\n\t\t});\n\t}\n\n\t// Return the cloned set\n\treturn r;\n},\n\n/**\n * Removes all elements from the set of matched elements that do not\n * match the specified expression(s). This method is used to narrow down\n * the results of a search.\n *\n * Provide a comma-separated list of expressions to apply multiple filters at once.\n *\n * @example $(\"p\").filter(\".selected\")\n * @before <p class=\"selected\">Hello</p><p>How are you?</p>\n * @result [ <p class=\"selected\">Hello</p> ]\n * @desc Selects all paragraphs and removes those without a class \"selected\".\n *\n * @example $(\"p\").filter(\".selected, :first\")\n * @before <p>Hello</p><p>Hello Again</p><p class=\"selected\">And Again</p>\n * @result [ <p>Hello</p>, <p class=\"selected\">And Again</p> ]\n * @desc Selects all paragraphs and removes those without class \"selected\" and being the first one.\n *\n * @name filter\n * @type jQuery\n * @param String expression Expression(s) to search with.\n * @cat DOM/Traversing\n */\n \n/**\n * Removes all elements from the set of matched elements that do not\n * pass the specified filter. This method is used to narrow down\n * the results of a search.\n *\n * @example $(\"p\").filter(function(index) {\n *   return $(\"ol\", this).length == 0;\n * })\n * @before <p><ol><li>Hello</li></ol></p><p>How are you?</p>\n * @result [ <p>How are you?</p> ]\n * @desc Remove all elements that have a child ol element\n *\n * @name filter\n * @type jQuery\n * @param Function filter A function to use for filtering\n * @cat DOM/Traversing\n */\nfilter: function(t) {"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[838,1158],"code":"/**\n * Clone matched DOM Elements and select the clones. \n *\n * This is useful for moving copies of the elements to another\n * location in the DOM.\n *\n * @example $(\"b\").clone().prependTo(\"p\");\n * @before <b>Hello</b><p>, how are you?</p>\n * @result <b>Hello</b><p><b>Hello</b>, how are you?</p>\n * @desc Clones all b elements (and selects the clones) and prepends them to all paragraphs.\n *\n * @name clone\n * @type jQuery\n * @param Boolean deep (Optional) Set to false if you don't want to clone all descendant nodes, in addition to the element itself.\n * @cat DOM/Manipulation\n */\nclone: function(deep) {\n\t// Need to remove events on the element and its descendants\n\tvar $this = this.add(this.find(\"*\"));\n\t$this.each(function() {\n\t\tthis._$events = {};\n\t\tfor (var type in this.$events)\n\t\t\tthis._$events[type] = jQuery.extend({},this.$events[type]);\n\t}).unbind();\n\n\t// Do the clone\n\tvar r = this.pushStack( jQuery.map( this, function(a){\n\t\treturn a.cloneNode( deep != undefined ? deep : true );\n\t}) );\n\n\t// Add the events back to the original and its descendants\n\t$this.each(function() {\n\t\tvar events = this._$events;\n\t\tfor (var type in events)\n\t\t\tfor (var handler in events[type])\n\t\t\t\tjQuery.event.add(this, type, events[type][handler], events[type][handler].data);\n\t\tthis._$events = null;\n\t});\n\n\t// Return the cloned set\n\treturn r;\n},\n\n/**\n * Removes all elements from the set of matched elements that do not\n * match the specified expression(s). This method is used to narrow down\n * the results of a search.\n *\n * Provide a comma-separated list of expressions to apply multiple filters at once.\n *\n * @example $(\"p\").filter(\".selected\")\n * @before <p class=\"selected\">Hello</p><p>How are you?</p>\n * @result [ <p class=\"selected\">Hello</p> ]\n * @desc Selects all paragraphs and removes those without a class \"selected\".\n *\n * @example $(\"p\").filter(\".selected, :first\")\n * @before <p>Hello</p><p>Hello Again</p><p class=\"selected\">And Again</p>\n * @result [ <p>Hello</p>, <p class=\"selected\">And Again</p> ]\n * @desc Selects all paragraphs and removes those without class \"selected\" and being the first one.\n *\n * @name filter\n * @type jQuery\n * @param String expression Expression(s) to search with.\n * @cat DOM/Traversing\n */\n \n/**\n * Removes all elements from the set of matched elements that do not\n * pass the specified filter. This method is used to narrow down\n * the results of a search.\n *\n * @example $(\"p\").filter(function(index) {\n *   return $(\"ol\", this).length == 0;\n * })\n * @before <p><ol><li>Hello</li></ol></p><p>How are you?</p>\n * @result [ <p>How are you?</p> ]\n * @desc Remove all elements that have a child ol element\n *\n * @name filter\n * @type jQuery\n * @param Function filter A function to use for filtering\n * @cat DOM/Traversing\n */\nfilter: function(t) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( t ) &&\n\t\tjQuery.grep(this, function(el, index){\n\t\t\treturn t.apply(el, [index])\n\t\t}) ||\n\n\t\tjQuery.multiFilter(t,this) );\n},\n\n/**\n * Removes the specified Element from the set of matched elements. This\n * method is used to remove a single Element from a jQuery object.\n *\n * @example $(\"p\").not( $(\"#selected\")[0] )\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]"}]},
{"id":"4173930a71ae4548485f90b513a54dec18206214","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1199,1214],"code":"domManip: function(args, table, dir, fn){\n\tvar clone = this.length > 1, a; \n\n\treturn this.each(function(){\n\t\tif ( !a ) {\n\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\t\t\tif ( dir < 0 )\n\t\t\t\ta.reverse();\n\t\t}\n\n\t\tvar obj = this;\n\n\t\tif ( table && jQuery.nodeName(this, \"table\") && jQuery.nodeName(a[0], \"tr\") )\n\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\n\t\tjQuery.each( a, function(){"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1158,1173],"code":"domManip: function(args, table, dir, fn){\n\tvar clone = this.length > 1, a; \n\n\treturn this.each(function(){\n\t\tif ( !a ) {\n\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\t\t\tif ( dir < 0 )\n\t\t\t\ta.reverse();\n\t\t}\n\n\t\tvar obj = this;\n\n\t\tif ( table && jQuery.nodeName(this, \"table\") && jQuery.nodeName(a[0], \"tr\") )\n\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\n\t\tjQuery.each( a, function(){"}]},
{"id":"2492a31bdb01c3bc0bf6f4f1bb249e37c151a056","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1392,1460],"code":"/**\n * A generic iterator function, which can be used to seamlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * The callback has two arguments:the key (objects) or index (arrays) as first\n * the first, and the value as the second.\n *\n * @example $.each( [0,1,2], function(i, n){\n *   alert( \"Item #\" + i + \": \" + n );\n * });\n * @desc This is an example of iterating over the items in an array,\n * accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n *   alert( \"Name: \" + i + \", Value: \" + n );\n * });\n *\n * @desc This is an example of iterating over the properties in an\n * Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat JavaScript\n */\n// args is for internal usage only\neach: function( obj, fn, args ) {\n\tif ( args ) {\n\t\tif ( obj.length == undefined )\n\t\t\tfor ( var i in obj )\n\t\t\t\tfn.apply( obj[i], args );\n\t\telse\n\t\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )\n\t\t\t\tif ( fn.apply( obj[i], args ) === false ) break;\n\n\t// A special, fast, case for the most common use of each\n\t} else {\n\t\tif ( obj.length == undefined )\n\t\t\tfor ( var i in obj )\n\t\t\t\tfn.call( obj[i], i, obj[i] );\n\t\telse\n\t\t\tfor ( var i = 0, ol = obj.length, val = obj[0]; \n\t\t\t\ti < ol && fn.call(val,i,val) !== false; val = obj[++i] ){}\n\t}\n\n\treturn obj;\n},\n\nprop: function(elem, value, type, index, prop){\n\t\t// Handle executable functions\n\t\tif ( jQuery.isFunction( value ) )\n\t\t\tvalue = value.call( elem, [index] );\n\t\t\t\n\t\t// exclude the following css properties to add px\n\t\tvar exclude = /z-?index|font-?weight|opacity|zoom|line-?height/i;\n\n\t\t// Handle passing in a number to a CSS property\n\t\treturn value && value.constructor == Number && type == \"curCSS\" && !exclude.test(prop) ?\n\t\t\tvalue + \"px\" :\n\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( (c || \"\").split(/\\s+/), function(i, cur){"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1307,1363],"code":"/**\n * A generic iterator function, which can be used to seamlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * The callback has two arguments:the key (objects) or index (arrays) as first\n * the first, and the value as the second.\n *\n * @example $.each( [0,1,2], function(i, n){\n *   alert( \"Item #\" + i + \": \" + n );\n * });\n * @desc This is an example of iterating over the items in an array,\n * accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n *   alert( \"Name: \" + i + \", Value: \" + n );\n * });\n *\n * @desc This is an example of iterating over the properties in an\n * Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat JavaScript\n */\n// args is for internal usage only\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )\n\t\t\tif ( fn.apply( obj[i], args || [i, obj[i]] ) === false ) break;\n\treturn obj;\n},\n\nprop: function(elem, value, type, index, prop){\n\t\t// Handle executable functions\n\t\tif ( jQuery.isFunction( value ) )\n\t\t\tvalue = value.call( elem, [index] );\n\t\t\t\n\t\t// exclude the following css properties to add px\n\t\tvar exclude = /z-?index|font-?weight|opacity|zoom|line-?height/i;\n\n\t\t// Handle passing in a number to a CSS property\n\t\treturn value && value.constructor == Number && type == \"curCSS\" && !exclude.test(prop) ?\n\t\t\tvalue + \"px\" :\n\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){"}]},
{"id":"891edf45e02b945c0e71917f8f30c6a5dc2c33c7","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1458,1535],"code":"\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( (c || \"\").split(/\\s+/), function(i, cur){\n\t\t\tif ( !jQuery.className.has( elem.className, cur ) )\n\t\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + cur;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, c ){\n\t\telem.className = c != undefined ?\n\t\t\tjQuery.grep( elem.className.split(/\\s+/), function(cur){\n\t\t\t\treturn !jQuery.className.has( c, cur );\t\n\t\t\t}).join(\" \") : \"\";\n\t},\n\n\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\treturn jQuery.inArray( c, (t.className || t).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif ( jQuery(e).is(':visible') ) {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))\n\t\t\t\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t\t\t\t.css({\n\t\t\t\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t\t\t\t}).appendTo(e.parentNode)[0];\n\n\t\t\t\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";\n\t\t\t\tif ( parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"relative\";\n\n\t\t\t\toHeight = e.clientHeight;\n\t\t\t\toWidth = e.clientWidth;\n\n\t\t\t\tif ( parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"static\";\n\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p == \"height\" ? oHeight : oWidth;\n\t}\n\n\treturn jQuery.curCSS( e, p );\n},\n\ncurCSS: function(elem, prop, force) {\n\tvar ret, stack = [], swap = [];"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1361,1438],"code":"\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){\n\t\t\tif ( !jQuery.className.has( elem.className, cur ) )\n\t\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + cur;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, c ){\n\t\telem.className = c != undefined ?\n\t\t\tjQuery.grep( elem.className.split(/\\s+/), function(cur){\n\t\t\t\treturn !jQuery.className.has( c, cur );\t\n\t\t\t}).join(\" \") : \"\";\n\t},\n\n\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\treturn jQuery.inArray( c, (t.className || t).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif ( jQuery(e).is(':visible') ) {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))\n\t\t\t\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t\t\t\t.css({\n\t\t\t\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t\t\t\t}).appendTo(e.parentNode)[0];\n\n\t\t\t\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";\n\t\t\t\tif ( parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"relative\";\n\n\t\t\t\toHeight = e.clientHeight;\n\t\t\t\toWidth = e.clientWidth;\n\n\t\t\t\tif ( parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"static\";\n\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p == \"height\" ? oHeight : oWidth;\n\t}\n\n\treturn jQuery.curCSS( e, p );\n},\n\ncurCSS: function(elem, prop, force) {\n\tvar ret;"}]},
{"id":"724eec09b6fa38ae9dc6a4db85e9904379a62a32","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1552,1565],"code":"\tprop = styleFloat;\n\nif (!force && elem.style[prop])\n\tret = elem.style[prop];\n\nelse if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\tif (prop.match(/float/i))\n\t\tprop = \"float\";\n\n\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\tif ( cur && !color(elem) )"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1446,1459],"code":"\tprop = jQuery.styleFloat;\n\nif (!force && elem.style[prop])\n\tret = elem.style[prop];\n\nelse if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\tif (prop.match(/float/i))\n\t\tprop = \"float\";\n\n\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\tif ( cur )"}]},
{"id":"802ca960c8a63db6e670c8496f9794c471bde332","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1596,1623],"code":"\t\t\tret = \"1\";\n\n\t} else if (elem.currentStyle) {\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t}\n\n\treturn ret;\n},\n\nclean: function(a, doc) {\n\tvar r = [];\n\tdoc = doc || document;\n\n\tjQuery.each( a, function(i,arg){\n\t\tif ( !arg ) return;\n\n\t\tif ( arg.constructor == Number )\n\t\t\targ = arg.toString();\n\t\t\n\t\t// Convert html string into DOM nodes\n\t\tif ( typeof arg == \"string\" ) {\n\t\t\t// Trim whitespace, otherwise indexOf won't work as expected\n\t\t\tvar s = jQuery.trim(arg).toLowerCase(), div = doc.createElement(\"div\"), tb = [];\n\n\t\t\tvar wrap =\n\t\t\t\t// option or optgroup\n\t\t\t\t!s.indexOf(\"<opt\") &&"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1466,1494],"code":"\t\t\t    ret = c && c.getPropertyValue(prop) || \"\";\n\t\t\t});\n\n\t} else if (elem.currentStyle) {\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t}\n\n\treturn ret;\n},\n\nclean: function(a, doc) {\n\tvar r = [];\n\tdoc = doc || document;\n\n\tjQuery.each( a, function(i,arg){\n\t\tif ( !arg ) return;\n\n\t\tif ( arg.constructor == Number )\n\t\t\targ = arg.toString();\n\t\t\n\t\t// Convert html string into DOM nodes\n\t\tif ( typeof arg == \"string\" ) {\n\t\t\t// Trim whitespace, otherwise indexOf won't work as expected\n\t\t\tvar s = jQuery.trim(arg).toLowerCase(), div = doc.createElement(\"div\"), tb = [];\n\n\t\t\tvar wrap =\n\t\t\t\t// option or optgroup\n\t\t\t\t!s.indexOf(\"<opt\") &&"}]},
{"id":"182c59b0ec2bce02408bd174358020c095f92af5","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1651,1668],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.lastChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\ttb[n].parentNode.removeChild(tb[n]);"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1518,1537],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\ttb[n].parentNode.removeChild(tb[n]);\n\t\n}"}]},
{"id":"b5862217b7526d4e3f796725c8f93f3b99ea81af","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1705,1754],"code":"\t\treturn jQuery.attr( elem.style, \"cssText\", value );\n\n\telse if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\t\treturn elem.getAttributeNode(name).nodeValue;\n\n\t// IE elem.getAttribute passes even for style\n\telse if ( elem.tagName ) {\n\n\t\tif ( value != undefined ) elem.setAttribute( name, value );\n\t\tif ( jQuery.browser.msie && /href|src/.test(name) && !jQuery.isXMLDoc(elem) ) \n\t\t\treturn elem.getAttribute( name, 2 );\n\t\treturn elem.getAttribute( name );\n\n\t// elem is actually elem.style ... set the style\n\t} else {\n\t\t// IE actually uses filters for opacity\n\t\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\t\tif ( value != undefined ) {\n\t\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t\t// Force it by setting the zoom level\n\t\t\t\telem.zoom = 1; \n\n\t\t\t\t// Set the alpha filter to set the opacity\n\t\t\t\telem.filter = (elem.filter || \"\").replace(/alpha\\([^)]*\\)/,\"\") +\n\t\t\t\t\t(parseFloat(value).toString() == \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\");\n\t\t\t}\n\n\t\t\treturn elem.filter ? \n\t\t\t\t(parseFloat( elem.filter.match(/opacity=([^)]*)/)[1] ) / 100).toString() : \"\";\n\t\t}\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @example $.trim(\"  hello, how are you?  \");\n * @result \"hello, how are you?\"\n *\n * @name $.trim\n * @type String\n * @param String str The string to trim.\n * @cat JavaScript\n */\ntrim: function(t){\n\treturn (t||\"\").replace(/^\\s+|\\s+$/g, \"\");\n},"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1561,1611],"code":"\t\treturn elem[fix[name]];\n\n\t} else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\t\treturn elem.getAttributeNode(name).nodeValue;\n\n\t// IE elem.getAttribute passes even for style\n\telse if ( elem.tagName ) {\n\t\t\n\n\t\tif ( value != undefined ) elem.setAttribute( name, value );\n\t\tif ( jQuery.browser.msie && /href|src/.test(name) && !jQuery.isXMLDoc(elem) ) \n\t\t\treturn elem.getAttribute( name, 2 );\n\t\treturn elem.getAttribute( name );\n\n\t// elem is actually elem.style ... set the style\n\t} else {\n\t\t// IE actually uses filters for opacity\n\t\tif ( name == \"opacity\" && jQuery.browser.msie ) {\n\t\t\tif ( value != undefined ) {\n\t\t\t\t// IE has trouble with opacity if it does not have layout\n\t\t\t\t// Force it by setting the zoom level\n\t\t\t\telem.zoom = 1; \n\n\t\t\t\t// Set the alpha filter to set the opacity\n\t\t\t\telem.filter = (elem.filter || \"\").replace(/alpha\\([^)]*\\)/,\"\") +\n\t\t\t\t\t(parseFloat(value).toString() == \"NaN\" ? \"\" : \"alpha(opacity=\" + value * 100 + \")\");\n\t\t\t}\n\n\t\t\treturn elem.filter ? \n\t\t\t\t(parseFloat( elem.filter.match(/opacity=([^)]*)/)[1] ) / 100).toString() : \"\";\n\t\t}\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @example $.trim(\"  hello, how are you?  \");\n * @result \"hello, how are you?\"\n *\n * @name $.trim\n * @type String\n * @param String str The string to trim.\n * @cat JavaScript\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},"}]},
{"id":"3b3af858abee739326e052d638b904d644a06069","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1873,1964],"code":"\t/**\n\t * Translate all items in an array to another array of items.\n\t *\n\t * The translation function that is provided to this method is \n\t * called for each item in the array and is passed one argument: \n\t * The item to be translated.\n\t *\n\t * The function can then return the translated value, 'null'\n\t * (to remove the item), or  an array of values - which will\n\t * be flattened into the full array.\n\t *\n\t * @example $.map( [0,1,2], function(i){\n\t *   return i + 4;\n\t * });\n\t * @result [4, 5, 6]\n\t * @desc Maps the original array to a new one and adds 4 to each value.\n\t *\n\t * @example $.map( [0,1,2], function(i){\n\t *   return i > 0 ? i + 1 : null;\n\t * });\n\t * @result [2, 3]\n\t * @desc Maps the original array to a new one and adds 1 to each\n\t * value if it is bigger then zero, otherwise it's removed-\n\t * \n\t * @example $.map( [0,1,2], function(i){\n\t *   return [ i, i + 1 ];\n\t * });\n\t * @result [0, 1, 1, 2, 2, 3]\n\t * @desc Maps the original array to a new one, each element is added\n\t * with it's original value and the value plus one.\n\t *\n\t * @name $.map\n\t * @type Array\n\t * @param Array array The Array to translate.\n\t * @param Function fn The function to process each item against.\n\t * @cat JavaScript\n\t */\n\tmap: function(elems, fn) {\n\t\t// If a string is passed in for the function, make a function\n\t\t// for it (a handy shortcut)\n\t\tif ( typeof fn == \"string\" )\n\t\t\tfn = eval(\"false||function(a){return \" + fn + \"}\");\n\n\t\tvar result = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\t// new value (or values).\n\t\tfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\t\t\tvar val = fn(elems[i],i);\n\n\t\t\tif ( val !== null && val != undefined ) {\n\t\t\t\tif ( val.constructor != Array ) val = [val];\n\t\t\t\tresult = result.concat( val );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n});\n\n/**\n * Contains flags for the useragent, read from navigator.userAgent.\n * Available flags are: safari, opera, msie, mozilla\n *\n * This property is available before the DOM is ready, therefore you can\n * use it to add ready events only for certain browsers.\n *\n * There are situations where object detections is not reliable enough, in that\n * cases it makes sense to use browser detection. Simply try to avoid both!\n *\n * A combination of browser and object detection yields quite reliable results.\n *\n * @example $.browser.msie\n * @desc Returns true if the current useragent is some version of microsoft's internet explorer\n *\n * @example if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }\n * @desc Alerts \"this is safari!\" only for safari browsers\n *\n * @property\n * @name $.browser\n * @type Boolean\n * @cat JavaScript\n */\n \n/*\n * Whether the W3C compliant box model is being used.\n *\n * @property\n * @name $.boxModel\n * @type Boolean\n * @cat JavaScript\n */"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1717,1808],"code":"\t/**\n\t * Translate all items in an array to another array of items.\n\t *\n\t * The translation function that is provided to this method is \n\t * called for each item in the array and is passed one argument: \n\t * The item to be translated.\n\t *\n\t * The function can then return the translated value, 'null'\n\t * (to remove the item), or  an array of values - which will\n\t * be flattened into the full array.\n\t *\n\t * @example $.map( [0,1,2], function(i){\n\t *   return i + 4;\n\t * });\n\t * @result [4, 5, 6]\n\t * @desc Maps the original array to a new one and adds 4 to each value.\n\t *\n\t * @example $.map( [0,1,2], function(i){\n\t *   return i > 0 ? i + 1 : null;\n\t * });\n\t * @result [2, 3]\n\t * @desc Maps the original array to a new one and adds 1 to each\n\t * value if it is bigger then zero, otherwise it's removed-\n\t * \n\t * @example $.map( [0,1,2], function(i){\n\t *   return [ i, i + 1 ];\n\t * });\n\t * @result [0, 1, 1, 2, 2, 3]\n\t * @desc Maps the original array to a new one, each element is added\n\t * with it's original value and the value plus one.\n\t *\n\t * @name $.map\n\t * @type Array\n\t * @param Array array The Array to translate.\n\t * @param Function fn The function to process each item against.\n\t * @cat JavaScript\n\t */\n\tmap: function(elems, fn) {\n\t\t// If a string is passed in for the function, make a function\n\t\t// for it (a handy shortcut)\n\t\tif ( typeof fn == \"string\" )\n\t\t\tfn = new Function(\"a\",\"return \" + fn);\n\n\t\tvar result = [];\n\n\t\t// Go through the array, translating each of the items to their\n\t\t// new value (or values).\n\t\tfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\t\t\tvar val = fn(elems[i],i);\n\n\t\t\tif ( val !== null && val != undefined ) {\n\t\t\t\tif ( val.constructor != Array ) val = [val];\n\t\t\t\tresult = result.concat( val );\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n});\n\n/**\n * Contains flags for the useragent, read from navigator.userAgent.\n * Available flags are: safari, opera, msie, mozilla\n *\n * This property is available before the DOM is ready, therefore you can\n * use it to add ready events only for certain browsers.\n *\n * There are situations where object detections is not reliable enough, in that\n * cases it makes sense to use browser detection. Simply try to avoid both!\n *\n * A combination of browser and object detection yields quite reliable results.\n *\n * @example $.browser.msie\n * @desc Returns true if the current useragent is some version of microsoft's internet explorer\n *\n * @example if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }\n * @desc Alerts \"this is safari!\" only for safari browsers\n *\n * @property\n * @name $.browser\n * @type Boolean\n * @cat JavaScript\n */\n \n/*\n * Whether the W3C compliant box model is being used.\n *\n * @property\n * @name $.boxModel\n * @type Boolean\n * @cat JavaScript\n */"}]},
{"id":"4095fea435c797b6af1325c7817141805367b01a","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1967,1974],"code":"// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/) || [])[1],\n\tsafari: /webkit/.test(userAgent),\n\topera: /opera/.test(userAgent),\n\tmsie: /msie/.test(userAgent) && !/opera/.test(userAgent),\n\tmozilla: /mozilla/.test(userAgent) && !/(compatible|webkit)/.test(userAgent)\n};"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1812,1819],"code":"// Figure out what browser is being used\njQuery.browser = {\n\tversion: (b.match(/.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/) || [])[1],\n\tsafari: /webkit/.test(b),\n\topera: /opera/.test(b),\n\tmsie: /msie/.test(b) && !/opera/.test(b),\n\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n};"}]},
{"id":"df4dfc3a4c0036ce78c34291efe36f19832c04fc","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[1989,2152],"code":"\t\tstyleFloat: styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\",\n\t\tmaxlength: \"maxLength\"\n\t}\n});\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Use an optional expression to filter the matched set.\n *\n * \tOnly the immediately previous sibling is returned, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1831,1994],"code":"\t\tstyleFloat: jQuery.styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\",\n\t\tmaxlength: \"maxLength\"\n\t};\n};\n\n/**\n * Get a set of elements containing the unique parents of the matched\n * set of elements.\n *\n * You may use an optional expression to filter the set of parent elements that will match.\n *\n * @example $(\"p\").parent()\n * @before <div><p>Hello</p><p>Hello</p></div>\n * @result [ <div><p>Hello</p><p>Hello</p></div> ]\n * @desc Find the parent element of each paragraph.\n *\n * @example $(\"p\").parent(\".selected\")\n * @before <div><p>Hello</p></div><div class=\"selected\"><p>Hello Again</p></div>\n * @result [ <div class=\"selected\"><p>Hello Again</p></div> ]\n * @desc Find the parent element of each paragraph with a class \"selected\".\n *\n * @name parent\n * @type jQuery\n * @param String expr (optional) An expression to filter the parents with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique ancestors of the matched\n * set of elements (except for the root element).\n *\n * The matched elements can be filtered with an optional expression.\n *\n * @example $(\"span\").parents()\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <body>...</body>, <div>...</div>, <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span.\n *\n * @example $(\"span\").parents(\"p\")\n * @before <html><body><div><p><span>Hello</span></p><span>Hello Again</span></div></body></html>\n * @result [ <p><span>Hello</span></p> ]\n * @desc Find all parent elements of each span that is a paragraph.\n *\n * @name parents\n * @type jQuery\n * @param String expr (optional) An expression to filter the ancestors with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique next siblings of each of the\n * matched set of elements.\n *\n * It only returns the very next sibling for each element, not all\n * next siblings.\n *\n * You may provide an optional expression to filter the match.\n *\n * @example $(\"p\").next()\n * @before <p>Hello</p><p>Hello Again</p><div><span>And Again</span></div>\n * @result [ <p>Hello Again</p>, <div><span>And Again</span></div> ]\n * @desc Find the very next sibling of each paragraph.\n *\n * @example $(\"p\").next(\".selected\")\n * @before <p>Hello</p><p class=\"selected\">Hello Again</p><div><span>And Again</span></div>\n * @result [ <p class=\"selected\">Hello Again</p> ]\n * @desc Find the very next sibling of each paragraph that has a class \"selected\".\n *\n * @name next\n * @type jQuery\n * @param String expr (optional) An expression to filter the next Elements with\n * @cat DOM/Traversing\n */\n\n/**\n * Get a set of elements containing the unique previous siblings of each of the\n * matched set of elements.\n *\n * Use an optional expression to filter the matched set.\n *\n * \tOnly the immediately previous sibling is returned, not all previous siblings.\n *\n * @example $(\"p\").prev()\n * @before <p>Hello</p><div><span>Hello Again</span></div><p>And Again</p>\n * @result [ <div><span>Hello Again</span></div> ]\n * @desc Find the very previous sibling of each paragraph.\n *\n * @example $(\"p\").prev(\".selected\")\n * @before <div><span>Hello</span></div><p class=\"selected\">Hello Again</p><p>And Again</p>\n * @result [ <div><span>Hello</span></div> ]\n * @desc Find the very previous sibling of each paragraph that has a class \"selected\".\n *\n * @name prev"}]},
{"id":"e5b210b114d6540fa6dfbdb07652c9e2d1d4ce7b","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[2150,2424],"code":"\t\treturn this.pushStack( jQuery.unique(ret) );\n\t};\n});\n\n/**\n * Append all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).append(B), in that instead of appending B to A, you're appending\n * A to B.\n *\n * @example $(\"p\").appendTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"></div>\n * @result <div id=\"foo\"><p>I would like to say: </p></div>\n * @desc Appends all paragraphs to the element with the ID \"foo\"\n *\n * @name appendTo\n * @type jQuery\n * @param <Content> content Content to append to the selected element to.\n * @cat DOM/Manipulation\n * @see append(<Content>)\n */\n\n/**\n * Prepend all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n * A to B.\n *\n * @example $(\"p\").prependTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n * @desc Prepends all paragraphs to the element with the ID \"foo\"\n *\n * @name prependTo\n * @type jQuery\n * @param <Content> content Content to prepend to the selected element to.\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n */\n\n/**\n * Insert all of the matched elements before another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).before(B), in that instead of inserting B before A, you're inserting\n * A before B.\n *\n * @example $(\"p\").insertBefore(\"#foo\");\n * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @desc Same as $(\"#foo\").before(\"p\")\n *\n * @name insertBefore\n * @type jQuery\n * @param <Content> content Content to insert the selected element before.\n * @cat DOM/Manipulation\n * @see before(<Content>)\n */\n\n/**\n * Insert all of the matched elements after another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).after(B), in that instead of inserting B after A, you're inserting\n * A after B.\n *\n * @example $(\"p\").insertAfter(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @desc Same as $(\"#foo\").after(\"p\")\n *\n * @name insertAfter\n * @type jQuery\n * @param <Content> content Content to insert the selected element after.\n * @cat DOM/Manipulation\n * @see after(<Content>)\n */\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\"\n}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );\n\t\t});\n\t};\n});\n\n/**\n * Remove an attribute from each of the matched elements.\n *\n * @example $(\"input\").removeAttr(\"disabled\")\n * @before <input disabled=\"disabled\"/>\n * @result <input/>\n *\n * @name removeAttr\n * @type jQuery"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1992,2266],"code":"\t\treturn this.pushStack( ret );\n\t};\n});\n\n/**\n * Append all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).append(B), in that instead of appending B to A, you're appending\n * A to B.\n *\n * @example $(\"p\").appendTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"></div>\n * @result <div id=\"foo\"><p>I would like to say: </p></div>\n * @desc Appends all paragraphs to the element with the ID \"foo\"\n *\n * @name appendTo\n * @type jQuery\n * @param <Content> content Content to append to the selected element to.\n * @cat DOM/Manipulation\n * @see append(<Content>)\n */\n\n/**\n * Prepend all of the matched elements to another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n * A to B.\n *\n * @example $(\"p\").prependTo(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n * @desc Prepends all paragraphs to the element with the ID \"foo\"\n *\n * @name prependTo\n * @type jQuery\n * @param <Content> content Content to prepend to the selected element to.\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n */\n\n/**\n * Insert all of the matched elements before another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).before(B), in that instead of inserting B before A, you're inserting\n * A before B.\n *\n * @example $(\"p\").insertBefore(\"#foo\");\n * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @desc Same as $(\"#foo\").before(\"p\")\n *\n * @name insertBefore\n * @type jQuery\n * @param <Content> content Content to insert the selected element before.\n * @cat DOM/Manipulation\n * @see before(<Content>)\n */\n\n/**\n * Insert all of the matched elements after another, specified, set of elements.\n * This operation is, essentially, the reverse of doing a regular\n * $(A).after(B), in that instead of inserting B after A, you're inserting\n * A after B.\n *\n * @example $(\"p\").insertAfter(\"#foo\");\n * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n * @desc Same as $(\"#foo\").after(\"p\")\n *\n * @name insertAfter\n * @type jQuery\n * @param <Content> content Content to insert the selected element after.\n * @cat DOM/Manipulation\n * @see after(<Content>)\n */\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\"\n}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );\n\t\t});\n\t};\n});\n\n/**\n * Remove an attribute from each of the matched elements.\n *\n * @example $(\"input\").removeAttr(\"disabled\")\n * @before <input disabled=\"disabled\"/>\n * @result <input/>\n *\n * @name removeAttr\n * @type jQuery"}]},
{"id":"a996a7de5e98be57c6e555a3c516add737625e72","instances":[{"path":"./jquery-data/1.1.4/src/jquery/jquery.js","lines":[2426,2498],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});\n\n/**\n * Get the current computed, pixel, width of the first matched element.\n *\n * @example $(\"p\").width();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name width\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").width(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").width(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20em;\">This is just a test.</p>\n *\n * @name width\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n \n/**\n * Get the current computed, pixel, height of the first matched element.\n *\n * @example $(\"p\").height();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name height\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS height of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").height(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").height(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20em;\">This is just a test.</p>\n *\n * @name height\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n\njQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"},{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[2267,2339],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});\n\n/**\n * Get the current computed, pixel, width of the first matched element.\n *\n * @example $(\"p\").width();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name width\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS width of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").width(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").width(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"width:20em;\">This is just a test.</p>\n *\n * @name width\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n \n/**\n * Get the current computed, pixel, height of the first matched element.\n *\n * @example $(\"p\").height();\n * @before <p>This is just a test.</p>\n * @result 300\n *\n * @name height\n * @type String\n * @cat CSS\n */\n\n/**\n * Set the CSS height of every matched element. If no explicit unit\n * was specified (like 'em' or '%') then \"px\" is added to the width.\n *\n * @example $(\"p\").height(20);\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20px;\">This is just a test.</p>\n *\n * @example $(\"p\").height(\"20em\");\n * @before <p>This is just a test.</p>\n * @result <p style=\"height:20em;\">This is just a test.</p>\n *\n * @name height\n * @type jQuery\n * @param String|Number val Set the CSS property to the specified value.\n * @cat CSS\n */\n\njQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"}]},
{"id":"e1926ad679ba76832e5d78c84d9ee69237d1fd9f","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[9,59],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"!jQuery.nth(a.parentNode.lastChild,2,'previousSibling')\",\n\n\t\t\t// Parent Checks\n\t\t\tparent: \"a.firstChild\",\n\t\t\tempty: \"!a.firstChild\",\n\n\t\t\t// Text Check\n\t\t\tcontains: \"(a.textContent||a.innerText||'').indexOf(m[3])>=0\",\n\n\t\t\t// Visibility\n\t\t\tvisible: '\"hidden\"!=a.type&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\t\t\thidden: '\"hidden\"==a.type||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t\t\t// Form attributes\n\t\t\tenabled: \"!a.disabled\",\n\t\t\tdisabled: \"a.disabled\",\n\t\t\tchecked: \"a.checked\",\n\t\t\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t\t\t// Form elements\n\t\t\ttext: \"'text'==a.type\",\n\t\t\tradio: \"'radio'==a.type\",\n\t\t\tcheckbox: \"'checkbox'==a.type\",\n\t\t\tfile: \"'file'==a.type\",\n\t\t\tpassword: \"'password'==a.type\",\n\t\t\tsubmit: \"'submit'==a.type\",\n\t\t\timage: \"'image'==a.type\",\n\t\t\treset: \"'reset'==a.type\",\n\t\t\tbutton: '\"button\"==a.type||jQuery.nodeName(a,\"button\")',\n\t\t\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\",\n\n\t\t\t// :has()\n\t\t\thas: \"jQuery.find(m[3],a).length\""},{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[1,50],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\",\n\t\t\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\t\t\"only-child\": \"!jQuery.nth(a.parentNode.lastChild,2,'previousSibling')\",\n\n\t\t\t// Parent Checks\n\t\t\tparent: \"a.firstChild\",\n\t\t\tempty: \"!a.firstChild\",\n\n\t\t\t// Text Check\n\t\t\tcontains: \"(a.textContent||a.innerText||'').indexOf(m[3])>=0\",\n\n\t\t\t// Visibility\n\t\t\tvisible: '\"hidden\"!=a.type&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\t\t\thidden: '\"hidden\"==a.type||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t\t\t// Form attributes\n\t\t\tenabled: \"!a.disabled\",\n\t\t\tdisabled: \"a.disabled\",\n\t\t\tchecked: \"a.checked\",\n\t\t\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t\t\t// Form elements\n\t\t\ttext: \"'text'==a.type\",\n\t\t\tradio: \"'radio'==a.type\",\n\t\t\tcheckbox: \"'checkbox'==a.type\",\n\t\t\tfile: \"'file'==a.type\",\n\t\t\tpassword: \"'password'==a.type\",\n\t\t\tsubmit: \"'submit'==a.type\",\n\t\t\timage: \"'image'==a.type\",\n\t\t\treset: \"'reset'==a.type\",\n\t\t\tbutton: '\"button\"==a.type||jQuery.nodeName(a,\"button\")',\n\t\t\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n\t\t},\n\t\t\"[\": \"jQuery.find(m[2],a).length\""}]},
{"id":"edca000f115c68cf1d6834026897e9d9ef8e21d2","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[65,112],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// DEPRECATED\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// DEPRECATED"},{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[53,100],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + \n\t\t( jQuery.chars = jQuery.browser.safari && jQuery.browser.version < \"3.0.0\" ? \"\\\\w\" : \"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\" ) + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression"}]},
{"id":"01d030f971155998e5c413311ffcfff1762505c0","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[119,134],"code":"// And the / root expression\n} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\tcontext = context.documentElement;\n\tt = t.substr(1,t.length);\n\tif ( t.indexOf(\"/\") >= 1 )\n\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n}\n\n// Initialize the search\nvar ret = [context], done = [], last;\n\n// Continue while a selector expression exists, and while\n// we're no longer looping upon ourselves\nwhile ( t && last != t ) {\n\tvar r = [];\n\tlast = t;"},{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[105,120],"code":"// And the / root expression\n} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\tcontext = context.documentElement;\n\tt = t.substr(1,t.length);\n\tif ( t.indexOf(\"/\") >= 1 )\n\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n}\n\n// Initialize the search\nvar ret = [context], done = [], last;\n\n// Continue while a selector expression exists, and while\n// we're no longer looping upon ourselves\nwhile ( t && last != t ) {\n\tvar r = [];\n\tlast = t;"}]},
{"id":"cb252d5fd58974d2281585a99b7eecbb0c19c2e3","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[141,214],"code":"// An attempt at speeding up child selectors that\n// point to a specific element tag\nvar re = quickChild;\nvar m = re.exec(t);\n\nif ( m ) {\n\tvar nodeName = m[1].toUpperCase();\n\n\t// Perform our own iteration and filter\n\tfor ( var i = 0; ret[i]; i++ )\n\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )\n\t\t\t\tr.push( c );\n\n\tret = r;\n\tt = t.replace( re, \"\" );\n\tif ( t.indexOf(\" \") == 0 ) continue;\n\tfoundToken = true;\n} else {\n\t// (.. and /) DEPRECATED\n\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*(\\w*)/i;\n\n\tif ( (m = re.exec(t)) != null ) {\n\t\tr = [];\n\n\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\tm = m[1];\n\n\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName.toUpperCase() ) {\n\t\t\t\t\t\t\tif ( m == \"~\" ) n.mergeNum = mergeNum;\n\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t}\n\t\t\t// DEPRECATED\n\t\t\t} else\n\t\t\t\tr.push( ret[j].parentNode );\n\n\t\tret = r;\n\n\t\t// And remove the token\n\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\tfoundToken = true;\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tdone = jQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optimize for the case nodeName#idName\n\t\tvar re2 = quickID;"},{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[126,197],"code":"// An attempt at speeding up child selectors that\n// point to a specific element tag\nvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");\nvar m = re.exec(t);\n\nif ( m ) {\n\tvar nodeName = m[1].toUpperCase();\n\n\t// Perform our own iteration and filter\n\tfor ( var i = 0; ret[i]; i++ )\n\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )\n\t\t\t\tr.push( c );\n\n\tret = r;\n\tt = t.replace( re, \"\" );\n\tif ( t.indexOf(\" \") == 0 ) continue;\n\tfoundToken = true;\n} else {\n\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*([a-z]*)/i;\n\n\tif ( (m = re.exec(t)) != null ) {\n\t\tr = [];\n\n\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\tm = m[1];\n\n\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName.toUpperCase() ) {\n\t\t\t\t\t\t\tif ( m == \"~\" ) n.mergeNum = mergeNum;\n\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t}\n\t\t\t} else\n\t\t\t\tr.push( ret[j].parentNode );\n\n\t\tret = r;\n\n\t\t// And remove the token\n\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\tfoundToken = true;\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tdone = jQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optomize for the case nodeName#idName\n\t\tvar re2 = new RegExp(\"^(\" + jQuery.chars + \"+)(#)(\" + jQuery.chars + \"+)\");"}]},
{"id":"06a49da14c68b5c7dab4799eba6fbbfc8f82bca4","instances":[{"path":"./jquery-data/1.1.4/src/selector/selector.js","lines":[94,415],"code":"/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// DEPRECATED\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\t//context = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// DEPRECATED\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\t// DEPRECATED\n\t\tt = jQuery.trim(t).replace( /^\\/\\//, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = quickChild;\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\tvar nodeName = m[1].toUpperCase();\n\n\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\t// (.. and /) DEPRECATED\n\t\t\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*(\\w*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName.toUpperCase() ) {\n\t\t\t\t\t\t\t\t\tif ( m == \"~\" ) n.mergeNum = mergeNum;\n\t\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t// DEPRECATED\n\t\t\t\t\t} else\n\t\t\t\t\t\tr.push( ret[j].parentNode );\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}"},{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[82,398],"code":"/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") && !context.ownerDocument ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = new RegExp(\"^[/>]\\\\s*(\" + jQuery.chars + \"+)\");\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\tvar nodeName = m[1].toUpperCase();\n\n\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName.toUpperCase()) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^((\\/?\\.\\.)|([>\\/+~]))\\s*([a-z]*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar nodeName = m[4], mergeNum = jQuery.mergeNum++;\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ )\n\t\t\t\t\tif ( m.indexOf(\"..\") < 0 ) {\n\t\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" && n.mergeNum == mergeNum ) break;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName.toUpperCase() ) {\n\t\t\t\t\t\t\t\t\tif ( m == \"~\" ) n.mergeNum = mergeNum;\n\t\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tr.push( ret[j].parentNode );\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions"}]},
{"id":"6fed886e30aa764c73c4f92990b862eb842a3f7d","instances":[{"path":"./jquery-data/1.1.4/src/selector/selectorTest.js","lines":[32,101],"code":"test(\"broken\", function() {\n\texpect(7);\n\tt( \"Broken Selector\", \"[\", [] );\n\tt( \"Broken Selector\", \"(\", [] );\n\tt( \"Broken Selector\", \"{\", [] );\n\tt( \"Broken Selector\", \"<\", [] );\n\tt( \"Broken Selector\", \"()\", [] );\n\tt( \"Broken Selector\", \"<>\", [] );\n\tt( \"Broken Selector\", \"{}\", [] );\n});\n\ntest(\"id\", function() {\n\texpect(24);\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\n\tt( \"ID selector with existing ID descendant\", \"#firstp #simon1\", [\"simon1\"] );\n\tt( \"ID selector with non-existant descendant\", \"#firstp #foobar\", [] );\n\tt( \"ID selector using UTF8\", \"#台北Táiběi\", [\"台北Táiběi\"] );\n\tt( \"Multiple ID selectors using UTF8\", \"#台北Táiběi, #台北\", [\"台北Táiběi\",\"台北\"] );\n\tt( \"Descendant ID selector using UTF8\", \"div #台北\", [\"台北\"] );\n\tt( \"Child ID selector using UTF8\", \"form > #台北\", [\"台北\"] );\n\t\n\tt( \"Escaped ID\", \"#foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped ID\", \"#test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant escaped ID\", \"div #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant escaped ID\", \"div #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped ID\", \"form > #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped ID\", \"form > #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\t\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\n\t\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"] );\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", [] );\n\t\n\t$('<a name=\"tName1\">tName1 A</a><a name=\"tName2\">tName2 A</a><div id=\"tName1\">tName1 Div</div>').appendTo('#main');\n\tok( $(\"#tName1\")[0].id == 'tName1', \"ID selector with same value for a name attribute\" );\n\tok( $(\"#tName2\").length == 0, \"ID selector non-existing but name attribute on an A tag\" );\n\tt( \"ID Selector on Form with an input that has a name of 'id'\", \"#lengthtest\", [\"lengthtest\"] );\n\t\n\tt( \"ID selector with non-existant ancestor\", \"#asdfasdf #foobar\", [] ); // bug #986\n});\n\ntest(\"class\", function() {\n\texpect(16);\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n\t\n\tt( \"Class selector using UTF8\", \".台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi.台北\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi, .台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Descendant class selector using UTF8\", \"div .台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Child class selector using UTF8\", \"form > .台北Táiběi\", [\"utf8class1\"] );\n\t\n\tt( \"Escaped Class\", \".foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped Class\", \".test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant scaped Class\", \"div .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant scaped Class\", \"div .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped Class\", \"form > .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped Class\", \"form > .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n});\n\ntest(\"multiple\", function() {\n\texpect(4);\n\tt( \"Comma Support\", \"a.blog, p\", [\"mark\",\"simon\",\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );"},{"path":"./jquery-data/1.1.3.1/src/selector/selectorTest.js","lines":[18,87],"code":"test(\"broken\", function() {\n\texpect(7);\n\tt( \"Broken Selector\", \"[\", [] );\n\tt( \"Broken Selector\", \"(\", [] );\n\tt( \"Broken Selector\", \"{\", [] );\n\tt( \"Broken Selector\", \"<\", [] );\n\tt( \"Broken Selector\", \"()\", [] );\n\tt( \"Broken Selector\", \"<>\", [] );\n\tt( \"Broken Selector\", \"{}\", [] );\n});\n\ntest(\"id\", function() {\n\texpect(24);\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\n\tt( \"ID selector with existing ID descendant\", \"#firstp #simon1\", [\"simon1\"] );\n\tt( \"ID selector with non-existant descendant\", \"#firstp #foobar\", [] );\n\tt( \"ID selector using UTF8\", \"#台北Táiběi\", [\"台北Táiběi\"] );\n\tt( \"Multiple ID selectors using UTF8\", \"#台北Táiběi, #台北\", [\"台北Táiběi\",\"台北\"] );\n\tt( \"Descendant ID selector using UTF8\", \"div #台北\", [\"台北\"] );\n\tt( \"Child ID selector using UTF8\", \"form > #台北\", [\"台北\"] );\n\t\n\tt( \"Escaped ID\", \"#foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped ID\", \"#test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant escaped ID\", \"div #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant escaped ID\", \"div #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped ID\", \"form > #foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped ID\", \"form > #test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\t\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\n\t\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"] );\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", [] );\n\t\n\t$('<a name=\"tName1\">tName1 A</a><a name=\"tName2\">tName2 A</a><div id=\"tName1\">tName1 Div</div>').appendTo('#main');\n\tok( $(\"#tName1\")[0].id == 'tName1', \"ID selector with same value for a name attribute\" );\n\tok( $(\"#tName2\").length == 0, \"ID selector non-existing but name attribute on an A tag\" );\n\tt( \"ID Selector on Form with an input that has a name of 'id'\", \"#lengthtest\", [\"lengthtest\"] );\n\t\n\tt( \"ID selector with non-existant ancestor\", \"#asdfasdf #foobar\", [] ); // bug #986\n});\n\ntest(\"class\", function() {\n\texpect(16);\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n\t\n\tt( \"Class selector using UTF8\", \".台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi.台北\", [\"utf8class1\"] );\n\tt( \"Class selector using UTF8\", \".台北Táiběi, .台北\", [\"utf8class1\",\"utf8class2\"] );\n\tt( \"Descendant class selector using UTF8\", \"div .台北Táiběi\", [\"utf8class1\"] );\n\tt( \"Child class selector using UTF8\", \"form > .台北Táiběi\", [\"utf8class1\"] );\n\t\n\tt( \"Escaped Class\", \".foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Escaped Class\", \".test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Descendant scaped Class\", \"div .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Descendant scaped Class\", \"div .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n\tt( \"Child escaped Class\", \"form > .foo\\\\:bar\", [\"foo:bar\"] );\n\tt( \"Child escaped Class\", \"form > .test\\\\.foo\\\\[5\\\\]bar\", [\"test.foo[5]bar\"] );\n});\n\ntest(\"multiple\", function() {\n\texpect(4);\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );"}]},
{"id":"18eb859d3595f3684a09197a944d645d19e92632","instances":[{"path":"./jquery-data/1.1.4/src/selector/selectorTest.js","lines":[104,175],"code":"\tt( \"Comma Support\", \"a.blog,p\", [\"mark\",\"simon\",\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );\n});\n\ntest(\"child and adjacent\", function() {\n\texpect(19);\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n\t\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Nth Child\", \"p:nth-child(1)\", [\"firstp\",\"sndp\"] );\n\t\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Last Child\", \"a:last-child\", [\"simon1\",\"anchor1\",\"mark\",\"yahoo\",\"anchor2\",\"simon\"] );\n\t\n\tt( \"Nth-child\", \"#main form > *:nth-child(2)\", [\"text2\",\"idTest\"] );\n\tt( \"Nth-child\", \"#main form > :nth-child(2)\", [\"text2\",\"idTest\"] );\n});\n\ntest(\"attributes\", function() {\n\texpect(20);\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n\t\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\t\n\tt( \"Attribute selector using UTF8\", \"span[@lang=中文]\", [\"台北\"] );\n\t\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n\t\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\n\t\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\n\t\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\n});\n\ntest(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );\n\tt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n\tt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n\tt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\n\tt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n\tt( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n\tt( \"Element Preceded By\", \"p ~ div\", [\"foo\",\"fx-queue\",\"fx-tests\"] );"},{"path":"./jquery-data/1.1.3.1/src/selector/selectorTest.js","lines":[90,161],"code":"\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n});\n\ntest(\"child and adjacent\", function() {\n\texpect(19);\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n\t\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Nth Child\", \"p:nth-child(1)\", [\"firstp\",\"sndp\"] );\n\t\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Last Child\", \"a:last-child\", [\"simon1\",\"anchor1\",\"mark\",\"yahoo\",\"anchor2\",\"simon\"] );\n\t\n\tt( \"Nth-child\", \"#main form > *:nth-child(2)\", [\"text2\",\"idTest\"] );\n\tt( \"Nth-child\", \"#main form > :nth-child(2)\", [\"text2\",\"idTest\"] );\n});\n\ntest(\"attributes\", function() {\n\texpect(20);\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n\t\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\t\n\tt( \"Attribute selector using UTF8\", \"span[@lang=中文]\", [\"台北\"] );\n\t\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n\t\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\n\t\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\n\t\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\n});\n\ntest(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );\n\tt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n\tt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n\tt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\n\tt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n\tt( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n\tt( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );"}]},
{"id":"1244d0e0d9c6188b75865e69127082c91e0715cf","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[110,115],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[117,123],"code":"$.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 2, 'Check failed request' );\n  ok( counter.success == 0, 'Check failed request' );\n  ok( counter.complete == 3, 'Check failed request' );\n  ok( counter.send == 2, 'Check failed request' );\n  start();\n}});"}]}]
