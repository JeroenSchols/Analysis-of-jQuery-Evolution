[{"id":"ca4ec3d3991b201c39c44120388e3e9ff4810b7c","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[365,382],"code":"mouseenter: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseenter\n\t\tevent.type = \"mouseenter\";"},{"path":"./jquery-data/1.2.5/src/event.js","lines":[387,404],"code":"mouseleave: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseleave\n\t\tevent.type = \"mouseleave\";"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[343,360],"code":"mouseenter: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseover\", jQuery.event.special.mouseenter.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseenter\n\t\targuments[0].type = \"mouseenter\";"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[365,382],"code":"mouseleave: {\n\tsetup: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).bind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\n\tteardown: function() {\n\t\tif ( jQuery.browser.msie ) return false;\n\t\tjQuery(this).unbind(\"mouseout\", jQuery.event.special.mouseleave.handler);\n\t\treturn true;\n\t},\n\t\n\thandler: function(event) {\n\t\t// If we actually just moused on to a sub-element, ignore it\n\t\tif ( withinElement(event, this) ) return true;\n\t\t// Execute the right handlers by setting the event type to mouseleave\n\t\targuments[0].type = \"mouseleave\";"}]},
{"id":"e70b2b7fec670eeb22fedc40ff34be32d8f2ee3b","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[7,97],"code":"\t\t\treturn this._load( url );\n\n\t\tvar off = url.indexOf(\" \");\n\t\tif ( off >= 0 ) {\n\t\t\tvar selector = url.slice(off, url.length);\n\t\t\turl = url.slice(0, off);\n\t\t}\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params,\n\t\t\tcomplete: function(res, status){\n\t\t\t\t// If successful, inject the HTML into all the matched elements\n\t\t\t\tif ( status == \"success\" || status == \"notmodified\" )\n\t\t\t\t\t// See if a selector was specified\n\t\t\t\t\tself.html( selector ?\n\t\t\t\t\t\t// Create a dummy div to hold the results\n\t\t\t\t\t\tjQuery(\"<div/>\")\n\t\t\t\t\t\t\t// inject the contents of the document in, removing the scripts\n\t\t\t\t\t\t\t// to avoid any 'Permission Denied' errors in IE\n\t\t\t\t\t\t\t.append(res.responseText.replace(/<script(.|\\s)*?\\/script>/g, \"\"))\n\n\t\t\t\t\t\t\t// Locate the specified elements\n\t\t\t\t\t\t\t.find(selector) :\n\n\t\t\t\t\t\t// If not, just inject the full result\n\t\t\t\t\t\tres.responseText );\n\n\t\t\t\tself.each( callback, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\tserialize: function() {\n\t\treturn jQuery.param(this.serializeArray());\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\treturn jQuery.nodeName(this, \"form\") ?\n\t\t\t\tjQuery.makeArray(this.elements) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\treturn this.name && !this.disabled &&\n\t\t\t\t(this.checked || /select|textarea/i.test(this.nodeName) ||\n\t\t\t\t\t/text|hidden|password/i.test(this.type));\n\t\t})\n\t\t.map(function(i, elem){\n\t\t\tvar val = jQuery(this).val();\n\t\t\treturn val == null ? null :\n\t\t\t\tval.constructor == Array ?\n\t\t\t\t\tjQuery.map( val, function(val, i){\n\t\t\t\t\t\treturn {name: elem.name, value: val};\n\t\t\t\t\t}) :\n\t\t\t\t\t{name: elem.name, value: val};\n\t\t}).get();\n\t}\n});\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"), function(i,o){\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n});\n\nvar jsc = now();"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[4,94],"code":"\t\t\treturn this.bind(\"load\", url);\n\n\t\tvar off = url.indexOf(\" \");\n\t\tif ( off >= 0 ) {\n\t\t\tvar selector = url.slice(off, url.length);\n\t\t\turl = url.slice(0, off);\n\t\t}\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params,\n\t\t\tcomplete: function(res, status){\n\t\t\t\t// If successful, inject the HTML into all the matched elements\n\t\t\t\tif ( status == \"success\" || status == \"notmodified\" )\n\t\t\t\t\t// See if a selector was specified\n\t\t\t\t\tself.html( selector ?\n\t\t\t\t\t\t// Create a dummy div to hold the results\n\t\t\t\t\t\tjQuery(\"<div/>\")\n\t\t\t\t\t\t\t// inject the contents of the document in, removing the scripts\n\t\t\t\t\t\t\t// to avoid any 'Permission Denied' errors in IE\n\t\t\t\t\t\t\t.append(res.responseText.replace(/<script(.|\\s)*?\\/script>/g, \"\"))\n\n\t\t\t\t\t\t\t// Locate the specified elements\n\t\t\t\t\t\t\t.find(selector) :\n\n\t\t\t\t\t\t// If not, just inject the full result\n\t\t\t\t\t\tres.responseText );\n\n\t\t\t\tself.each( callback, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\tserialize: function() {\n\t\treturn jQuery.param(this.serializeArray());\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function(){\n\t\t\treturn jQuery.nodeName(this, \"form\") ?\n\t\t\t\tjQuery.makeArray(this.elements) : this;\n\t\t})\n\t\t.filter(function(){\n\t\t\treturn this.name && !this.disabled && \n\t\t\t\t(this.checked || /select|textarea/i.test(this.nodeName) || \n\t\t\t\t\t/text|hidden|password/i.test(this.type));\n\t\t})\n\t\t.map(function(i, elem){\n\t\t\tvar val = jQuery(this).val();\n\t\t\treturn val == null ? null :\n\t\t\t\tval.constructor == Array ?\n\t\t\t\t\tjQuery.map( val, function(val, i){\n\t\t\t\t\t\treturn {name: elem.name, value: val};\n\t\t\t\t\t}) :\n\t\t\t\t\t{name: elem.name, value: val};\n\t\t}).get();\n\t}\n});\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"), function(i,o){\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n});\n\nvar jsc = (new Date).getTime();"}]},
{"id":"15696f128652340d3b5383be6d7c6052aaf51b59","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[97,144],"code":"var jsc = now();\n\njQuery.extend({\n\tget: function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was ommited\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\tcallback = data;\n\t\t\tdata = null;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: callback,\n\t\t\tdataType: type\n\t\t});\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get(url, null, callback, \"script\");\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get(url, data, callback, \"json\");\n\t},\n\n\tpost: function( url, data, callback, type ) {\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\tcallback = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: callback,\n\t\t\tdataType: type\n\t\t});\n\t},\n\n\tajaxSetup: function( settings ) {\n\t\tjQuery.extend( jQuery.ajaxSettings, settings );\n\t},\n\n\tajaxSettings: {\n\t\turl: location.href,"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[94,141],"code":"var jsc = (new Date).getTime();\n\njQuery.extend({\n\tget: function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was ommited\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\tcallback = data;\n\t\t\tdata = null;\n\t\t}\n\t\t\n\t\treturn jQuery.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: callback,\n\t\t\tdataType: type\n\t\t});\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get(url, null, callback, \"script\");\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get(url, data, callback, \"json\");\n\t},\n\n\tpost: function( url, data, callback, type ) {\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\tcallback = data;\n\t\t\tdata = {};\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: url,\n\t\t\tdata: data,\n\t\t\tsuccess: callback,\n\t\t\tdataType: type\n\t\t});\n\t},\n\n\tajaxSetup: function( settings ) {\n\t\tjQuery.extend( jQuery.ajaxSettings, settings );\n\t},\n\n\tajaxSettings: {\n\t\tglobal: true,"}]},
{"id":"e564d77a22d0b6eb2411ec741127e7a11020c724","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[181,218],"code":"\tif ( type == \"GET\" ) {\n\t\tif ( !s.url.match(jsre) )\n\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + (s.jsonp || \"callback\") + \"=?\";\n\t} else if ( !s.data || !s.data.match(jsre) )\n\t\ts.data = (s.data ? s.data + \"&\" : \"\") + (s.jsonp || \"callback\") + \"=?\";\n\ts.dataType = \"json\";\n}\n\n// Build temporary JSONP function\nif ( s.dataType == \"json\" && (s.data && s.data.match(jsre) || s.url.match(jsre)) ) {\n\tjsonp = \"jsonp\" + jsc++;\n\n\t// Replace the =? sequence both in the query string and the data\n\tif ( s.data )\n\t\ts.data = (s.data + \"\").replace(jsre, \"=\" + jsonp + \"$1\");\n\ts.url = s.url.replace(jsre, \"=\" + jsonp + \"$1\");\n\n\t// We need to make sure\n\t// that a JSONP style response is executed properly\n\ts.dataType = \"script\";\n\n\t// Handle JSONP-style loading\n\twindow[ jsonp ] = function(tmp){\n\t\tdata = tmp;\n\t\tsuccess();\n\t\tcomplete();\n\t\t// Garbage collect\n\t\twindow[ jsonp ] = undefined;\n\t\ttry{ delete window[ jsonp ]; } catch(e){}\n\t\tif ( head )\n\t\t\thead.removeChild( script );\n\t};\n}\n\nif ( s.dataType == \"script\" && s.cache == null )\n\ts.cache = false;\n\nif ( s.cache === false && type == \"GET\" ) {"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[176,213],"code":"\tif ( s.type.toLowerCase() == \"get\" ) {\n\t\tif ( !s.url.match(jsre) )\n\t\t\ts.url += (s.url.match(/\\?/) ? \"&\" : \"?\") + (s.jsonp || \"callback\") + \"=?\";\n\t} else if ( !s.data || !s.data.match(jsre) )\n\t\ts.data = (s.data ? s.data + \"&\" : \"\") + (s.jsonp || \"callback\") + \"=?\";\n\ts.dataType = \"json\";\n}\n\n// Build temporary JSONP function\nif ( s.dataType == \"json\" && (s.data && s.data.match(jsre) || s.url.match(jsre)) ) {\n\tjsonp = \"jsonp\" + jsc++;\n\n\t// Replace the =? sequence both in the query string and the data\n\tif ( s.data )\n\t\ts.data = (s.data + \"\").replace(jsre, \"=\" + jsonp + \"$1\");\n\ts.url = s.url.replace(jsre, \"=\" + jsonp + \"$1\");\n\n\t// We need to make sure\n\t// that a JSONP style response is executed properly\n\ts.dataType = \"script\";\n\n\t// Handle JSONP-style loading\n\twindow[ jsonp ] = function(tmp){\n\t\tdata = tmp;\n\t\tsuccess();\n\t\tcomplete();\n\t\t// Garbage collect\n\t\twindow[ jsonp ] = undefined;\n\t\ttry{ delete window[ jsonp ]; } catch(e){}\n\t\tif ( head )\n\t\t\thead.removeChild( script );\n\t};\n}\n\nif ( s.dataType == \"script\" && s.cache == null )\n\ts.cache = false;\n\nif ( s.cache === false && s.type.toLowerCase() == \"get\" ) {"}]},
{"id":"509d1ecc5065ac09370a052c8e76443d6f4e11ad","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[244,277],"code":"\t\t&& remote.test(s.url) && remote.exec(s.url)[1] != location.host ){\n\tvar head = document.getElementsByTagName(\"head\")[0];\n\tvar script = document.createElement(\"script\");\n\tscript.src = s.url;\n\tif (s.scriptCharset)\n\t\tscript.charset = s.scriptCharset;\n\n\t// Handle Script loading\n\tif ( !jsonp ) {\n\t\tvar done = false;\n\n\t\t// Attach handlers for all browsers\n\t\tscript.onload = script.onreadystatechange = function(){\n\t\t\tif ( !done && (!this.readyState ||\n\t\t\t\t\tthis.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n\t\t\t\tdone = true;\n\t\t\t\tsuccess();\n\t\t\t\tcomplete();\n\t\t\t\thead.removeChild( script );\n\t\t\t}\n\t\t};\n\t}\n\n\thead.appendChild(script);\n\n\t// We handle everything using the script element injection\n\treturn undefined;\n}\n\nvar requestDone = false;\n\n// Create the request object; Microsoft failed to properly\n// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\nvar xhr = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[235,268],"code":"if ( (!s.url.indexOf(\"http\") || !s.url.indexOf(\"//\")) && ( s.dataType == \"script\" || s.dataType ==\"json\" ) && s.type.toLowerCase() == \"get\" ) {\n\tvar head = document.getElementsByTagName(\"head\")[0];\n\tvar script = document.createElement(\"script\");\n\tscript.src = s.url;\n\tif (s.scriptCharset)\n\t\tscript.charset = s.scriptCharset;\n\n\t// Handle Script loading\n\tif ( !jsonp ) {\n\t\tvar done = false;\n\n\t\t// Attach handlers for all browsers\n\t\tscript.onload = script.onreadystatechange = function(){\n\t\t\tif ( !done && (!this.readyState || \n\t\t\t\t\tthis.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n\t\t\t\tdone = true;\n\t\t\t\tsuccess();\n\t\t\t\tcomplete();\n\t\t\t\thead.removeChild( script );\n\t\t\t}\n\t\t};\n\t}\n\n\thead.appendChild(script);\n\n\t// We handle everything using the script element injection\n\treturn undefined;\n}\n\nvar requestDone = false;\n\n// Create the request object; Microsoft failed to properly\n// implement the XMLHttpRequest in IE7, so we use the ActiveXObject when it is available\nvar xml = window.ActiveXObject ? new ActiveXObject(\"Microsoft.XMLHTTP\") : new XMLHttpRequest();"}]},
{"id":"6548060425a85154490e2dc3d7c622d3088d4e9c","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[287,307],"code":"try {\n\t// Set the correct header, if data is being sent\n\tif ( s.data )\n\t\txhr.setRequestHeader(\"Content-Type\", s.contentType);\n\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( s.ifModified )\n\t\txhr.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[s.url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n\t// Set header so the called script knows that it's an XMLHttpRequest\n\txhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Set the Accepts header for the server, depending on the dataType\n\txhr.setRequestHeader(\"Accept\", s.dataType && s.accepts[ s.dataType ] ?\n\t\ts.accepts[ s.dataType ] + \", */*\" :\n\t\ts.accepts._default );\n} catch(e){}\n\n// Allow custom headers/mimetypes\nif ( s.beforeSend && s.beforeSend(xhr, s) === false ) {"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[274,295],"code":"try {\n\t// Set the correct header, if data is being sent\n\tif ( s.data )\n\t\txml.setRequestHeader(\"Content-Type\", s.contentType);\n\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( s.ifModified )\n\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[s.url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n\t// Set header so the called script knows that it's an XMLHttpRequest\n\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Set the Accepts header for the server, depending on the dataType\n\txml.setRequestHeader(\"Accept\", s.dataType && s.accepts[ s.dataType ] ?\n\t\ts.accepts[ s.dataType ] + \", */*\" :\n\t\ts.accepts._default );\n} catch(e){}\n\n// Allow custom headers/mimetypes\nif ( s.beforeSend )\n\ts.beforeSend(xml);"}]},
{"id":"87174081fb3e0cb7065325f25b981cd195d86424","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[315,339],"code":"if ( s.global )\n\tjQuery.event.trigger(\"ajaxSend\", [xhr, s]);\n\n// Wait for a response to come back\nvar onreadystatechange = function(isTimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( !requestDone && xhr && (xhr.readyState == 4 || isTimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\n\t\t// clear poll interval\n\t\tif (ival) {\n\t\t\tclearInterval(ival);\n\t\t\tival = null;\n\t\t}\n\n\t\tstatus = isTimeout == \"timeout\" && \"timeout\" ||\n\t\t\t!jQuery.httpSuccess( xhr ) && \"error\" ||\n\t\t\ts.ifModified && jQuery.httpNotModified( xhr, s.url ) && \"notmodified\" ||\n\t\t\t\"success\";\n\n\t\tif ( status == \"success\" ) {\n\t\t\t// Watch for, and catch, XML document parse errors\n\t\t\ttry {\n\t\t\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\t\t\tdata = jQuery.httpData( xhr, s.dataType, s.dataFilter );"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[297,321],"code":"if ( s.global )\n\tjQuery.event.trigger(\"ajaxSend\", [xml, s]);\n\n// Wait for a response to come back\nvar onreadystatechange = function(isTimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( !requestDone && xml && (xml.readyState == 4 || isTimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\t\t\n\t\t// clear poll interval\n\t\tif (ival) {\n\t\t\tclearInterval(ival);\n\t\t\tival = null;\n\t\t}\n\t\t\n\t\tstatus = isTimeout == \"timeout\" && \"timeout\" ||\n\t\t\t!jQuery.httpSuccess( xml ) && \"error\" ||\n\t\t\ts.ifModified && jQuery.httpNotModified( xml, s.url ) && \"notmodified\" ||\n\t\t\t\"success\";\n\n\t\tif ( status == \"success\" ) {\n\t\t\t// Watch for, and catch, XML document parse errors\n\t\t\ttry {\n\t\t\t\t// process the data (runs the xml through httpData regardless of callback)\n\t\t\t\tdata = jQuery.httpData( xml, s.dataType );"}]},
{"id":"618a096c5d7bc31f4bfa5550b236ccc953a50061","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[339,463],"code":"\t\t\t\t\tdata = jQuery.httpData( xhr, s.dataType, s.dataFilter );\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstatus = \"parsererror\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status == \"success\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes;\n\t\t\t\ttry {\n\t\t\t\t\tmodRes = xhr.getResponseHeader(\"Last-Modified\");\n\t\t\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\n\t\t\t\tif ( s.ifModified && modRes )\n\t\t\t\t\tjQuery.lastModified[s.url] = modRes;\n\n\t\t\t\t// JSONP handles its own success callback\n\t\t\t\tif ( !jsonp )\n\t\t\t\t\tsuccess();\n\t\t\t} else\n\t\t\t\tjQuery.handleError(s, xhr, status);\n\n\t\t\t// Fire the complete handlers\n\t\t\tcomplete();\n\n\t\t\t// Stop memory leaks\n\t\t\tif ( s.async )\n\t\t\t\txhr = null;\n\t\t}\n\t};\n\n\tif ( s.async ) {\n\t\t// don't attach the handler to the request, just poll it instead\n\t\tvar ival = setInterval(onreadystatechange, 13);\n\n\t\t// Timeout checker\n\t\tif ( s.timeout > 0 )\n\t\t\tsetTimeout(function(){\n\t\t\t\t// Check to see if the request is still happening\n\t\t\t\tif ( xhr ) {\n\t\t\t\t\t// Cancel the request\n\t\t\t\t\txhr.abort();\n\n\t\t\t\t\tif( !requestDone )\n\t\t\t\t\t\tonreadystatechange( \"timeout\" );\n\t\t\t\t}\n\t\t\t}, s.timeout);\n\t}\n\n\t// Send the data\n\ttry {\n\t\txhr.send(s.data);\n\t} catch(e) {\n\t\tjQuery.handleError(s, xhr, null, e);\n\t}\n\n\t// firefox 1.5 doesn't fire statechange for sync requests\n\tif ( !s.async )\n\t\tonreadystatechange();\n\n\tfunction success(){\n\t\t// If a local callback was specified, fire it and pass it the data\n\t\tif ( s.success )\n\t\t\ts.success( data, status );\n\n\t\t// Fire the global callback\n\t\tif ( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxSuccess\", [xhr, s] );\n\t}\n\n\tfunction complete(){\n\t\t// Process result\n\t\tif ( s.complete )\n\t\t\ts.complete(xhr, status);\n\n\t\t// The request was completed\n\t\tif ( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxComplete\", [xhr, s] );\n\n\t\t// Handle the global AJAX counter\n\t\tif ( s.global && ! --jQuery.active )\n\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t}\n\n\t// return XMLHttpRequest to allow aborting the request etc.\n\treturn xhr;\n},\n\nhandleError: function( s, xhr, status, e ) {\n\t// If a local callback was specified, fire it\n\tif ( s.error ) s.error( xhr, status, e );\n\n\t// Fire the global callback\n\tif ( s.global )\n\t\tjQuery.event.trigger( \"ajaxError\", [xhr, s, e] );\n},\n\n// Counter for holding the number of active queries\nactive: 0,"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[321,445],"code":"\t\t\t\t\tdata = jQuery.httpData( xml, s.dataType );\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstatus = \"parsererror\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status == \"success\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes;\n\t\t\t\ttry {\n\t\t\t\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\n\t\t\t\tif ( s.ifModified && modRes )\n\t\t\t\t\tjQuery.lastModified[s.url] = modRes;\n\n\t\t\t\t// JSONP handles its own success callback\n\t\t\t\tif ( !jsonp )\n\t\t\t\t\tsuccess();\t\n\t\t\t} else\n\t\t\t\tjQuery.handleError(s, xml, status);\n\n\t\t\t// Fire the complete handlers\n\t\t\tcomplete();\n\n\t\t\t// Stop memory leaks\n\t\t\tif ( s.async )\n\t\t\t\txml = null;\n\t\t}\n\t};\n\t\n\tif ( s.async ) {\n\t\t// don't attach the handler to the request, just poll it instead\n\t\tvar ival = setInterval(onreadystatechange, 13); \n\n\t\t// Timeout checker\n\t\tif ( s.timeout > 0 )\n\t\t\tsetTimeout(function(){\n\t\t\t\t// Check to see if the request is still happening\n\t\t\t\tif ( xml ) {\n\t\t\t\t\t// Cancel the request\n\t\t\t\t\txml.abort();\n\n\t\t\t\t\tif( !requestDone )\n\t\t\t\t\t\tonreadystatechange( \"timeout\" );\n\t\t\t\t}\n\t\t\t}, s.timeout);\n\t}\n\t\t\n\t// Send the data\n\ttry {\n\t\txml.send(s.data);\n\t} catch(e) {\n\t\tjQuery.handleError(s, xml, null, e);\n\t}\n\t\n\t// firefox 1.5 doesn't fire statechange for sync requests\n\tif ( !s.async )\n\t\tonreadystatechange();\n\n\tfunction success(){\n\t\t// If a local callback was specified, fire it and pass it the data\n\t\tif ( s.success )\n\t\t\ts.success( data, status );\n\n\t\t// Fire the global callback\n\t\tif ( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n\t}\n\n\tfunction complete(){\n\t\t// Process result\n\t\tif ( s.complete )\n\t\t\ts.complete(xml, status);\n\n\t\t// The request was completed\n\t\tif ( s.global )\n\t\t\tjQuery.event.trigger( \"ajaxComplete\", [xml, s] );\n\n\t\t// Handle the global AJAX counter\n\t\tif ( s.global && ! --jQuery.active )\n\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t}\n\t\n\t// return XMLHttpRequest to allow aborting the request etc.\n\treturn xml;\n},\n\nhandleError: function( s, xml, status, e ) {\n\t// If a local callback was specified, fire it\n\tif ( s.error ) s.error( xml, status, e );\n\n\t// Fire the global callback\n\tif ( s.global )\n\t\tjQuery.event.trigger( \"ajaxError\", [xml, s, e] );\n},\n\n// Counter for holding the number of active queries\nactive: 0,"}]},
{"id":"d4f029b88b113231521dbe0204610cfac18e1018","instances":[{"path":"./jquery-data/1.2.5/src/ajax.js","lines":[476,509],"code":"\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( jQuery.isFunction(a[j]) ? a[j]() : a[j] ) );"},{"path":"./jquery-data/1.2.2/src/ajax.js","lines":[454,487],"code":"\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );\n\n\t// Get the JavaScript object, if JSON is used.\n\tif ( type == \"json\" )\n\t\tdata = eval(\"(\" + data + \")\");\n\n\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"}]},
{"id":"ea3e781270091fd76d939e9e59de907fc5c38ece","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[32,60],"code":"jQuery.fn = jQuery.prototype = {\n\tinit: function( selector, context ) {\n\t\t// Make sure that a selection was provided\n\t\tselector = selector || document;\n\n\t\t// Handle $(DOMElement)\n\t\tif ( selector.nodeType ) {\n\t\t\tthis[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\t\t}\n\t\t// Handle HTML strings\n\t\tif ( typeof selector == \"string\" ) {\n\t\t\t// Are we dealing with HTML string or an ID?\n\t\t\tvar match = quickExpr.exec( selector );\n\n\t\t\t// Verify a match, and that no context was specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] )\n\t\t\t\t\tselector = jQuery.clean( [ match[1] ], context );\n\n\t\t\t\t// HANDLE: $(\"#id\")\n\t\t\t\telse {\n\t\t\t\t\tvar elem = document.getElementById( match[3] );\n\n\t\t\t\t\t// Make sure an element was located\n\t\t\t\t\tif ( elem ){"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[35,63],"code":"jQuery.fn = jQuery.prototype = {\n\tinit: function( selector, context ) {\n\t\t// Make sure that a selection was provided\n\t\tselector = selector || document;\n\n\t\t// Handle $(DOMElement)\n\t\tif ( selector.nodeType ) {\n\t\t\tthis[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// Handle HTML strings\n\t\t} else if ( typeof selector == \"string\" ) {\n\t\t\t// Are we dealing with HTML string or an ID?\n\t\t\tvar match = quickExpr.exec( selector );\n\n\t\t\t// Verify a match, and that no context was specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] )\n\t\t\t\t\tselector = jQuery.clean( [ match[1] ], context );\n\n\t\t\t\t// HANDLE: $(\"#id\")\n\t\t\t\telse {\n\t\t\t\t\tvar elem = document.getElementById( match[3] );\n\n\t\t\t\t\t// Make sure an element was located\n\t\t\t\t\tif ( elem )"}]},
{"id":"bef5bc1c54d07adf68685320927d97ec59f6837d","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[158,287],"code":"\t\t\treturn this[0] && jQuery[ type || \"attr\" ]( this[0], name );\n\n\t\telse {\n\t\t\toptions = {};\n\t\t\toptions[ name ] = value;\n\t\t}\n\n\t// Check to see if we're setting style values\n\treturn this.each(function(i){\n\t\t// Set all the styles\n\t\tfor ( name in options )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ?\n\t\t\t\t\tthis.style :\n\t\t\t\t\tthis,\n\t\t\t\tname, jQuery.prop( this, options[ name ], type, i, name )\n\t\t\t);\n\t});\n},\n\ncss: function( key, value ) {\n\t// ignore negative width and height values\n\tif ( (key == 'width' || key == 'height') && parseFloat(value) < 0 )\n\t\tvalue = undefined;\n\treturn this.attr( key, value, \"curCSS\" );\n},\n\ntext: function( text ) {\n\tif ( typeof text != \"object\" && text != null )\n\t\treturn this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );\n\n\tvar ret = \"\";\n\n\tjQuery.each( text || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tret += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue :\n\t\t\t\t\tjQuery.fn.text( [ this ] );\n\t\t});\n\t});\n\n\treturn ret;\n},\n\nwrapAll: function( html ) {\n\tif ( this[0] )\n\t\t// The elements to wrap the target around\n\t\tjQuery( html, this[0].ownerDocument )\n\t\t\t.clone()\n\t\t\t.insertBefore( this[0] )\n\t\t\t.map(function(){\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstChild )\n\t\t\t\t\telem = elem.firstChild;\n\n\t\t\t\treturn elem;\n\t\t\t})\n\t\t\t.append(this);\n\n\treturn this;\n},\n\nwrapInner: function( html ) {\n\treturn this.each(function(){\n\t\tjQuery( this ).contents().wrapAll( html );\n\t});\n},\n\nwrap: function( html ) {\n\treturn this.each(function(){\n\t\tjQuery( this ).wrapAll( html );\n\t});\n},\n\nappend: function() {\n\treturn this.domManip(arguments, true, false, function(elem){\n\t\tif (this.nodeType == 1)\n\t\t\tthis.appendChild( elem );\n\t});\n},\n\nprepend: function() {\n\treturn this.domManip(arguments, true, true, function(elem){\n\t\tif (this.nodeType == 1)\n\t\t\tthis.insertBefore( elem, this.firstChild );\n\t});\n},\n\nbefore: function() {\n\treturn this.domManip(arguments, false, false, function(elem){\n\t\tthis.parentNode.insertBefore( elem, this );\n\t});\n},\n\nafter: function() {\n\treturn this.domManip(arguments, false, true, function(elem){\n\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t});"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[177,306],"code":"\t\t\treturn this.length && jQuery[ type || \"attr\" ]( this[0], name ) || undefined;\n\n\t\telse {\n\t\t\toptions = {};\n\t\t\toptions[ name ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(i){\n\t\t// Set all the styles\n\t\tfor ( name in options )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ?\n\t\t\t\t\tthis.style :\n\t\t\t\t\tthis,\n\t\t\t\tname, jQuery.prop( this, options[ name ], type, i, name )\n\t\t\t);\n\t});\n},\n\ncss: function( key, value ) {\n\t// ignore negative width and height values\n\tif ( (key == 'width' || key == 'height') && parseFloat(value) < 0 )\n\t\tvalue = undefined;\n\treturn this.attr( key, value, \"curCSS\" );\n},\n\ntext: function( text ) {\n\tif ( typeof text != \"object\" && text != null )\n\t\treturn this.empty().append( (this[0] && this[0].ownerDocument || document).createTextNode( text ) );\n\n\tvar ret = \"\";\n\n\tjQuery.each( text || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tret += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue :\n\t\t\t\t\tjQuery.fn.text( [ this ] );\n\t\t});\n\t});\n\n\treturn ret;\n},\n\nwrapAll: function( html ) {\n\tif ( this[0] )\n\t\t// The elements to wrap the target around\n\t\tjQuery( html, this[0].ownerDocument )\n\t\t\t.clone()\n\t\t\t.insertBefore( this[0] )\n\t\t\t.map(function(){\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstChild )\n\t\t\t\t\telem = elem.firstChild;\n\n\t\t\t\treturn elem;\n\t\t\t})\n\t\t\t.append(this);\n\n\treturn this;\n},\n\nwrapInner: function( html ) {\n\treturn this.each(function(){\n\t\tjQuery( this ).contents().wrapAll( html );\n\t});\n},\n\nwrap: function( html ) {\n\treturn this.each(function(){\n\t\tjQuery( this ).wrapAll( html );\n\t});\n},\n\nappend: function() {\n\treturn this.domManip(arguments, true, false, function(elem){\n\t\tif (this.nodeType == 1)\n\t\t\tthis.appendChild( elem );\n\t});\n},\n\nprepend: function() {\n\treturn this.domManip(arguments, true, true, function(elem){\n\t\tif (this.nodeType == 1)\n\t\t\tthis.insertBefore( elem, this.firstChild );\n\t});\n},\n\nbefore: function() {\n\treturn this.domManip(arguments, false, false, function(elem){\n\t\tthis.parentNode.insertBefore( elem, this );\n\t});\n},\n\nafter: function() {\n\treturn this.domManip(arguments, false, true, function(elem){\n\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t});"}]},
{"id":"4f84922e53d6c7d86f2f6f90960690845cfc70d5","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[291,343],"code":"\t\t\treturn this.cloneNode(true);\n\t});\n\n\t// Need to set the expando to null on the cloned set if it exists\n\t// removeData doesn't work here, IE removes it from the original as well\n\t// this is primarily for IE but the data expando shouldn't be copied over in any browser\n\tvar clone = ret.find(\"*\").andSelf().each(function(){\n\t\tif ( this[ expando ] != undefined )\n\t\t\tthis[ expando ] = null;\n\t});\n\n\t// Copy the events from the original to the clone\n\tif ( events === true )\n\t\tthis.find(\"*\").andSelf().each(function(i){\n\t\t\tif (this.nodeType == 3)\n\t\t\t\treturn;\n\t\t\tvar events = jQuery.data( this, \"events\" );\n\n\t\t\tfor ( var type in events )\n\t\t\t\tfor ( var handler in events[ type ] )\n\t\t\t\t\tjQuery.event.add( clone[ i ], type, events[ type ][ handler ], events[ type ][ handler ].data );\n\t\t});\n\n\t// Return the cloned set\n\treturn ret;\n},\n\nfilter: function( selector ) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( selector ) &&\n\t\tjQuery.grep(this, function(elem, i){\n\t\t\treturn selector.call( elem, i );\n\t\t}) ||\n\n\t\tjQuery.multiFilter( selector, this ) );\n},\n\nnot: function( selector ) {\n\tif ( selector.constructor == String )\n\t\t// test special case where just one selector is passed in\n\t\tif ( isSimple.test( selector ) )\n\t\t\treturn this.pushStack( jQuery.multiFilter( selector, this, true ) );\n\t\telse\n\t\t\tselector = jQuery.multiFilter( selector, this );\n\n\tvar isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector.nodeType;\n\treturn this.filter(function() {\n\t\treturn isArrayLike ? jQuery.inArray( this, selector ) < 0 : this != selector;\n\t});\n},\n\nadd: function( selector ) {\n\treturn this.pushStack( jQuery.unique( jQuery.merge("},{"path":"./jquery-data/1.2.2/src/core.js","lines":[312,364],"code":"\t\t\treturn this.cloneNode(true);\n\t});\n\n\t// Need to set the expando to null on the cloned set if it exists\n\t// removeData doesn't work here, IE removes it from the original as well\n\t// this is primarily for IE but the data expando shouldn't be copied over in any browser\n\tvar clone = ret.find(\"*\").andSelf().each(function(){\n\t\tif ( this[ expando ] != undefined )\n\t\t\tthis[ expando ] = null;\n\t});\n\t\n\t// Copy the events from the original to the clone\n\tif ( events === true )\n\t\tthis.find(\"*\").andSelf().each(function(i){\n\t\t\tif (this.nodeType == 3)\n\t\t\t\treturn;\n\t\t\tvar events = jQuery.data( this, \"events\" );\n\n\t\t\tfor ( var type in events )\n\t\t\t\tfor ( var handler in events[ type ] )\n\t\t\t\t\tjQuery.event.add( clone[ i ], type, events[ type ][ handler ], events[ type ][ handler ].data );\n\t\t});\n\n\t// Return the cloned set\n\treturn ret;\n},\n\nfilter: function( selector ) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( selector ) &&\n\t\tjQuery.grep(this, function(elem, i){\n\t\t\treturn selector.call( elem, i );\n\t\t}) ||\n\n\t\tjQuery.multiFilter( selector, this ) );\n},\n\nnot: function( selector ) {\n\tif ( selector.constructor == String )\n\t\t// test special case where just one selector is passed in\n\t\tif ( isSimple.test( selector ) )\n\t\t\treturn this.pushStack( jQuery.multiFilter( selector, this, true ) );\n\t\telse\n\t\t\tselector = jQuery.multiFilter( selector, this );\n\n\tvar isArrayLike = selector.length && selector[selector.length - 1] !== undefined && !selector.nodeType;\n\treturn this.filter(function() {\n\t\treturn isArrayLike ? jQuery.inArray( this, selector ) < 0 : this != selector;\n\t});\n},\n\nadd: function( selector ) {\n\treturn !selector ? this : this.pushStack( jQuery.merge( "}]},
{"id":"164c80db9f97ea7f8a206ef7f23f47cba1893ba1","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[355,413],"code":"hasClass: function( selector ) {\n\treturn this.is( \".\" + selector );\n},\n\nval: function( value ) {\n\tif ( value == undefined ) {\n\n\t\tif ( this.length ) {\n\t\t\tvar elem = this[0];\n\n\t\t\t// We need to handle select boxes special\n\t\t\tif ( jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\tvar index = elem.selectedIndex,\n\t\t\t\t\tvalues = [],\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tone = elem.type == \"select-one\";\n\n\t\t\t\t// Nothing was selected\n\t\t\t\tif ( index < 0 )\n\t\t\t\t\treturn null;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {\n\t\t\t\t\tvar option = options[ i ];\n\n\t\t\t\t\tif ( option.selected ) {\n\t\t\t\t\t\t// Get the specifc value for the option\n\t\t\t\t\t\tvalue = jQuery.browser.msie && !option.attributes.value.specified ? option.text : option.value;\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one )\n\t\t\t\t\t\t\treturn value;\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t// Everything else, we just grab the value\n\t\t\t} else\n\t\t\t\treturn (this[0].value || \"\").replace(/\\r/g, \"\");\n\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\treturn this.each(function(){\n\t\tif ( this.nodeType != 1 )\n\t\t\treturn;\n\n\t\tif ( value.constructor == Array && /radio|checkbox/.test( this.type ) )\n\t\t\tthis.checked = (jQuery.inArray(this.value, value) >= 0 ||\n\t\t\t\tjQuery.inArray(this.name, value) >= 0);\n\n\t\telse if ( jQuery.nodeName( this, \"select\" ) ) {\n\t\t\tvar values = jQuery.makeArray(value);"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[378,436],"code":"hasClass: function( selector ) {\n\treturn this.is( \".\" + selector );\n},\n\nval: function( value ) {\n\tif ( value == undefined ) {\n\n\t\tif ( this.length ) {\n\t\t\tvar elem = this[0];\n\n\t\t\t// We need to handle select boxes special\n\t\t\tif ( jQuery.nodeName( elem, \"select\" ) ) {\n\t\t\t\tvar index = elem.selectedIndex,\n\t\t\t\t\tvalues = [],\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tone = elem.type == \"select-one\";\n\t\t\t\t\n\t\t\t\t// Nothing was selected\n\t\t\t\tif ( index < 0 )\n\t\t\t\t\treturn null;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++ ) {\n\t\t\t\t\tvar option = options[ i ];\n\n\t\t\t\t\tif ( option.selected ) {\n\t\t\t\t\t\t// Get the specifc value for the option\n\t\t\t\t\t\tvalue = jQuery.browser.msie && !option.attributes.value.specified ? option.text : option.value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one )\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn values;\n\t\t\t\t\n\t\t\t// Everything else, we just grab the value\n\t\t\t} else\n\t\t\t\treturn (this[0].value || \"\").replace(/\\r/g, \"\");\n\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\treturn this.each(function(){\n\t\tif ( this.nodeType != 1 )\n\t\t\treturn;\n\n\t\tif ( value.constructor == Array && /radio|checkbox/.test( this.type ) )\n\t\t\tthis.checked = (jQuery.inArray(this.value, value) >= 0 ||\n\t\t\t\tjQuery.inArray(this.name, value) >= 0);\n\n\t\telse if ( jQuery.nodeName( this, \"select\" ) ) {\n\t\t\tvar values = value.constructor == Array ?"}]},
{"id":"ad1d668c0aa101e4c317d6b7b7da526bc66fe120","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[479,540],"code":"\t\t\tjQuery.removeData( this, key );\n\t\t});\n\t},\n\n\tdomManip: function( args, table, reverse, callback ) {\n\t\tvar clone = this.length > 1, elems;\n\n\t\treturn this.each(function(){\n\t\t\tif ( !elems ) {\n\t\t\t\telems = jQuery.clean( args, this.ownerDocument );\n\n\t\t\t\tif ( reverse )\n\t\t\t\t\telems.reverse();\n\t\t\t}\n\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && jQuery.nodeName( this, \"table\" ) && jQuery.nodeName( elems[0], \"tr\" ) )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild( this.ownerDocument.createElement(\"tbody\") );\n\n\t\t\tvar scripts = jQuery( [] );\n\n\t\t\tjQuery.each(elems, function(){\n\t\t\t\tvar elem = clone ?\n\t\t\t\t\tjQuery( this ).clone( true )[0] :\n\t\t\t\t\tthis;\n\n\t\t\t\t// execute all scripts after the elements have been injected\n\t\t\t\tif ( jQuery.nodeName( elem, \"script\" ) ) {\n\t\t\t\t\tscripts = scripts.add( elem );\n\t\t\t\t} else {\n\t\t\t\t\t// Remove any inner scripts for later evaluation\n\t\t\t\t\tif ( elem.nodeType == 1 )\n\t\t\t\t\t\tscripts = scripts.add( jQuery( \"script\", elem ).remove() );\n\n\t\t\t\t\t// Inject the elements into the document\n\t\t\t\t\tcallback.call( obj, elem );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscripts.each( evalScript );\n\t\t});\n\t}\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.fn.init.prototype = jQuery.fn;\n\nfunction evalScript( i, elem ) {\n\tif ( elem.src )\n\t\tjQuery.ajax({\n\t\t\turl: elem.src,\n\t\t\tasync: false,\n\t\t\tdataType: \"script\"\n\t\t});\n\n\telse\n\t\tjQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || \"\" );\n\n\tif ( elem.parentNode )\n\t\telem.parentNode.removeChild( elem );\n}"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[480,540],"code":"\t\treturn this.add( this.prevObject );\n\t},\n\t\n\tdomManip: function( args, table, reverse, callback ) {\n\t\tvar clone = this.length > 1, elems; \n\n\t\treturn this.each(function(){\n\t\t\tif ( !elems ) {\n\t\t\t\telems = jQuery.clean( args, this.ownerDocument );\n\n\t\t\t\tif ( reverse )\n\t\t\t\t\telems.reverse();\n\t\t\t}\n\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && jQuery.nodeName( this, \"table\" ) && jQuery.nodeName( elems[0], \"tr\" ) )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild( this.ownerDocument.createElement(\"tbody\") );\n\n\t\t\tvar scripts = jQuery( [] );\n\n\t\t\tjQuery.each(elems, function(){\n\t\t\t\tvar elem = clone ?\n\t\t\t\t\tjQuery( this ).clone( true )[0] :\n\t\t\t\t\tthis;\n\n\t\t\t\t// execute all scripts after the elements have been injected\n\t\t\t\tif ( jQuery.nodeName( elem, \"script\" ) ) {\n\t\t\t\t\tscripts = scripts.add( elem );\n\t\t\t\t} else {\n\t\t\t\t\t// Remove any inner scripts for later evaluation\n\t\t\t\t\tif ( elem.nodeType == 1 )\n\t\t\t\t\t\tscripts = scripts.add( jQuery( \"script\", elem ).remove() );\n\n\t\t\t\t\t// Inject the elements into the document\n\t\t\t\t\tcallback.call( obj, elem );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscripts.each( evalScript );\n\t\t});\n\t}\n};\n\n// Give the init function the jQuery prototype for later instantiation\njQuery.prototype.init.prototype = jQuery.prototype;\n\nfunction evalScript( i, elem ) {\n\tif ( elem.src )\n\t\tjQuery.ajax({\n\t\t\turl: elem.src,\n\t\t\tasync: false,\n\t\t\tdataType: \"script\"\n\t\t});\n\n\telse\n\t\tjQuery.globalEval( elem.text || elem.textContent || elem.innerHTML || \"\" );\n\n\tif ( elem.parentNode )\n\t\telem.parentNode.removeChild( elem );\n}"}]},
{"id":"1232794d37718c7a3199515258945e05b27d0878","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[543,563],"code":"\treturn +new Date;\n}\n\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;\n\n\t// Handle a deep copy situation\n\tif ( target.constructor == Boolean ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target != \"object\" && typeof target != \"function\" )\n\t\ttarget = {};\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length == i ) {"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[539,559],"code":"\t\telem.parentNode.removeChild( elem );\n}\n\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0] || {}, i = 1, length = arguments.length, deep = false, options;\n\n\t// Handle a deep copy situation\n\tif ( target.constructor == Boolean ) {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target != \"object\" && typeof target != \"function\" )\n\t\ttarget = {};\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( length == 1 ) {"}]},
{"id":"3dcaf61d7ebcc4acfd7a9bd5c04c20e1d0847f0f","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[602,642],"code":"jQuery.extend({\n\tnoConflict: function( deep ) {\n\t\twindow.$ = _$;\n\n\t\tif ( deep )\n\t\t\twindow.jQuery = _jQuery;\n\n\t\treturn jQuery;\n\t},\n\n\t// See test/unit/core.js for details concerning this function.\n\tisFunction: function( fn ) {\n\t\treturn !!fn && typeof fn != \"string\" && !fn.nodeName &&\n\t\t\tfn.constructor != Array && /^[\\s[]?function/.test( fn + \"\" );\n\t},\n\n\t// check if an element is in a (or is an) XML document\n\tisXMLDoc: function( elem ) {\n\t\treturn elem.documentElement && !elem.body ||\n\t\t\telem.tagName && elem.ownerDocument && !elem.ownerDocument.body;\n\t},\n\n\t// Evalulates a script in a global context\n\tglobalEval: function( data ) {\n\t\tdata = jQuery.trim( data );\n\n\t\tif ( data ) {\n\t\t\t// Inspired by code by Andrea Giammarchi\n\t\t\t// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html\n\t\t\tvar head = document.getElementsByTagName(\"head\")[0] || document.documentElement,\n\t\t\t\tscript = document.createElement(\"script\");\n\n\t\t\tscript.type = \"text/javascript\";\n\t\t\tif ( jQuery.browser.msie )\n\t\t\t\tscript.text = data;\n\t\t\telse\n\t\t\t\tscript.appendChild( document.createTextNode( data ) );\n\n\t\t\t// Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n\t\t\t// This arises when a base node is used (#2709).\n\t\t\thead.insertBefore( script, head.firstChild );"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[592,630],"code":"jQuery.extend({\n\tnoConflict: function( deep ) {\n\t\twindow.$ = _$;\n\n\t\tif ( deep )\n\t\t\twindow.jQuery = _jQuery;\n\n\t\treturn jQuery;\n\t},\n\n\t// See test/unit/core.js for details concerning this function.\n\tisFunction: function( fn ) {\n\t\treturn !!fn && typeof fn != \"string\" && !fn.nodeName && \n\t\t\tfn.constructor != Array && /function/i.test( fn + \"\" );\n\t},\n\t\n\t// check if an element is in a (or is an) XML document\n\tisXMLDoc: function( elem ) {\n\t\treturn elem.documentElement && !elem.body ||\n\t\t\telem.tagName && elem.ownerDocument && !elem.ownerDocument.body;\n\t},\n\n\t// Evalulates a script in a global context\n\tglobalEval: function( data ) {\n\t\tdata = jQuery.trim( data );\n\n\t\tif ( data ) {\n\t\t\t// Inspired by code by Andrea Giammarchi\n\t\t\t// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html\n\t\t\tvar head = document.getElementsByTagName(\"head\")[0] || document.documentElement,\n\t\t\t\tscript = document.createElement(\"script\");\n\n\t\t\tscript.type = \"text/javascript\";\n\t\t\tif ( jQuery.browser.msie )\n\t\t\t\tscript.text = data;\n\t\t\telse\n\t\t\t\tscript.appendChild( document.createTextNode( data ) );\n\n\t\t\thead.appendChild( script );"}]},
{"id":"a43bf7c6975a206abab0e04cc98710f3a7b047ef","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[624,720],"code":"// Evalulates a script in a global context\nglobalEval: function( data ) {\n\tdata = jQuery.trim( data );\n\n\tif ( data ) {\n\t\t// Inspired by code by Andrea Giammarchi\n\t\t// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html\n\t\tvar head = document.getElementsByTagName(\"head\")[0] || document.documentElement,\n\t\t\tscript = document.createElement(\"script\");\n\n\t\tscript.type = \"text/javascript\";\n\t\tif ( jQuery.browser.msie )\n\t\t\tscript.text = data;\n\t\telse\n\t\t\tscript.appendChild( document.createTextNode( data ) );\n\n\t\t// Use insertBefore instead of appendChild  to circumvent an IE6 bug.\n\t\t// This arises when a base node is used (#2709).\n\t\thead.insertBefore( script, head.firstChild );\n\t\thead.removeChild( script );\n\t}\n},\n\nnodeName: function( elem, name ) {\n\treturn elem.nodeName && elem.nodeName.toUpperCase() == name.toUpperCase();\n},\n\ncache: {},\n\ndata: function( elem, name, data ) {\n\telem = elem == window ?\n\t\twindowData :\n\t\telem;\n\n\tvar id = elem[ expando ];\n\n\t// Compute a unique ID for the element\n\tif ( !id )\n\t\tid = elem[ expando ] = ++uuid;\n\n\t// Only generate the data cache if we're\n\t// trying to access or manipulate it\n\tif ( name && !jQuery.cache[ id ] )\n\t\tjQuery.cache[ id ] = {};\n\n\t// Prevent overriding the named cache with undefined values\n\tif ( data !== undefined )\n\t\tjQuery.cache[ id ][ name ] = data;\n\n\t// Return the named cache data, or the ID for the element\n\treturn name ?\n\t\tjQuery.cache[ id ][ name ] :\n\t\tid;\n},\n\nremoveData: function( elem, name ) {\n\telem = elem == window ?\n\t\twindowData :\n\t\telem;\n\n\tvar id = elem[ expando ];\n\n\t// If we want to remove a specific section of the element's data\n\tif ( name ) {\n\t\tif ( jQuery.cache[ id ] ) {\n\t\t\t// Remove the section of cache data\n\t\t\tdelete jQuery.cache[ id ][ name ];\n\n\t\t\t// If we've removed all the data, remove the element's cache\n\t\t\tname = \"\";\n\n\t\t\tfor ( name in jQuery.cache[ id ] )\n\t\t\t\tbreak;\n\n\t\t\tif ( !name )\n\t\t\t\tjQuery.removeData( elem );\n\t\t}\n\n\t// Otherwise, we want to remove all of the element's data\n\t} else {\n\t\t// Clean up the element expando\n\t\ttry {\n\t\t\tdelete elem[ expando ];\n\t\t} catch(e){\n\t\t\t// IE has trouble directly removing the expando\n\t\t\t// but it's ok with using removeAttribute\n\t\t\tif ( elem.removeAttribute )\n\t\t\t\telem.removeAttribute( expando );\n\t\t}\n\n\t\t// Completely remove the data cache\n\t\tdelete jQuery.cache[ id ];\n\t}\n},\n\n// args is for internal usage only\neach: function( object, callback, args ) {"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[614,708],"code":"// Evalulates a script in a global context\nglobalEval: function( data ) {\n\tdata = jQuery.trim( data );\n\n\tif ( data ) {\n\t\t// Inspired by code by Andrea Giammarchi\n\t\t// http://webreflection.blogspot.com/2007/08/global-scope-evaluation-and-dom.html\n\t\tvar head = document.getElementsByTagName(\"head\")[0] || document.documentElement,\n\t\t\tscript = document.createElement(\"script\");\n\n\t\tscript.type = \"text/javascript\";\n\t\tif ( jQuery.browser.msie )\n\t\t\tscript.text = data;\n\t\telse\n\t\t\tscript.appendChild( document.createTextNode( data ) );\n\n\t\thead.appendChild( script );\n\t\thead.removeChild( script );\n\t}\n},\n\nnodeName: function( elem, name ) {\n\treturn elem.nodeName && elem.nodeName.toUpperCase() == name.toUpperCase();\n},\n\ncache: {},\n\ndata: function( elem, name, data ) {\n\telem = elem == window ?\n\t\twindowData :\n\t\telem;\n\n\tvar id = elem[ expando ];\n\n\t// Compute a unique ID for the element\n\tif ( !id ) \n\t\tid = elem[ expando ] = ++uuid;\n\n\t// Only generate the data cache if we're\n\t// trying to access or manipulate it\n\tif ( name && !jQuery.cache[ id ] )\n\t\tjQuery.cache[ id ] = {};\n\t\n\t// Prevent overriding the named cache with undefined values\n\tif ( data != undefined )\n\t\tjQuery.cache[ id ][ name ] = data;\n\t\n\t// Return the named cache data, or the ID for the element\t\n\treturn name ?\n\t\tjQuery.cache[ id ][ name ] :\n\t\tid;\n},\n\nremoveData: function( elem, name ) {\n\telem = elem == window ?\n\t\twindowData :\n\t\telem;\n\n\tvar id = elem[ expando ];\n\n\t// If we want to remove a specific section of the element's data\n\tif ( name ) {\n\t\tif ( jQuery.cache[ id ] ) {\n\t\t\t// Remove the section of cache data\n\t\t\tdelete jQuery.cache[ id ][ name ];\n\n\t\t\t// If we've removed all the data, remove the element's cache\n\t\t\tname = \"\";\n\n\t\t\tfor ( name in jQuery.cache[ id ] )\n\t\t\t\tbreak;\n\n\t\t\tif ( !name )\n\t\t\t\tjQuery.removeData( elem );\n\t\t}\n\n\t// Otherwise, we want to remove all of the element's data\n\t} else {\n\t\t// Clean up the element expando\n\t\ttry {\n\t\t\tdelete elem[ expando ];\n\t\t} catch(e){\n\t\t\t// IE has trouble directly removing the expando\n\t\t\t// but it's ok with using removeAttribute\n\t\t\tif ( elem.removeAttribute )\n\t\t\t\telem.removeAttribute( expando );\n\t\t}\n\n\t\t// Completely remove the data cache\n\t\tdelete jQuery.cache[ id ];\n\t}\n},\n\n// args is for internal usage only\neach: function( object, callback, args ) {"}]},
{"id":"93720d45848bfc02d6df24bca9ce0519b70741f5","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[719,797],"code":"// args is for internal usage only\neach: function( object, callback, args ) {\n\tvar name, i = 0, length = object.length;\n\n\tif ( args ) {\n\t\tif ( length == undefined ) {\n\t\t\tfor ( name in object )\n\t\t\t\tif ( callback.apply( object[ name ], args ) === false )\n\t\t\t\t\tbreak;\n\t\t} else\n\t\t\tfor ( ; i < length; )\n\t\t\t\tif ( callback.apply( object[ i++ ], args ) === false )\n\t\t\t\t\tbreak;\n\n\t// A special, fast, case for the most common use of each\n\t} else {\n\t\tif ( length == undefined ) {\n\t\t\tfor ( name in object )\n\t\t\t\tif ( callback.call( object[ name ], name, object[ name ] ) === false )\n\t\t\t\t\tbreak;\n\t\t} else\n\t\t\tfor ( var value = object[0];\n\t\t\t\ti < length && callback.call( value, i, value ) !== false; value = object[++i] ){}\n\t}\n\n\treturn object;\n},\n\nprop: function( elem, value, type, i, name ) {\n\t\t// Handle executable functions\n\t\tif ( jQuery.isFunction( value ) )\n\t\t\tvalue = value.call( elem, i );\n\n\t\t// Handle passing in a number to a CSS property\n\t\treturn value && value.constructor == Number && type == \"curCSS\" && !exclude.test( name ) ?\n\t\t\tvalue + \"px\" :\n\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, classNames ) {\n\t\tjQuery.each((classNames || \"\").split(/\\s+/), function(i, className){\n\t\t\tif ( elem.nodeType == 1 && !jQuery.className.has( elem.className, className ) )\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, classNames ) {\n\t\tif (elem.nodeType == 1)\n\t\t\telem.className = classNames != undefined ?\n\t\t\t\tjQuery.grep(elem.className.split(/\\s+/), function(className){\n\t\t\t\t\treturn !jQuery.className.has( classNames, className );\n\t\t\t\t}).join(\" \") :\n\t\t\t\t\"\";\n\t},\n\n\t// internal only, use hasClass(\"class\")\n\thas: function( elem, className ) {\n\t\treturn jQuery.inArray( className, (elem.className || elem).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n// A method for quickly swapping in/out CSS properties to get correct calculations\nswap: function( elem, options, callback ) {\n\tvar old = {};\n\t// Remember the old values, and insert the new ones\n\tfor ( var name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tcallback.call( elem );\n\n\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[707,783],"code":"// args is for internal usage only\neach: function( object, callback, args ) {\n\tif ( args ) {\n\t\tif ( object.length == undefined ) {\n\t\t\tfor ( var name in object )\n\t\t\t\tif ( callback.apply( object[ name ], args ) === false )\n\t\t\t\t\tbreak;\n\t\t} else\n\t\t\tfor ( var i = 0, length = object.length; i < length; i++ )\n\t\t\t\tif ( callback.apply( object[ i ], args ) === false )\n\t\t\t\t\tbreak;\n\n\t// A special, fast, case for the most common use of each\n\t} else {\n\t\tif ( object.length == undefined ) {\n\t\t\tfor ( var name in object )\n\t\t\t\tif ( callback.call( object[ name ], name, object[ name ] ) === false )\n\t\t\t\t\tbreak;\n\t\t} else\n\t\t\tfor ( var i = 0, length = object.length, value = object[0]; \n\t\t\t\ti < length && callback.call( value, i, value ) !== false; value = object[++i] ){}\n\t}\n\n\treturn object;\n},\n\nprop: function( elem, value, type, i, name ) {\n\t\t// Handle executable functions\n\t\tif ( jQuery.isFunction( value ) )\n\t\t\tvalue = value.call( elem, i );\n\t\t\t\n\t\t// Handle passing in a number to a CSS property\n\t\treturn value && value.constructor == Number && type == \"curCSS\" && !exclude.test( name ) ?\n\t\t\tvalue + \"px\" :\n\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, classNames ) {\n\t\tjQuery.each((classNames || \"\").split(/\\s+/), function(i, className){\n\t\t\tif ( elem.nodeType == 1 && !jQuery.className.has( elem.className, className ) )\n\t\t\t\telem.className += (elem.className ? \" \" : \"\") + className;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, classNames ) {\n\t\tif (elem.nodeType == 1)\n\t\t\telem.className = classNames != undefined ?\n\t\t\t\tjQuery.grep(elem.className.split(/\\s+/), function(className){\n\t\t\t\t\treturn !jQuery.className.has( classNames, className );\t\n\t\t\t\t}).join(\" \") :\n\t\t\t\t\"\";\n\t},\n\n\t// internal only, use is(\".class\")\n\thas: function( elem, className ) {\n\t\treturn jQuery.inArray( className, (elem.className || elem).toString().split(/\\s+/) ) > -1;\n\t}\n},\n\n// A method for quickly swapping in/out CSS properties to get correct calculations\nswap: function( elem, options, callback ) {\n\tvar old = {};\n\t// Remember the old values, and insert the new ones\n\tfor ( var name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tcallback.call( elem );\n\n\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},"}]},
{"id":"e055906822adf8a0d979381fb46e0bd1507032f3","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[783,825],"code":"// A method for quickly swapping in/out CSS properties to get correct calculations\nswap: function( elem, options, callback ) {\n\tvar old = {};\n\t// Remember the old values, and insert the new ones\n\tfor ( var name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tcallback.call( elem );\n\n\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},\n\ncss: function( elem, name, force ) {\n\tif ( name == \"width\" || name == \"height\" ) {\n\t\tvar val, props = { position: \"absolute\", visibility: \"hidden\", display:\"block\" }, which = name == \"width\" ? [ \"Left\", \"Right\" ] : [ \"Top\", \"Bottom\" ];\n\n\t\tfunction getWH() {\n\t\t\tval = name == \"width\" ? elem.offsetWidth : elem.offsetHeight;\n\t\t\tvar padding = 0, border = 0;\n\t\t\tjQuery.each( which, function() {\n\t\t\t\tpadding += parseFloat(jQuery.curCSS( elem, \"padding\" + this, true)) || 0;\n\t\t\t\tborder += parseFloat(jQuery.curCSS( elem, \"border\" + this + \"Width\", true)) || 0;\n\t\t\t});\n\t\t\tval -= Math.round(padding + border);\n\t\t}\n\n\t\tif ( jQuery(elem).is(\":visible\") )\n\t\t\tgetWH();\n\t\telse\n\t\t\tjQuery.swap( elem, props, getWH );\n\n\t\treturn Math.max(0, val);\n\t}\n\n\treturn jQuery.curCSS( elem, name, force );\n},\n\ncurCSS: function( elem, name, force ) {\n\tvar ret, style = elem.style;"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[769,811],"code":"// A method for quickly swapping in/out CSS properties to get correct calculations\nswap: function( elem, options, callback ) {\n\tvar old = {};\n\t// Remember the old values, and insert the new ones\n\tfor ( var name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tcallback.call( elem );\n\n\t// Revert the old values\n\tfor ( var name in options )\n\t\telem.style[ name ] = old[ name ];\n},\n\ncss: function( elem, name, force ) {\n\tif ( name == \"width\" || name == \"height\" ) {\n\t\tvar val, props = { position: \"absolute\", visibility: \"hidden\", display:\"block\" }, which = name == \"width\" ? [ \"Left\", \"Right\" ] : [ \"Top\", \"Bottom\" ];\n\t\n\t\tfunction getWH() {\n\t\t\tval = name == \"width\" ? elem.offsetWidth : elem.offsetHeight;\n\t\t\tvar padding = 0, border = 0;\n\t\t\tjQuery.each( which, function() {\n\t\t\t\tpadding += parseFloat(jQuery.curCSS( elem, \"padding\" + this, true)) || 0;\n\t\t\t\tborder += parseFloat(jQuery.curCSS( elem, \"border\" + this + \"Width\", true)) || 0;\n\t\t\t});\n\t\t\tval -= Math.round(padding + border);\n\t\t}\n\t\n\t\tif ( jQuery(elem).is(\":visible\") )\n\t\t\tgetWH();\n\t\telse\n\t\t\tjQuery.swap( elem, props, getWH );\n\t\t\n\t\treturn Math.max(0, val);\n\t}\n\t\n\treturn jQuery.curCSS( elem, name, force );\n},\n\ncurCSS: function( elem, name, force ) {\n\tvar ret;"}]},
{"id":"abcac9585821985afd257a41c4172ae436cde7cc","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[895,919],"code":"\t\t// Finally, revert the display styles back\n\t\tfor ( i = 0; i < swap.length; i++ )\n\t\t\tif ( swap[ i ] != null )\n\t\t\t\tstack[ i ].style.display = swap[ i ];\n\t}\n\n\t// We should always get a number back from opacity\n\tif ( name == \"opacity\" && ret == \"\" )\n\t\tret = \"1\";\n\n} else if ( elem.currentStyle ) {\n\tvar camelCase = name.replace(/\\-(\\w)/g, function(all, letter){\n\t\treturn letter.toUpperCase();\n\t});\n\n\tret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];\n\n\t// From the awesome hack by Dean Edwards\n\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t// If we're not dealing with a regular pixel number\n\t// but a number that has a weird ending, we need to convert it to pixels\n\tif ( !/^\\d+(px)?$/i.test( ret ) && /^\\d/.test( ret ) ) {\n\t\t// Remember the original values\n\t\tvar left = style.left, rsLeft = elem.runtimeStyle.left;"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[880,904],"code":"\t\t// Finally, revert the display styles back\n\t\tfor ( var i = 0; i < swap.length; i++ )\n\t\t\tif ( swap[ i ] != null )\n\t\t\t\tstack[ i ].style.display = swap[ i ];\n\t}\n\n\t// We should always get a number back from opacity\n\tif ( name == \"opacity\" && ret == \"\" )\n\t\tret = \"1\";\n\n} else if ( elem.currentStyle ) {\n\tvar camelCase = name.replace(/\\-(\\w)/g, function(all, letter){\n\t\treturn letter.toUpperCase();\n\t});\n\n\tret = elem.currentStyle[ name ] || elem.currentStyle[ camelCase ];\n\n\t// From the awesome hack by Dean Edwards\n\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\n\t// If we're not dealing with a regular pixel number\n\t// but a number that has a weird ending, we need to convert it to pixels\n\tif ( !/^\\d+(px)?$/i.test( ret ) && /^\\d/.test( ret ) ) {\n\t\t// Remember the original values\n\t\tvar style = elem.style.left, runtimeStyle = elem.runtimeStyle.left;"}]},
{"id":"e1e9a5f643f62fff5f128b5e748d110a86a02b07","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[927,947],"code":"\t\t\tstyle.left = left;\n\t\t\telem.runtimeStyle.left = rsLeft;\n\t\t}\n\t}\n\n\treturn ret;\n},\n\nclean: function( elems, context ) {\n\tvar ret = [];\n\tcontext = context || document;\n\t// !context.createElement fails in IE with an error but returns typeof 'object'\n\tif (typeof context.createElement == 'undefined')\n\t\tcontext = context.ownerDocument || context[0] && context[0].ownerDocument || document;\n\n\tjQuery.each(elems, function(i, elem){\n\t\tif ( !elem )\n\t\t\treturn;\n\n\t\tif ( elem.constructor == Number )\n\t\t\telem += '';"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[912,932],"code":"\t\t\telem.style.left = style;\n\t\t\telem.runtimeStyle.left = runtimeStyle;\n\t\t}\n\t}\n\n\treturn ret;\n},\n\nclean: function( elems, context ) {\n\tvar ret = [];\n\tcontext = context || document;\n\t// !context.createElement fails in IE with an error but returns typeof 'object'\n\tif (typeof context.createElement == 'undefined') \n\t\tcontext = context.ownerDocument || context[0] && context[0].ownerDocument || document;\n\n\tjQuery.each(elems, function(i, elem){\n\t\tif ( !elem )\n\t\t\treturn;\n\n\t\tif ( elem.constructor == Number )\n\t\t\telem = elem.toString();"}]},
{"id":"2d914d75f1de8b788abd3dc5a8682b3164069b84","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[950,1039],"code":"\t\tif ( typeof elem == \"string\" ) {\n\t\t\t// Fix \"XHTML\"-style tags in all browsers\n\t\t\telem = elem.replace(/(<(\\w+)[^>]*?)\\/>/g, function(all, front, tag){\n\t\t\t\treturn tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?\n\t\t\t\t\tall :\n\t\t\t\t\tfront + \"></\" + tag + \">\";\n\t\t\t});\n\n\t\t\t// Trim whitespace, otherwise indexOf won't work as expected\n\t\t\tvar tags = jQuery.trim( elem ).toLowerCase(), div = context.createElement(\"div\");\n\n\t\t\tvar wrap =\n\t\t\t\t// option or optgroup\n\t\t\t\t!tags.indexOf(\"<opt\") &&\n\t\t\t\t[ 1, \"<select multiple='multiple'>\", \"</select>\" ] ||\n\n\t\t\t\t!tags.indexOf(\"<leg\") &&\n\t\t\t\t[ 1, \"<fieldset>\", \"</fieldset>\" ] ||\n\n\t\t\t\ttags.match(/^<(thead|tbody|tfoot|colg|cap)/) &&\n\t\t\t\t[ 1, \"<table>\", \"</table>\" ] ||\n\n\t\t\t\t!tags.indexOf(\"<tr\") &&\n\t\t\t\t[ 2, \"<table><tbody>\", \"</tbody></table>\" ] ||\n\n\t\t\t \t// <thead> matched above\n\t\t\t\t(!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\")) &&\n\t\t\t\t[ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ] ||\n\n\t\t\t\t!tags.indexOf(\"<col\") &&\n\t\t\t\t[ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ] ||\n\n\t\t\t\t// IE can't serialize <link> and <script> tags normally\n\t\t\t\tjQuery.browser.msie &&\n\t\t\t\t[ 1, \"div<div>\", \"</div>\" ] ||\n\n\t\t\t\t[ 0, \"\", \"\" ];\n\n\t\t\t// Go to html and back, then peel off extra wrappers\n\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];\n\n\t\t\t// Move to the right depth\n\t\t\twhile ( wrap[0]-- )\n\t\t\t\tdiv = div.lastChild;\n\n\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\tif ( jQuery.browser.msie ) {\n\n\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\tvar tbody = !tags.indexOf(\"<table\") && tags.indexOf(\"<tbody\") < 0 ?\n\t\t\t\t\tdiv.firstChild && div.firstChild.childNodes :\n\n\t\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\t\twrap[1] == \"<table>\" && tags.indexOf(\"<tbody\") < 0 ?\n\t\t\t\t\t\tdiv.childNodes :\n\t\t\t\t\t\t[];\n\n\t\t\t\tfor ( var j = tbody.length - 1; j >= 0 ; --j )\n\t\t\t\t\tif ( jQuery.nodeName( tbody[ j ], \"tbody\" ) && !tbody[ j ].childNodes.length )\n\t\t\t\t\t\ttbody[ j ].parentNode.removeChild( tbody[ j ] );\n\n\t\t\t\t// IE completely kills leading whitespace when innerHTML is used\n\t\t\t\tif ( /^\\s/.test( elem ) )\n\t\t\t\t\tdiv.insertBefore( context.createTextNode( elem.match(/^\\s*/)[0] ), div.firstChild );\n\n\t\t\t}\n\n\t\t\telem = jQuery.makeArray( div.childNodes );\n\t\t}\n\n\t\tif ( elem.length === 0 && (!jQuery.nodeName( elem, \"form\" ) && !jQuery.nodeName( elem, \"select\" )) )\n\t\t\treturn;\n\n\t\tif ( elem[0] == undefined || jQuery.nodeName( elem, \"form\" ) || elem.options )\n\t\t\tret.push( elem );\n\n\t\telse\n\t\t\tret = jQuery.merge( ret, elem );\n\n\t});\n\n\treturn ret;\n},\n\nattr: function( elem, name, value ) {\n\t// don't set attributes on text and comment nodes\n\tif (!elem || elem.nodeType == 3 || elem.nodeType == 8)\n\t\treturn undefined;\n\n\tvar notxml = !jQuery.isXMLDoc( elem ),"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[935,1024],"code":"\t\tif ( typeof elem == \"string\" ) {\n\t\t\t// Fix \"XHTML\"-style tags in all browsers\n\t\t\telem = elem.replace(/(<(\\w+)[^>]*?)\\/>/g, function(all, front, tag){\n\t\t\t\treturn tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i) ?\n\t\t\t\t\tall :\n\t\t\t\t\tfront + \"></\" + tag + \">\";\n\t\t\t});\n\n\t\t\t// Trim whitespace, otherwise indexOf won't work as expected\n\t\t\tvar tags = jQuery.trim( elem ).toLowerCase(), div = context.createElement(\"div\");\n\n\t\t\tvar wrap =\n\t\t\t\t// option or optgroup\n\t\t\t\t!tags.indexOf(\"<opt\") &&\n\t\t\t\t[ 1, \"<select multiple='multiple'>\", \"</select>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<leg\") &&\n\t\t\t\t[ 1, \"<fieldset>\", \"</fieldset>\" ] ||\n\t\t\t\t\n\t\t\t\ttags.match(/^<(thead|tbody|tfoot|colg|cap)/) &&\n\t\t\t\t[ 1, \"<table>\", \"</table>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<tr\") &&\n\t\t\t\t[ 2, \"<table><tbody>\", \"</tbody></table>\" ] ||\n\t\t\t\t\n\t\t\t \t// <thead> matched above\n\t\t\t\t(!tags.indexOf(\"<td\") || !tags.indexOf(\"<th\")) &&\n\t\t\t\t[ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ] ||\n\t\t\t\t\n\t\t\t\t!tags.indexOf(\"<col\") &&\n\t\t\t\t[ 2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\" ] ||\n\n\t\t\t\t// IE can't serialize <link> and <script> tags normally\n\t\t\t\tjQuery.browser.msie &&\n\t\t\t\t[ 1, \"div<div>\", \"</div>\" ] ||\n\t\t\t\t\n\t\t\t\t[ 0, \"\", \"\" ];\n\n\t\t\t// Go to html and back, then peel off extra wrappers\n\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];\n\t\t\t\n\t\t\t// Move to the right depth\n\t\t\twhile ( wrap[0]-- )\n\t\t\t\tdiv = div.lastChild;\n\t\t\t\n\t\t\t// Remove IE's autoinserted <tbody> from table fragments\n\t\t\tif ( jQuery.browser.msie ) {\n\t\t\t\t\n\t\t\t\t// String was a <table>, *may* have spurious <tbody>\n\t\t\t\tvar tbody = !tags.indexOf(\"<table\") && tags.indexOf(\"<tbody\") < 0 ?\n\t\t\t\t\tdiv.firstChild && div.firstChild.childNodes :\n\t\t\t\t\t\n\t\t\t\t\t// String was a bare <thead> or <tfoot>\n\t\t\t\t\twrap[1] == \"<table>\" && tags.indexOf(\"<tbody\") < 0 ?\n\t\t\t\t\t\tdiv.childNodes :\n\t\t\t\t\t\t[];\n\t\t\t\n\t\t\t\tfor ( var j = tbody.length - 1; j >= 0 ; --j )\n\t\t\t\t\tif ( jQuery.nodeName( tbody[ j ], \"tbody\" ) && !tbody[ j ].childNodes.length )\n\t\t\t\t\t\ttbody[ j ].parentNode.removeChild( tbody[ j ] );\n\t\t\t\t\n\t\t\t\t// IE completely kills leading whitespace when innerHTML is used\t\n\t\t\t\tif ( /^\\s/.test( elem ) )\t\n\t\t\t\t\tdiv.insertBefore( context.createTextNode( elem.match(/^\\s*/)[0] ), div.firstChild );\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\telem = jQuery.makeArray( div.childNodes );\n\t\t}\n\n\t\tif ( elem.length === 0 && (!jQuery.nodeName( elem, \"form\" ) && !jQuery.nodeName( elem, \"select\" )) )\n\t\t\treturn;\n\n\t\tif ( elem[0] == undefined || jQuery.nodeName( elem, \"form\" ) || elem.options )\n\t\t\tret.push( elem );\n\n\t\telse\n\t\t\tret = jQuery.merge( ret, elem );\n\n\t});\n\n\treturn ret;\n},\n\nattr: function( elem, name, value ) {\n\t// don't set attributes on text and comment nodes\n\tif (!elem || elem.nodeType == 3 || elem.nodeType == 8)\n\t\treturn undefined;\n\n\tvar fix = jQuery.isXMLDoc( elem ) ?"}]},
{"id":"274601014582dff53d4f5247ad35d61d9be1eea4","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[1161,1187],"code":"\t\t\tfirst[ pos++ ] = elem;\n\n\treturn first;\n},\n\nunique: function( array ) {\n\tvar ret = [], done = {};\n\n\ttry {\n\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tvar id = jQuery.data( array[ i ] );\n\n\t\t\tif ( !done[ id ] ) {\n\t\t\t\tdone[ id ] = true;\n\t\t\t\tret.push( array[ i ] );\n\t\t\t}\n\t\t}\n\n\t} catch( e ) {\n\t\tret = array;\n\t}\n\n\treturn ret;\n},\n\ngrep: function( elems, callback, inv ) {"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[1131,1157],"code":"\t\t\tfirst.push( second[ i ] );\n\n\treturn first;\n},\n\nunique: function( array ) {\n\tvar ret = [], done = {};\n\n\ttry {\n\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tvar id = jQuery.data( array[ i ] );\n\n\t\t\tif ( !done[ id ] ) {\n\t\t\t\tdone[ id ] = true;\n\t\t\t\tret.push( array[ i ] );\n\t\t\t}\n\t\t}\n\n\t} catch( e ) {\n\t\tret = array;\n\t}\n\n\treturn ret;\n},\n\ngrep: function( elems, callback, inv ) {"}]},
{"id":"155f4c6f96db92f0b568d4b3877cff4d645bc442","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[1211,1244],"code":"\t\treturn ret.concat.apply( [], ret );\n\t}\n});\n\nvar userAgent = navigator.userAgent.toLowerCase();\n\n// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match( /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/ ) || [])[1],\n\tsafari: /webkit/.test( userAgent ),\n\topera: /opera/.test( userAgent ),\n\tmsie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),\n\tmozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )\n};\n\nvar styleFloat = jQuery.browser.msie ?\n\t\"styleFloat\" :\n\t\"cssFloat\";\n\njQuery.extend({\n\t// Check to see if the W3C box model is being used\n\tboxModel: !jQuery.browser.msie || document.compatMode == \"CSS1Compat\",\n\n\tprops: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": styleFloat,\n\t\tcssFloat: styleFloat,\n\t\tstyleFloat: styleFloat,\n\t\treadonly: \"readOnly\",\n\t\tmaxlength: \"maxLength\",\n\t\tcellspacing: \"cellSpacing\"\n\t}\n});"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[1190,1221],"code":"\t\treturn ret;\n\t}\n});\n\nvar userAgent = navigator.userAgent.toLowerCase();\n\n// Figure out what browser is being used\njQuery.browser = {\n\tversion: (userAgent.match( /.+(?:rv|it|ra|ie)[\\/: ]([\\d.]+)/ ) || [])[1],\n\tsafari: /webkit/.test( userAgent ),\n\topera: /opera/.test( userAgent ),\n\tmsie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),\n\tmozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )\n};\n\nvar styleFloat = jQuery.browser.msie ?\n\t\"styleFloat\" :\n\t\"cssFloat\";\n\t\njQuery.extend({\n\t// Check to see if the W3C box model is being used\n\tboxModel: !jQuery.browser.msie || document.compatMode == \"CSS1Compat\",\n\t\n\tprops: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": styleFloat,\n\t\tcssFloat: styleFloat,\n\t\tstyleFloat: styleFloat,\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\","}]},
{"id":"69cfa08cd434d14428e54fd05ef3f7e48fce980e","instances":[{"path":"./jquery-data/1.2.5/src/core.js","lines":[1257,1360],"code":"\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar ret = jQuery.map( this, fn );\n\n\t\tif ( selector && typeof selector == \"string\" )\n\t\t\tret = jQuery.multiFilter( selector, ret );\n\n\t\treturn this.pushStack( jQuery.unique( ret ) );\n\t};\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function(name, original){\n\tjQuery.fn[ name ] = function() {\n\t\tvar args = arguments;\n\n\t\treturn this.each(function(){\n\t\t\tfor ( var i = 0, length = args.length; i < length; i++ )\n\t\t\t\tjQuery( args[ i ] )[ original ]( this );\n\t\t});\n\t};\n});\n\njQuery.each({\n\tremoveAttr: function( name ) {\n\t\tjQuery.attr( this, name, \"\" );\n\t\tif (this.nodeType == 1)\n\t\t\tthis.removeAttribute( name );\n\t},\n\n\taddClass: function( classNames ) {\n\t\tjQuery.className.add( this, classNames );\n\t},\n\n\tremoveClass: function( classNames ) {\n\t\tjQuery.className.remove( this, classNames );\n\t},\n\n\ttoggleClass: function( classNames ) {\n\t\tjQuery.className[ jQuery.className.has( this, classNames ) ? \"remove\" : \"add\" ]( this, classNames );\n\t},\n\n\tremove: function( selector ) {\n\t\tif ( !selector || jQuery.filter( selector, [ this ] ).r.length ) {\n\t\t\t// Prevent memory leaks\n\t\t\tjQuery( \"*\", this ).add(this).each(function(){\n\t\t\t\tjQuery.event.remove(this);\n\t\t\t\tjQuery.removeData(this);\n\t\t\t});\n\t\t\tif (this.parentNode)\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t}\n\t},\n\n\tempty: function() {\n\t\t// Remove element nodes and prevent memory leaks\n\t\tjQuery( \">*\", this ).remove();\n\n\t\t// Remove any remaining nodes\n\t\twhile ( this.firstChild )\n\t\t\tthis.removeChild( this.firstChild );\n\t}\n}, function(name, fn){\n\tjQuery.fn[ name ] = function(){\n\t\treturn this.each( fn, arguments );\n\t};\n});\n\njQuery.each([ \"Height\", \"Width\" ], function(i, name){\n\tvar type = name.toLowerCase();\n\n\tjQuery.fn[ type ] = function( size ) {\n\t\t// Get window width or height\n\t\treturn this[0] == window ?\n\t\t\t// Opera reports document.body.client[Width/Height] properly in both quirks and standards\n\t\t\tjQuery.browser.opera && document.body[ \"client\" + name ] ||\n\n\t\t\t// Safari reports inner[Width/Height] just fine (Mozilla and Opera include scroll bar widths)\n\t\t\tjQuery.browser.safari && window[ \"inner\" + name ] ||\n\n\t\t\t// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode\n\t\t\tdocument.compatMode == \"CSS1Compat\" && document.documentElement[ \"client\" + name ] || document.body[ \"client\" + name ] :\n\n\t\t\t// Get document width or height\n\t\t\tthis[0] == document ?\n\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height], whichever is greater\n\t\t\t\tMath.max(\n\t\t\t\t\tMath.max(document.body[\"scroll\" + name], document.documentElement[\"scroll\" + name]),\n\t\t\t\t\tMath.max(document.body[\"offset\" + name], document.documentElement[\"offset\" + name])\n\t\t\t\t) :\n\n\t\t\t\t// Get or set width or height on the element\n\t\t\t\tsize == undefined ?\n\t\t\t\t\t// Get width or height on the element\n\t\t\t\t\t(this.length ? jQuery.css( this[0], type ) : null) :\n"},{"path":"./jquery-data/1.2.2/src/core.js","lines":[1247,1350],"code":"\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar ret = jQuery.map( this, fn );\n\n\t\tif ( selector && typeof selector == \"string\" )\n\t\t\tret = jQuery.multiFilter( selector, ret );\n\n\t\treturn this.pushStack( jQuery.unique( ret ) );\n\t};\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function(name, original){\n\tjQuery.fn[ name ] = function() {\n\t\tvar args = arguments;\n\n\t\treturn this.each(function(){\n\t\t\tfor ( var i = 0, length = args.length; i < length; i++ )\n\t\t\t\tjQuery( args[ i ] )[ original ]( this );\n\t\t});\n\t};\n});\n\njQuery.each({\n\tremoveAttr: function( name ) {\n\t\tjQuery.attr( this, name, \"\" );\n\t\tif (this.nodeType == 1) \n\t\t\tthis.removeAttribute( name );\n\t},\n\n\taddClass: function( classNames ) {\n\t\tjQuery.className.add( this, classNames );\n\t},\n\n\tremoveClass: function( classNames ) {\n\t\tjQuery.className.remove( this, classNames );\n\t},\n\n\ttoggleClass: function( classNames ) {\n\t\tjQuery.className[ jQuery.className.has( this, classNames ) ? \"remove\" : \"add\" ]( this, classNames );\n\t},\n\n\tremove: function( selector ) {\n\t\tif ( !selector || jQuery.filter( selector, [ this ] ).r.length ) {\n\t\t\t// Prevent memory leaks\n\t\t\tjQuery( \"*\", this ).add(this).each(function(){\n\t\t\t\tjQuery.event.remove(this);\n\t\t\t\tjQuery.removeData(this);\n\t\t\t});\n\t\t\tif (this.parentNode)\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t}\n\t},\n\n\tempty: function() {\n\t\t// Remove element nodes and prevent memory leaks\n\t\tjQuery( \">*\", this ).remove();\n\t\t\n\t\t// Remove any remaining nodes\n\t\twhile ( this.firstChild )\n\t\t\tthis.removeChild( this.firstChild );\n\t}\n}, function(name, fn){\n\tjQuery.fn[ name ] = function(){\n\t\treturn this.each( fn, arguments );\n\t};\n});\n\njQuery.each([ \"Height\", \"Width\" ], function(i, name){\n\tvar type = name.toLowerCase();\n\t\n\tjQuery.fn[ type ] = function( size ) {\n\t\t// Get window width or height\n\t\treturn this[0] == window ?\n\t\t\t// Opera reports document.body.client[Width/Height] properly in both quirks and standards\n\t\t\tjQuery.browser.opera && document.body[ \"client\" + name ] || \n\t\t\t\n\t\t\t// Safari reports inner[Width/Height] just fine (Mozilla and Opera include scroll bar widths)\n\t\t\tjQuery.browser.safari && window[ \"inner\" + name ] ||\n\t\t\t\n\t\t\t// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode\n\t\t\tdocument.compatMode == \"CSS1Compat\" && document.documentElement[ \"client\" + name ] || document.body[ \"client\" + name ] :\n\t\t\n\t\t\t// Get document width or height\n\t\t\tthis[0] == document ?\n\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height], whichever is greater\n\t\t\t\tMath.max( \n\t\t\t\t\tMath.max(document.body[\"scroll\" + name], document.documentElement[\"scroll\" + name]), \n\t\t\t\t\tMath.max(document.body[\"offset\" + name], document.documentElement[\"offset\" + name]) \n\t\t\t\t) :\n\n\t\t\t\t// Get or set width or height on the element\n\t\t\t\tsize == undefined ?\n\t\t\t\t\t// Get width or height on the element\n\t\t\t\t\t(this.length ? jQuery.css( this[0], type ) : null) :\n"}]},
{"id":"83358ddac62d71aa922a321699a3ba4217c9d589","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[8,102],"code":"// Bind an event to an element\n// Original by Dean Edwards\nadd: function(elem, types, handler, data) {\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn;\n\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && elem.setInterval )\n\t\telem = window;\n\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\n\t// if data is passed, bind to handler\n\tif( data != undefined ) {\n\t\t// Create temporary function pointer to original handler\n\t\tvar fn = handler;\n\n\t\t// Create unique handler function, wrapped around original handler\n\t\thandler = this.proxy( fn, function() {\n\t\t\t// Pass arguments and context to original handler\n\t\t\treturn fn.apply(this, arguments);\n\t\t});\n\n\t\t// Store data in unique handler\n\t\thandler.data = data;\n\t}\n\n\t// Init the element's event structure\n\tvar events = jQuery.data(elem, \"events\") || jQuery.data(elem, \"events\", {}),\n\t\thandle = jQuery.data(elem, \"handle\") || jQuery.data(elem, \"handle\", function(){\n\t\t\t// Handle the second event of a trigger and when\n\t\t\t// an event is called after a page has unloaded\n\t\t\tif ( typeof jQuery != \"undefined\" && !jQuery.event.triggered )\n\t\t\t\treturn jQuery.event.handle.apply(arguments.callee.elem, arguments);\n\t\t});\n\t// Add elem as a property of the handle function\n\t// This is to prevent a memory leak with non-native\n\t// event in IE.\n\thandle.elem = elem;\n\n\t// Handle multiple events separated by a space\n\t// jQuery(...).bind(\"mouseover mouseout\", fn);\n\tjQuery.each(types.split(/\\s+/), function(index, type) {\n\t\t// Namespaced event handlers\n\t\tvar parts = type.split(\".\");\n\t\ttype = parts[0];\n\t\thandler.type = parts[1];\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = events[type];\n\n\t\t// Init the event handler queue\n\t\tif (!handlers) {\n\t\t\thandlers = events[type] = {};\n\n\t\t\t// Check for a special event handler\n\t\t\t// Only use addEventListener/attachEvent if the special\n\t\t\t// events handler returns false\n\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].setup.call(elem) === false ) {\n\t\t\t\t// Bind the global event handler to the element\n\t\t\t\tif (elem.addEventListener)\n\t\t\t\t\telem.addEventListener(type, handle, false);\n\t\t\t\telse if (elem.attachEvent)\n\t\t\t\t\telem.attachEvent(\"on\" + type, handle);\n\t\t\t}\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// Keep track of which events have been used, for global triggering\n\t\tjQuery.event.global[type] = true;\n\t});\n\n\t// Nullify elem to prevent memory leaks in IE\n\telem = null;\n},\n\nguid: 1,\nglobal: {},\n\n// Detach an event or set of events from an element\nremove: function(elem, types, handler) {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn;\n\n\tvar events = jQuery.data(elem, \"events\"), ret, index;\n\n\tif ( events ) {\n\t\t// Unbind all events for the element\n\t\tif ( types == undefined || (typeof types == \"string\" && types.charAt(0) == \".\") )"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[8,112],"code":"// Bind an event to an element\n// Original by Dean Edwards\nadd: function(elem, types, handler, data) {\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn;\n\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && elem.setInterval != undefined )\n\t\telem = window;\n\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\t\t\n\t// if data is passed, bind to handler \n\tif( data != undefined ) { \n\t\t// Create temporary function pointer to original handler \n\t\tvar fn = handler; \n\n\t\t// Create unique handler function, wrapped around original handler \n\t\thandler = function() { \n\t\t\t// Pass arguments and context to original handler \n\t\t\treturn fn.apply(this, arguments); \n\t\t};\n\n\t\t// Store data in unique handler \n\t\thandler.data = data;\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed \n\t\thandler.guid = fn.guid;\n\t}\n\n\t// Init the element's event structure\n\tvar events = jQuery.data(elem, \"events\") || jQuery.data(elem, \"events\", {}),\n\t\thandle = jQuery.data(elem, \"handle\") || jQuery.data(elem, \"handle\", function(){\n\t\t\t// returned undefined or false\n\t\t\tvar val;\n\n\t\t\t// Handle the second event of a trigger and when\n\t\t\t// an event is called after a page has unloaded\n\t\t\tif ( typeof jQuery == \"undefined\" || jQuery.event.triggered )\n\t\t\t\treturn val;\n\t\n\t\t\tval = jQuery.event.handle.apply(arguments.callee.elem, arguments);\n\t\n\t\t\treturn val;\n\t\t});\n\t// Add elem as a property of the handle function\n\t// This is to prevent a memory leak with non-native\n\t// event in IE.\n\thandle.elem = elem;\n\t\t\n\t\t// Handle multiple events seperated by a space\n\t\t// jQuery(...).bind(\"mouseover mouseout\", fn);\n\t\tjQuery.each(types.split(/\\s+/), function(index, type) {\n\t\t\t// Namespaced event handlers\n\t\t\tvar parts = type.split(\".\");\n\t\t\ttype = parts[0];\n\t\t\thandler.type = parts[1];\n\n\t\t\t// Get the current list of functions bound to this event\n\t\t\tvar handlers = events[type];\n\n\t\t\t// Init the event handler queue\n\t\t\tif (!handlers) {\n\t\t\t\thandlers = events[type] = {};\n\t\n\t\t\t\t// Check for a special event handler\n\t\t\t\t// Only use addEventListener/attachEvent if the special\n\t\t\t\t// events handler returns false\n\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].setup.call(elem) === false ) {\n\t\t\t\t\t// Bind the global event handler to the element\n\t\t\t\t\tif (elem.addEventListener)\n\t\t\t\t\t\telem.addEventListener(type, handle, false);\n\t\t\t\t\telse if (elem.attachEvent)\n\t\t\t\t\t\telem.attachEvent(\"on\" + type, handle);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add the function to the element's handler list\n\t\t\thandlers[handler.guid] = handler;\n\n\t\t\t// Keep track of which events have been used, for global triggering\n\t\t\tjQuery.event.global[type] = true;\n\t\t});\n\t\n\t// Nullify elem to prevent memory leaks in IE\n\telem = null;\n},\n\nguid: 1,\nglobal: {},\n\n// Detach an event or set of events from an element\nremove: function(elem, types, handler) {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn;\n"}]},
{"id":"0490ab06272a38844f87e7f2e1a6fb35737f077c","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[105,129],"code":"else {\n\t// types is actually an event object here\n\tif ( types.type ) {\n\t\thandler = types.handler;\n\t\ttypes = types.type;\n\t}\n\n\t// Handle multiple events seperated by a space\n\t// jQuery(...).unbind(\"mouseover mouseout\", fn);\n\tjQuery.each(types.split(/\\s+/), function(index, type){\n\t\t// Namespaced event handlers\n\t\tvar parts = type.split(\".\");\n\t\ttype = parts[0];\n\n\t\tif ( events[type] ) {\n\t\t\t// remove the given handler for the given type\n\t\t\tif ( handler )\n\t\t\t\tdelete events[type][handler.guid];\n\n\t\t\t// remove all handlers for the given type\n\t\t\telse\n\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\tdelete events[type][handler];"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[115,139],"code":"else {\n\t// types is actually an event object here\n\tif ( types.type ) {\n\t\thandler = types.handler;\n\t\ttypes = types.type;\n\t}\n\t\n\t// Handle multiple events seperated by a space\n\t// jQuery(...).unbind(\"mouseover mouseout\", fn);\n\tjQuery.each(types.split(/\\s+/), function(index, type){\n\t\t// Namespaced event handlers\n\t\tvar parts = type.split(\".\");\n\t\ttype = parts[0];\n\t\t\n\t\tif ( events[type] ) {\n\t\t\t// remove the given handler for the given type\n\t\t\tif ( handler )\n\t\t\t\tdelete events[type][handler.guid];\n\n\t\t\t// remove all handlers for the given type\n\t\t\telse\n\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\tdelete events[type][handler];"}]},
{"id":"3649d82634b703c1d3fd0e7951682f9ab3007718","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[92,160],"code":"// Detach an event or set of events from an element\nremove: function(elem, types, handler) {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn;\n\n\tvar events = jQuery.data(elem, \"events\"), ret, index;\n\n\tif ( events ) {\n\t\t// Unbind all events for the element\n\t\tif ( types == undefined || (typeof types == \"string\" && types.charAt(0) == \".\") )\n\t\t\tfor ( var type in events )\n\t\t\t\tthis.remove( elem, type + (types || \"\") );\n\t\telse {\n\t\t\t// types is actually an event object here\n\t\t\tif ( types.type ) {\n\t\t\t\thandler = types.handler;\n\t\t\t\ttypes = types.type;\n\t\t\t}\n\n\t\t\t// Handle multiple events seperated by a space\n\t\t\t// jQuery(...).unbind(\"mouseover mouseout\", fn);\n\t\t\tjQuery.each(types.split(/\\s+/), function(index, type){\n\t\t\t\t// Namespaced event handlers\n\t\t\t\tvar parts = type.split(\".\");\n\t\t\t\ttype = parts[0];\n\n\t\t\t\tif ( events[type] ) {\n\t\t\t\t\t// remove the given handler for the given type\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete events[type][handler.guid];\n\n\t\t\t\t\t// remove all handlers for the given type\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\t\t\tdelete events[type][handler];\n\n\t\t\t\t\t// remove generic event handler if no more handlers exist\n\t\t\t\t\tfor ( ret in events[type] ) break;\n\t\t\t\t\tif ( !ret ) {\n\t\t\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].teardown.call(elem) === false ) {\n\t\t\t\t\t\t\tif (elem.removeEventListener)\n\t\t\t\t\t\t\t\telem.removeEventListener(type, jQuery.data(elem, \"handle\"), false);\n\t\t\t\t\t\t\telse if (elem.detachEvent)\n\t\t\t\t\t\t\t\telem.detachEvent(\"on\" + type, jQuery.data(elem, \"handle\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret = null;\n\t\t\t\t\t\tdelete events[type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tfor ( ret in events ) break;\n\t\tif ( !ret ) {\n\t\t\tvar handle = jQuery.data( elem, \"handle\" );\n\t\t\tif ( handle ) handle.elem = null;\n\t\t\tjQuery.removeData( elem, \"events\" );\n\t\t\tjQuery.removeData( elem, \"handle\" );\n\t\t}\n\t}\n},\n\ntrigger: function(type, data, elem, donative, extra) {\n\t// Clone the incoming data, if any\n\tdata = jQuery.makeArray(data);"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[102,170],"code":"// Detach an event or set of events from an element\nremove: function(elem, types, handler) {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn;\n\n\tvar events = jQuery.data(elem, \"events\"), ret, index;\n\n\tif ( events ) {\n\t\t// Unbind all events for the element\n\t\tif ( types == undefined )\n\t\t\tfor ( var type in events )\n\t\t\t\tthis.remove( elem, type );\n\t\telse {\n\t\t\t// types is actually an event object here\n\t\t\tif ( types.type ) {\n\t\t\t\thandler = types.handler;\n\t\t\t\ttypes = types.type;\n\t\t\t}\n\t\t\t\n\t\t\t// Handle multiple events seperated by a space\n\t\t\t// jQuery(...).unbind(\"mouseover mouseout\", fn);\n\t\t\tjQuery.each(types.split(/\\s+/), function(index, type){\n\t\t\t\t// Namespaced event handlers\n\t\t\t\tvar parts = type.split(\".\");\n\t\t\t\ttype = parts[0];\n\t\t\t\t\n\t\t\t\tif ( events[type] ) {\n\t\t\t\t\t// remove the given handler for the given type\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete events[type][handler.guid];\n\t\t\n\t\t\t\t\t// remove all handlers for the given type\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( handler in events[type] )\n\t\t\t\t\t\t\t// Handle the removal of namespaced events\n\t\t\t\t\t\t\tif ( !parts[1] || events[type][handler].type == parts[1] )\n\t\t\t\t\t\t\t\tdelete events[type][handler];\n\n\t\t\t\t\t// remove generic event handler if no more handlers exist\n\t\t\t\t\tfor ( ret in events[type] ) break;\n\t\t\t\t\tif ( !ret ) {\n\t\t\t\t\t\tif ( !jQuery.event.special[type] || jQuery.event.special[type].teardown.call(elem) === false ) {\n\t\t\t\t\t\t\tif (elem.removeEventListener)\n\t\t\t\t\t\t\t\telem.removeEventListener(type, jQuery.data(elem, \"handle\"), false);\n\t\t\t\t\t\t\telse if (elem.detachEvent)\n\t\t\t\t\t\t\t\telem.detachEvent(\"on\" + type, jQuery.data(elem, \"handle\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret = null;\n\t\t\t\t\t\tdelete events[type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tfor ( ret in events ) break;\n\t\tif ( !ret ) {\n\t\t\tvar handle = jQuery.data( elem, \"handle\" );\n\t\t\tif ( handle ) handle.elem = null;\n\t\t\tjQuery.removeData( elem, \"events\" );\n\t\t\tjQuery.removeData( elem, \"handle\" );\n\t\t}\n\t}\n},\n\ntrigger: function(type, data, elem, donative, extra) {\n\t// Clone the incoming data, if any\n\tdata = jQuery.makeArray(data || []);"}]},
{"id":"aae4609ec275888e1134da32d20f469c06fbd483","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[168,184],"code":"if ( !elem ) {\n\t// Only trigger if we've ever bound an event for it\n\tif ( this.global[type] )\n\t\tjQuery(\"*\").add([window, document]).trigger(type, data);\n\n// Handle triggering a single element\n} else {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn undefined;\n\n\tvar val, ret, fn = jQuery.isFunction( elem[ type ] || null ),\n\t\t// Check to see if we need to provide a fake event, or not\n\t\tevent = !data[0] || !data[0].preventDefault;\n\n\t// Pass along a fake event\n\tif ( event ) {"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[173,189],"code":"if ( !elem ) {\n\t// Only trigger if we've ever bound an event for it\n\tif ( this.global[type] )\n\t\tjQuery(\"*\").add([window, document]).trigger(type, data);\n\n// Handle triggering a single element\n} else {\n\t// don't do events on text and comment nodes\n\tif ( elem.nodeType == 3 || elem.nodeType == 8 )\n\t\treturn undefined;\n\n\tvar val, ret, fn = jQuery.isFunction( elem[ type ] || null ),\n\t\t// Check to see if we need to provide a fake event, or not\n\t\tevent = !data[0] || !data[0].preventDefault;\n\t\n\t// Pass along a fake event\n\tif ( event )"}]},
{"id":"11448dc7a5734bb95bb550053db862184642433e","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[312,347],"code":"\t// Fix target property, if necessary\n\tif ( !event.target )\n\t\tevent.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either\n\n\t// check if target is a textnode (safari)\n\tif ( event.target.nodeType == 3 )\n\t\tevent.target = event.target.parentNode;\n\n\t// Add relatedTarget, if necessary\n\tif ( !event.relatedTarget && event.fromElement )\n\t\tevent.relatedTarget = event.fromElement == event.target ? event.toElement : event.fromElement;\n\n\t// Calculate pageX/Y if missing and clientX/Y available\n\tif ( event.pageX == null && event.clientX != null ) {\n\t\tvar doc = document.documentElement, body = document.body;\n\t\tevent.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc.clientLeft || 0);\n\t\tevent.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc.clientTop || 0);\n\t}\n\n\t// Add which for key events\n\tif ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) )\n\t\tevent.which = event.charCode || event.keyCode;\n\n\t// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)\n\tif ( !event.metaKey && event.ctrlKey )\n\t\tevent.metaKey = event.ctrlKey;\n\n\t// Add which for click: 1 == left; 2 == middle; 3 == right\n\t// Note: button is not normalized, so don't use it\n\tif ( !event.which && event.button )\n\t\tevent.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\n\n\treturn event;\n},\n\nproxy: function( fn, proxy ){"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[297,332],"code":"\t// Fix target property, if necessary\n\tif ( !event.target )\n\t\tevent.target = event.srcElement || document; // Fixes #1925 where srcElement might not be defined either\n\t\t\t\n\t// check if target is a textnode (safari)\n\tif ( event.target.nodeType == 3 )\n\t\tevent.target = originalEvent.target.parentNode;\n\n\t// Add relatedTarget, if necessary\n\tif ( !event.relatedTarget && event.fromElement )\n\t\tevent.relatedTarget = event.fromElement == event.target ? event.toElement : event.fromElement;\n\n\t// Calculate pageX/Y if missing and clientX/Y available\n\tif ( event.pageX == null && event.clientX != null ) {\n\t\tvar doc = document.documentElement, body = document.body;\n\t\tevent.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc.clientLeft || 0);\n\t\tevent.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc.clientTop || 0);\n\t}\n\t\t\n\t// Add which for key events\n\tif ( !event.which && ((event.charCode || event.charCode === 0) ? event.charCode : event.keyCode) )\n\t\tevent.which = event.charCode || event.keyCode;\n\t\n\t// Add metaKey to non-Mac browsers (use ctrl for PC's and Meta for Macs)\n\tif ( !event.metaKey && event.ctrlKey )\n\t\tevent.metaKey = event.ctrlKey;\n\n\t// Add which for click: 1 == left; 2 == middle; 3 == right\n\t// Note: button is not normalized, so don't use it\n\tif ( !event.which && event.button )\n\t\tevent.which = (event.button & 1 ? 1 : ( event.button & 2 ? 3 : ( event.button & 4 ? 2 : 0 ) ));\n\t\t\n\treturn event;\n},\n\nspecial: {"}]},
{"id":"b0dfd91f5983ab30f788b2968ccaf57318e76884","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[404,418],"code":"\t\t\t\tevent.type = \"mouseleave\";\n\t\t\t\treturn jQuery.event.handle.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\tbind: function( type, data, fn ) {\n\t\treturn type == \"unload\" ? this.one(type, data, fn) : this.each(function(){\n\t\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t\t});\n\t},\n\n\tone: function( type, data, fn ) {"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[382,396],"code":"\t\t\t\targuments[0].type = \"mouseleave\";\n\t\t\t\treturn jQuery.event.handle.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\tbind: function( type, data, fn ) {\n\t\treturn type == \"unload\" ? this.one(type, data, fn) : this.each(function(){\n\t\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t\t});\n\t},\n\t\n\tone: function( type, data, fn ) {"}]},
{"id":"e3519e67843918720aacde6ee8d0c32bc774c189","instances":[{"path":"./jquery-data/1.2.5/src/event.js","lines":[460,601],"code":"\t\t\treturn args[ this.lastToggle++ ].apply( this, arguments ) || false;\n\t\t}));\n\t},\n\n\thover: function(fnOver, fnOut) {\n\t\treturn this.bind('mouseenter', fnOver).bind('mouseleave', fnOut);\n\t},\n\n\tready: function(fn) {\n\t\t// Attach the listeners\n\t\tbindReady();\n\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tfn.call( document, jQuery );\n\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return fn.call(this, jQuery); } );\n\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\tisReady: false,\n\treadyList: [],\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.call( document );\n\t\t\t\t});\n\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\n\t\t\t// Trigger any bound ready events\n\t\t\tjQuery(document).triggerHandler(\"ready\");\n\t\t}\n\t}\n});\n\nvar readyBound = false;\n\nfunction bindReady(){\n\tif ( readyBound ) return;\n\treadyBound = true;\n\n\t// Mozilla, Opera (see further below for it) and webkit nightlies currently support this event\n\tif ( document.addEventListener && !jQuery.browser.opera)\n\t\t// Use the handy event callback\n\t\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n\t// If IE is used and is not in a frame\n\t// Continually check to see if the document is ready\n\tif ( jQuery.browser.msie && window == top ) (function(){\n\t\tif (jQuery.isReady) return;\n\t\ttry {\n\t\t\t// If IE is used, use the trick by Diego Perini\n\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\t\tdocument.documentElement.doScroll(\"left\");\n\t\t} catch( error ) {\n\t\t\tsetTimeout( arguments.callee, 0 );\n\t\t\treturn;\n\t\t}\n\t\t// and execute any waiting functions\n\t\tjQuery.ready();\n\t})();\n\n\tif ( jQuery.browser.opera )\n\t\tdocument.addEventListener( \"DOMContentLoaded\", function () {\n\t\t\tif (jQuery.isReady) return;\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t\tif (document.styleSheets[i].disabled) {\n\t\t\t\t\tsetTimeout( arguments.callee, 0 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}, false);\n\n\tif ( jQuery.browser.safari ) {\n\t\tvar numStyles;\n\t\t(function(){\n\t\t\tif (jQuery.isReady) return;\n\t\t\tif ( document.readyState != \"loaded\" && document.readyState != \"complete\" ) {\n\t\t\t\tsetTimeout( arguments.callee, 0 );\n\t\t\t\treturn;\n\t\t\t}"},{"path":"./jquery-data/1.2.2/src/event.js","lines":[435,576],"code":"\t\t\treturn args[this.lastToggle].apply( this, arguments ) || false;\n\t\t});\n\t},\n\n\thover: function(fnOver, fnOut) {\n\t\treturn this.bind('mouseenter', fnOver).bind('mouseleave', fnOut);\n\t},\n\t\n\tready: function(fn) {\n\t\t// Attach the listeners\n\t\tbindReady();\n\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tfn.call( document, jQuery );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return fn.call(this, jQuery); } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\tisReady: false,\n\treadyList: [],\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\n\t\t\t// Trigger any bound ready events\n\t\t\tjQuery(document).triggerHandler(\"ready\");\n\t\t}\n\t}\n});\n\nvar readyBound = false;\n\nfunction bindReady(){\n\tif ( readyBound ) return;\n\treadyBound = true;\n\n\t// Mozilla, Opera (see further below for it) and webkit nightlies currently support this event\n\tif ( document.addEventListener && !jQuery.browser.opera)\n\t\t// Use the handy event callback\n\t\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\n\t// If IE is used and is not in a frame\n\t// Continually check to see if the document is ready\n\tif ( jQuery.browser.msie && window == top ) (function(){\n\t\tif (jQuery.isReady) return;\n\t\ttry {\n\t\t\t// If IE is used, use the trick by Diego Perini\n\t\t\t// http://javascript.nwbox.com/IEContentLoaded/\n\t\t\tdocument.documentElement.doScroll(\"left\");\n\t\t} catch( error ) {\n\t\t\tsetTimeout( arguments.callee, 0 );\n\t\t\treturn;\n\t\t}\n\t\t// and execute any waiting functions\n\t\tjQuery.ready();\n\t})();\n\n\tif ( jQuery.browser.opera )\n\t\tdocument.addEventListener( \"DOMContentLoaded\", function () {\n\t\t\tif (jQuery.isReady) return;\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t\tif (document.styleSheets[i].disabled) {\n\t\t\t\t\tsetTimeout( arguments.callee, 0 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}, false);\n\n\tif ( jQuery.browser.safari ) {\n\t\tvar numStyles;\n\t\t(function(){\n\t\t\tif (jQuery.isReady) return;\n\t\t\tif ( document.readyState != \"loaded\" && document.readyState != \"complete\" ) {\n\t\t\t\tsetTimeout( arguments.callee, 0 );\n\t\t\t\treturn;\n\t\t\t}"}]},
{"id":"996b16c505081e76460979271f82b0b4819448bb","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[1,38],"code":"jQuery.fn.extend({\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock || \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" ) {\n\t\t\t\t\tvar elem = jQuery(\"<\" + this.tagName + \" />\").appendTo(\"body\");\n\t\t\t\t\tthis.style.display = elem.css(\"display\");\n\t\t\t\t\t// handle an edge condition where css is - div { display:none; } or similar\n\t\t\t\t\tif (this.style.display == \"none\")\n\t\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t\t\telem.remove();\n\t\t\t\t}\n\t\t\t}).end();\n\t},\n\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\n\ttoggle: function( fn, fn2 ){\n\t\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\t\tthis._toggle.apply( this, arguments ) :"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[1,38],"code":"jQuery.fn.extend({\n\tshow: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":hidden\").each(function(){\n\t\t\t\tthis.style.display = this.oldblock || \"\";\n\t\t\t\tif ( jQuery.css(this,\"display\") == \"none\" ) {\n\t\t\t\t\tvar elem = jQuery(\"<\" + this.tagName + \" />\").appendTo(\"body\");\n\t\t\t\t\tthis.style.display = elem.css(\"display\");\n\t\t\t\t\t// handle an edge condition where css is - div { display:none; } or similar\n\t\t\t\t\tif (this.style.display == \"none\")\n\t\t\t\t\t\tthis.style.display = \"block\";\n\t\t\t\t\telem.remove();\n\t\t\t\t}\n\t\t\t}).end();\n\t},\n\t\n\thide: function(speed,callback){\n\t\treturn speed ?\n\t\t\tthis.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tthis.filter(\":visible\").each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t}).end();\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\ttoggle: function( fn, fn2 ){\n\t\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\t\tthis._toggle( fn, fn2 ) :"}]},
{"id":"0fa7d76a3959f40974985e0607114779465820c4","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[84,183],"code":"\t\t\t\t\treturn opt.complete.call(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\topt.curAnim = jQuery.extend({}, prop);\n\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\n\t\t\t\tif ( /toggle|show|hide/.test(val) )\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t\telse {\n\t\t\t\t\tvar parts = val.toString().match(/^([+-]=)?([\\d+-.]+)(.*)$/),\n\t\t\t\t\t\tstart = e.cur(true) || 0;\n\n\t\t\t\t\tif ( parts ) {\n\t\t\t\t\t\tvar end = parseFloat(parts[2]),\n\t\t\t\t\t\t\tunit = parts[3] || \"px\";\n\n\t\t\t\t\t\t// We need to compute starting value\n\t\t\t\t\t\tif ( unit != \"px\" ) {\n\t\t\t\t\t\t\tself.style[ name ] = (end || 1) + unit;\n\t\t\t\t\t\t\tstart = ((end || 1) / e.cur(true)) * start;\n\t\t\t\t\t\t\tself.style[ name ] = start + unit;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\t\t\tif ( parts[1] )\n\t\t\t\t\t\t\tend = ((parts[1] == \"-=\" ? -1 : 1) * end) + start;\n\n\t\t\t\t\t\te.custom( start, end, unit );\n\t\t\t\t\t} else\n\t\t\t\t\t\te.custom( start, val, \"\" );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// For JS strict compliance\n\t\t\treturn true;\n\t\t});\n\t},\n\n\tqueue: function(type, fn){\n\t\tif ( jQuery.isFunction(type) || ( type && type.constructor == Array )) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\n\t\tif ( !type || (typeof type == \"string\" && !fn) )\n\t\t\treturn queue( this[0], type );\n\n\t\treturn this.each(function(){\n\t\t\tif ( fn.constructor == Array )\n\t\t\t\tqueue(this, type, fn);\n\t\t\telse {\n\t\t\t\tqueue(this, type).push( fn );\n\n\t\t\t\tif ( queue(this, type).length == 1 )\n\t\t\t\t\tfn.call(this);\n\t\t\t}\n\t\t});\n\t},\n\n\tstop: function(clearQueue, gotoEnd){\n\t\tvar timers = jQuery.timers;\n\n\t\tif (clearQueue)\n\t\t\tthis.queue([]);\n\n\t\tthis.each(function(){\n\t\t\t// go in reverse order so anything added to the queue during the loop is ignored\n\t\t\tfor ( var i = timers.length - 1; i >= 0; i-- )\n\t\t\t\tif ( timers[i].elem == this ) {\n\t\t\t\t\tif (gotoEnd)\n\t\t\t\t\t\t// force the next step to be the last\n\t\t\t\t\t\ttimers[i](true);\n\t\t\t\t\ttimers.splice(i, 1);\n\t\t\t\t}\n\t\t});\n\n\t\t// start the next in the queue if the last step wasn't forced\n\t\tif (!gotoEnd)\n\t\t\tthis.dequeue();\n\n\t\treturn this;\n\t}\n\n});\n\nvar queue = function( elem, type, array ) {\n\tif ( elem ){"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[84,183],"code":"\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\topt.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\n\t\t\t\tif ( /toggle|show|hide/.test(val) )\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t\telse {\n\t\t\t\t\tvar parts = val.toString().match(/^([+-]=)?([\\d+-.]+)(.*)$/),\n\t\t\t\t\t\tstart = e.cur(true) || 0;\n\n\t\t\t\t\tif ( parts ) {\n\t\t\t\t\t\tvar end = parseFloat(parts[2]),\n\t\t\t\t\t\t\tunit = parts[3] || \"px\";\n\n\t\t\t\t\t\t// We need to compute starting value\n\t\t\t\t\t\tif ( unit != \"px\" ) {\n\t\t\t\t\t\t\tself.style[ name ] = (end || 1) + unit;\n\t\t\t\t\t\t\tstart = ((end || 1) / e.cur(true)) * start;\n\t\t\t\t\t\t\tself.style[ name ] = start + unit;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\t\t\tif ( parts[1] )\n\t\t\t\t\t\t\tend = ((parts[1] == \"-=\" ? -1 : 1) * end) + start;\n\n\t\t\t\t\t\te.custom( start, end, unit );\n\t\t\t\t\t} else\n\t\t\t\t\t\te.custom( start, val, \"\" );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// For JS strict compliance\n\t\t\treturn true;\n\t\t});\n\t},\n\t\n\tqueue: function(type, fn){\n\t\tif ( jQuery.isFunction(type) || ( type && type.constructor == Array )) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\n\t\tif ( !type || (typeof type == \"string\" && !fn) )\n\t\t\treturn queue( this[0], type );\n\n\t\treturn this.each(function(){\n\t\t\tif ( fn.constructor == Array )\n\t\t\t\tqueue(this, type, fn);\n\t\t\telse {\n\t\t\t\tqueue(this, type).push( fn );\n\t\t\t\n\t\t\t\tif ( queue(this, type).length == 1 )\n\t\t\t\t\tfn.apply(this);\n\t\t\t}\n\t\t});\n\t},\n\n\tstop: function(clearQueue, gotoEnd){\n\t\tvar timers = jQuery.timers;\n\n\t\tif (clearQueue)\n\t\t\tthis.queue([]);\n\n\t\tthis.each(function(){\n\t\t\t// go in reverse order so anything added to the queue during the loop is ignored\n\t\t\tfor ( var i = timers.length - 1; i >= 0; i-- )\n\t\t\t\tif ( timers[i].elem == this ) {\n\t\t\t\t\tif (gotoEnd)\n\t\t\t\t\t\t// force the next step to be the last\n\t\t\t\t\t\ttimers[i](true);\n\t\t\t\t\ttimers.splice(i, 1);\n\t\t\t\t}\n\t\t});\n\n\t\t// start the next in the queue if the last step wasn't forced\n\t\tif (!gotoEnd)\n\t\t\tthis.dequeue();\n\n\t\treturn this;\n\t}\n\n});\n\nvar queue = function( elem, type, array ) {\n\tif ( !elem )"}]},
{"id":"9911b50c623e80b1488ce47433228cc509eb45c2","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[193,221],"code":"\treturn q;\n};\n\njQuery.fn.dequeue = function(type){\n\ttype = type || \"fx\";\n\n\treturn this.each(function(){\n\t\tvar q = queue(this, type);\n\n\t\tq.shift();\n\n\t\tif ( q.length )\n\t\t\tq[0].call( this );\n\t});\n};\n\njQuery.extend({\n\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing ||\n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ?\n\t\t\topt.duration :\n\t\t\tjQuery.fx.speeds[opt.duration]) || jQuery.fx.speeds.def;"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[194,222],"code":"\treturn q;\n};\n\njQuery.fn.dequeue = function(type){\n\ttype = type || \"fx\";\n\n\treturn this.each(function(){\n\t\tvar q = queue(this, type);\n\n\t\tq.shift();\n\n\t\tif ( q.length )\n\t\t\tq[0].apply( this );\n\t});\n};\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;"}]},
{"id":"4d216be80181022babd52222c42101eafed5e01d","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[260,283],"code":"// Simple function for setting a style value\nupdate: function(){\n\tif ( this.options.step )\n\t\tthis.options.step.call( this.elem, this.now, this );\n\n\t(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );\n\n\t// Set display property to block for height/width animations\n\tif ( this.prop == \"height\" || this.prop == \"width\" )\n\t\tthis.elem.style.display = \"block\";\n},\n\n// Get the current size\ncur: function(force){\n\tif ( this.elem[this.prop] != null && this.elem.style[this.prop] == null )\n\t\treturn this.elem[ this.prop ];\n\n\tvar r = parseFloat(jQuery.css(this.elem, this.prop, force));\n\treturn r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, this.prop)) || 0;\n},\n\n// Start an animation from one number to another\ncustom: function(from, to, unit){\n\tthis.startTime = now();"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[261,284],"code":"// Simple function for setting a style value\nupdate: function(){\n\tif ( this.options.step )\n\t\tthis.options.step.apply( this.elem, [ this.now, this ] );\n\n\t(jQuery.fx.step[this.prop] || jQuery.fx.step._default)( this );\n\n\t// Set display property to block for height/width animations\n\tif ( this.prop == \"height\" || this.prop == \"width\" )\n\t\tthis.elem.style.display = \"block\";\n},\n\n// Get the current size\ncur: function(force){\n\tif ( this.elem[this.prop] != null && this.elem.style[this.prop] == null )\n\t\treturn this.elem[ this.prop ];\n\n\tvar r = parseFloat(jQuery.css(this.elem, this.prop, force));\n\treturn r && r > -10000 ? r : parseFloat(jQuery.curCSS(this.elem, this.prop)) || 0;\n},\n\n// Start an animation from one number to another\ncustom: function(from, to, unit){\n\tthis.startTime = (new Date()).getTime();"}]},
{"id":"e1bcba418783b611b40c07fa0cc7ed6c416b93d2","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[281,346],"code":"// Start an animation from one number to another\ncustom: function(from, to, unit){\n\tthis.startTime = now();\n\tthis.start = from;\n\tthis.end = to;\n\tthis.unit = unit || this.unit || \"px\";\n\tthis.now = this.start;\n\tthis.pos = this.state = 0;\n\tthis.update();\n\n\tvar self = this;\n\tfunction t(gotoEnd){\n\t\treturn self.step(gotoEnd);\n\t}\n\n\tt.elem = this.elem;\n\n\tjQuery.timers.push(t);\n\n\tif ( jQuery.timerId == null ) {\n\t\tjQuery.timerId = setInterval(function(){\n\t\t\tvar timers = jQuery.timers;\n\n\t\t\tfor ( var i = 0; i < timers.length; i++ )\n\t\t\t\tif ( !timers[i]() )\n\t\t\t\t\ttimers.splice(i--, 1);\n\n\t\t\tif ( !timers.length ) {\n\t\t\t\tclearInterval( jQuery.timerId );\n\t\t\t\tjQuery.timerId = null;\n\t\t\t}\n\t\t}, 13);\n\t}\n},\n\n// Simple 'show' function\nshow: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.show = true;\n\n\t// Begin the animation\n\tthis.custom(0, this.cur());\n\n\t// Make sure that we start at a small width/height to avoid any\n\t// flash of content\n\tif ( this.prop == \"width\" || this.prop == \"height\" )\n\t\tthis.elem.style[this.prop] = \"1px\";\n\n\t// Start by showing the element\n\tjQuery(this.elem).show();\n},\n\n// Simple 'hide' function\nhide: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.hide = true;\n\n\t// Begin the animation\n\tthis.custom(this.cur(), 0);\n},\n\n// Each step of an animation\nstep: function(gotoEnd){\n\tvar t = now();"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[282,347],"code":"// Start an animation from one number to another\ncustom: function(from, to, unit){\n\tthis.startTime = (new Date()).getTime();\n\tthis.start = from;\n\tthis.end = to;\n\tthis.unit = unit || this.unit || \"px\";\n\tthis.now = this.start;\n\tthis.pos = this.state = 0;\n\tthis.update();\n\n\tvar self = this;\n\tfunction t(gotoEnd){\n\t\treturn self.step(gotoEnd);\n\t}\n\n\tt.elem = this.elem;\n\n\tjQuery.timers.push(t);\n\n\tif ( jQuery.timerId == null ) {\n\t\tjQuery.timerId = setInterval(function(){\n\t\t\tvar timers = jQuery.timers;\n\t\t\t\n\t\t\tfor ( var i = 0; i < timers.length; i++ )\n\t\t\t\tif ( !timers[i]() )\n\t\t\t\t\ttimers.splice(i--, 1);\n\n\t\t\tif ( !timers.length ) {\n\t\t\t\tclearInterval( jQuery.timerId );\n\t\t\t\tjQuery.timerId = null;\n\t\t\t}\n\t\t}, 13);\n\t}\n},\n\n// Simple 'show' function\nshow: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.show = true;\n\n\t// Begin the animation\n\tthis.custom(0, this.cur());\n\n\t// Make sure that we start at a small width/height to avoid any\n\t// flash of content\n\tif ( this.prop == \"width\" || this.prop == \"height\" )\n\t\tthis.elem.style[this.prop] = \"1px\";\n\t\n\t// Start by showing the element\n\tjQuery(this.elem).show();\n},\n\n// Simple 'hide' function\nhide: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.hide = true;\n\n\t// Begin the animation\n\tthis.custom(this.cur(), 0);\n},\n\n// Each step of an animation\nstep: function(gotoEnd){\n\tvar t = (new Date()).getTime();"}]},
{"id":"7f5310d796f26a7c83bdf1236a918a55e69b685c","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[346,381],"code":"var t = now();\n\nif ( gotoEnd || t > this.options.duration + this.startTime ) {\n\tthis.now = this.end;\n\tthis.pos = this.state = 1;\n\tthis.update();\n\n\tthis.options.curAnim[ this.prop ] = true;\n\n\tvar done = true;\n\tfor ( var i in this.options.curAnim )\n\t\tif ( this.options.curAnim[i] !== true )\n\t\t\tdone = false;\n\n\tif ( done ) {\n\t\tif ( this.options.display != null ) {\n\t\t\t// Reset the overflow\n\t\t\tthis.elem.style.overflow = this.options.overflow;\n\n\t\t\t// Reset the display\n\t\t\tthis.elem.style.display = this.options.display;\n\t\t\tif ( jQuery.css(this.elem, \"display\") == \"none\" )\n\t\t\t\tthis.elem.style.display = \"block\";\n\t\t}\n\n\t\t// Hide the element if the \"hide\" operation was done\n\t\tif ( this.options.hide )\n\t\t\tthis.elem.style.display = \"none\";\n\n\t\t// Reset the properties, if the item has been hidden or shown\n\t\tif ( this.options.hide || this.options.show )\n\t\t\tfor ( var p in this.options.curAnim )\n\t\t\t\tjQuery.attr(this.elem.style, p, this.options.orig[p]);\n\t}\n\n\tif ( done )"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[347,383],"code":"var t = (new Date()).getTime();\n\nif ( gotoEnd || t > this.options.duration + this.startTime ) {\n\tthis.now = this.end;\n\tthis.pos = this.state = 1;\n\tthis.update();\n\n\tthis.options.curAnim[ this.prop ] = true;\n\n\tvar done = true;\n\tfor ( var i in this.options.curAnim )\n\t\tif ( this.options.curAnim[i] !== true )\n\t\t\tdone = false;\n\n\tif ( done ) {\n\t\tif ( this.options.display != null ) {\n\t\t\t// Reset the overflow\n\t\t\tthis.elem.style.overflow = this.options.overflow;\n\t\t\n\t\t\t// Reset the display\n\t\t\tthis.elem.style.display = this.options.display;\n\t\t\tif ( jQuery.css(this.elem, \"display\") == \"none\" )\n\t\t\t\tthis.elem.style.display = \"block\";\n\t\t}\n\n\t\t// Hide the element if the \"hide\" operation was done\n\t\tif ( this.options.hide )\n\t\t\tthis.elem.style.display = \"none\";\n\n\t\t// Reset the properties, if the item has been hidden or shown\n\t\tif ( this.options.hide || this.options.show )\n\t\t\tfor ( var p in this.options.curAnim )\n\t\t\t\tjQuery.attr(this.elem.style, p, this.options.orig[p]);\n\t}\n\n\t// If a callback was provided, execute it\n\tif ( done && jQuery.isFunction( this.options.complete ) )"}]},
{"id":"04e63446d8f241eded82f1cc5bae053305ff5bdd","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[344,403],"code":"\t// Each step of an animation\n\tstep: function(gotoEnd){\n\t\tvar t = now();\n\n\t\tif ( gotoEnd || t > this.options.duration + this.startTime ) {\n\t\t\tthis.now = this.end;\n\t\t\tthis.pos = this.state = 1;\n\t\t\tthis.update();\n\n\t\t\tthis.options.curAnim[ this.prop ] = true;\n\n\t\t\tvar done = true;\n\t\t\tfor ( var i in this.options.curAnim )\n\t\t\t\tif ( this.options.curAnim[i] !== true )\n\t\t\t\t\tdone = false;\n\n\t\t\tif ( done ) {\n\t\t\t\tif ( this.options.display != null ) {\n\t\t\t\t\t// Reset the overflow\n\t\t\t\t\tthis.elem.style.overflow = this.options.overflow;\n\n\t\t\t\t\t// Reset the display\n\t\t\t\t\tthis.elem.style.display = this.options.display;\n\t\t\t\t\tif ( jQuery.css(this.elem, \"display\") == \"none\" )\n\t\t\t\t\t\tthis.elem.style.display = \"block\";\n\t\t\t\t}\n\n\t\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\t\tif ( this.options.hide )\n\t\t\t\t\tthis.elem.style.display = \"none\";\n\n\t\t\t\t// Reset the properties, if the item has been hidden or shown\n\t\t\t\tif ( this.options.hide || this.options.show )\n\t\t\t\t\tfor ( var p in this.options.curAnim )\n\t\t\t\t\t\tjQuery.attr(this.elem.style, p, this.options.orig[p]);\n\t\t\t}\n\n\t\t\tif ( done )\n\t\t\t\t// Execute the complete function\n\t\t\t\tthis.options.complete.call( this.elem );\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar n = t - this.startTime;\n\t\t\tthis.state = n / this.options.duration;\n\n\t\t\t// Perform the easing function, defaults to swing\n\t\t\tthis.pos = jQuery.easing[this.options.easing || (jQuery.easing.swing ? \"swing\" : \"linear\")](this.state, n, 0, 1, this.options.duration);\n\t\t\tthis.now = this.start + ((this.end - this.start) * this.pos);\n\n\t\t\t// Perform the next step of the animation\n\t\t\tthis.update();\n\t\t}\n\n\t\treturn true;\n\t}\n\n};\n\njQuery.extend( jQuery.fx, {"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[345,405],"code":"\t// Each step of an animation\n\tstep: function(gotoEnd){\n\t\tvar t = (new Date()).getTime();\n\n\t\tif ( gotoEnd || t > this.options.duration + this.startTime ) {\n\t\t\tthis.now = this.end;\n\t\t\tthis.pos = this.state = 1;\n\t\t\tthis.update();\n\n\t\t\tthis.options.curAnim[ this.prop ] = true;\n\n\t\t\tvar done = true;\n\t\t\tfor ( var i in this.options.curAnim )\n\t\t\t\tif ( this.options.curAnim[i] !== true )\n\t\t\t\t\tdone = false;\n\n\t\t\tif ( done ) {\n\t\t\t\tif ( this.options.display != null ) {\n\t\t\t\t\t// Reset the overflow\n\t\t\t\t\tthis.elem.style.overflow = this.options.overflow;\n\t\t\t\t\n\t\t\t\t\t// Reset the display\n\t\t\t\t\tthis.elem.style.display = this.options.display;\n\t\t\t\t\tif ( jQuery.css(this.elem, \"display\") == \"none\" )\n\t\t\t\t\t\tthis.elem.style.display = \"block\";\n\t\t\t\t}\n\n\t\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\t\tif ( this.options.hide )\n\t\t\t\t\tthis.elem.style.display = \"none\";\n\n\t\t\t\t// Reset the properties, if the item has been hidden or shown\n\t\t\t\tif ( this.options.hide || this.options.show )\n\t\t\t\t\tfor ( var p in this.options.curAnim )\n\t\t\t\t\t\tjQuery.attr(this.elem.style, p, this.options.orig[p]);\n\t\t\t}\n\n\t\t\t// If a callback was provided, execute it\n\t\t\tif ( done && jQuery.isFunction( this.options.complete ) )\n\t\t\t\t// Execute the complete function\n\t\t\t\tthis.options.complete.apply( this.elem );\n\n\t\t\treturn false;\n\t\t} else {\n\t\t\tvar n = t - this.startTime;\n\t\t\tthis.state = n / this.options.duration;\n\n\t\t\t// Perform the easing function, defaults to swing\n\t\t\tthis.pos = jQuery.easing[this.options.easing || (jQuery.easing.swing ? \"swing\" : \"linear\")](this.state, n, 0, 1, this.options.duration);\n\t\t\tthis.now = this.start + ((this.end - this.start) * this.pos);\n\n\t\t\t// Perform the next step of the animation\n\t\t\tthis.update();\n\t\t}\n\n\t\treturn true;\n\t}\n\n};\n\njQuery.fx.step = {"}]},
{"id":"7382b95a174ae1daafa7747ce0b064fe415e438b","instances":[{"path":"./jquery-data/1.2.5/src/fx.js","lines":[410,426],"code":"step: {\n\tscrollLeft: function(fx){\n\t\tfx.elem.scrollLeft = fx.now;\n\t},\n\n\tscrollTop: function(fx){\n\t\tfx.elem.scrollTop = fx.now;\n\t},\n\n\topacity: function(fx){\n\t\tjQuery.attr(fx.elem.style, \"opacity\", fx.now);\n\t},\n\n\t_default: function(fx){\n\t\tfx.elem.style[ fx.prop ] = fx.now + fx.unit;\n\t}\n}"},{"path":"./jquery-data/1.2.2/src/fx.js","lines":[405,421],"code":"jQuery.fx.step = {\n\tscrollLeft: function(fx){\n\t\tfx.elem.scrollLeft = fx.now;\n\t},\n\n\tscrollTop: function(fx){\n\t\tfx.elem.scrollTop = fx.now;\n\t},\n\n\topacity: function(fx){\n\t\tjQuery.attr(fx.elem.style, \"opacity\", fx.now);\n\t},\n\n\t_default: function(fx){\n\t\tfx.elem.style[ fx.prop ] = fx.now + fx.unit;\n\t}\n};"}]},
{"id":"606d4ba543c67c24c9f0f15f20b6301045de1c4a","instances":[{"path":"./jquery-data/1.2.5/src/offset.js","lines":[1,12],"code":"// The Offset Method\n// Originally By Brandon Aaron, part of the Dimension Plugin\n// http://jquery.com/plugins/project/dimensions\njQuery.fn.offset = function() {\n\tvar left = 0, top = 0, elem = this[0], results;\n\n\tif ( elem ) with ( jQuery.browser ) {\n\t\tvar parent       = elem.parentNode,\n\t\t    offsetChild  = elem,\n\t\t    offsetParent = elem.offsetParent,\n\t\t    doc          = elem.ownerDocument,\n\t\t    safari2      = safari && parseInt(version) < 522 && !/adobeair/i.test(userAgent),"},{"path":"./jquery-data/1.2.2/src/offset.js","lines":[1,12],"code":"// The Offset Method\n// Originally By Brandon Aaron, part of the Dimension Plugin\n// http://jquery.com/plugins/project/dimensions\njQuery.fn.offset = function() {\n\tvar left = 0, top = 0, elem = this[0], results;\n\t\n\tif ( elem ) with ( jQuery.browser ) {\n\t\tvar parent       = elem.parentNode, \n\t\t    offsetChild  = elem,\n\t\t    offsetParent = elem.offsetParent, \n\t\t    doc          = elem.ownerDocument,\n\t\t    safari2      = safari && parseInt(version) < 522,"}]},
{"id":"7c40a105c5c0365f109b29a885a8032ffee154a6","instances":[{"path":"./jquery-data/1.2.5/src/offset.js","lines":[14,49],"code":"    fixed        = css(elem, \"position\") == \"fixed\";\n\n// Use getBoundingClientRect if available\nif ( elem.getBoundingClientRect ) {\n\tvar box = elem.getBoundingClientRect();\n\n\t// Add the document scroll offsets\n\tadd(box.left + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\n\t\tbox.top  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\n\n\t// IE adds the HTML element's border, by default it is medium which is 2px\n\t// IE 6 and 7 quirks mode the border width is overwritable by the following css html { border: 0; }\n\t// IE 7 standards mode, the border is always 2px\n\t// This border/offset is typically represented by the clientLeft and clientTop properties\n\t// However, in IE6 and 7 quirks mode the clientLeft and clientTop properties are not updated when overwriting it via CSS\n\t// Therefore this method will be off by 2px in IE while in quirksmode\n\tadd( -doc.documentElement.clientLeft, -doc.documentElement.clientTop );\n\n// Otherwise loop through the offsetParents and parentNodes\n} else {\n\n\t// Initial element offsets\n\tadd( elem.offsetLeft, elem.offsetTop );\n\n\t// Get parent offsets\n\twhile ( offsetParent ) {\n\t\t// Add offsetParent offsets\n\t\tadd( offsetParent.offsetLeft, offsetParent.offsetTop );\n\n\t\t// Mozilla and Safari > 2 does not include the border on offset parents\n\t\t// However Mozilla adds the border for table or table cells\n\t\tif ( mozilla && !/^t(able|d|h)$/i.test(offsetParent.tagName) || safari && !safari2 )\n\t\t\tborder( offsetParent );\n\n\t\t// Add the document scroll offsets if position is fixed on any offsetParent\n\t\tif ( !fixed && css(offsetParent, \"position\") == \"fixed\" )"},{"path":"./jquery-data/1.2.2/src/offset.js","lines":[13,48],"code":"    fixed        = jQuery.css(elem, \"position\") == \"fixed\";\n\t\n// Use getBoundingClientRect if available\nif ( elem.getBoundingClientRect ) {\n\tvar box = elem.getBoundingClientRect();\n\n\t// Add the document scroll offsets\n\tadd(box.left + Math.max(doc.documentElement.scrollLeft, doc.body.scrollLeft),\n\t\tbox.top  + Math.max(doc.documentElement.scrollTop,  doc.body.scrollTop));\n\n\t// IE adds the HTML element's border, by default it is medium which is 2px\n\t// IE 6 and 7 quirks mode the border width is overwritable by the following css html { border: 0; }\n\t// IE 7 standards mode, the border is always 2px\n\t// This border/offset is typically represented by the clientLeft and clientTop properties\n\t// However, in IE6 and 7 quirks mode the clientLeft and clientTop properties are not updated when overwriting it via CSS\n\t// Therefore this method will be off by 2px in IE while in quirksmode\n\tadd( -doc.documentElement.clientLeft, -doc.documentElement.clientTop );\n\t\n// Otherwise loop through the offsetParents and parentNodes\n} else {\n\n\t// Initial element offsets\n\tadd( elem.offsetLeft, elem.offsetTop );\n\t\n\t// Get parent offsets\n\twhile ( offsetParent ) {\n\t\t// Add offsetParent offsets\n\t\tadd( offsetParent.offsetLeft, offsetParent.offsetTop );\n\t\n\t\t// Mozilla and Safari > 2 does not include the border on offset parents\n\t\t// However Mozilla adds the border for table or table cells\n\t\tif ( mozilla && !/^t(able|d|h)$/i.test(offsetParent.tagName) || safari && !safari2 )\n\t\t\tborder( offsetParent );\n\t\t\t\n\t\t// Add the document scroll offsets if position is fixed on any offsetParent\n\t\tif ( !fixed && jQuery.css(offsetParent, \"position\") == \"fixed\" )"}]},
{"id":"126b5c830dbd244d709a662acde621453ea4f18a","instances":[{"path":"./jquery-data/1.2.5/src/selector.js","lines":[1,10],"code":"var chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?\n\t\t\"(?:[\\\\w*_-]|\\\\\\\\.)\" :\n\t\t\"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\",\n\tquickChild = new RegExp(\"^>\\\\s*(\" + chars + \"+)\"),\n\tquickID = new RegExp(\"^(\" + chars + \"+)(#)(\" + chars + \"+)\"),\n\tquickClass = new RegExp(\"^([#.]?)(\" + chars + \"*)\");\n\njQuery.extend({\n\texpr: {\n\t\t\"\": function(a,i,m){return m[2]==\"*\"||jQuery.nodeName(a,m[2]);},"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[1,11],"code":"\nvar chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?\n\t\t\"(?:[\\\\w*_-]|\\\\\\\\.)\" :\n\t\t\"(?:[\\\\w\\u0128-\\uFFFF*_-]|\\\\\\\\.)\",\n\tquickChild = new RegExp(\"^>\\\\s*(\" + chars + \"+)\"),\n\tquickID = new RegExp(\"^(\" + chars + \"+)(#)(\" + chars + \"+)\"),\n\tquickClass = new RegExp(\"^([#.]?)(\" + chars + \"*)\");\n\njQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\","}]},
{"id":"ba602f4a0f92a348ed72f0e32bb5b0f1e80e79b4","instances":[{"path":"./jquery-data/1.2.5/src/selector.js","lines":[63,116],"code":"\t\t// :animated\n\t\tanimated: function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).length;}\n\t}\n},\n\n// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^(\\[) *@?([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-child, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)\n\t\treturn [ ];\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last, nodeName;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t);\n\n\t\tvar foundToken = false,"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[64,117],"code":"\t\t// :animated\n\t\tanimated: \"jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).length\"\n\t}\n},\n\n// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^(\\[) *@?([\\w-]+) *([!*$^~=]*) *('?\"?)(.*?)\\4 *\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([\\w-]+)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/,\n\n\t// Match: :even, :last-chlid, #id, .class\n\tnew RegExp(\"^([:.#]*)(\" + chars + \"+)\")\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// check to make sure context is a DOM element or a document\n\tif ( context && context.nodeType != 1 && context.nodeType != 9)\n\t\treturn [ ];\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last, nodeName;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t);\n\n\t\tvar foundToken = false;"}]},
{"id":"a009bc0795198f30da775cc5c516553690b11e7e","instances":[{"path":"./jquery-data/1.2.5/src/selector.js","lines":[122,131],"code":"\tm = re.exec(t);\n\nif ( m ) {\n\tnodeName = m[1].toUpperCase();\n\n\t// Perform our own iteration and filter\n\tfor ( var i = 0; ret[i]; i++ )\n\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\tr.push( c );"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[122,131],"code":"var m = re.exec(t);\n\nif ( m ) {\n\tnodeName = m[1].toUpperCase();\n\n\t// Perform our own iteration and filter\n\tfor ( var i = 0; ret[i]; i++ )\n\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\tr.push( c );"}]},
{"id":"aedb56d43a900592ffd7ebe43c335aa09662ab66","instances":[{"path":"./jquery-data/1.2.5/src/selector.js","lines":[127,395],"code":"\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^([>+~])\\s*(\\w*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar merge = {};\n\t\t\t\tnodeName = m[2].toUpperCase();\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ ) {\n\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\tvar id = jQuery.data(n);\n\n\t\t\t\t\t\t\tif ( m == \"~\" && merge[id] ) break;\n\n\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" ) merge[id] = true;\n\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions\n\t\t\tif ( !t.indexOf(\",\") ) {\n\t\t\t\t// Clean the result set\n\t\t\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t\t\t// Merge the result sets\n\t\t\t\tdone = jQuery.merge( done, ret );\n\n\t\t\t\t// Reset the context\n\t\t\t\tr = ret = [context];\n\n\t\t\t\t// Touch up the selector string\n\t\t\t\tt = \" \" + t.substr(1,t.length);\n\n\t\t\t} else {\n\t\t\t\t// Optimize for the case nodeName#idName\n\t\t\t\tvar re2 = quickID;\n\t\t\t\tvar m = re2.exec(t);\n\n\t\t\t\t// Re-organize the results, so that they're consistent\n\t\t\t\tif ( m ) {\n\t\t\t\t\tm = [ 0, m[2], m[3], m[1] ];\n\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t\t\t// ID, class, and element selectors\n\t\t\t\t\tre2 = quickClass;\n\t\t\t\t\tm = re2.exec(t);\n\t\t\t\t}\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\n\t\t\t\tvar elem = ret[ret.length-1];\n\n\t\t\t\t// Try to do a global search by ID, where we can\n\t\t\t\tif ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t\t\t\t\t// Optimization for HTML document case\n\t\t\t\t\tvar oid = elem.getElementById(m[2]);\n\n\t\t\t\t\t// Do a quick check for the existence of the actual ID attribute\n\t\t\t\t\t// to avoid selecting by the name attribute in IE\n\t\t\t\t\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\t\t\t\t\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\t\t\t\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t\t\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t\t\t// that div#foo searches will be really fast\n\t\t\t\t\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\t\t\t\t} else {\n\t\t\t\t\t// We need to find all descendant elements\n\t\t\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t\t\t// Grab the tag name being searched for"},{"path":"./jquery-data/1.2.2/src/selector.js","lines":[127,395],"code":"\t\t\t// Perform our own iteration and filter\n\t\t\tfor ( var i = 0; ret[i]; i++ )\n\t\t\t\tfor ( var c = ret[i].firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && (nodeName == \"*\" || c.nodeName.toUpperCase() == nodeName) )\n\t\t\t\t\t\tr.push( c );\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\tre = /^([>+~])\\s*(\\w*)/i;\n\n\t\t\tif ( (m = re.exec(t)) != null ) {\n\t\t\t\tr = [];\n\n\t\t\t\tvar merge = {};\n\t\t\t\tnodeName = m[2].toUpperCase();\n\t\t\t\tm = m[1];\n\n\t\t\t\tfor ( var j = 0, rl = ret.length; j < rl; j++ ) {\n\t\t\t\t\tvar n = m == \"~\" || m == \"+\" ? ret[j].nextSibling : ret[j].firstChild;\n\t\t\t\t\tfor ( ; n; n = n.nextSibling )\n\t\t\t\t\t\tif ( n.nodeType == 1 ) {\n\t\t\t\t\t\t\tvar id = jQuery.data(n);\n\n\t\t\t\t\t\t\tif ( m == \"~\" && merge[id] ) break;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!nodeName || n.nodeName.toUpperCase() == nodeName ) {\n\t\t\t\t\t\t\t\tif ( m == \"~\" ) merge[id] = true;\n\t\t\t\t\t\t\t\tr.push( n );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif ( m == \"+\" ) break;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tret = r;\n\n\t\t\t\t// And remove the token\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\tfoundToken = true;\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions\n\t\t\tif ( !t.indexOf(\",\") ) {\n\t\t\t\t// Clean the result set\n\t\t\t\tif ( context == ret[0] ) ret.shift();\n\n\t\t\t\t// Merge the result sets\n\t\t\t\tdone = jQuery.merge( done, ret );\n\n\t\t\t\t// Reset the context\n\t\t\t\tr = ret = [context];\n\n\t\t\t\t// Touch up the selector string\n\t\t\t\tt = \" \" + t.substr(1,t.length);\n\n\t\t\t} else {\n\t\t\t\t// Optimize for the case nodeName#idName\n\t\t\t\tvar re2 = quickID;\n\t\t\t\tvar m = re2.exec(t);\n\t\t\t\t\n\t\t\t\t// Re-organize the results, so that they're consistent\n\t\t\t\tif ( m ) {\n\t\t\t\t\tm = [ 0, m[2], m[3], m[1] ];\n\n\t\t\t\t} else {\n\t\t\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t\t\t// ID, class, and element selectors\n\t\t\t\t\tre2 = quickClass;\n\t\t\t\t\tm = re2.exec(t);\n\t\t\t\t}\n\n\t\t\t\tm[2] = m[2].replace(/\\\\/g, \"\");\n\n\t\t\t\tvar elem = ret[ret.length-1];\n\n\t\t\t\t// Try to do a global search by ID, where we can\n\t\t\t\tif ( m[1] == \"#\" && elem && elem.getElementById && !jQuery.isXMLDoc(elem) ) {\n\t\t\t\t\t// Optimization for HTML document case\n\t\t\t\t\tvar oid = elem.getElementById(m[2]);\n\t\t\t\t\t\n\t\t\t\t\t// Do a quick check for the existence of the actual ID attribute\n\t\t\t\t\t// to avoid selecting by the name attribute in IE\n\t\t\t\t\t// also check to insure id is a string to avoid selecting an element with the name of 'id' inside a form\n\t\t\t\t\tif ( (jQuery.browser.msie||jQuery.browser.opera) && oid && typeof oid.id == \"string\" && oid.id != m[2] )\n\t\t\t\t\t\toid = jQuery('[@id=\"'+m[2]+'\"]', elem)[0];\n\n\t\t\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t\t\t// that div#foo searches will be really fast\n\t\t\t\t\tret = r = oid && (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\t\t\t\t} else {\n\t\t\t\t\t// We need to find all descendant elements\n\t\t\t\t\tfor ( var i = 0; ret[i]; i++ ) {\n\t\t\t\t\t\t// Grab the tag name being searched for"}]}]
