[{"id":"c696febaccd42037fd05d31a0301d17b632db517","instances":[{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[1,55],"code":"// AJAX Plugin\n// Docs Here:\n// http://jquery.com/docs/ajax/\n\n/**\n * Load HTML from a remote file and inject it into the DOM\n */\njQuery.fn.loadIfModified = function( url, params, callback ) {\n\tthis.load( url, params, callback, 1 );\n};\n\njQuery.fn.load = function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";\n\n\t// If the second parameter was provided\n\tif ( params ) {\n\t\t// If it's a function\n\t\tif ( params.constructor == Function ) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\t\t\t\n\t\t// Otherwise, build a param string\n\t\t} else {\n\t\t\tparams = jQuery.param( params );\n\t\t\ttype = \"POST\";\n\t\t}\n\t}\n\t\n\tvar self = this;\n\t\n\t// Request the remote document\n\tjQuery.ajax( type, url, params,function(res, status){\n\t\t\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t\t// Inject the HTML into all the matched elements\n\t\t\tself.html(res.responseText).each( callback, [res.responseText, status] );\n\t\t\t\n\t\t\t// Execute all the scripts inside of the newly-injected HTML\n\t\t\t$(\"script\", self).each(function(){\n\t\t\t\tif ( this.src )\n\t\t\t\t\t$.getScript( this.src );\n\t\t\t\telse\n\t\t\t\t\teval.call( window, this.text || this.textContent || this.innerHTML || \"\" );\n\t\t\t});\n\t\t} else\n\t\t\tcallback.apply( self, [res.responseText, status] );\n\n\t}, ifModified);"},{"path":"./jquery-data/1.0/src/ajax/ajax.js","lines":[1,55],"code":"// AJAX Plugin\n// Docs Here:\n// http://jquery.com/docs/ajax/\n\n/**\n * Load HTML from a remote file and inject it into the DOM\n */\njQuery.fn.loadIfModified = function( url, params, callback ) {\n\tthis.load( url, params, callback, 1 );\n};\n\njQuery.fn.load = function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";\n\n\t// If the second parameter was provided\n\tif ( params ) {\n\t\t// If it's a function\n\t\tif ( params.constructor == Function ) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\t\t\t\n\t\t// Otherwise, build a param string\n\t\t} else {\n\t\t\tparams = jQuery.param( params );\n\t\t\ttype = \"POST\";\n\t\t}\n\t}\n\t\n\tvar self = this;\n\t\n\t// Request the remote document\n\tjQuery.ajax( type, url, params,function(res, status){\n\t\t\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t\t// Inject the HTML into all the matched elements\n\t\t\tself.html(res.responseText).each( callback, [res.responseText, status] );\n\t\t\t\n\t\t\t// Execute all the scripts inside of the newly-injected HTML\n\t\t\t$(\"script\", self).each(function(){\n\t\t\t\tif ( this.src )\n\t\t\t\t\t$.getScript( this.src );\n\t\t\t\telse\n\t\t\t\t\teval.call( window, this.text || this.textContent || this.innerHTML || \"\" );\n\t\t\t});\n\t\t} else\n\t\t\tcallback.apply( self, [res.responseText, status] );\n\n\t}, ifModified);"}]},
{"id":"686c871e530ee4b8573fa9c5b617f367055980bc","instances":[{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[38,151],"code":"\t// Request the remote document\n\tjQuery.ajax( type, url, params,function(res, status){\n\t\t\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t\t// Inject the HTML into all the matched elements\n\t\t\tself.html(res.responseText).each( callback, [res.responseText, status] );\n\t\t\t\n\t\t\t// Execute all the scripts inside of the newly-injected HTML\n\t\t\t$(\"script\", self).each(function(){\n\t\t\t\tif ( this.src )\n\t\t\t\t\t$.getScript( this.src );\n\t\t\t\telse\n\t\t\t\t\teval.call( window, this.text || this.textContent || this.innerHTML || \"\" );\n\t\t\t});\n\t\t} else\n\t\t\tcallback.apply( self, [res.responseText, status] );\n\n\t}, ifModified);\n\t\n\treturn this;\n};\n\n// If IE is used, create a wrapper for the XMLHttpRequest object\nif ( jQuery.browser.msie && typeof XMLHttpRequest == \"undefined\" )\n\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\n\t\t\tnavigator.userAgent.indexOf(\"MSIE 5\") >= 0 ?\n\t\t\t\"Microsoft.XMLHTTP\" : \"Msxml2.XMLHTTP\"\n\t\t);\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\nnew function(){\n\tvar e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess\".split(',');\n\t\n\tfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\tvar o = e[i];\n\t\tjQuery.fn[o] = function(f){\n\t\t\treturn this.bind(o, f);\n\t\t};\n\t};\n};\n\njQuery.extend({\n\n\t/**\n\t * Load a remote page using a GET request\n\t */\n\tget: function( url, data, callback, type, ifModified ) {\n\t\tif ( data.constructor == Function ) {\n\t\t\ttype = callback;\n\t\t\tcallback = data;\n\t\t\tdata = null;\n\t\t}\n\t\t\n\t\tif ( data ) url += \"?\" + jQuery.param(data);\n\t\t\n\t\t// Build and start the HTTP Request\n\t\tjQuery.ajax( \"GET\", url, null, function(r, status) {\n\t\t\tif ( callback ) callback( jQuery.httpData(r,type), status );\n\t\t}, ifModified);\n\t},\n\n\tgetIfModified: function( url, data, callback, type ) {\n\t\tjQuery.get(url, data, callback, type, 1);\n\t},\n\n\tgetScript: function( url, data, callback ) {\n\t\tjQuery.get(url, data, callback, \"script\");\n\t},\n\t\n\t/**\n\t * Load a remote page using a POST request.\n\t */\n\tpost: function( url, data, callback, type ) {\n\t\t// Build and start the HTTP Request\n\t\tjQuery.ajax( \"POST\", url, jQuery.param(data), function(r, status) {\n\t\t\tif ( callback ) callback( jQuery.httpData(r,type), status );\n\t\t});\n\t},\n\t\n\t// timeout (ms)\n\ttimeout: 0,\n\n\tajaxTimeout: function(timeout) {\n\t\tjQuery.timeout = timeout;\n\t},\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\t\n\t/**\n\t * A common wrapper for making XMLHttpRequests\n\t */\n\tajax: function( type, url, data, ret, ifModified ) {\n\t\t// If only a single argument was passed in,\n\t\t// assume that it is a object of key/value pairs\n\t\tif ( !url ) {\n\t\t\tret = type.complete;\n\t\t\tvar success = type.success;"},{"path":"./jquery-data/1.0/src/ajax/ajax.js","lines":[38,151],"code":"\t// Request the remote document\n\tjQuery.ajax( type, url, params,function(res, status){\n\t\t\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t\t// Inject the HTML into all the matched elements\n\t\t\tself.html(res.responseText).each( callback, [res.responseText, status] );\n\t\t\t\n\t\t\t// Execute all the scripts inside of the newly-injected HTML\n\t\t\t$(\"script\", self).each(function(){\n\t\t\t\tif ( this.src )\n\t\t\t\t\t$.getScript( this.src );\n\t\t\t\telse\n\t\t\t\t\teval.call( window, this.text || this.textContent || this.innerHTML || \"\" );\n\t\t\t});\n\t\t} else\n\t\t\tcallback.apply( self, [res.responseText, status] );\n\n\t}, ifModified);\n\t\n\treturn this;\n};\n\n// If IE is used, create a wrapper for the XMLHttpRequest object\nif ( jQuery.browser.msie && typeof XMLHttpRequest == \"undefined\" )\n\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\n\t\t\tnavigator.userAgent.indexOf(\"MSIE 5\") >= 0 ?\n\t\t\t\"Microsoft.XMLHTTP\" : \"Msxml2.XMLHTTP\"\n\t\t);\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\nnew function(){\n\tvar e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess\".split(',');\n\t\n\tfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\tvar o = e[i];\n\t\tjQuery.fn[o] = function(f){\n\t\t\treturn this.bind(o, f);\n\t\t};\n\t};\n};\n\njQuery.extend({\n\n\t/**\n\t * Load a remote page using a GET request\n\t */\n\tget: function( url, data, callback, type, ifModified ) {\n\t\tif ( data.constructor == Function ) {\n\t\t\ttype = callback;\n\t\t\tcallback = data;\n\t\t\tdata = null;\n\t\t}\n\t\t\n\t\tif ( data ) url += \"?\" + jQuery.param(data);\n\t\t\n\t\t// Build and start the HTTP Request\n\t\tjQuery.ajax( \"GET\", url, null, function(r, status) {\n\t\t\tif ( callback ) callback( jQuery.httpData(r,type), status );\n\t\t}, ifModified);\n\t},\n\n\tgetIfModified: function( url, data, callback, type ) {\n\t\tjQuery.get(url, data, callback, type, 1);\n\t},\n\n\tgetScript: function( url, data, callback ) {\n\t\tjQuery.get(url, data, callback, \"script\");\n\t},\n\t\n\t/**\n\t * Load a remote page using a POST request.\n\t */\n\tpost: function( url, data, callback, type ) {\n\t\t// Build and start the HTTP Request\n\t\tjQuery.ajax( \"POST\", url, jQuery.param(data), function(r, status) {\n\t\t\tif ( callback ) callback( jQuery.httpData(r,type), status );\n\t\t});\n\t},\n\t\n\t// timeout (ms)\n\ttimeout: 0,\n\n\tajaxTimeout: function(timeout) {\n\t\tjQuery.timeout = timeout;\n\t},\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\t\n\t/**\n\t * A common wrapper for making XMLHttpRequests\n\t */\n\tajax: function( type, url, data, ret, ifModified ) {\n\t\t// If only a single argument was passed in,\n\t\t// assume that it is a object of key/value pairs\n\t\tif ( !url ) {\n\t\t\tret = type.complete;\n\t\t\tvar success = type.success;"}]},
{"id":"04af7e7c2664ad104648100c1cf0da6f3f61f307","instances":[{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[129,304],"code":"/**\n * A common wrapper for making XMLHttpRequests\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;\n\t\tdata = type.data;\n\t\turl = type.url;\n\t\ttype = type.type;\n\t}\n\t\n\t// Watch for a new set of requests\n\tif ( ! jQuery.active++ )\n\t\tjQuery.event.trigger( \"ajaxStart\" );\n\n\tvar requestDone = false;\n\n\t// Create the request object\n\tvar xml = new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(type || \"GET\", url, true);\n\t\n\t// Set the correct header, if data is being sent\n\tif ( data )\n\t\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( ifModified )\n\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\t\n\t// Set header so calling script knows that it's an XMLHttpRequest\n\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Make sure the browser sends the right content length\n\tif ( xml.overrideMimeType )\n\t\txml.setRequestHeader(\"Connection\", \"close\");\n\t\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(istimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\n\t\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\tif ( ifModified && modRes ) jQuery.lastModified[url] = modRes;\n\t\t\t\t\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( success ) success( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\" );\n\t\t\t\n\t\t\t// Otherwise, the request was not successful\n\t\t\t} else {\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( error ) error( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxError\" );\n\t\t\t}\n\t\t\t\n\t\t\t// The request was completed\n\t\t\tjQuery.event.trigger( \"ajaxComplete\" );\n\t\t\t\n\t\t\t// Handle the global AJAX counter\n\t\t\tif ( ! --jQuery.active )\n\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t\t// Process result\n\t\t\tif ( ret ) ret(xml, status);\n\t\t\t\n\t\t\t// Stop memory leaks\n\t\t\txml.onreadystatechange = function(){};\n\t\t\txml = null;\n\t\t\t\n\t\t}\n\t};\n\txml.onreadystatechange = onreadystatechange;\n\t\n\t// Timeout checker\n\tif(jQuery.timeout > 0)\n\t\tsetTimeout(function(){\n\t\t\t// Check to see if the request is still happening\n\t\t\tif (xml) {\n\t\t\t\t// Cancel the request\n\t\t\t\txml.abort();\n\n\t\t\t\tif ( !requestDone ) onreadystatechange( \"timeout\" );"},{"path":"./jquery-data/1.0/src/ajax/ajax.js","lines":[129,304],"code":"/**\n * A common wrapper for making XMLHttpRequests\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;\n\t\tdata = type.data;\n\t\turl = type.url;\n\t\ttype = type.type;\n\t}\n\t\n\t// Watch for a new set of requests\n\tif ( ! jQuery.active++ )\n\t\tjQuery.event.trigger( \"ajaxStart\" );\n\n\tvar requestDone = false;\n\n\t// Create the request object\n\tvar xml = new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(type || \"GET\", url, true);\n\t\n\t// Set the correct header, if data is being sent\n\tif ( data )\n\t\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( ifModified )\n\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\t\n\t// Set header so calling script knows that it's an XMLHttpRequest\n\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Make sure the browser sends the right content length\n\tif ( xml.overrideMimeType )\n\t\txml.setRequestHeader(\"Connection\", \"close\");\n\t\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(istimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\n\t\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\tif ( ifModified && modRes ) jQuery.lastModified[url] = modRes;\n\t\t\t\t\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( success ) success( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\" );\n\t\t\t\n\t\t\t// Otherwise, the request was not successful\n\t\t\t} else {\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( error ) error( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxError\" );\n\t\t\t}\n\t\t\t\n\t\t\t// The request was completed\n\t\t\tjQuery.event.trigger( \"ajaxComplete\" );\n\t\t\t\n\t\t\t// Handle the global AJAX counter\n\t\t\tif ( ! --jQuery.active )\n\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t\t// Process result\n\t\t\tif ( ret ) ret(xml, status);\n\t\t\t\n\t\t\t// Stop memory leaks\n\t\t\txml.onreadystatechange = function(){};\n\t\t\txml = null;\n\t\t\t\n\t\t}\n\t};\n\txml.onreadystatechange = onreadystatechange;\n\t\n\t// Timeout checker\n\tif(jQuery.timeout > 0)\n\t\tsetTimeout(function(){\n\t\t\t// Check to see if the request is still happening\n\t\t\tif (xml) {\n\t\t\t\t// Cancel the request\n\t\t\t\txml.abort();\n\n\t\t\t\tif ( !requestDone ) onreadystatechange( \"timeout\" );"}]},
{"id":"db0ff641070d066d0ad6bea2e144b01c1a53d1b5","instances":[{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1,76],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;"},{"path":"./jquery-data/1.0/src/event/event.js","lines":[1,76],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;"}]},
{"id":"2b405685a8034d864405f906feee1db96ed07d67","instances":[{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[43,1595],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them"},{"path":"./jquery-data/1.0/src/event/event.js","lines":[43,1595],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them"}]},
{"id":"4bde925f25a6889afcbd1cc595ecfeb73533dab0","instances":[{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1593,1664],"code":"\t// Handle event binding\n\tjQuery.fn[o] = function(f){\n\t\treturn f ? this.bind(o, f) : this.trigger(o);\n\t};\n\t\n\t// Handle event unbinding\n\tjQuery.fn[\"un\"+o] = function(f){ return this.unbind(o, f); };\n\t\n\t// Finally, handle events that only fire once\n\tjQuery.fn[\"one\"+o] = function(f){\n\t\t// Attach the event listener\n\t\treturn this.each(function(){\n\n\t\t\tvar count = 0;\n\n\t\t\t// Add the event\n\t\t\tjQuery.event.add( this, o, function(e){\n\t\t\t\t// If this function has already been executed, stop\n\t\t\t\tif ( count++ ) return;\n\t\t\t\n\t\t\t\t// And execute the bound function\n\t\t\t\treturn f.apply(this, [e]);\n\t\t\t});\n\t\t});\n\t};\n\t\t\n};\n\n// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera ) {\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\n} else if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");\n\tscript.onreadystatechange = function() {\n\t\tif ( this.readyState != \"complete\" ) return;\n\t\tthis.parentNode.removeChild( this );\n\t\tjQuery.ready();\n\t};\n\n\t// Clear from memory\n\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari ) {\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10);\n} \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"},{"path":"./jquery-data/1.0/src/event/event.js","lines":[1593,1664],"code":"\t// Handle event binding\n\tjQuery.fn[o] = function(f){\n\t\treturn f ? this.bind(o, f) : this.trigger(o);\n\t};\n\t\n\t// Handle event unbinding\n\tjQuery.fn[\"un\"+o] = function(f){ return this.unbind(o, f); };\n\t\n\t// Finally, handle events that only fire once\n\tjQuery.fn[\"one\"+o] = function(f){\n\t\t// Attach the event listener\n\t\treturn this.each(function(){\n\n\t\t\tvar count = 0;\n\n\t\t\t// Add the event\n\t\t\tjQuery.event.add( this, o, function(e){\n\t\t\t\t// If this function has already been executed, stop\n\t\t\t\tif ( count++ ) return;\n\t\t\t\n\t\t\t\t// And execute the bound function\n\t\t\t\treturn f.apply(this, [e]);\n\t\t\t});\n\t\t});\n\t};\n\t\t\n};\n\n// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera ) {\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\n} else if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");\n\tscript.onreadystatechange = function() {\n\t\tif ( this.readyState != \"complete\" ) return;\n\t\tthis.parentNode.removeChild( this );\n\t\tjQuery.ready();\n\t};\n\n\t// Clear from memory\n\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari ) {\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10);\n} \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"}]},
{"id":"45bdbdf194ab5de50bd97108bdd3761166da924b","instances":[{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[1,316],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[1,316],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"}]},
{"id":"b7378c97a00d007fbec83700547f32925a2fa0a1","instances":[{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[315,384],"code":"\t// Figure out the size of the height right now\n\tvar o = jQuery.curCSS(e,p,1);\n\n\tif ( p == \"height\" && e.scrollHeight != o ||\n\t\tp == \"width\" && e.scrollWidth != o ) return;\n\n\t// Set the height to auto\n\te.style[p] = e.currentStyle ? \"\" : \"auto\";\n\n\t// See what the size of \"auto\" is\n\tvar n = jQuery.curCSS(e,p,1);\n\n\t// Revert back to the original size\n\tif ( o != n && n != \"auto\" ) {\n\t\te.style[p] = a;\n\t\te.notAuto = true;\n\t}\n},\n\nspeed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[315,384],"code":"\t// Figure out the size of the height right now\n\tvar o = jQuery.curCSS(e,p,1);\n\n\tif ( p == \"height\" && e.scrollHeight != o ||\n\t\tp == \"width\" && e.scrollWidth != o ) return;\n\n\t// Set the height to auto\n\te.style[p] = e.currentStyle ? \"\" : \"auto\";\n\n\t// See what the size of \"auto\" is\n\tvar n = jQuery.curCSS(e,p,1);\n\n\t// Revert back to the original size\n\tif ( o != n && n != \"auto\" ) {\n\t\te.style[p] = a;\n\t\te.notAuto = true;\n\t}\n},\n\nspeed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step"}]},
{"id":"32969d7e35ae951c352de1efb49e9dfbcf87277c","instances":[{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[380,410],"code":"// The users options\nz.o = {\n\tduration: options.duration || 400,\n\tcomplete: options.complete,\n\tstep: options.step\n};\n\t\n// The element\nz.el = elem;\n\t\n// The styles\nvar y = z.el.style;\n\t\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" ) {\n\t\tif (jQuery.browser.mozilla && z.now == 1) z.now = 0.9999;\n\t\tif (window.ActiveXObject)\n\t\t\ty.filter = \"alpha(opacity=\" + z.now*100 + \")\";\n\t\telse\n\t\t\ty.opacity = z.now;\n\n\t// My hate for IE will never die\n\t} else if ( parseInt(z.now) )\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\n\ty.display = \"block\";\n};"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[380,410],"code":"// The users options\nz.o = {\n\tduration: options.duration || 400,\n\tcomplete: options.complete,\n\tstep: options.step\n};\n\t\n// The element\nz.el = elem;\n\t\n// The styles\nvar y = z.el.style;\n\t\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" ) {\n\t\tif (jQuery.browser.mozilla && z.now == 1) z.now = 0.9999;\n\t\tif (window.ActiveXObject)\n\t\t\ty.filter = \"alpha(opacity=\" + z.now*100 + \")\";\n\t\telse\n\t\t\ty.opacity = z.now;\n\n\t// My hate for IE will never die\n\t} else if ( parseInt(z.now) )\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\n\ty.display = \"block\";\n};"}]},
{"id":"6ee30b2cc6e6c7a595d21493b4ac8019ac881a98","instances":[{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[370,523],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" ) {\n\t\t\tif (jQuery.browser.mozilla && z.now == 1) z.now = 0.9999;\n\t\t\tif (window.ActiveXObject)\n\t\t\t\ty.filter = \"alpha(opacity=\" + z.now*100 + \")\";\n\t\t\telse\n\t\t\t\ty.opacity = z.now;\n\n\t\t// My hate for IE will never die\n\t\t} else if ( parseInt(z.now) )\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\t\n\t\ty.display = \"block\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(z.el,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function( p ){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.custom( 0, z.el.orig[prop] );\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(z.el.orig[prop], 0);\n\t};\n\n\t// IE has trouble with opacity if it does not have layout\n\tif ( jQuery.browser.msie && !z.el.currentStyle.hasLayout )\n\t\ty.zoom = \"1\";\n\n\t// Remember  the overflow of the element\n\tif ( !z.el.oldOverlay )\n\t\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\n\t// Make sure that nothing sneaks out"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[370,523],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" ) {\n\t\t\tif (jQuery.browser.mozilla && z.now == 1) z.now = 0.9999;\n\t\t\tif (window.ActiveXObject)\n\t\t\t\ty.filter = \"alpha(opacity=\" + z.now*100 + \")\";\n\t\t\telse\n\t\t\t\ty.opacity = z.now;\n\n\t\t// My hate for IE will never die\n\t\t} else if ( parseInt(z.now) )\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\t\n\t\ty.display = \"block\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(z.el,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function( p ){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.custom( 0, z.el.orig[prop] );\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(z.el.orig[prop], 0);\n\t};\n\n\t// IE has trouble with opacity if it does not have layout\n\tif ( jQuery.browser.msie && !z.el.currentStyle.hasLayout )\n\t\ty.zoom = \"1\";\n\n\t// Remember  the overflow of the element\n\tif ( !z.el.oldOverlay )\n\t\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\n\t// Make sure that nothing sneaks out"}]},
{"id":"987b3a652cb732e1d1d173ef802e6d724f7e2247","instances":[{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1,420],"code":"/*\n * jQuery - New Wave Javascript\n *\n * Copyright (c) 2006 John Resig (jquery.com)\n * Dual licensed under the MIT (MIT-LICENSE.txt) \n * and GPL (GPL-LICENSE.txt) licenses.\n *\n * $Date$\n * $Rev$\n */\n\n// Global undefined variable\nwindow.undefined = window.undefined;\n\n/**\n * Create a new jQuery Object\n *\n * @test ok( Array.prototype.push, \"Array.push()\" );\n * @test ok( Function.prototype.apply, \"Function.apply()\" );\n * @test ok( document.getElementById, \"getElementById\" );\n * @test ok( document.getElementsByTagName, \"getElementsByTagName\" );\n * @test ok( RegExp, \"RegExp\" );\n * @test ok( jQuery, \"jQuery\" );\n * @test ok( $, \"$()\" );\n *\n * @constructor\n * @private\n * @name jQuery\n */\nfunction jQuery(a,c) {\n\n\t// Shortcut for document ready (because $(document).each() is silly)\n\tif ( a && a.constructor == Function && jQuery.fn.ready )\n\t\treturn jQuery(document).ready(a);\n\n\t// Make sure that a selection was provided\n\ta = a || jQuery.context || document;\n\n\t// Watch for when a jQuery object is passed as the selector\n\tif ( a.jquery )\n\t\treturn $( jQuery.merge( a, [] ) );\n\n\t// Watch for when a jQuery object is passed at the context\n\tif ( c && c.jquery )\n\t\treturn $( c ).find(a);\n\t\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Handle HTML strings\n\tvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\n\tif ( m ) a = jQuery.clean( [ m[1] ] );\n\n\t// Watch for when an array is passed in\n\tthis.get( a.constructor == Array || a.length && !a.nodeType && a[0] != undefined && a[0].nodeType ?\n\t\t// Assume that it is an array of DOM Elements\n\t\tjQuery.merge( a, [] ) :\n\n\t\t// Find the matching elements and save them for later\n\t\tjQuery.find( a, c ) );\n\n  // See if an extra function was provided\n\tvar fn = arguments[ arguments.length - 1 ];\n\t\n\t// If so, execute it in context\n\tif ( fn && fn.constructor == Function )\n\t\tthis.each(fn);\n}\n\n// Map over the $ in case of overwrite\nif ( typeof $ != \"undefined\" )\n\tjQuery._$ = $;\n\n// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\njQuery.fn = jQuery.prototype = {\n\t/**\n\t * The current SVN version of jQuery.\n\t *\n\t * @private\n\t * @property\n\t * @name jquery\n\t * @type String\n\t * @cat Core\n\t */\n\tjquery: \"$Rev$\",\n\t\n\t/**\n\t * The number of elements currently matched.\n\t *\n\t * @example $(\"img\").length;\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result 2\n\t *\n\t * @test cmpOK( $(\"div\").length, \"==\", 2, \"Get Number of Elements Found\" );\n\t *\n\t * @property\n\t * @name length"},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[1,420],"code":"/*\n * jQuery - New Wave Javascript\n *\n * Copyright (c) 2006 John Resig (jquery.com)\n * Dual licensed under the MIT (MIT-LICENSE.txt) \n * and GPL (GPL-LICENSE.txt) licenses.\n *\n * $Date$\n * $Rev$\n */\n\n// Global undefined variable\nwindow.undefined = window.undefined;\n\n/**\n * Create a new jQuery Object\n *\n * @test ok( Array.prototype.push, \"Array.push()\" );\n * @test ok( Function.prototype.apply, \"Function.apply()\" );\n * @test ok( document.getElementById, \"getElementById\" );\n * @test ok( document.getElementsByTagName, \"getElementsByTagName\" );\n * @test ok( RegExp, \"RegExp\" );\n * @test ok( jQuery, \"jQuery\" );\n * @test ok( $, \"$()\" );\n *\n * @constructor\n * @private\n * @name jQuery\n */\nfunction jQuery(a,c) {\n\n\t// Shortcut for document ready (because $(document).each() is silly)\n\tif ( a && a.constructor == Function && jQuery.fn.ready )\n\t\treturn jQuery(document).ready(a);\n\n\t// Make sure that a selection was provided\n\ta = a || jQuery.context || document;\n\n\t// Watch for when a jQuery object is passed as the selector\n\tif ( a.jquery )\n\t\treturn $( jQuery.merge( a, [] ) );\n\n\t// Watch for when a jQuery object is passed at the context\n\tif ( c && c.jquery )\n\t\treturn $( c ).find(a);\n\t\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Handle HTML strings\n\tvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\n\tif ( m ) a = jQuery.clean( [ m[1] ] );\n\n\t// Watch for when an array is passed in\n\tthis.get( a.constructor == Array || a.length && !a.nodeType && a[0] != undefined && a[0].nodeType ?\n\t\t// Assume that it is an array of DOM Elements\n\t\tjQuery.merge( a, [] ) :\n\n\t\t// Find the matching elements and save them for later\n\t\tjQuery.find( a, c ) );\n\n  // See if an extra function was provided\n\tvar fn = arguments[ arguments.length - 1 ];\n\t\n\t// If so, execute it in context\n\tif ( fn && fn.constructor == Function )\n\t\tthis.each(fn);\n}\n\n// Map over the $ in case of overwrite\nif ( typeof $ != \"undefined\" )\n\tjQuery._$ = $;\n\n// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\njQuery.fn = jQuery.prototype = {\n\t/**\n\t * The current SVN version of jQuery.\n\t *\n\t * @private\n\t * @property\n\t * @name jquery\n\t * @type String\n\t * @cat Core\n\t */\n\tjquery: \"$Rev$\",\n\t\n\t/**\n\t * The number of elements currently matched.\n\t *\n\t * @example $(\"img\").length;\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result 2\n\t *\n\t * @test cmpOK( $(\"div\").length, \"==\", 2, \"Get Number of Elements Found\" );\n\t *\n\t * @property\n\t * @name length"}]},
{"id":"e063c989e959fe9ca65c0eadcc3c96752525e408","instances":[{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[388,1656],"code":"\t/**\n\t * Wrap all matched elements with a structure of other elements.\n\t * This wrapping process is most useful for injecting additional\n\t * stucture into a document, without ruining the original semantic\n\t * qualities of a document.\n\t *\n\t * The way that is works is that it goes through the first element argument\n\t * provided and finds the deepest element within the structure - it is that\n\t * element that will en-wrap everything else.\n\t *\n\t * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n\t * @before <p>Test Paragraph.</p>\n\t * @result <div class='wrap'><p>Test Paragraph.</p></div>\n\t *\n\t * @name wrap\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and wrapped around the target.\n\t * @any Element elem A DOM element that will be wrapped.\n\t * @any Array<Element> elems An array of elements, the first of which will be wrapped.\n\t * @any Object obj Any object, converted to a string, then a text node.\n\t * @cat DOM/Manipulation\n\t */\n\twrap: function() {\n\t\t// The elements to wrap the target around\n\t\tvar a = jQuery.clean(arguments);\n\t\t\n\t\t// Wrap each of the matched elements individually\n\t\treturn this.each(function(){\n\t\t\t// Clone the structure that we're using to wrap\n\t\t\tvar b = a[0].cloneNode(true);\n\t\t\t\n\t\t\t// Insert it before the element to be wrapped\n\t\t\tthis.parentNode.insertBefore( b, this );\n\t\t\t\n\t\t\t// Find he deepest point in the wrap structure\n\t\t\twhile ( b.firstChild )\n\t\t\t\tb = b.firstChild;\n\t\t\t\n\t\t\t// Move the matched element to within the wrap structure\n\t\t\tb.appendChild( this );\n\t\t});\n\t},\n\t\n\t/**\n\t * Append any number of elements to the inside of all matched elements.\n\t * This operation is similar to doing an appendChild to all the \n\t * specified elements, adding them into the document.\n\t * \n\t * @example $(\"p\").append(\"<b>Hello</b>\");\n\t * @before <p>I would like to say: </p>\n\t * @result <p>I would like to say: <b>Hello</b></p>\n\t *\n\t * @name append\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and appended to the target.\n\t * @any Element elem A DOM element that will be appended.\n\t * @any Array<Element> elems An array of elements, all of which will be appended.\n\t * @any Object obj Any object, converted to a string, then a text node.\n\t * @cat DOM/Manipulation\n\t */\n\tappend: function() {\n\t\treturn this.domManip(arguments, true, 1, function(a){\n\t\t\tthis.appendChild( a );\n\t\t});\n\t},\n\t\n\t/**\n\t * Prepend any number of elements to the inside of all matched elements.\n\t * This operation is the best way to insert a set of elements inside, at the \n\t * beginning, of all the matched element.\n\t * \n\t * @example $(\"p\").prepend(\"<b>Hello</b>\");\n\t * @before <p>, how are you?</p>\n\t * @result <p><b>Hello</b>, how are you?</p>\n\t *\n\t * @name prepend\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and prepended to the target.\n\t * @any Element elem A DOM element that will be prepended.\n\t * @any Array<Element> elems An array of elements, all of which will be prepended.\n\t * @any Object obj Any object, converted to a string, then a text node.\n\t * @cat DOM/Manipulation\n\t */\n\tprepend: function() {\n\t\treturn this.domManip(arguments, true, -1, function(a){\n\t\t\tthis.insertBefore( a, this.firstChild );\n\t\t});\n\t},\n\t\n\t/**\n\t * Insert any number of elements before each of the matched elements.\n\t * \n\t * @example $(\"p\").before(\"<b>Hello</b>\");\n\t * @before <p>how are you?</p>\n\t * @result <b>Hello</b><p>how are you?</p>\n\t *\n\t * @name before\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and inserted.\n\t * @any Element elem A DOM element that will beinserted."},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[388,1656],"code":"\t/**\n\t * Wrap all matched elements with a structure of other elements.\n\t * This wrapping process is most useful for injecting additional\n\t * stucture into a document, without ruining the original semantic\n\t * qualities of a document.\n\t *\n\t * The way that is works is that it goes through the first element argument\n\t * provided and finds the deepest element within the structure - it is that\n\t * element that will en-wrap everything else.\n\t *\n\t * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n\t * @before <p>Test Paragraph.</p>\n\t * @result <div class='wrap'><p>Test Paragraph.</p></div>\n\t *\n\t * @name wrap\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and wrapped around the target.\n\t * @any Element elem A DOM element that will be wrapped.\n\t * @any Array<Element> elems An array of elements, the first of which will be wrapped.\n\t * @any Object obj Any object, converted to a string, then a text node.\n\t * @cat DOM/Manipulation\n\t */\n\twrap: function() {\n\t\t// The elements to wrap the target around\n\t\tvar a = jQuery.clean(arguments);\n\t\t\n\t\t// Wrap each of the matched elements individually\n\t\treturn this.each(function(){\n\t\t\t// Clone the structure that we're using to wrap\n\t\t\tvar b = a[0].cloneNode(true);\n\t\t\t\n\t\t\t// Insert it before the element to be wrapped\n\t\t\tthis.parentNode.insertBefore( b, this );\n\t\t\t\n\t\t\t// Find he deepest point in the wrap structure\n\t\t\twhile ( b.firstChild )\n\t\t\t\tb = b.firstChild;\n\t\t\t\n\t\t\t// Move the matched element to within the wrap structure\n\t\t\tb.appendChild( this );\n\t\t});\n\t},\n\t\n\t/**\n\t * Append any number of elements to the inside of all matched elements.\n\t * This operation is similar to doing an appendChild to all the \n\t * specified elements, adding them into the document.\n\t * \n\t * @example $(\"p\").append(\"<b>Hello</b>\");\n\t * @before <p>I would like to say: </p>\n\t * @result <p>I would like to say: <b>Hello</b></p>\n\t *\n\t * @name append\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and appended to the target.\n\t * @any Element elem A DOM element that will be appended.\n\t * @any Array<Element> elems An array of elements, all of which will be appended.\n\t * @any Object obj Any object, converted to a string, then a text node.\n\t * @cat DOM/Manipulation\n\t */\n\tappend: function() {\n\t\treturn this.domManip(arguments, true, 1, function(a){\n\t\t\tthis.appendChild( a );\n\t\t});\n\t},\n\t\n\t/**\n\t * Prepend any number of elements to the inside of all matched elements.\n\t * This operation is the best way to insert a set of elements inside, at the \n\t * beginning, of all the matched element.\n\t * \n\t * @example $(\"p\").prepend(\"<b>Hello</b>\");\n\t * @before <p>, how are you?</p>\n\t * @result <p><b>Hello</b>, how are you?</p>\n\t *\n\t * @name prepend\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and prepended to the target.\n\t * @any Element elem A DOM element that will be prepended.\n\t * @any Array<Element> elems An array of elements, all of which will be prepended.\n\t * @any Object obj Any object, converted to a string, then a text node.\n\t * @cat DOM/Manipulation\n\t */\n\tprepend: function() {\n\t\treturn this.domManip(arguments, true, -1, function(a){\n\t\t\tthis.insertBefore( a, this.firstChild );\n\t\t});\n\t},\n\t\n\t/**\n\t * Insert any number of elements before each of the matched elements.\n\t * \n\t * @example $(\"p\").before(\"<b>Hello</b>\");\n\t * @before <p>how are you?</p>\n\t * @result <b>Hello</b><p>how are you?</p>\n\t *\n\t * @name before\n\t * @type jQuery\n\t * @any String html A string of HTML, that will be created on the fly and inserted.\n\t * @any Element elem A DOM element that will beinserted."}]},
{"id":"0dd58f23a5f8953b74430a23223cca03692ff092","instances":[{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1651,2674],"code":"\t// Figure out what browser is being used\n\tjQuery.browser = {\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/compatible/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};\n\njQuery.macros = {\n\tto: {\n\t\t/**\n\t\t * Append all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).append(B), in that instead of appending B to A, you're appending\n\t\t * A to B.\n\t\t * \n\t\t * @example $(\"p\").appendTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p></div>\n\t\t *\n\t\t * @name appendTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tappendTo: \"append\",\n\t\t\n\t\t/**\n\t\t * Prepend all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n\t\t * A to B.\n\t\t * \n\t\t * @example $(\"p\").prependTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n\t\t *\n\t\t * @name prependTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tprependTo: \"prepend\",\n\t\t\n\t\t/**\n\t\t * Insert all of the matched elements before another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).before(B), in that instead of inserting B before A, you're inserting\n\t\t * A before B.\n\t\t * \n\t\t * @example $(\"p\").insertBefore(\"#foo\");\n\t\t * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t *\n\t\t * @name insertBefore\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tinsertBefore: \"before\",\n\t\t\n\t\t/**\n\t\t * Insert all of the matched elements after another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).after(B), in that instead of inserting B after A, you're inserting\n\t\t * A after B.\n\t\t * \n\t\t * @example $(\"p\").insertAfter(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t *\n\t\t * @name insertAfter\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tinsertAfter: \"after\"\n\t},\n\t\n\t/**\n\t * Get the current CSS width of the first matched element.\n\t * \n\t * @example $(\"p\").width();\n\t * @before <p>This is just a test.</p>\n\t * @result \"300px\"\n\t *\n\t * @name width\n\t * @type String\n\t * @cat CSS\n\t */\n\t \n\t/**\n\t * Set the CSS width of every matched element. Be sure to include\n\t * the \"px\" (or other unit of measurement) after the number that you \n\t * specify, otherwise you might get strange results.\n\t * "},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[1651,2674],"code":"\t// Figure out what browser is being used\n\tjQuery.browser = {\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/compatible/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};\n\njQuery.macros = {\n\tto: {\n\t\t/**\n\t\t * Append all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).append(B), in that instead of appending B to A, you're appending\n\t\t * A to B.\n\t\t * \n\t\t * @example $(\"p\").appendTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p></div>\n\t\t *\n\t\t * @name appendTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tappendTo: \"append\",\n\t\t\n\t\t/**\n\t\t * Prepend all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n\t\t * A to B.\n\t\t * \n\t\t * @example $(\"p\").prependTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n\t\t *\n\t\t * @name prependTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tprependTo: \"prepend\",\n\t\t\n\t\t/**\n\t\t * Insert all of the matched elements before another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).before(B), in that instead of inserting B before A, you're inserting\n\t\t * A before B.\n\t\t * \n\t\t * @example $(\"p\").insertBefore(\"#foo\");\n\t\t * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t *\n\t\t * @name insertBefore\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tinsertBefore: \"before\",\n\t\t\n\t\t/**\n\t\t * Insert all of the matched elements after another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).after(B), in that instead of inserting B after A, you're inserting\n\t\t * A after B.\n\t\t * \n\t\t * @example $(\"p\").insertAfter(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t *\n\t\t * @name insertAfter\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tinsertAfter: \"after\"\n\t},\n\t\n\t/**\n\t * Get the current CSS width of the first matched element.\n\t * \n\t * @example $(\"p\").width();\n\t * @before <p>This is just a test.</p>\n\t * @result \"300px\"\n\t *\n\t * @name width\n\t * @type String\n\t * @cat CSS\n\t */\n\t \n\t/**\n\t * Set the CSS width of every matched element. Be sure to include\n\t * the \"px\" (or other unit of measurement) after the number that you \n\t * specify, otherwise you might get strange results.\n\t * "}]}]
