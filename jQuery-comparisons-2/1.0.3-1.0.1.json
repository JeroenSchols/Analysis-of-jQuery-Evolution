[{"id":"bf98ce747b3f7aa5305128b5be4459041df0306d","instances":[{"path":"./jquery-data/1.0.3/src/ajax/ajax.js","lines":[69,100],"code":"load: function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";\n\n\t// If the second parameter was provided\n\tif ( params ) {\n\t\t// If it's a function\n\t\tif ( params.constructor == Function ) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\t\t\t\n\t\t// Otherwise, build a param string\n\t\t} else {\n\t\t\tparams = jQuery.param( params );\n\t\t\ttype = \"POST\";\n\t\t}\n\t}\n\t\n\tvar self = this;\n\t\n\t// Request the remote document\n\tjQuery.ajax( type, url, params,function(res, status){\n\t\t\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t\t// Inject the HTML into all the matched elements\n\t\t\tself.html(res.responseText)"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[12,43],"code":"jQuery.fn.load = function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";\n\n\t// If the second parameter was provided\n\tif ( params ) {\n\t\t// If it's a function\n\t\tif ( params.constructor == Function ) {\n\t\t\t// We assume that it's the callback\n\t\t\tcallback = params;\n\t\t\tparams = null;\n\t\t\t\n\t\t// Otherwise, build a param string\n\t\t} else {\n\t\t\tparams = jQuery.param( params );\n\t\t\ttype = \"POST\";\n\t\t}\n\t}\n\t\n\tvar self = this;\n\t\n\t// Request the remote document\n\tjQuery.ajax( type, url, params,function(res, status){\n\t\t\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t\t// Inject the HTML into all the matched elements\n\t\t\tself.html(res.responseText).each( callback, [res.responseText, status] );"}]},
{"id":"1c37e3ce0c82168653da2cad046b5c2b28afdb72","instances":[{"path":"./jquery-data/1.0.3/src/ajax/ajax.js","lines":[151,329],"code":"// If IE is used, create a wrapper for the XMLHttpRequest object\nif ( jQuery.browser.msie && typeof XMLHttpRequest == \"undefined\" )\n\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\n\t\t\tnavigator.userAgent.indexOf(\"MSIE 5\") >= 0 ?\n\t\t\t\"Microsoft.XMLHTTP\" : \"Msxml2.XMLHTTP\"\n\t\t);\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\n\n/**\n * Attach a function to be executed whenever an AJAX request begins.\n *\n * @example $(\"#loading\").ajaxStart(function(){\n *   $(this).show();\n * });\n * @desc Show a loading message whenever an AJAX request starts.\n *\n * @name ajaxStart\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever all AJAX requests have ended.\n *\n * @example $(\"#loading\").ajaxStop(function(){\n *   $(this).hide();\n * });\n * @desc Hide a loading message after all the AJAX requests have stopped.\n *\n * @name ajaxStop\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever an AJAX request completes.\n *\n * @example $(\"#msg\").ajaxComplete(function(){\n *   $(this).append(\"<li>Request Complete.</li>\");\n * });\n * @desc Show a message when an AJAX request completes.\n *\n * @name ajaxComplete\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever an AJAX request completes\n * successfully.\n *\n * @example $(\"#msg\").ajaxSuccess(function(){\n *   $(this).append(\"<li>Successful Request!</li>\");\n * });\n * @desc Show a message when an AJAX request completes successfully.\n *\n * @name ajaxSuccess\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever an AJAX request fails.\n *\n * @example $(\"#msg\").ajaxError(function(){\n *   $(this).append(\"<li>Error requesting page.</li>\");\n * });\n * @desc Show a message when an AJAX request fails.\n *\n * @name ajaxError\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * @test stop(); var counter = { complete: 0, success: 0, error: 0 };\n * var success = function() { counter.success++ };\n * var error = function() { counter.error++ };\n * var complete = function() { counter.complete++ };\n * $('#foo').ajaxStart(complete).ajaxStop(complete).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n * // start with successful test\n * $.ajax({url: \"data/name.php\", success: success, error: error, complete: function() {\n *   ok( counter.error == 0, 'Check succesful request' );\n *   ok( counter.success == 2, 'Check succesful request' );\n *   ok( counter.complete == 3, 'Check succesful request' );\n *   counter.error = 0; counter.success = 0; counter.complete = 0;\n *   $.ajaxTimeout(500);\n *   $.ajax({url: \"data/name.php?wait=5\", success: success, error: error, complete: function() {\n *     ok( counter.error == 2, 'Check failed request' );\n *     ok( counter.success == 0, 'Check failed request' );\n *     ok( counter.complete == 3, 'Check failed request' );\n *     start();"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[60,87],"code":"// If IE is used, create a wrapper for the XMLHttpRequest object\nif ( jQuery.browser.msie && typeof XMLHttpRequest == \"undefined\" )\n\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\n\t\t\tnavigator.userAgent.indexOf(\"MSIE 5\") >= 0 ?\n\t\t\t\"Microsoft.XMLHTTP\" : \"Msxml2.XMLHTTP\"\n\t\t);\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\nnew function(){\n\tvar e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess\".split(',');\n\t\n\tfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\tvar o = e[i];\n\t\tjQuery.fn[o] = function(f){\n\t\t\treturn this.bind(o, f);\n\t\t};\n\t};\n};\n\njQuery.extend({\n\n\t/**\n\t * Load a remote page using a GET request\n\t */\n\tget: function( url, data, callback, type, ifModified ) {\n\t\tif ( data.constructor == Function ) {"}]},
{"id":"4b83f66b6fe879a12c05d07fe4e7de4863cc91d6","instances":[{"path":"./jquery-data/1.0.3/src/ajax/ajax.js","lines":[703,737],"code":"// Create the request object\nvar xml = new XMLHttpRequest();\n\t\n// Open the socket\nxml.open(type || \"GET\", url, true);\n\n// Set the correct header, if data is being sent\nif ( data )\n\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n// Set the If-Modified-Since header, if ifModified mode.\nif ( ifModified )\n\txml.setRequestHeader(\"If-Modified-Since\",\n\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n// Set header so the called script knows that it's an XMLHttpRequest\nxml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t\n// Make sure the browser sends the right content length\nif ( xml.overrideMimeType )\n\txml.setRequestHeader(\"Connection\", \"close\");\n\n// Wait for a response to come back\nvar onreadystatechange = function(istimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\n\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\n\t\t// Make sure that the request was successful or notmodified\n\t\tif ( status != \"error\" ) {\n\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\tvar modRes;"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[150,184],"code":"// Create the request object\nvar xml = new XMLHttpRequest();\n\t\n// Open the socket\nxml.open(type || \"GET\", url, true);\n\n// Set the correct header, if data is being sent\nif ( data )\n\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n// Set the If-Modified-Since header, if ifModified mode.\nif ( ifModified )\n\txml.setRequestHeader(\"If-Modified-Since\",\n\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n// Set header so calling script knows that it's an XMLHttpRequest\nxml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t\n// Make sure the browser sends the right content length\nif ( xml.overrideMimeType )\n\txml.setRequestHeader(\"Connection\", \"close\");\n\n// Wait for a response to come back\nvar onreadystatechange = function(istimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\n\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\n\t\t// Make sure that the request was successful or notmodified\n\t\tif ( status != \"error\" ) {\n\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");"}]},
{"id":"c11ed4584777b3f030b34c075a03d018f56e515f","instances":[{"path":"./jquery-data/1.0.3/src/ajax/ajax.js","lines":[569,843],"code":"/**\n * Load a remote page using an HTTP request. This function is the primary\n * means of making AJAX requests using jQuery. $.ajax() takes one property,\n * an object of key/value pairs, that're are used to initalize the request.\n *\n * These are all the key/values that can be passed in to 'prop':\n *\n * (String) type - The type of request to make (e.g. \"POST\" or \"GET\").\n *\n * (String) url - The URL of the page to request.\n * \n * (String) data - A string of data to be sent to the server (POST only).\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server (e.g. \"xml\", \"html\", \"script\", or \"json\").\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request, default is false, ignoring\n * the Last-Modified header\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 seconds,\n * see $.ajaxTimeout\n *\n * (Boolean) global - Wheather to trigger global AJAX event handlers for\n * this request, default is true. Set to true to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of error that occurred.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type the success of the request.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @test stop();\n * $.ajax({\n *   type: \"GET\",\n *   url: \"data/name.php?name=foo\",\n *   success: function(msg){\n *     ok( msg == 'bar', 'Check for GET' );\n *     start();\n *   }\n * });\n *\n * @test stop();\n * $.ajax({\n *   type: \"POST\",\n *   url: \"data/name.php\",\n *   data: \"name=peter\",\n *   success: function(msg){\n *     ok( msg == 'pan', 'Check for POST' );\n *     start();\n *   }\n * });\n *\n * @test stop();\n * foobar = undefined;\n * foo = undefined;\n * var verifyEvaluation = function() {\n *   ok( foobar == \"bar\", 'Check if script src was evaluated for datatype html' );\n *   start();\n * };\n * $.ajax({\n *   dataType: \"html\",\n *   url: \"data/test.html\",\n *   success: function(data) {\n *     ok( data.match(/^html text/), 'Check content for datatype html' );\n *     ok( foo == \"foo\", 'Check if script was evaluated for datatype html' );\n *     setTimeout(verifyEvaluation, 600);\n *   }\n * });\n *\n * @test stop();\n * $.ajax({\n *   url: \"data/with_fries.xml\", dataType: \"xml\", type: \"GET\", data: \"\", success: function(resp) {\n *     ok( $(\"properties\", resp).length == 1, 'properties in responseXML' );\n *     ok( $(\"jsconf\", resp).length == 1, 'jsconf in responseXML' );"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[129,278],"code":"/**\n * A common wrapper for making XMLHttpRequests\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;\n\t\tdata = type.data;\n\t\turl = type.url;\n\t\ttype = type.type;\n\t}\n\t\n\t// Watch for a new set of requests\n\tif ( ! jQuery.active++ )\n\t\tjQuery.event.trigger( \"ajaxStart\" );\n\n\tvar requestDone = false;\n\n\t// Create the request object\n\tvar xml = new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(type || \"GET\", url, true);\n\t\n\t// Set the correct header, if data is being sent\n\tif ( data )\n\t\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( ifModified )\n\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\t\n\t// Set header so calling script knows that it's an XMLHttpRequest\n\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Make sure the browser sends the right content length\n\tif ( xml.overrideMimeType )\n\t\txml.setRequestHeader(\"Connection\", \"close\");\n\t\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(istimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\n\t\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\tif ( ifModified && modRes ) jQuery.lastModified[url] = modRes;\n\t\t\t\t\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( success ) success( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\" );\n\t\t\t\n\t\t\t// Otherwise, the request was not successful\n\t\t\t} else {\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( error ) error( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxError\" );\n\t\t\t}\n\t\t\t\n\t\t\t// The request was completed\n\t\t\tjQuery.event.trigger( \"ajaxComplete\" );\n\t\t\t\n\t\t\t// Handle the global AJAX counter\n\t\t\tif ( ! --jQuery.active )\n\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t\t// Process result\n\t\t\tif ( ret ) ret(xml, status);\n\t\t\t\n\t\t\t// Stop memory leaks\n\t\t\txml.onreadystatechange = function(){};\n\t\t\txml = null;\n\t\t\t\n\t\t}\n\t};\n\txml.onreadystatechange = onreadystatechange;\n\t\n\t// Timeout checker\n\tif(jQuery.timeout > 0)\n\t\tsetTimeout(function(){\n\t\t\t// Check to see if the request is still happening\n\t\t\tif (xml) {\n\t\t\t\t// Cancel the request\n\t\t\t\txml.abort();\n\n\t\t\t\tif ( !requestDone ) onreadystatechange( \"timeout\" );"}]},
{"id":"97417a168d52566e4afab02c61eb24855836095e","instances":[{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[1,83],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t * \n\t * @test var count = 0;\n\t * var fn1 = function() { count++; }\n\t * var fn2 = function() { count--; }\n\t * var link = $('#mark');\n\t * link.click().toggle(fn1, fn2).click().click().click().click().click();\n\t * ok( count == 1, \"Check for toggle(fn, fn)\" );\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1,76],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;"}]},
{"id":"d727e34c4810e29ab3d74d954c029ea6e5551abc","instances":[{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[50,156],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[43,147],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them"}]},
{"id":"6ba632a74fec3129dc04ddd298275f7b21545af3","instances":[{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[142,1577],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tfor ( var i = 0; i < jQuery.readyList.length; i++ )\n\t\t\t\t\tjQuery.readyList[i].apply( document );\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t\t/**\n\t\t * Bind a function to the scroll event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name scroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Trigger the scroll event of each matched element. This causes all of the functions\n\t\t * that have been bound to thet scroll event to be executed.\n\t\t *\n\t\t * @example $(\"p\").scroll();\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello');\n\t\t *\n\t\t * @name scroll\n\t\t * @type jQuery\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the scroll event of each matched element, which will only be executed once.\n\t\t * Unlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\n\t\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t\t *\n\t\t * @example $(\"p\").onescroll( function() { alert(\"Hello\"); } );\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello'); // Only executed for the first scroll\n\t\t *\n\t\t * @name onescroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Removes a bound scroll event from each of the matched\n\t\t * elements. You must pass the identical function that was used in the original \n\t\t * bind method.\n\t\t *\n\t\t * @example $(\"p\").unscroll( myFunction );\n\t\t * @before <p onscroll=\"myFunction\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unscroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to unbind from the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Removes all bound scroll events from each of the matched elements.\n\t\t *\n\t\t * @example $(\"p\").unscroll();\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unscroll\n\t\t * @type jQuery\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the submit event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").submit( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onsubmit=\"alert('Hello');\">Hello</p>\n\t\t *"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[133,1585],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tfor ( var i = 0; i < jQuery.readyList.length; i++ )\n\t\t\t\t\tjQuery.readyList[i].apply( document );\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t\t/**\n\t\t * Bind a function to the blur event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").blur( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onblur=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name blur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Trigger the blur event of each matched element. This causes all of the functions\n\t\t * that have been bound to thet blur event to be executed.\n\t\t *\n\t\t * @example $(\"p\").blur();\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello');\n\t\t *\n\t\t * @name blur\n\t\t * @type jQuery\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the blur event of each matched element, which will only be executed once.\n\t\t * Unlike a call to the normal .blur() method, calling .oneblur() causes the bound function to be\n\t\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t\t *\n\t\t * @example $(\"p\").oneblur( function() { alert(\"Hello\"); } );\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello'); // Only executed for the first blur\n\t\t *\n\t\t * @name oneblur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Removes a bound blur event from each of the matched\n\t\t * elements. You must pass the identical function that was used in the original \n\t\t * bind method.\n\t\t *\n\t\t * @example $(\"p\").unblur( myFunction );\n\t\t * @before <p onblur=\"myFunction\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unblur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to unbind from the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Removes all bound blur events from each of the matched elements.\n\t\t *\n\t\t * @example $(\"p\").unblur();\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unblur\n\t\t * @type jQuery\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the focus event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name focus\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the focus event on each of the matched elements."}]},
{"id":"71484ad04fa686e03da85b00bffa6b4dc336d58d","instances":[{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[167,1594],"code":"\t/**\n\t * Bind a function to the scroll event of each matched element.\n\t *\n\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Trigger the scroll event of each matched element. This causes all of the functions\n\t * that have been bound to thet scroll event to be executed.\n\t *\n\t * @example $(\"p\").scroll();\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Bind a function to the scroll event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onescroll( function() { alert(\"Hello\"); } );\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello'); // Only executed for the first scroll\n\t *\n\t * @name onescroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Removes a bound scroll event from each of the matched\n\t * elements. You must pass the identical function that was used in the original \n\t * bind method.\n\t *\n\t * @example $(\"p\").unscroll( myFunction );\n\t * @before <p onscroll=\"myFunction\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unscroll\n\t * @type jQuery\n\t * @param Function fn A function to unbind from the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Removes all bound scroll events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unscroll();\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unscroll\n\t * @type jQuery\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element.\n\t *\n\t * @example $(\"p\").submit( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onsubmit=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @param Function fn A function to bind to the submit event on each of the matched elements.\n\t * @cat Events/Form\n\t */\n\n\t/**\n\t * Trigger the submit event of each matched element. This causes all of the functions\n\t * that have been bound to thet submit event to be executed.\n\t *\n\t * @example $(\"p\").submit();\n\t * @before <p onsubmit=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @cat Events/Form\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .submit() method, calling .onesubmit() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onesubmit( function() { alert(\"Hello\"); } );"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[211,1602],"code":"\t/**\n\t * Removes all bound blur events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unblur();\n\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unblur\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element.\n\t *\n\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the focus event of each matched element. This causes all of the functions\n\t * that have been bound to thet focus event to be executed.\n\t *\n\t * @example $(\"p\").focus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .focus() method, calling .onefocus() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onefocus( function() { alert(\"Hello\"); } );\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello'); // Only executed for the first focus\n\t *\n\t * @name onefocus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Removes a bound focus event from each of the matched\n\t * elements. You must pass the identical function that was used in the original \n\t * bind method.\n\t *\n\t * @example $(\"p\").unfocus( myFunction );\n\t * @before <p onfocus=\"myFunction\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unfocus\n\t * @type jQuery\n\t * @param Function fn A function to unbind from the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Removes all bound focus events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unfocus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unfocus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the load event of each matched element.\n\t *\n\t * @example $(\"p\").load( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onload=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param Function fn A function to bind to the load event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the load event of each matched element. This causes all of the functions\n\t * that have been bound to thet load event to be executed.\n\t *\n\t * @example $(\"p\").load();\n\t * @before <p onload=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');"}]},
{"id":"81b33d4ce1a047b3a46923739162c7af47d2c6b2","instances":[{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[1604,1623],"code":"\t\treturn this.bind(o, handler);\n\t};\n\t\t\n};\n\n// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera ) {\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\n} else if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1614,1635],"code":"\t\t\t\treturn f.apply(this, [e]);\n\t\t\t});\n\t\t});\n\t};\n\t\t\n};\n\n// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera ) {\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\n} else if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"}]},
{"id":"f65916e9963cdf0c02de738b383422059a445e92","instances":[{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[1,177],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[1,148],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"}]},
{"id":"18b7bf467c84a42e65ec5ef83b21059eb8f483f6","instances":[{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[288,377],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @test stop();\n\t * var hash = {opacity: 'show'};\n\t * var hashCopy = $.extend({}, hash);\n\t * $('#foo').animate(hash, 'fast', function() {\n\t *  ok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t *  start();\n\t * });\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {\n\t\tif ( e.notAuto ) return;\n\n\t\tif ( p == \"height\" && e.scrollHeight != parseInt(jQuery.curCSS(e,p)) ) return;\n\t\tif ( p == \"width\" && e.scrollWidth != parseInt(jQuery.curCSS(e,p)) ) return;\n\n\t\t// Remember the original height\n\t\tvar a = e.style[p];\n\n\t\t// Figure out the size of the height right now\n\t\tvar o = jQuery.curCSS(e,p,1);"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[259,316],"code":"\t/**\n\t * @private\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = prop;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {\n\t\tif ( e.notAuto ) return;\n\n\t\tif ( p == \"height\" && e.scrollHeight != parseInt(jQuery.curCSS(e,p)) ) return;\n\t\tif ( p == \"width\" && e.scrollWidth != parseInt(jQuery.curCSS(e,p)) ) return;\n\n\t\t// Remember the original height\n\t\tvar a = e.style[p];\n\n\t\t// Figure out the size of the height right now\n\t\tvar o = jQuery.curCSS(e,p,1);"}]},
{"id":"ca89bf93742de29f7580cd40f89ea3d6f9775b24","instances":[{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[385,425],"code":"\t// See what the size of \"auto\" is\n\tvar n = jQuery.curCSS(e,p,1);\n\n\t// Revert back to the original size\n\tif ( o != n && n != \"auto\" ) {\n\t\te.style[p] = a;\n\t\te.notAuto = true;\n\t}\n},\n\nspeed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[324,364],"code":"\t// See what the size of \"auto\" is\n\tvar n = jQuery.curCSS(e,p,1);\n\n\t// Revert back to the original size\n\tif ( o != n && n != \"auto\" ) {\n\t\te.style[p] = a;\n\t\te.notAuto = true;\n\t}\n},\n\nspeed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"}]},
{"id":"a8075081d77066fd1c8f299fcc1522590fd1ba06","instances":[{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[424,452],"code":"\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[363,391],"code":"\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;"}]},
{"id":"25a02c8a1049729a6a33e36970a163d1db3140aa","instances":[{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[497,519],"code":"\tz.custom(0, z.el.orig[prop]);\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\t\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;\n\n\t// Begin the animation\n\tz.custom(z.el.orig[prop], 0);\n};\n\t\n// Remember  the overflow of the element\nif ( !z.el.oldOverflow )\n\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[441,463],"code":"\tz.custom( 0, z.el.orig[prop] );\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\t\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;\n\n\t// Begin the animation\n\tz.custom(z.el.orig[prop], 0);\n};\n\t\n// IE has trouble with opacity if it does not have layout\nif ( jQuery.browser.msie && !z.el.currentStyle.hasLayout )\n\ty.zoom = \"1\";"}]},
{"id":"4ea05fbc0b970daa90d14f2a8b28a4fc3cdc1bc3","instances":[{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[518,553],"code":"if ( !z.el.oldOverflow )\n\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\t\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\t\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\t\n\tif (t > z.o.duration + z.startTime) {\n\t\t// Stop the timer\n\t\tclearInterval(z.timer);\n\t\tz.timer = null;\n\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tz.el.curAnim[ prop ] = true;\n\t\t\n\t\tvar done = true;\n\t\tfor ( var i in z.el.curAnim )\n\t\t\tif ( z.el.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\t\t\t\t\n\t\tif ( done ) {\n\t\t\t// Reset the overflow\n\t\t\ty.overflow = z.el.oldOverflow;\n\t\t\n\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\tif ( z.o.hide ) \n\t\t\t\ty.display = 'none';\n\t\t\t\n\t\t\t// Reset the property, if the item has been hidden\n\t\t\tif ( z.o.hide ) {\n\t\t\t\tfor ( var p in z.el.curAnim ) {"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[466,501],"code":"if ( !z.el.oldOverlay )\n\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\t\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\t\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\t\n\tif (t > z.o.duration + z.startTime) {\n\t\t// Stop the timer\n\t\tclearInterval(z.timer);\n\t\tz.timer = null;\n\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tz.el.curAnim[ prop ] = true;\n\t\t\n\t\tvar done = true;\n\t\tfor ( var i in z.el.curAnim )\n\t\t\tif ( z.el.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\t\t\t\t\n\t\tif ( done ) {\n\t\t\t// Reset the overflow\n\t\t\ty.overflow = z.el.oldOverflow;\n\t\t\n\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\tif ( z.o.hide ) \n\t\t\t\ty.display = 'none';\n\t\t\t\n\t\t\t// Reset the property, if the item has been hidden\n\t\t\tif ( z.o.hide ) {\n\t\t\t\tfor ( var p in z.el.curAnim ) {"}]},
{"id":"04e651de6aa8423b66836983843244a1d2b3f6fe","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[192,297],"code":"// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\njQuery.fn = jQuery.prototype = {\n\t/**\n\t * The current version of jQuery.\n\t *\n\t * @private\n\t * @property\n\t * @name jquery\n\t * @type String\n\t * @cat Core\n\t */\n\tjquery: \"@VERSION\",\n\n\t/**\n\t * The number of elements currently matched.\n\t *\n\t * @example $(\"img\").length;\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result 2\n\t *\n\t * @test ok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\n\t *\n\t * @property\n\t * @name length\n\t * @type Number\n\t * @cat Core\n\t */\n\n\t/**\n\t * The number of elements currently matched.\n\t *\n\t * @example $(\"img\").size();\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result 2\n\t *\n\t * @test ok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );\n\t *\n\t * @name size\n\t * @type Number\n\t * @cat Core\n\t */\n\tsize: function() {\n\t\treturn this.length;\n\t},\n\n\t/**\n\t * Access all matched elements. This serves as a backwards-compatible\n\t * way of accessing all matched elements (other than the jQuery object\n\t * itself, which is, in fact, an array of elements).\n\t *\n\t * @example $(\"img\").get();\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result [ <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/> ]\n\t *\n\t * @test isSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n\t *\n\t * @name get\n\t * @type Array<Element>\n\t * @cat Core\n\t */\n\n\t/**\n\t * Access a single matched element. num is used to access the\n\t * Nth element matched.\n\t *\n\t * @example $(\"img\").get(1);\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result [ <img src=\"test1.jpg\"/> ]\n\t *\n\t * @test ok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\n\t *\n\t * @name get\n\t * @type Element\n\t * @param Number num Access the element in the Nth position.\n\t * @cat Core\n\t */\n\n\t/**\n\t * Set the jQuery object to an array of elements.\n\t *\n\t * @example $(\"img\").get([ document.body ]);\n\t * @result $(\"img\").get() == [ document.body ]\n\t *\n\t * @private\n\t * @name get\n\t * @type jQuery\n\t * @param Elements elems An array of elements\n\t * @cat Core\n\t */\n\tget: function( num ) {\n\t\t// Watch for when an array (of elements) is passed in\n\t\tif ( num && num.constructor == Array ) {\n\n\t\t\t// Use a tricky hack to make the jQuery object\n\t\t\t// look and feel like an array\n\t\t\tthis.length = 0;\n\t\t\t[].push.apply( this, num );\n"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[75,180],"code":"// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\njQuery.fn = jQuery.prototype = {\n\t/**\n\t * The current SVN version of jQuery.\n\t *\n\t * @private\n\t * @property\n\t * @name jquery\n\t * @type String\n\t * @cat Core\n\t */\n\tjquery: \"$Rev$\",\n\t\n\t/**\n\t * The number of elements currently matched.\n\t *\n\t * @example $(\"img\").length;\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result 2\n\t *\n\t * @test cmpOK( $(\"div\").length, \"==\", 2, \"Get Number of Elements Found\" );\n\t *\n\t * @property\n\t * @name length\n\t * @type Number\n\t * @cat Core\n\t */\n\t\n\t/**\n\t * The number of elements currently matched.\n\t *\n\t * @example $(\"img\").size();\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result 2\n\t *\n\t * @test cmpOK( $(\"div\").size(), \"==\", 2, \"Get Number of Elements Found\" );\n\t *\n\t * @name size\n\t * @type Number\n\t * @cat Core\n\t */\n\tsize: function() {\n\t\treturn this.length;\n\t},\n\t\n\t/**\n\t * Access all matched elements. This serves as a backwards-compatible\n\t * way of accessing all matched elements (other than the jQuery object\n\t * itself, which is, in fact, an array of elements).\n\t *\n\t * @example $(\"img\").get();\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result [ <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/> ]\n\t *\n\t * @test isSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n\t *\n\t * @name get\n\t * @type Array<Element>\n\t * @cat Core\n\t */\n\t \n\t/**\n\t * Access a single matched element. num is used to access the \n\t * Nth element matched.\n\t *\n\t * @example $(\"img\").get(1);\n\t * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n\t * @result [ <img src=\"test1.jpg\"/> ]\n\t *\n\t * @test cmpOK( $(\"div\").get(0), \"==\", document.getElementById(\"main\"), \"Get A Single Element\" );\n\t *\n\t * @name get\n\t * @type Element\n\t * @param Number num Access the element in the Nth position.\n\t * @cat Core\n\t */\n\t \n\t/**\n\t * Set the jQuery object to an array of elements.\n\t *\n\t * @example $(\"img\").get([ document.body ]);\n\t * @result $(\"img\").get() == [ document.body ]\n\t *\n\t * @private\n\t * @name get\n\t * @type jQuery\n\t * @param Elements elems An array of elements\n\t * @cat Core\n\t */\n\tget: function( num ) {\n\t\t// Watch for when an array (of elements) is passed in\n\t\tif ( num && num.constructor == Array ) {\n\n\t\t\t// Use a tricky hack to make the jQuery object\n\t\t\t// look and feel like an array\n\t\t\tthis.length = 0;\n\t\t\t[].push.apply( this, num );\n\t\t\t"}]},
{"id":"5cbecf09b510fa8e50f76f57ed71cb3681b8dc6e","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[382,688],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n *\n * @test ok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n * ok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n * ok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n * ok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n * ok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n * ok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n * ok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n * ok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n * ok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n * ok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n * ok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n * ok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM\n */\n\n/**\n * Set a hash of key/value object properties to all matched elements.\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n *\n * @test var pass = true;\n * $(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n *   if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n * });\n * ok( pass, \"Set Multiple Attributes\" );\n *\n * @name attr\n * @type jQuery\n * @param Hash prop A set of key/value pairs to set as object properties.\n * @cat DOM\n */\n\n/**\n * Set a single property to a value, on all matched elements.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n *\n * @test var div = $(\"div\");\n * div.attr(\"foo\", \"bar\");\n * var pass = true;\n * for ( var i = 0; i < div.size(); i++ ) {\n *   if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n * }\n * ok( pass, \"Set Attribute\" );\n *\n * $(\"#name\").attr('name', 'something');\n * ok( $(\"#name\").name() == 'something', 'Set name attribute' );\n * $(\"#check2\").attr('checked', true);\n * ok( document.getElementById('check2').checked == true, 'Set checked attribute' );\n * $(\"#check2\").attr('checked', false);\n * ok( document.getElementById('check2').checked == false, 'Set checked attribute' );\n * $(\"#text1\").attr('readonly', true);\n * ok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\n * $(\"#text1\").attr('readonly', false);\n * ok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\n *\n * @test stop();\n * $.get('data/dashboard.xml', function(xml) { \n *   var titles = [];\n *   $('tab', xml).each(function() {\n *     titles.push($(this).attr('title'));\n *   });\n *   ok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n *   ok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n *   start();\n * });\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM\n */\nattr: function( key, value, type ) {\n\t// Check to see if we're setting style values\n\treturn key.constructor != String || value != undefined ?\n\t\tthis.each(function(){\n\t\t\t// See if we're setting a hash of styles\n\t\t\tif ( value == undefined )\n\t\t\t\t// Set all the styles\n\t\t\t\tfor ( var prop in key )"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[233,424],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retreive a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM\n */\n \n/**\n * Set a hash of key/value object properties to all matched elements.\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n *\n * @test var pass = true;\n * $(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n *   if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n * });\n * ok( pass, \"Set Multiple Attributes\" );\n *\n * @name attr\n * @type jQuery\n * @param Hash prop A set of key/value pairs to set as object properties.\n * @cat DOM\n */\n \n/**\n * Set a single property to a value, on all matched elements.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n *\n * @test var div = $(\"div\");\n * div.attr(\"foo\", \"bar\");\n * var pass = true;\n * for ( var i = 0; i < div.size(); i++ ) {\n *   if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n * }\n * ok( pass, \"Set Attribute\" );\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM\n */\nattr: function( key, value, type ) {\n\t// Check to see if we're setting style values\n\treturn key.constructor != String || value != undefined ?\n\t\tthis.each(function(){\n\t\t\t// See if we're setting a hash of styles\n\t\t\tif ( value == undefined )\n\t\t\t\t// Set all the styles\n\t\t\t\tfor ( var prop in key )\n\t\t\t\t\tjQuery.attr(\n\t\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\t\tprop, key[prop]\n\t\t\t\t\t);\n\t\t\t\n\t\t\t// See if we're setting a single key/value style\n\t\t\telse\n\t\t\t\tjQuery.attr(\n\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\tkey, value\n\t\t\t\t);\n\t\t}) :\n\t\t\n\t\t// Look for the case where we're accessing a style value\n\t\tjQuery[ type || \"attr\" ]( this[0], key );\n},\n\n/**\n * Access a style property on the first matched element.\n * This method makes it easy to retreive a style property value\n * from the first matched element.\n *\n * @example $(\"p\").css(\"red\");\n * @before <p style=\"color:red;\">Test Paragraph.</p>\n * @result red\n *\n * @name css\n * @type Object\n * @param String name The name of the property to access.\n * @cat CSS\n */\n \n/**\n * Set a hash of key/value style properties to all matched elements.\n * This serves as the best way to set a large number of style properties"}]},
{"id":"72ff508b8999fe3697f2eae3c6953439b6ad2327","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1051,1057],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[601,607],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;"}]},
{"id":"9daefc4cc4fc7251ddb638ac4113fd21d9478d93","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1333,1423],"code":"\treturn obj;\n};\n\njQuery.extend({\n\t/**\n\t * @private\n\t * @name init\n\t * @type undefined\n\t * @cat Core\n\t */\n\tinit: function(){\n\t\tjQuery.initDone = true;\n\n\t\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(a) {\n\t\t\t\tvar ret = jQuery.map(this,n);\n\t\t\t\tif ( a && a.constructor == String )\n\t\t\t\t\tret = jQuery.filter(a,ret).r;\n\t\t\t\treturn this.pushStack( ret, arguments );\n\t\t\t};\n\t\t});\n\n\t\tjQuery.each( jQuery.macros.to, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(){\n\t\t\t\tvar a = arguments;\n\t\t\t\treturn this.each(function(){\n\t\t\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t\t\tjQuery(a[j])[n]( this );\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\n\t\tjQuery.each( jQuery.macros.each, function(i,n){\n\t\t\tjQuery.fn[ i ] = function() {\n\t\t\t\treturn this.each( n, arguments );\n\t\t\t};\n\t\t});\n\n\t\tjQuery.each( jQuery.macros.filter, function(i,n){\n\t\t\tjQuery.fn[ n ] = function(num,fn) {\n\t\t\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t\t\t};\n\t\t});\n\n\t\tjQuery.each( jQuery.macros.attr, function(i,n){\n\t\t\tn = n || i;\n\t\t\tjQuery.fn[ i ] = function(h) {\n\t\t\t\treturn h == undefined ?\n\t\t\t\t\tthis.length ? this[0][n] : null :\n\t\t\t\t\tthis.attr( n, h );\n\t\t\t};\n\t\t});\n\n\t\tjQuery.each( jQuery.macros.css, function(i,n){\n\t\t\tjQuery.fn[ n ] = function(h) {\n\t\t\t\treturn h == undefined ?\n\t\t\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\t\t\tthis.css( n, h );\n\t\t\t};\n\t\t});\n\n\t},\n\n\t/**\n\t * A generic iterator function, which can be used to seemlessly\n\t * iterate over both objects and arrays. This function is not the same\n\t * as $().each() - which is used to iterate, exclusively, over a jQuery\n\t * object. This function can be used to iterate over anything.\n\t *\n\t * @example $.each( [0,1,2], function(i){\n\t *   alert( \"Item #\" + i + \": \" + this );\n\t * });\n\t * @desc This is an example of iterating over the items in an array, accessing both the current item and its index.\n\t *\n\t * @example $.each( { name: \"John\", lang: \"JS\" }, function(i){\n\t *   alert( \"Name: \" + i + \", Value: \" + this );\n\t * });\n\t * @desc This is an example of iterating over the properties in an Object, accessing both the current item and its key.\n\t *\n\t * @name $.each\n\t * @param Object obj The object, or array, to iterate over.\n\t * @param Function fn The function that will be executed on every object.\n\t * @type Object\n\t * @cat Javascript\n\t */\n\teach: function( obj, fn, args ) {\n\t\tif ( obj.length == undefined )\n\t\t\tfor ( var i in obj )\n\t\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\t\telse\n\t\t\tfor ( var i = 0; i < obj.length; i++ )"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[800,877],"code":"\treturn obj;\n};\n\njQuery.extend({\n\t/**\n\t * @private\n\t * @name init\n\t * @type undefined\n\t */\n\tinit: function(){\n\t\tjQuery.initDone = true;\n\t\t\n\t\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(a) {\n\t\t\t\tvar ret = jQuery.map(this,n);\n\t\t\t\tif ( a && a.constructor == String )\n\t\t\t\t\tret = jQuery.filter(a,ret).r;\n\t\t\t\treturn this.pushStack( ret, arguments );\n\t\t\t};\n\t\t});\n\t\t\n\t\tjQuery.each( jQuery.macros.to, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(){\n\t\t\t\tvar a = arguments;\n\t\t\t\treturn this.each(function(){\n\t\t\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t\t\t$(a[j])[n]( this );\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t\t\n\t\tjQuery.each( jQuery.macros.each, function(i,n){\n\t\t\tjQuery.fn[ i ] = function() {\n\t\t\t\treturn this.each( n, arguments );\n\t\t\t};\n\t\t});\n\n\t\tjQuery.each( jQuery.macros.filter, function(i,n){\n\t\t\tjQuery.fn[ n ] = function(num,fn) {\n\t\t\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t\t\t};\n\t\t});\n\t\t\n\t\tjQuery.each( jQuery.macros.attr, function(i,n){\n\t\t\tn = n || i;\n\t\t\tjQuery.fn[ i ] = function(h) {\n\t\t\t\treturn h == undefined ?\n\t\t\t\t\tthis.length ? this[0][n] : null :\n\t\t\t\t\tthis.attr( n, h );\n\t\t\t};\n\t\t});\n\t\n\t\tjQuery.each( jQuery.macros.css, function(i,n){\n\t\t\tjQuery.fn[ n ] = function(h) {\n\t\t\t\treturn h == undefined ?\n\t\t\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\t\t\tthis.css( n, h );\n\t\t\t};\n\t\t});\n\t\n\t},\n\t\n\t/**\n\t * A generic iterator function, which can be used to seemlessly\n\t * iterate over both objects and arrays.\n\t *\n\t * @name jQuery.each\n\t * @param Object obj The object, or array, to iterate over.\n\t * @param Object fn The function that will be executed on every object.\n\t * @type Object\n\t * @cat Javascript\n\t */\n\teach: function( obj, fn, args ) {\n\t\tif ( obj.length == undefined )\n\t\t\tfor ( var i in obj )\n\t\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\t\telse\n\t\t\tfor ( var i = 0; i < obj.length; i++ )"}]},
{"id":"2664a7580d0659bb13bbf73631b27a434c96059b","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1444,1482],"code":"\t\t\to.className = classes.join(' ');\n\t\t}\n\t},\n\thas: function(e,a) {\n\t\tif ( e.className != undefined )\n\t\t\te = e.className;\n\t\treturn new RegExp(\"(^|\\\\s)\" + a + \"(\\\\s|$)\").test(e);\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tfor ( var i in d ) {\n\t\t\told[\"padding\" + d[i]] = 0;\n\t\t\told[\"border\" + d[i] + \"Width\"] = 0;\n\t\t}\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[890,927],"code":"\t\t\t\tnew RegExp(\"(^|\\\\s*\\\\b[^-])\"+c+\"($|\\\\b(?=[^-]))\", \"g\"), \"\");\n\t},\n\thas: function(e,a) {\n\t\tif ( e.className != undefined )\n\t\t\te = e.className;\n\t\treturn new RegExp(\"(^|\\\\s)\" + a + \"(\\\\s|$)\").test(e);\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tfor ( var i in d ) {\n\t\t\told[\"padding\" + d[i]] = 0;\n\t\t\told[\"border\" + d[i] + \"Width\"] = 0;\n\t\t}\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = $(e.cloneNode(true)).css({"}]},
{"id":"e3e8436db6249289bc8ed154ca6dfc107b45accf","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1517,1526],"code":"if (!force && elem.style[prop]) {\n\n\tret = elem.style[prop];\n\n} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\n} else if (document.defaultView && document.defaultView.getComputedStyle) {"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[948,957],"code":"if (!force && elem.style[prop]) {\n\n\tret = elem.style[prop];\n\n} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase()}); \n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\n} else if (document.defaultView && document.defaultView.getComputedStyle) {"}]},
{"id":"2ef66612c86ada1b47d810bdf192b582d952331e","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1578,1622],"code":"\t\t\tr.push(\targ.nodeType ? arg : document.createTextNode(arg.toString()) );\n\t}\n\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\n\t\t// Text Check\n\t\tcontains: \"jQuery.fn.text.apply([a]).indexOf(m[3])>=0\",\n\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\n\t\t// Form attributes\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected || jQuery.attr(a, 'selected')\",\n\n\t\t// Form elements\n\t\ttext: \"a.type=='text'\","},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1009,1051],"code":"\t\t\t\tr.push(\ta[i].nodeType ? a[i] : document.createTextNode(a[i].toString()) );\n\t}\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\t\t\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\t\t\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\t\t\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\",\n\t\t\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\t\t\n\t\t// Form elements\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected\"\n\t},\n\t\".\": \"jQuery.className.has(a,m[2])\","}]},
{"id":"e2d7b8723fb1dc3d54045a9aa21c4dd3d2d86fc7","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1629,1878],"code":"\t\treset: \"a.type=='reset'\",\n\t\tbutton: \"a.type=='button'\",\n\t\tinput: \"a.nodeName.toLowerCase().match(/input|select|textarea|button/)\"\n\t},\n\t\".\": \"jQuery.className.has(a,m[2])\",\n\t\"@\": {\n\t\t\"=\": \"z==m[4]\",\n\t\t\"!=\": \"z!=m[4]\",\n\t\t\"^=\": \"z && !z.indexOf(m[4])\",\n\t\t\"$=\": \"z && z.substr(z.length - m[4].length,m[4].length)==m[4]\",\n\t\t\"*=\": \"z && z.indexOf(m[4])>=0\",\n\t\t\"\": \"z\"\n\t},\n\t\"[\": \"jQuery.find(m[2],a).length\"\n},\n\ntoken: [\n\t\"\\\\.\\\\.|/\\\\.\\\\.\", \"a.parentNode\",\n\t\">|/\", \"jQuery.sibling(a.firstChild)\",\n\t\"\\\\+\", \"jQuery.sibling(a).next\",\n\t\"~\", function(a){\n\t\tvar r = [];\n\t\tvar s = jQuery.sibling(a);\n\t\tif ( s.n > 0 )\n\t\t\tfor ( var i = s.n; i < s.length; i++ )\n\t\t\t\tr.push( s[i] );\n\t\treturn r;\n\t}\n],\n\n/**\n *\n * @test t( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n * t( \"Element Selector\", \"body\", [\"body\"] );\n * t( \"Element Selector\", \"html\", [\"html\"] );\n * ok( $(\"*\").size() >= 30, \"Element Selector\" );\n * t( \"Parent Element\", \"div div\", [\"foo\"] );\n *\n * t( \"ID Selector\", \"#body\", [\"body\"] );\n * t( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n * t( \"ID Selector w/ Element\", \"ul#first\", [] );\n *\n * t( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n * t( \"Class Selector\", \".blog.link\", [\"simon\"] );\n * t( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n * t( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n *\n * t( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * t( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * t( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * t( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n *\n * t( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n * t( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n * t( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n * t( \"Adjacent\", \"a + a\", [\"groups\"] );\n * t( \"Adjacent\", \"a +a\", [\"groups\"] );\n * t( \"Adjacent\", \"a+ a\", [\"groups\"] );\n * t( \"Adjacent\", \"a+a\", [\"groups\"] );\n * t( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n * t( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n * t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * t( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n * t( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n * t( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n * \n * t( \"Non-existing part of attribute\", \"[@name*=bla]\", [] ); \n * t( \"Non-existing start of attribute\", \"[@name^=bla]\", [] ); \n * t( \"Non-existing end of attribute\", \"[@name$=bla]\", [] ); \n *\n * t( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n * t( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n * t( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n * t( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * t( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * t( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n *\n * t( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n * t( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n * t( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n * t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * t( \"Last Child\", \"p:last-child\", [\"sap\"] );\n * t( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n * t( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n * t( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\n * t( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n * t( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n * t( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\n * t( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n * t( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n * t( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );\n * t( \"Not\", \"a.blog:not(.link)\", [\"mark\"] );\n *\n * ok( jQuery.find(\"//*\").length >= 30, \"All Elements (//*)\" );\n * t( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\n * t( \"Absolute Path\", \"/html/body\", [\"body\"] );"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1047,1271],"code":"\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected\"\n\t},\n\t\".\": \"jQuery.className.has(a,m[2])\",\n\t\"@\": {\n\t\t\"=\": \"z==m[4]\",\n\t\t\"!=\": \"z!=m[4]\",\n\t\t\"^=\": \"!z.indexOf(m[4])\",\n\t\t\"$=\": \"z.substr(z.length - m[4].length,m[4].length)==m[4]\",\n\t\t\"*=\": \"z.indexOf(m[4])>=0\",\n\t\t\"\": \"z\"\n\t},\n\t\"[\": \"jQuery.find(m[2],a).length\"\n},\n\ntoken: [\n\t\"\\\\.\\\\.|/\\\\.\\\\.\", \"a.parentNode\",\n\t\">|/\", \"jQuery.sibling(a.firstChild)\",\n\t\"\\\\+\", \"jQuery.sibling(a).next\",\n\t\"~\", function(a){\n\t\tvar r = [];\n\t\tvar s = jQuery.sibling(a);\n\t\tif ( s.n > 0 )\n\t\t\tfor ( var i = s.n; i < s.length; i++ )\n\t\t\t\tr.push( s[i] );\n\t\treturn r;\n\t}\n],\n\n/**\n *\n * @test t( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n * @test t( \"Element Selector\", \"body\", [\"body\"] );\n * @test t( \"Element Selector\", \"html\", [\"html\"] );\n * @test cmpOK( $(\"*\").size(), \">=\", 30, \"Element Selector\" );\n * @test t( \"Parent Element\", \"div div\", [\"foo\"] );\n *\n * @test t( \"ID Selector\", \"#body\", [\"body\"] );\n * @test t( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n * @test t( \"ID Selector w/ Element\", \"ul#first\", [] );\n *\n * @test t( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n * @test t( \"Class Selector\", \".blog.link\", [\"simon\"] );\n * @test t( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n * @test t( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n *\n * @test t( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n *\n * @test t( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n * @test t( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"Adjacent\", \"a + a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a +a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a+ a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a+a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n * @test t( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n * @test t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * @test t( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n * @test t( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n * @test t( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n * @test t( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n * @test t( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n * @test t( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n *\n * @test t( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n * @test t( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n * @test t( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n * @test t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * @test t( \"Last Child\", \"p:last-child\", [\"sap\"] );\n * @test t( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n * @test t( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n * @test t( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\"] );\n * @test t( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n * @test t( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n * @test t( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n * @test t( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n * @test t( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );\n * @test t( \"Not\", \"a.blog:not(.link)\", [\"mark\"] );\n *\n * @test cmpOK( jQuery.find(\"//*\").length, \">=\", 30, \"All Elements (//*)\" );\n * @test t( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\n * @test t( \"Absolute Path\", \"/html/body\", [\"body\"] );\n * @test t( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\n * @test t( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\n * @test t( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );"}]},
{"id":"88f212db3211dcd4e7b6e922165b119fb85e6f31","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1919,1948],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t\"\\\\[ *(@)S *([!*$^=]*) *('?\\\"?)(.*?)\\\\4 *\\\\]\",\n\n\t// Match: [div], [div p]\n\t\"(\\\\[)\\s*(.*?)\\s*\\\\]\",\n\n\t// Match: :contains('foo')\n\t\"(:)S\\\\(\\\"?'?([^\\\\)]*?)\\\"?'?\\\\)\",\n\n\t// Match: :even, :last-chlid\n\t\"([:.#]*)S\"\n],\n\nfilter: function(t,r,not) {\n\t// Figure out if we're doing regular, or inverse, filtering\n\tvar g = not !== false ? jQuery.grep :\n\t\tfunction(a,f) {return jQuery.grep(a,f,true);};\n\n\twhile ( t && /^[a-z[({<*:.#]/i.test(t) ) {\n\n\t\tvar p = jQuery.parse;\n\n\t\tfor ( var i = 0; i < p.length; i++ ) {\n\t\n\t\t\t// Look for, and replace, string-like sequences\n\t\t\t// and finally build a regexp out of it\n\t\t\tvar re = new RegExp(\n\t\t\t\t\"^\" + p[i].replace(\"S\", \"([a-z*_-][a-z0-9_-]*)\"), \"i\" );"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1291,1316],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t[ \"\\\\[ *(@)S *([!*$^=]*) *Q\\\\]\", 1 ],\n\n\t// Match: [div], [div p]\n\t[ \"(\\\\[)Q\\\\]\", 0 ],\n\n\t// Match: :contains('foo')\n\t[ \"(:)S\\\\(Q\\\\)\", 0 ],\n\n\t// Match: :even, :last-chlid\n\t[ \"([:.#]*)S\", 0 ]\n],\n\nfilter: function(t,r,not) {\n\t// Figure out if we're doing regular, or inverse, filtering\n\tvar g = not !== false ? jQuery.grep :\n\t\tfunction(a,f) {return jQuery.grep(a,f,true);};\n\t\n\twhile ( t && /^[a-z[({<*:.#]/i.test(t) ) {\n\n\t\tvar p = jQuery.parse;\n\n\t\tfor ( var i = 0; i < p.length; i++ ) {\n\t\t\tvar re = new RegExp( \"^\" + p[i][0]"}]},
{"id":"9cc8b6387a40ba37eec6eb36aea891aa2a93f811","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1955,2034],"code":"\t\t\t\t\tm = [\"\",m[1], m[3], m[2], m[5]];\n\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.replace( re, \"\" );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3],r,false).r;\n\n\t\t// Otherwise, find the expression to execute\n\t\telse {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( f.constructor != String )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){\" +\n\t\t\t\t( m[1] == \"@\" ? \"z=jQuery.attr(a,m[3]);\" : \"\" ) +\n\t\t\t\t\"return \" + f + \"}\");\n\n\t\t\t// Execute it against the current filter\n\t\t\tr = g( r, f );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)\n\t// and the modified expression string (t)\n\treturn { r: r, t: t };\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @example $.trim(\"  hello, how are you?  \");\n * @result \"hello, how are you?\"\n *\n * @name $.trim\n * @type String\n * @param String str The string to trim.\n * @cat Javascript\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},\n\n/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1329,1403],"code":"\t\t\t\t\tm = [\"\", m[1], m[3], m[2], m[4]];\n\n\t\t\t\t// Remove what we just matched\n\t\t\t\tt = t.replace( re, \"\" );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// :not() is a special case that can be optomized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3],r,false).r;\n\t\t\n\t\t// Otherwise, find the expression to execute\n\t\telse {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( f.constructor != String )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\t\t\t\t\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){\" + \n\t\t\t\t( m[1] == \"@\" ? \"z=jQuery.attr(a,m[3]);\" : \"\" ) + \n\t\t\t\t\"return \" + f + \"}\");\n\t\t\t\n\t\t\t// Execute it against the current filter\n\t\t\tr = g( r, f );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)\n\t// and the modified expression string (t)\n\treturn { r: r, t: t };\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @private\n * @name jQuery.trim\n * @type String\n * @param String str The string to trim.\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},\n\n/**\n * All ancestors of a given element.\n *\n * @private\n * @name jQuery.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name jQuery.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];"}]},
{"id":"d02d86cd0a44322e85518f75f2f4fed5e6f42344","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[2024,2272],"code":"/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];\n\t\n\tif(elem) {\n\t\tvar siblings = elem.parentNode.childNodes;\n\t\tfor ( var i = 0; i < siblings.length; i++ ) {\n\t\t\tif ( not === true && siblings[i] == elem ) continue;\n\n\t\t\tif ( siblings[i].nodeType == 1 )\n\t\t\t\telems.push( siblings[i] );\n\t\t\tif ( siblings[i] == elem )\n\t\t\t\telems.n = elems.length - 1;\n\t\t}\n\t}\n\n\treturn jQuery.extend( elems, {\n\t\tlast: elems.n == elems.length - 1,\n\t\tcur: pos == \"even\" && elems.n % 2 == 0 || pos == \"odd\" && elems.n % 2 || elems[pos] == elem,\n\t\tprev: elems[elems.n - 1],\n\t\tnext: elems[elems.n + 1]\n\t});\n},\n\n/**\n * Merge two arrays together, removing all duplicates. The final order\n * or the new array is: All the results from the first array, followed\n * by the unique results from the second array.\n *\n * @example $.merge( [0,1,2], [2,3,4] )\n * @result [0,1,2,3,4]\n *\n * @example $.merge( [3,2,1], [4,3,2] )\n * @result [3,2,1,4]\n *\n * @name $.merge\n * @type Array\n * @param Array first The first array to merge.\n * @param Array second The second array to merge.\n * @cat Javascript\n */\nmerge: function(first, second) {\n\tvar result = [];\n\n\t// Move b over to the new array (this helps to avoid\n\t// StaticNodeList instances)\n\tfor ( var k = 0; k < first.length; k++ )\n\t\tresult[k] = first[k];\n\n\t// Now check for duplicates between a and b and only\n\t// add the unique items\n\tfor ( var i = 0; i < second.length; i++ ) {\n\t\tvar noCollision = true;\n\n\t\t// The collision-checking process\n\t\tfor ( var j = 0; j < first.length; j++ )\n\t\t\tif ( second[i] == first[j] )\n\t\t\t\tnoCollision = false;\n\n\t\t// If the item is unique, add it\n\t\tif ( noCollision )\n\t\t\tresult.push( second[i] );\n\t}\n\n\treturn result;\n},\n\n/**\n * Filter items out of an array, by using a filter function.\n * The specified function will be passed two arguments: The\n * current array item and the index of the item in the array. The\n * function should return 'true' if you wish to keep the item in\n * the array, false if it should be removed.\n *\n * @example $.grep( [0,1,2], function(i){\n *   return i > 0;\n * });\n * @result [1, 2]\n *\n * @name $.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n * @cat Javascript\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1394,1609],"code":"/**\n * All elements on a specified axis.\n *\n * @private\n * @name jQuery.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];\n\n\tvar siblings = elem.parentNode.childNodes;\n\tfor ( var i = 0; i < siblings.length; i++ ) {\n\t\tif ( not === true && siblings[i] == elem ) continue;\n\n\t\tif ( siblings[i].nodeType == 1 )\n\t\t\telems.push( siblings[i] );\n\t\tif ( siblings[i] == elem )\n\t\t\telems.n = elems.length - 1;\n\t}\n\n\treturn jQuery.extend( elems, {\n\t\tlast: elems.n == elems.length - 1,\n\t\tcur: pos == \"even\" && elems.n % 2 == 0 || pos == \"odd\" && elems.n % 2 || elems[pos] == elem,\n\t\tprev: elems[elems.n - 1],\n\t\tnext: elems[elems.n + 1]\n\t});\n},\n\n/**\n * Merge two arrays together, removing all duplicates.\n *\n * @private\n * @name jQuery.merge\n * @type Array\n * @param Array a The first array to merge.\n * @param Array b The second array to merge.\n */\nmerge: function(first, second) {\n\tvar result = [];\n\t\n\t// Move b over to the new array (this helps to avoid\n\t// StaticNodeList instances)\n\tfor ( var k = 0; k < first.length; k++ )\n\t\tresult[k] = first[k];\n\n\t// Now check for duplicates between a and b and only\n\t// add the unique items\n\tfor ( var i = 0; i < second.length; i++ ) {\n\t\tvar noCollision = true;\n\t\t\n\t\t// The collision-checking process\n\t\tfor ( var j = 0; j < first.length; j++ )\n\t\t\tif ( second[i] == first[j] )\n\t\t\t\tnoCollision = false;\n\t\t\t\n\t\t// If the item is unique, add it\n\t\tif ( noCollision )\n\t\t\tresult.push( second[i] );\n\t}\n\n\treturn result;\n},\n\n/**\n * Remove items that aren't matched in an array. The function passed\n * in to this method will be passed two arguments: 'a' (which is the\n * array item) and 'i' (which is the index of the item in the array).\n *\n * @private\n * @name jQuery.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\t\t\n\tvar result = [];\n\t\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0; i < elems.length; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\t\n\treturn result;\n},\n\n/**\n * Translate all items in array to another array of items. The translation function\n * that is provided to this method is passed one argument: 'a' (the item to be \n * translated). If an array is returned, that array is mapped out and merged into\n * the full array. Additionally, returning 'null' or 'undefined' will delete the item\n * from the array. Both of these changes imply that the size of the array may not\n * be the same size upon completion, as it was when it started."}]},
{"id":"5abc8844ef3339306f209151155fb9b7e895aca7","instances":[{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[2324,2722],"code":"/**\n * Contains flags for the useragent, read from navigator.userAgent.\n * Available flags are: safari, opera, msie, mozilla\n * This property is available before the DOM is ready, therefore you can\n * use it to add ready events only for certain browsers.\n *\n * See <a href=\"http://davecardwell.co.uk/geekery/javascript/jquery/jqbrowser/\">\n * jQBrowser plugin</a> for advanced browser detection:\n *\n * @example $.browser.msie\n * @desc returns true if the current useragent is some version of microsoft's internet explorer\n *\n * @example if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }\n * @desc Alerts \"this is safari!\" only for safari browsers\n *\n * @name $.browser\n * @type Boolean\n * @cat Javascript\n */\nnew function() {\n\tvar b = navigator.userAgent.toLowerCase();\n\n\t// Figure out what browser is being used\n\tjQuery.browser = {\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};\n\njQuery.macros = {\n\tto: {\n\t\t/**\n\t\t * Append all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).append(B), in that instead of appending B to A, you're appending\n\t\t * A to B.\n\t\t *\n\t\t * @example $(\"p\").appendTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p></div>\n\t\t *\n\t\t * @name appendTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tappendTo: \"append\",\n\n\t\t/**\n\t\t * Prepend all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n\t\t * A to B.\n\t\t *\n\t\t * @example $(\"p\").prependTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n\t\t *\n\t\t * @name prependTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tprependTo: \"prepend\",\n\n\t\t/**\n\t\t * Insert all of the matched elements before another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).before(B), in that instead of inserting B before A, you're inserting\n\t\t * A before B.\n\t\t *\n\t\t * @example $(\"p\").insertBefore(\"#foo\");\n\t\t * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t *\n\t\t * @name insertBefore\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tinsertBefore: \"before\",\n\n\t\t/**\n\t\t * Insert all of the matched elements after another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).after(B), in that instead of inserting B after A, you're inserting\n\t\t * A after B.\n\t\t *\n\t\t * @example $(\"p\").insertAfter(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t *\n\t\t * @name insertAfter\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match."},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1523,1969],"code":"\t/*\n\t * A number of helper functions used for managing events.\n\t * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n\t */\n\tevent: {\n\t\n\t\t// Bind an event to an element\n\t\t// Original by Dean Edwards\n\t\tadd: function(element, type, handler) {\n\t\t\t// For whatever reason, IE has trouble passing the window object\n\t\t\t// around, causing it to be cloned in the process\n\t\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\t\telement = window;\n\t\t\n\t\t\t// Make sure that the function being executed has a unique ID\n\t\t\tif ( !handler.guid )\n\t\t\t\thandler.guid = this.guid++;\n\t\t\t\t\n\t\t\t// Init the element's event structure\n\t\t\tif (!element.events)\n\t\t\t\telement.events = {};\n\t\t\t\n\t\t\t// Get the current list of functions bound to this event\n\t\t\tvar handlers = element.events[type];\n\t\t\t\n\t\t\t// If it hasn't been initialized yet\n\t\t\tif (!handlers) {\n\t\t\t\t// Init the event handler queue\n\t\t\t\thandlers = element.events[type] = {};\n\t\t\t\t\n\t\t\t\t// Remember an existing handler, if it's already there\n\t\t\t\tif (element[\"on\" + type])\n\t\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t\t}\n\n\t\t\t// Add the function to the element's handler list\n\t\t\thandlers[handler.guid] = handler;\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\telement[\"on\" + type] = this.handle;\n\t\n\t\t\t// Remember the function in a global list (for triggering)\n\t\t\tif (!this.global[type])\n\t\t\t\tthis.global[type] = [];\n\t\t\tthis.global[type].push( element );\n\t\t},\n\t\t\n\t\tguid: 1,\n\t\tglobal: {},\n\t\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function(element, type, handler) {\n\t\t\tif (element.events)\n\t\t\t\tif (type && element.events[type])\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\t\telse\n\t\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\t\tthis.remove( element, j );\n\t\t},\n\t\t\n\t\ttrigger: function(type,data,element) {\n\t\t\t// Touch up the incoming data\n\t\t\tdata = data || [];\n\t\n\t\t\t// Handle a global trigger\n\t\t\tif ( !element ) {\n\t\t\t\tvar g = this.global[type];\n\t\t\t\tif ( g )\n\t\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\t\tthis.trigger( type, data, g[i] );\n\t\n\t\t\t// Handle triggering a single element\n\t\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t\t// Pass along a fake event\n\t\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\t\n\t\t\t\t// Trigger the event\n\t\t\t\telement[\"on\" + type].apply( element, data );\n\t\t\t}\n\t\t},\n\t\t\n\t\thandle: function(event) {\n\t\t\tif ( typeof jQuery == \"undefined\" ) return;\n\n\t\t\tevent = event || jQuery.event.fix( window.event );\n\t\n\t\t\t// If no correct event was found, fail\n\t\t\tif ( !event ) return;\n\t\t\n\t\t\tvar returnValue = true;\n\n\t\t\tvar c = this.events[event.type];\n\t\t\n\t\t\tfor ( var j in c ) {\n\t\t\t\tif ( c[j].apply( this, [event] ) === false ) {\n\t\t\t\t\tevent.preventDefault();"}]}]
