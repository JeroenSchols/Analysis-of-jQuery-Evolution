[{"id":"974673e87d4a38e5cd847ae21492dae3177b8e17","instances":[{"path":"./jquery-data/1.2.1/src/ajax.js","lines":[12,38],"code":"callback = callback || function(){};\n\n// Default to a GET request\nvar type = \"GET\";\n\n// If the second parameter was provided\nif ( params )\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax({\n\turl: url,\n\ttype: type,\n\tdata: params,\n\tcomplete: function(res, status){"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[50,76],"code":"callback = callback || function(){};\n\n// Default to a GET request\nvar type = \"GET\";\n\n// If the second parameter was provided\nif ( params )\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax({\n\turl: url,\n\ttype: type,\n\tdata: params,\n\tifModified: ifModified,"}]},
{"id":"4012a73e97ca9f8ea263cecfe37a60dd23cd1f91","instances":[{"path":"./jquery-data/1.2.1/src/ajax.js","lines":[90,94],"code":"jQuery.each( \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"), function(i,o){\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n});"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[242,246],"code":"jQuery.each( \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\"), function(i,o){\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n});"}]},
{"id":"b83f152c5d96be59e94cde2837df5591a1ef6076","instances":[{"path":"./jquery-data/1.2.1/src/ajax.js","lines":[115,140],"code":"getScript: function( url, callback ) {\n\treturn jQuery.get(url, null, callback, \"script\");\n},\n\ngetJSON: function( url, data, callback ) {\n\treturn jQuery.get(url, data, callback, \"json\");\n},\n\npost: function( url, data, callback, type ) {\n\tif ( jQuery.isFunction( data ) ) {\n\t\tcallback = data;\n\t\tdata = {};\n\t}\n\n\treturn jQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: url,\n\t\tdata: data,\n\t\tsuccess: callback,\n\t\tdataType: type\n\t});\n},\n\najaxSetup: function( settings ) {\n\tjQuery.extend( jQuery.ajaxSettings, settings );\n},"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[347,441],"code":"getScript: function( url, callback ) {\n\treturn jQuery.get(url, null, callback, \"script\");\n},\n\n/**\n * Load JSON data using an HTTP GET request.\n *\n * @example $.getJSON(\"test.js\", function(json){\n *   alert(\"JSON Data: \" + json.users[3].name);\n * });\n *\n * @example $.getJSON(\"test.js\",\n *   { name: \"John\", time: \"2pm\" },\n *   function(json){\n *     alert(\"JSON Data: \" + json.users[3].name);\n *   }\n * );\n *\n * @name $.getJSON\n * @type XMLHttpRequest\n * @param String url The URL of the page to load.\n * @param Map params (optional) Key/value pairs that will be sent to the server.\n * @param Function callback A function to be executed whenever the data is loaded successfully.\n * @cat Ajax\n */\ngetJSON: function( url, data, callback ) {\n\treturn jQuery.get(url, data, callback, \"json\");\n},\n\n/**\n * Load a remote page using an HTTP POST request.\n *\n * @example $.post(\"test.cgi\");\n *\n * @example $.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } );\n *\n * @example $.post(\"test.cgi\", function(data){\n *   alert(\"Data Loaded: \" + data);\n * });\n *\n * @example $.post(\"test.cgi\",\n *   { name: \"John\", time: \"2pm\" },\n *   function(data){\n *     alert(\"Data Loaded: \" + data);\n *   }\n * );\n *\n * @name $.post\n * @type XMLHttpRequest\n * @param String url The URL of the page to load.\n * @param Map params (optional) Key/value pairs that will be sent to the server.\n * @param Function callback (optional) A function to be executed whenever the data is loaded successfully.\n * @cat Ajax\n */\npost: function( url, data, callback, type ) {\n\tif ( jQuery.isFunction( data ) ) {\n\t\tcallback = data;\n\t\tdata = {};\n\t}\n\n\treturn jQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: url,\n\t\tdata: data,\n\t\tsuccess: callback,\n\t\tdataType: type\n\t});\n},\n\n// timeout (ms)\n//timeout: 0,\n\n/**\n * Set the timeout of all AJAX requests to a specific amount of time.\n * This will make all future AJAX requests timeout after a specified amount\n * of time.\n *\n * Set to null or 0 to disable timeouts (default).\n *\n * You can manually abort requests with the XMLHttpRequest's (returned by\n * all ajax functions) abort() method.\n *\n * Deprecated. Use $.ajaxSetup instead.\n *\n * @example $.ajaxTimeout( 5000 );\n * @desc Make all AJAX requests timeout after 5 seconds.\n *\n * @name $.ajaxTimeout\n * @type undefined\n * @param Number time How long before an AJAX request times out.\n * @cat Ajax\n */\najaxTimeout: function( timeout ) {\n\tjQuery.ajaxSettings.timeout = timeout;\n},"}]},
{"id":"3dc1730fead6e7e2545477b63d5019c783184ac9","instances":[{"path":"./jquery-data/1.2.1/src/ajax.js","lines":[303,311],"code":"if ( status == \"success\" ) {\n\t// Cache Last-Modified header, if ifModified mode.\n\tvar modRes;\n\ttry {\n\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\tif ( s.ifModified && modRes )\n\t\tjQuery.lastModified[s.url] = modRes;"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[672,680],"code":"if ( status != \"error\" ) {\n\t// Cache Last-Modified header, if ifModified mode.\n\tvar modRes;\n\ttry {\n\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\tif ( s.ifModified && modRes )\n\t\tjQuery.lastModified[s.url] = modRes;"}]},
{"id":"dcafa680ff8c6bfa4197694400efbde296c18cc8","instances":[{"path":"./jquery-data/1.2.1/src/ajax.js","lines":[385,421],"code":"handleError: function( s, xml, status, e ) {\n\t// If a local callback was specified, fire it\n\tif ( s.error ) s.error( xml, status, e );\n\n\t// Fire the global callback\n\tif ( s.global )\n\t\tjQuery.event.trigger( \"ajaxError\", [xml, s, e] );\n},\n\n// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar xml = type == \"xml\" || !type && ct && ct.indexOf(\"xml\") >= 0;"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[748,790],"code":"handleError: function( s, xml, status, e ) {\n\t// If a local callback was specified, fire it\n\tif ( s.error ) s.error( xml, status, e );\n\n\t// Fire the global callback\n\tif ( s.global )\n\t\tjQuery.event.trigger( \"ajaxError\", [xml, s, e] );\n},\n\n// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;"}]},
{"id":"23c2b2d5b5d69f61b34010b432a295e68e7f35be","instances":[{"path":"./jquery-data/1.2.1/src/ajax.js","lines":[435,461],"code":"\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[805,831],"code":"\treturn data;\n},\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );"}]},
{"id":"3df714a79b1f9f85699c405064cc34b31b9e883a","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[109,153],"code":"\tArray.prototype.push.apply( this, a );\n\treturn this;\n},\n\neach: function( fn, args ) {\n\treturn jQuery.each( this, fn, args );\n},\n\nindex: function( obj ) {\n\tvar pos = -1;\n\tthis.each(function(i){\n\t\tif ( this == obj ) pos = i;\n\t});\n\treturn pos;\n},\n\nattr: function( key, value, type ) {\n\tvar obj = key;\n\t\n\t// Look for the case where we're accessing a style value\n\tif ( key.constructor == String )\n\t\tif ( value == undefined )\n\t\t\treturn this.length && jQuery[ type || \"attr\" ]( this[0], key ) || undefined;\n\t\telse {\n\t\t\tobj = {};\n\t\t\tobj[ key ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(index){\n\t\t// Set all the styles\n\t\tfor ( var prop in obj )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ? this.style : this,\n\t\t\t\tprop, jQuery.prop(this, obj[prop], type, index, prop)\n\t\t\t);\n\t});\n},\n\ncss: function( key, value ) {\n\treturn this.attr( key, value, \"curCSS\" );\n},\n\ntext: function(e) {\n\tif ( typeof e != \"object\" && e != null )"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[291,555],"code":"\t[].push.apply( this, a );\n\treturn this;\n},\n\n/**\n * Execute a function within the context of every matched element.\n * This means that every time the passed-in function is executed\n * (which is once for every element matched) the 'this' keyword\n * points to the specific DOM element.\n *\n * Additionally, the function, when executed, is passed a single\n * argument representing the position of the element in the matched\n * set (integer, zero-index).\n *\n * @example $(\"img\").each(function(i){\n *   this.src = \"test\" + i + \".jpg\";\n * });\n * @before <img/><img/>\n * @result <img src=\"test0.jpg\"/><img src=\"test1.jpg\"/>\n * @desc Iterates over two images and sets their src property\n *\n * @name each\n * @type jQuery\n * @param Function fn A function to execute\n * @cat Core\n */\neach: function( fn, args ) {\n\treturn jQuery.each( this, fn, args );\n},\n\n/**\n * Searches every matched element for the object and returns\n * the index of the element, if found, starting with zero. \n * Returns -1 if the object wasn't found.\n *\n * @example $(\"*\").index( $('#foobar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 0\n * @desc Returns the index for the element with ID foobar\n *\n * @example $(\"*\").index( $('#foo')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result 2\n * @desc Returns the index for the element with ID foo within another element\n *\n * @example $(\"*\").index( $('#bar')[0] ) \n * @before <div id=\"foobar\"><b></b><span id=\"foo\"></span></div>\n * @result -1\n * @desc Returns -1, as there is no element with ID bar\n *\n * @name index\n * @type Number\n * @param Element subject Object to search for\n * @cat Core\n */\nindex: function( obj ) {\n\tvar pos = -1;\n\tthis.each(function(i){\n\t\tif ( this == obj ) pos = i;\n\t});\n\treturn pos;\n},\n\n/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * If the element does not have an attribute with such a\n\t * name, undefined is returned.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements.\n *\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n * @desc Sets src and alt attributes to all images.\n *\n * @name attr\n * @type jQuery\n * @param Map properties Key/value pairs to set as object properties.\n * @cat DOM/Attributes\n */\n\n/**"}]},
{"id":"6cc9c381d53fe5ac9cde813c63d54b2af910cc9c","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[154,167],"code":"\t\treturn this.empty().append( document.createTextNode( e ) );\n\n\tvar t = \"\";\n\tjQuery.each( e || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tt += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue : jQuery.fn.text([ this ]);\n\t\t});\n\t});\n\treturn t;\n},\n\nwrapAll: function(html) {"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[556,615],"code":"\t\treturn this.empty().append( document.createTextNode( e ) );\n\n\tvar t = \"\";\n\tjQuery.each( e || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tt += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue : jQuery.fn.text([ this ]);\n\t\t});\n\t});\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {"}]},
{"id":"c8e97e44cbd587a823cfa3a8748403dc47814627","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[257,285],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( t ) &&\n\t\tjQuery.grep(this, function(el, index){\n\t\t\treturn t.apply(el, [index]);\n\t\t}) ||\n\n\t\tjQuery.multiFilter(t,this) );\n},\n\nnot: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == String &&\n\t\tjQuery.multiFilter(t, this, true) ||\n\n\t\tjQuery.grep(this, function(a) {\n\t\t\treturn ( t.constructor == Array || t.jquery )\n\t\t\t\t? jQuery.inArray( a, t ) < 0\n\t\t\t\t: a != t;\n\t\t})\n\t);\n},\n\nadd: function(t) {\n\treturn this.pushStack( jQuery.merge(\n\t\tthis.get(),\n\t\tt.constructor == String ?\n\t\t\tjQuery(t).get() :\n\t\t\tt.length != undefined && (!t.nodeName || jQuery.nodeName(t, \"form\")) ?"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[886,1015],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tjQuery.isFunction( t ) &&\n\t\tjQuery.grep(this, function(el, index){\n\t\t\treturn t.apply(el, [index])\n\t\t}) ||\n\n\t\tjQuery.multiFilter(t,this) );\n},\n\n/**\n * Removes the specified Element from the set of matched elements. This\n * method is used to remove a single Element from a jQuery object.\n *\n * @example $(\"p\").not( $(\"#selected\")[0] )\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]\n * @desc Removes the element with the ID \"selected\" from the set of all paragraphs.\n *\n * @name not\n * @type jQuery\n * @param Element el An element to remove from the set\n * @cat DOM/Traversing\n */\n\n/**\n * Removes elements matching the specified expression from the set\n * of matched elements. This method is used to remove one or more\n * elements from a jQuery object.\n *\n * @example $(\"p\").not(\"#selected\")\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]\n * @desc Removes the element with the ID \"selected\" from the set of all paragraphs.\n *\n * @name not\n * @type jQuery\n * @param String expr An expression with which to remove matching elements\n * @cat DOM/Traversing\n */\n\n/**\n * Removes any elements inside the array of elements from the set\n * of matched elements. This method is used to remove one or more\n * elements from a jQuery object.\n *\n * Please note: the expression cannot use a reference to the\n * element name. See the two examples below.\n *\n * This will not work: $(\".res img\").not(\"img[@src$=on]\")\n *\n * This will: $(\".res img\").not(\"[@src$=on]\"); // also could be written $(\".res img:not([@src$=on])\")\n *\n * @example $(\"p\").not( $(\"div p.selected\") )\n * @before <div><p>Hello</p><p class=\"selected\">Hello Again</p></div>\n * @result [ <p>Hello</p> ]\n * @desc Removes all elements that match \"div p.selected\" from the total set of all paragraphs.\n *\n * @name not\n * @type jQuery\n * @param jQuery elems A set of elements to remove from the jQuery set of matched elements.\n * @cat DOM/Traversing\n */\nnot: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == String &&\n\t\tjQuery.multiFilter(t, this, true) ||\n\n\t\tjQuery.grep(this, function(a) {\n\t\t\treturn ( t.constructor == Array || t.jquery )\n\t\t\t\t? jQuery.inArray( a, t ) < 0\n\t\t\t\t: a != t;\n\t\t})\n\t);\n},\n\n/**\n * Adds more elements, matched by the given expression,\n * to the set of matched elements.\n *\n * @example $(\"p\").add(\"span\")\n * @before (HTML) <p>Hello</p><span>Hello Again</span>\n * @result (jQuery object matching 2 elements) [ <p>Hello</p>, <span>Hello Again</span> ]\n * @desc Compare the above result to the result of <code>$('p')</code>,\n * which would just result in <code><nowiki>[ <p>Hello</p> ]</nowiki></code>.\n * Using add(), matched elements of <code>$('span')</code> are simply\n * added to the returned jQuery-object.\n *\n * @name add\n * @type jQuery\n * @param String expr An expression whose matched elements are added\n * @cat DOM/Traversing\n */\n \n/**\n * Adds more elements, created on the fly, to the set of\n * matched elements.\n *\n * @example $(\"p\").add(\"<span>Again</span>\")\n * @before <p>Hello</p>"}]},
{"id":"d45e0711e9f629b89328afc08a370ce92bee290d","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[394,399],"code":"var obj = this;\n\nif ( table && jQuery.nodeName(this, \"table\") && jQuery.nodeName(a[0], \"tr\") )\n\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\njQuery.each( a, function(){"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1134,1141],"code":"var obj = this;\n\nif ( table && jQuery.nodeName(this, \"table\") && jQuery.nodeName(a[0], \"tr\") )\n\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\njQuery.each( a, function(){\n\tfn.apply( obj, [ clone ? this.cloneNode(true) : this ] );\n});"}]},
{"id":"9efe57e2f147acfd0ac8f358a9d7c77fc854740a","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[493,501],"code":"if ( data ) {\n\tif ( window.execScript )\n\t\twindow.execScript( data );\n\telse if ( jQuery.browser.safari )\n\t\t// safari doesn't provide a synchronous global eval\n\t\twindow.setTimeout( data, 0 );\n\telse\n\t\teval.call( window, data );\n}"},{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[839,847],"code":"globalEval: function( data ) {\n\tif ( window.execScript )\n\t\twindow.execScript( data );\n\telse if ( jQuery.browser.safari )\n\t\t// safari doesn't provide a synchronous global eval\n\t\twindow.setTimeout( data, 0 );\n\telse\n\t\teval.call( window, data );\n}"}]},
{"id":"3bbcb813ae05c52b75fe23637b7634c995d56410","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[587,607],"code":"\treturn obj;\n},\n\nprop: function(elem, value, type, index, prop){\n\t\t// Handle executable functions\n\t\tif ( jQuery.isFunction( value ) )\n\t\t\tvalue = value.call( elem, [index] );\n\t\t\t\n\t\t// exclude the following css properties to add px\n\t\tvar exclude = /z-?index|font-?weight|opacity|zoom|line-?height/i;\n\n\t\t// Handle passing in a number to a CSS property\n\t\treturn value && value.constructor == Number && type == \"curCSS\" && !exclude.test(prop) ?\n\t\t\tvalue + \"px\" :\n\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( (c || \"\").split(/\\s+/), function(i, cur){"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1310,1330],"code":"\treturn obj;\n},\n\nprop: function(elem, value, type, index, prop){\n\t\t// Handle executable functions\n\t\tif ( jQuery.isFunction( value ) )\n\t\t\tvalue = value.call( elem, [index] );\n\t\t\t\n\t\t// exclude the following css properties to add px\n\t\tvar exclude = /z-?index|font-?weight|opacity|zoom|line-?height/i;\n\n\t\t// Handle passing in a number to a CSS property\n\t\treturn value && value.constructor == Number && type == \"curCSS\" && !exclude.test(prop) ?\n\t\t\tvalue + \"px\" :\n\t\t\tvalue;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){"}]},
{"id":"c019acd4e606e192b09c3b1b54f731df231e1b2d","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[627,647],"code":"swap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif ( jQuery(e).is(':visible') ) {"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1357,1377],"code":"swap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {"}]},
{"id":"1bb47b944ddf9a2e8944f84e6dfbfe479ae30e9f","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[647,657],"code":"if ( jQuery(e).is(':visible') ) {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1377,1387],"code":"if (jQuery.css(e,\"display\") != \"none\") {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\");"}]},
{"id":"86115d87ef92b834cc2ca000685b0e2ed8b27373","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[741,743],"code":"} else if (elem.currentStyle) {\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1437,1442],"code":"} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t\n}"}]},
{"id":"4c4e9f34e820f06605890b8708ecbe4f2ff44cc0","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[768,775],"code":"jQuery.each( a, function(i,arg){\n\tif ( !arg ) return;\n\n\tif ( arg.constructor == Number )\n\t\targ = arg.toString();\n\t\n\t// Convert html string into DOM nodes\n\tif ( typeof arg == \"string\" ) {"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1450,1457],"code":"jQuery.each( a, function(i,arg){\n\tif ( !arg ) return;\n\n\tif ( arg.constructor == Number )\n\t\targ = arg.toString();\n\t\n\t // Convert html string into DOM nodes\n\tif ( typeof arg == \"string\" ) {"}]},
{"id":"6a134fd1c4096cf090a69408fec14193578c7451","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[819,831],"code":"if ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\ttb[n].parentNode.removeChild(tb[n]);"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1486,1500],"code":"if ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\ttb[n].parentNode.removeChild(tb[n]);\n\t\n}"}]},
{"id":"67538282f40577283bf4f136bdd4e5487f915d43","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[870,876],"code":"else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\treturn elem.getAttributeNode(name).nodeValue;\n\n// IE elem.getAttribute passes even for style\nelse if ( elem.tagName ) {\n\n\tif ( value != undefined ) {"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1557,1562],"code":"} else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\treturn elem.getAttributeNode(name).nodeValue;\n\n// IE elem.getAttribute passes even for style\nelse if ( elem.tagName ) {\n\tif ( value != undefined ) elem.setAttribute( name, value );"}]},
{"id":"67dd564dbf9d44ce05bfa3bda9b64e78dd40fc3f","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[919,934],"code":"\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\tr.push( a[i] );\n\telse\n\t\tr = a.slice( 0 );\n\n\treturn r;\n},\n\ninArray: function( b, a ) {\n\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\tif ( a[i] == b )\n\t\t\treturn i;\n\treturn -1;\n},\n\nmerge: function(first, second) {"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1594,1630],"code":"\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\tr.push( a[i] );\n\telse\n\t\tr = a.slice( 0 );\n\n\treturn r;\n},\n\ninArray: function( b, a ) {\n\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\tif ( a[i] == b )\n\t\t\treturn i;\n\treturn -1;\n},\n\n/**\n * Merge two arrays together, removing all duplicates.\n *\n * The result is the altered first argument with\n * the unique elements from the second array added.\n *\n * @example $.merge( [0,1,2], [2,3,4] )\n * @result [0,1,2,3,4]\n * @desc Merges two arrays, removing the duplicate 2\n *\n * @example var array = [3,2,1];\n * $.merge( array, [4,3,2] )\n * @result array == [3,2,1,4]\n * @desc Merges two arrays, removing the duplicates 3 and 2\n *\n * @name $.merge\n * @type Array\n * @param Array first The first array to merge, the unique elements of second added.\n * @param Array second The second array to merge into the first, unaltered.\n * @cat JavaScript\n */\nmerge: function(first, second) {"}]},
{"id":"587d49ddaffe2386b812f9047ad36d0c046e5c54","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[975,990],"code":"\tvar result = [];\n\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0, el = elems.length; i < el; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\n\treturn result;\n},\n\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = eval(\"false||function(a){return \" + fn + \"}\");"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1670,1722],"code":"\tvar result = [];\n\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0, el = elems.length; i < el; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\n\treturn result;\n},\n\n/**\n * Translate all items in an array to another array of items.\n *\n * The translation function that is provided to this method is \n * called for each item in the array and is passed one argument: \n * The item to be translated.\n *\n * The function can then return the translated value, 'null'\n * (to remove the item), or  an array of values - which will\n * be flattened into the full array.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i + 4;\n * });\n * @result [4, 5, 6]\n * @desc Maps the original array to a new one and adds 4 to each value.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i > 0 ? i + 1 : null;\n * });\n * @result [2, 3]\n * @desc Maps the original array to a new one and adds 1 to each\n * value if it is bigger then zero, otherwise it's removed-\n * \n * @example $.map( [0,1,2], function(i){\n *   return [ i, i + 1 ];\n * });\n * @result [0, 1, 1, 2, 2, 3]\n * @desc Maps the original array to a new one, each element is added\n * with it's original value and the value plus one.\n *\n * @name $.map\n * @type Array\n * @param Array array The Array to translate.\n * @param Function fn The function to process each item against.\n * @cat JavaScript\n */\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"return \" + fn);"}]},
{"id":"6b317b7ab990a7eca1a68bd0da9860a69660ce75","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[992,1003],"code":"var result = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1724,1735],"code":"var result = [], r = [];\n\n// Go through the array, translating each of the items to their\n// new value (or values).\nfor ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"}]},
{"id":"adfb0389f7b4b9fef47dd6108bc0812c98f89712","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[1055,1062],"code":"}, function(i,n){\n\tjQuery.fn[ i ] = function(a) {\n\t\tvar ret = jQuery.map(this,n);\n\t\tif ( a && typeof a == \"string\" )\n\t\t\tret = jQuery.multiFilter(a,ret);\n\t\treturn this.pushStack( jQuery.unique(ret) );\n\t};\n});"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1942,1949],"code":"}, function(i,n){\n\tjQuery.fn[ i ] = function(a) {\n\t\tvar ret = jQuery.map(this,n);\n\t\tif ( a && typeof a == \"string\" )\n\t\t\tret = jQuery.multiFilter(a,ret);\n\t\treturn this.pushStack( ret );\n\t};\n});"}]},
{"id":"eadda09d90ee2b7ca4cbc3ef85574d5aa2fbab86","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[1070,1075],"code":"}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[2028,2033],"code":"}, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0, al = a.length; j < al; j++ )\n\t\t\t\tjQuery(a[j])[n]( this );"}]},
{"id":"c7188754f01cd3674ec5c0ef74aea1054cdcd8a8","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[1080,1095],"code":"jQuery.each( {\n\tremoveAttr: function( key ) {\n\t\tjQuery.attr( this, key, \"\" );\n\t\tthis.removeAttribute( key );\n\t},\n\taddClass: function(c){\n\t\tjQuery.className.add(this,c);\n\t},\n\tremoveClass: function(c){\n\t\tjQuery.className.remove(this,c);\n\t},\n\ttoggleClass: function( c ){\n\t\tjQuery.className[ jQuery.className.has(this,c) ? \"remove\" : \"add\" ](this, c);\n\t},\n\tremove: function(a){\n\t\tif ( !a || jQuery.filter( a, [this] ).r.length ) {"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[2137,2152],"code":"jQuery.each( {\n\tremoveAttr: function( key ) {\n\t\tjQuery.attr( this, key, \"\" );\n\t\tthis.removeAttribute( key );\n\t},\n\taddClass: function(c){\n\t\tjQuery.className.add(this,c);\n\t},\n\tremoveClass: function(c){\n\t\tjQuery.className.remove(this,c);\n\t},\n\ttoggleClass: function( c ){\n\t\tjQuery.className[ jQuery.className.has(this,c) ? \"remove\" : \"add\" ](this, c);\n\t},\n\tremove: function(a){\n\t\tif ( !a || jQuery.filter( a, [this] ).r.length )"}]},
{"id":"07ff22762dc0de350dc4e86bd89e9c1ee376b0f2","instances":[{"path":"./jquery-data/1.2.1/src/core.js","lines":[1125,1127],"code":"h == undefined ?\n\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\tthis.css( n, h.constructor == String ? h : h + \"px\" );"},{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[2290,2292],"code":"return h == undefined ?\n\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\tthis.css( n, h.constructor == String ? h : h + \"px\" );"}]},
{"id":"2eb5668c6c581abd5d6bea7771b62ad3caf499bc","instances":[{"path":"./jquery-data/1.2.1/src/event.js","lines":[1,17],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )"},{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[1,17],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\n\t\t// if data is passed, bind to handler\n\t\tif( data ) "}]},
{"id":"d06fb199929d1f73b71be638f6cdab422ac2aba4","instances":[{"path":"./jquery-data/1.2.1/src/event.js","lines":[293,301],"code":"\t\tjQuery.event.add( this, type, fn || data, fn && data );\n\t});\n},\n\none: function( type, data, fn ) {\n\treturn this.each(function(){\n\t\tjQuery.event.add( this, type, function(event) {\n\t\t\tjQuery(this).unbind(event);\n\t\t\treturn (fn || data).apply( this, arguments);"},{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[253,287],"code":"\t\tjQuery.event.add( this, type, fn || data, data );\n\t});\n},\n\n/**\n * Binds a handler to a particular event (like click) for each matched element.\n * The handler is executed only once for each element. Otherwise, the same rules\n * as described in bind() apply.\n The event handler is passed an event object that you can use to prevent\n * default behaviour. To stop both default action and event bubbling, your handler\n * has to return false.\n *\n * In most cases, you can define your event handlers as anonymous functions\n * (see first example). In cases where that is not possible, you can pass additional\n * data as the second paramter (and the handler function as the third), see \n * second example.\n *\n * @example $(\"p\").one(\"click\", function(){\n *   alert( $(this).text() );\n * });\n * @before <p>Hello</p>\n * @result alert(\"Hello\")\n *\n * @name one\n * @type jQuery\n * @param String type An event type\n * @param Object data (optional) Additional data passed to the event handler as event.data\n * @param Function fn A function to bind to the event on each of the set of matched elements\n * @cat Events\n */\none: function( type, data, fn ) {\n\treturn this.each(function(){\n\t\tjQuery.event.add( this, type, function(event) {\n\t\t\tjQuery(this).unbind(event);\n\t\t\treturn (fn || data).apply( this, arguments);"}]},
{"id":"4bbf5971f1e59da5c93ffebc10eeae9f97f175a1","instances":[{"path":"./jquery-data/1.2.1/src/event.js","lines":[372,404],"code":"\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]); } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event listener to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"},{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[493,526],"code":"\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tjQuery.each( jQuery.readyList, function(){\n\t\t\t\t\tthis.apply( document );\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );"}]},
{"id":"407e6f2c03a109d8b4d008b9b46dfff0c2b77c39","instances":[{"path":"./jquery-data/1.2.1/src/event.js","lines":[414,422],"code":"jQuery.each( (\"blur,focus,load,resize,scroll,unload,click,dblclick,\" +\n\t\"mousedown,mouseup,mousemove,mouseover,mouseout,change,select,\" + \n\t\"submit,keydown,keypress,keyup,error\").split(\",\"), function(i,o){\n\t\n\t// Handle event binding\n\tjQuery.fn[o] = function(f){\n\t\treturn f ? this.bind(o, f) : this.trigger(o);\n\t};\n});"},{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[873,879],"code":"jQuery.each( (\"blur,focus,load,resize,scroll,unload,click,dblclick,\" +\n\t\"mousedown,mouseup,mousemove,mouseover,mouseout,change,select,\" + \n\t\"submit,keydown,keypress,keyup,error\").split(\",\"), function(i,o){\n\t\n\t// Handle event binding\n\tjQuery.fn[o] = function(f){\n\t\treturn f ? this.bind(o, f) : this.trigger(o);"}]},
{"id":"143ea63ee0255c121511670d3e7d93502aba1d12","instances":[{"path":"./jquery-data/1.2.1/src/event.js","lines":[430,450],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");\n\t\n\t// script does not exist if jQuery is loaded dynamically\n\tif ( script ) \n\t\tscript.onreadystatechange = function() {\n\t\t\tif ( this.readyState != \"complete\" ) return;\n\t\t\tjQuery.ready();"},{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[884,904],"code":"// If Mozilla is used\nif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\nelse if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");\n\t\n\t// script does not exist if jQuery is loaded dynamically\n\tif ( script ) \n\t\tscript.onreadystatechange = function() {\n\t\t\tif ( this.readyState != \"complete\" ) return;\n\t\t\tthis.parentNode.removeChild( this );"}]},
{"id":"302d79509b72eaf2fa33f75bc886002478c73cbe","instances":[{"path":"./jquery-data/1.2.1/src/event.js","lines":[450,474],"code":"\t\t\tjQuery.ready();\n\t\t};\n\n\t// Clear from memory\n\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari )\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10); \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"},{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[905,929],"code":"\t\t\tjQuery.ready();\n\t\t};\n\n\t// Clear from memory\n\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari )\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10); \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"}]},
{"id":"6325e746123541fc5566212b3a8efca95ecf4937","instances":[{"path":"./jquery-data/1.2.1/src/fx.js","lines":[8,12],"code":"this.filter(\":hidden\").each(function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n}).end();"},{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[42,46],"code":"hidden.each(function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n});"}]},
{"id":"2cbc3489774dd7adf6f2be09be02ba40de4e1eca","instances":[{"path":"./jquery-data/1.2.1/src/fx.js","lines":[21,26],"code":"this.filter(\":visible\").each(function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n}).end();"},{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[89,94],"code":"visible.each(function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n});"}]},
{"id":"46d1fe3c9817cff048708af16620112cd33aa8db","instances":[{"path":"./jquery-data/1.2.1/src/fx.js","lines":[183,204],"code":"\t\t\tq[0].apply( this );\n\t});\n};\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\topt.complete = function(){\n\t\t\tjQuery(this).dequeue();"},{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[354,377],"code":"\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {\n\t\tvar opt = speed && speed.constructor == Object ? speed : {\n\t\t\tcomplete: fn || !fn && easing || \n\t\t\t\tjQuery.isFunction( speed ) && speed,\n\t\t\tduration: speed,\n\t\t\teasing: fn && easing || easing && easing.constructor != Function && easing\n\t\t};\n\n\t\topt.duration = (opt.duration && opt.duration.constructor == Number ? \n\t\t\topt.duration : \n\t\t\t{ slow: 600, fast: 200 }[opt.duration]) || 400;\n\t\n\t\t// Queueing\n\t\topt.old = opt.complete;\n\t\topt.complete = function(){\n\t\t\tjQuery.dequeue(this, \"fx\");"}]},
{"id":"1dcd253328a774e17e471d328a79a0ae6924893f","instances":[{"path":"./jquery-data/1.2.1/src/fx.js","lines":[291,294],"code":"show: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.show = true;"},{"path":"./jquery-data/1.2.1/src/fx.js","lines":[309,312],"code":"hide: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.hide = true;"}]},
{"id":"8218565683a2b7328f1a83437a7a5f539373a420","instances":[{"path":"./jquery-data/1.2.1/src/selector.js","lines":[9,25],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"first-child\": \"a.parentNode.getElementsByTagName('*')[0]==a\","},{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[1,17],"code":"jQuery.extend({\n\texpr: {\n\t\t\"\": \"m[2]=='*'||jQuery.nodeName(a,m[2])\",\n\t\t\"#\": \"a.getAttribute('id')==m[2]\",\n\t\t\":\": {\n\t\t\t// Position Checks\n\t\t\tlt: \"i<m[3]-0\",\n\t\t\tgt: \"i>m[3]-0\",\n\t\t\tnth: \"m[3]-0==i\",\n\t\t\teq: \"m[3]-0==i\",\n\t\t\tfirst: \"i==0\",\n\t\t\tlast: \"i==r.length-1\",\n\t\t\teven: \"i%2==0\",\n\t\t\todd: \"i%2\",\n\n\t\t\t// Child Checks\n\t\t\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\","}]},
{"id":"10b053689d44f7f08bab005747ee1c44f2cfce43","instances":[{"path":"./jquery-data/1.2.1/src/selector.js","lines":[81,106],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Initialize the search"},{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[92,123],"code":"multiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression"}]},
{"id":"1e8905a54adbd65d4778da0b65de7e8a0f1d1f55","instances":[{"path":"./jquery-data/1.2.1/src/selector.js","lines":[253,273],"code":"\t\t\t\tret = r;\n\t\t\t}\n\n\t\t\tt = t.replace( re2, \"\" );\n\t\t}\n\n\t}\n\n\t// If a selector string still exists\n\tif ( t ) {\n\t\t// Attempt to filter it\n\t\tvar val = jQuery.filter(t,r);\n\t\tret = r = val.r;\n\t\tt = jQuery.trim(val.t);\n\t}\n}\n\n// An error occurred with the selector;\n// just return an empty set instead\nif ( t )\n\tret = [];"},{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[280,298],"code":"\t\t\t\tret = r;\n\t\t\t}\n\n\t\t\tt = t.replace( re2, \"\" );\n\t\t}\n\n\t}\n\n\t// If a selector string still exists\n\tif ( t ) {\n\t\t// Attempt to filter it\n\t\tvar val = jQuery.filter(t,r);\n\t\tret = r = val.r;\n\t\tt = jQuery.trim(val.t);\n\t}\n}\n\n// Remove the root context\nif ( ret && ret[0] == context ) ret.shift();"}]},
{"id":"df18a2c907e73610f806e4fcc7589192f5be2a94","instances":[{"path":"./jquery-data/1.2.1/src/selector.js","lines":[384,391],"code":"// Otherwise, find the expression to execute\n} else {\n\tvar f = jQuery.expr[m[1]];\n\tif ( typeof f != \"string\" )\n\t\tf = jQuery.expr[m[1]][m[2]];\n\n\t// Build a custom macro to enclose it\n\tf = eval(\"false||function(a,i){return \" + f + \"}\");"},{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[344,351],"code":"// Otherwise, find the expression to execute\n} else {\n\tvar f = jQuery.expr[m[1]];\n\tif ( typeof f != \"string\" )\n\t\tf = jQuery.expr[m[1]][m[2]];\n\n\t// Build a custom macro to enclose it\n\teval(\"f = function(a,i){\" +"}]},
{"id":"8f282a9f5eff21d3c7f0f8ef9a6b1db5e681bee3","instances":[{"path":"./jquery-data/1.2.1/src/selector.js","lines":[422,434],"code":"\treturn cur;\n},\n\nsibling: function( n, elem ) {\n\tvar r = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType == 1 && (!elem || n != elem) )\n\t\t\tr.push( n );\n\t}\n\n\treturn r;\n}"},{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[424,446],"code":"\t\t\tresult == \"odd\" && num % 2 == 1 && cur == elem ) return cur;\n\t}\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function( n, elem ) {\n\tvar r = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType == 1 && (!elem || n != elem) )\n\t\t\tr.push( n );\n\t}\n\n\treturn r;\n}"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[99,108],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[127,135],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"7653daa01237a48afb983f558117bc0d888a2deb","instances":[{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[584,588],"code":"var pass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n}\r\nok( pass, \"Add Class\" );\r"},{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[594,598],"code":"\tpass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n}\r\nok( pass, \"Remove Class\" );\r"}]}]
