[{"id":"4d941a24e8341f792de4401d4613e2081c889f93","instances":[{"path":"./jquery-data/1.2.3/src/ajax.js","lines":[428,447],"code":"\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar xml = type == \"xml\" || !type && ct && ct.indexOf(\"xml\") >= 0;"},{"path":"./jquery-data/1.0/src/ajax/ajax.js","lines":[247,271],"code":"\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Get the data out of an XMLHttpRequest.\n// Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n// otherwise return plain text.\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;"}]},
{"id":"784d94bab570af8f8a3e56a3e3d19bb8d0152f3e","instances":[{"path":"./jquery-data/1.2.3/src/event.js","lines":[464,479],"code":"\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\tisReady: false,\n\treadyList: [],\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"},{"path":"./jquery-data/1.0/src/event/event.js","lines":[122,141],"code":"\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"}]},
{"id":"1dcd253328a774e17e471d328a79a0ae6924893f","instances":[{"path":"./jquery-data/1.2.3/src/fx.js","lines":[318,321],"code":"show: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.show = true;"},{"path":"./jquery-data/1.2.3/src/fx.js","lines":[336,339],"code":"hide: function(){\n\t// Remember where we started, so that we can go back to it later\n\tthis.options.orig[this.prop] = jQuery.attr( this.elem.style, this.prop );\n\tthis.options.hide = true;"}]},
{"id":"15a3703125c3e72ee065a6447f59b0f6e4268212","instances":[{"path":"./jquery-data/1.2.3/src/selector.js","lines":[263,274],"code":"\tif ( t ) {\n\t\t// Attempt to filter it\n\t\tvar val = jQuery.filter(t,r);\n\t\tret = r = val.r;\n\t\tt = jQuery.trim(val.t);\n\t}\n}\n\n// An error occurred with the selector;\n// just return an empty set instead\nif ( t )\n\tret = [];"},{"path":"./jquery-data/1.0/src/jquery/jquery.js","lines":[1243,1250],"code":"\tif ( t ) {\n\t\tvar val = jQuery.filter(t,r);\n\t\tret = r = val.r;\n\t\tt = jQuery.trim(val.t);\n\t}\n}\n\t\nif ( ret && ret[0] == context ) ret.shift();"}]},
{"id":"7753770cfe963d22cd8a4a3716873ea85dda3490","instances":[{"path":"./jquery-data/1.0/src/ajax/ajax.js","lines":[71,78],"code":"var e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess\".split(',');\n\nfor ( var i = 0; i < e.length; i++ ) new function(){\n\tvar o = e[i];\n\tjQuery.fn[o] = function(f){\n\t\treturn this.bind(o, f);\n\t};\n};"},{"path":"./jquery-data/1.0/src/event/event.js","lines":[1585,1595],"code":"\t\"submit,keydown,keypress,keyup,error\").split(\",\");\n\n// Go through all the event names, but make sure that\n// it is enclosed properly\nfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\t\n\tvar o = e[i];\n\t\n\t// Handle event binding\n\tjQuery.fn[o] = function(f){\n\t\treturn f ? this.bind(o, f) : this.trigger(o);"}]},
{"id":"31c40b8c39dd5794506311e766875fb71d91d51b","instances":[{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[435,441],"code":"z.show = function( p ){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.custom( 0, z.el.orig[prop] );"},{"path":"./jquery-data/1.0/src/fx/fx.js","lines":[449,455],"code":"z.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;"}]}]
