[{"id":"ce76e7c62bd1f33af4db7c137873b3ab336d2e51","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[110,117],"code":"$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[68,75],"code":"$.ajax({url: \"data/name.php\", beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  ok( counter.send == 2, 'Check succesful request' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: \"data/name.php?wait=5\", beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"19b405a3b3b93024e556964cd13ba781c80d6197","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[117,137],"code":"\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[75,95],"code":"\t  $.ajax({url: \"data/name.php?wait=5\", beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: \"data/name.php\", global: false, beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"60cab5b9a751117ac78381836e92c72a09142cb9","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[137,144],"code":"$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[95,102],"code":"$.ajax({url: \"data/name.php\", global: false, beforeSend: send, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  ok( counter.send == 1, 'Check sucesful request without globals' );\n  counter.error = counter.success = counter.complete = counter.send = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: \"data/name.php?wait=5\", global: false, beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"5814b95ca4081788900d1b2c5cbf1eef3d85ba5d","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[99,110],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[57,68],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: \"data/name.php\", beforeSend: send, success: success, error: error, complete: function() {"}]},
{"id":"a7304ca6aeb2f1d1ae84901350247a12dd979626","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[653,662],"code":"test(\"$.extend(Object, Object)\", function() {\n\texpect(2);\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\n\tjQuery.extend(settings, options);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );\n\tisObj( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n});"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[297,306],"code":"test(\"$.extend(Object, Object)\", function() {\r\n\texpect(2);\r\n\tvar settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\toptionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\r\n\tjQuery.extend(settings, options);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r\n\tisSet ( options, optionsCopy, \"Check if not modified: options must not be modified\" );\r\n});\r"}]},
{"id":"4508f928c32edb0ec5fbd710e88c5e6489038da9","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[661,674],"code":"\tisObj( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n});\n\ntest(\"$.extend(Object, Object, Object, Object)\", function() {\n\texpect(4);\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\n\tisObj( settings, merged, \"Check if extended: settings must be extended\" );"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[305,318],"code":"\tisSet ( options, optionsCopy, \"Check if not modified: options must not be modified\" );\r\n});\r\n\r\ntest(\"$.extend(Object, Object, Object, Object)\", function() {\r\n\texpect(4);\r\n\tvar defaults = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\tdefaultsCopy = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" },\r\n\t\toptions1 =     { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions1Copy = { xnumber2: 1, xstring2: \"x\" },\r\n\t\toptions2 =     { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\toptions2Copy = { xstring2: \"xx\", xxx: \"newstringx\" },\r\n\t\tmerged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"xx\", xxx: \"newstringx\" };\r\n\tvar settings = jQuery.extend({}, defaults, options1, options2);\r\n\tisSet( settings, merged, \"Check if extended: settings must be extended\" );\r"}]},
{"id":"d1ce0fd4a9908989edc98e2e327bbe430a9a20be","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[777,781],"code":"var pass = true;\nfor ( var i = 0; i < div.size(); i++ ) {\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n}\nok( pass, \"Add Class\" );"},{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[787,791],"code":"\tpass = true;\nfor ( var i = 0; i < div.size(); i++ ) {\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n}\nok( pass, \"Remove Class\" );"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[527,531],"code":"var pass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n}\r\nok( pass, \"Add Class\" );\r"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[537,541],"code":"\tpass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n}\r\nok( pass, \"Remove Class\" );\r"}]},
{"id":"f1fae3d2a4bc04cbc2f4b4d2a369994039e61ce9","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[254,270],"code":"\ttest(\"attr(String, Object)x\", function() {\n\t\texpect(2);\n\t\tstop();\n\t\t$.get('data/dashboard.xml', function(xml) { \n\t  \tvar titles = [];\n\t  \t$('tab', xml).each(function() {\n\t    \ttitles.push($(this).attr('title'));\n\t  \t});\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\n\t  \tstart();\n\t\t});\n\t});\n}\n\ntest(\"css(String|Hash)\", function() {\n\texpect(19);"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[101,116],"code":"test(\"attr(String, Object)x\", function() {\r\n\texpect(2);\r\n\tstop();\r\n\t$.get('data/dashboard.xml', function(xml) { \r\n\t  var titles = [];\r\n\t  $('tab', xml).each(function() {\r\n\t    titles.push($(this).attr('title'));\r\n\t  });\r\n\t  ok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  ok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  start();\r\n\t});\r\n});\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r"}]},
{"id":"4767d09479585168d46c0a9d1345cb824ec393d4","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[680,702],"code":"test(\"val()\", function() {\n\texpect(2);\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n});\n\ntest(\"val(String)\", function() {\n\texpect(2);\n\tdocument.getElementById('text1').value = \"bla\";\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t$(\"#text1\").val('test');\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n});\n\ntest(\"html(String)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.html(\"<b>test</b>\");\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t}\n\tok( pass, \"Set HTML\" );"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[455,478],"code":"test(\"val()\", function() {\r\n\texpect(2);\r\n\tok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\r\n\tok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\r\n});\r\n\r\ntest(\"val(String)\", function() {\r\n\texpect(2);\r\n\tdocument.getElementById('text1').value = \"bla\";\r\n\tok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\r\n\t$(\"#text1\").val('test');\r\n\tok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\r\n});\r\n\r\ntest(\"html(String)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.html(\"<b>test</b>\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).childNodes.length == 0 ) pass = false;\r\n\t}\r\n\tok( pass, \"Set HTML\" );\r\n});\r"}]},
{"id":"59c8597912aa9a4fe96eaff34b8ce1f48878a31b","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[459,463],"code":"z.show = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[476,480],"code":"z.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[489,493],"code":"z.toggle = function() {\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"}]},
{"id":"5d124fadbe97e349d7877771cc7b0b9a351cc9e4","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[1,47],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )"},{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[1,44],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\")\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Hash params A set of key/value pairs that will be sent to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded.\n\t * @cat AJAX\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\")\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {test: true},\n \t *   function() { alert(\"load is done\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded (parameters: responseText, status and reponse itself).\n\t * @cat AJAX\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( url.constructor == Function )"}]},
{"id":"64f0a70940add1520da672754e7d724acbdbc37f","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[58,78],"code":"\tif ( jQuery.isFunction( params ) ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax({\n\turl: url,\n\ttype: type,\n\tdata: params,\n\tifModified: ifModified,\n\tcomplete: function(res, status){\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )"},{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[55,76],"code":"\tif ( params.constructor == Function ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax({\n\turl: url,\n\ttype: type,\n\tdata: params,\n\tifModified: ifModified,\n\tcomplete: function(res, status){\n\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {"}]},
{"id":"ff3d95fd6c208089fe41daeb8d0d2dc2b6204d51","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[596,604],"code":"s = jQuery.extend({}, jQuery.ajaxSettings, s);\n\n// if data available\nif ( s.data ) {\n\t// convert data if not already a string\n\tif (s.processData && typeof s.data != \"string\")\n  \t\t\ts.data = jQuery.param(s.data);\n\t// append data to url for get requests\n\tif( s.type.toLowerCase() == \"get\" ) {"},{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[555,563],"code":"}, s);\n\n// if data available\nif ( s.data ) {\n\t// convert data if not already a string\n\tif (s.processData && typeof s.data != 'string')\n  \t\t\ts.data = jQuery.param(s.data);\n\t// append data to url for get requests\n\tif( s.type.toLowerCase() == \"get\" )"}]},
{"id":"3e6e98849332c91a2e129edeb9ad9eece53bab76","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[658,682],"code":"status = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n// Make sure that the request was successful or notmodified\nif ( status != \"error\" ) {\n\t// Cache Last-Modified header, if ifModified mode.\n\tvar modRes;\n\ttry {\n\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\t\n\tif ( s.ifModified && modRes )\n\t\tjQuery.lastModified[s.url] = modRes;\n\t\n\t// process the data (runs the xml through httpData regardless of callback)\n\tvar data = jQuery.httpData( xml, s.dataType );\n\t\n\t// If a local callback was specified, fire it and pass it the data\n\tif ( s.success )\n\t\ts.success( data, status );\n\t\n\t// Fire the global callback\n\tif( s.global )\n\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );\n} else\n\tjQuery.handleError(s, xml, status);"},{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[608,631],"code":"var status = jQuery.httpSuccess( xml ) && isTimeout != \"timeout\" ?\n\ts.ifModified && jQuery.httpNotModified( xml, s.url ) ? \"notmodified\" : \"success\" : \"error\";\n\n// Make sure that the request was successful or notmodified\nif ( status != \"error\" ) {\n\t// Cache Last-Modified header, if ifModified mode.\n\tvar modRes;\n\ttry {\n\t\tmodRes = xml.getResponseHeader(\"Last-Modified\");\n\t} catch(e) {} // swallow exception thrown by FF if header is not available\n\n\tif ( s.ifModified && modRes )\n\t\tjQuery.lastModified[s.url] = modRes;\n\n\t// process the data (runs the xml through httpData regardless of callback)\n\tvar data = jQuery.httpData( xml, s.dataType );\n\n\t// If a local callback was specified, fire it and pass it the data\n\tif ( s.success )\n\t\ts.success( data, status );\n\n\t// Fire the global callback\n\tif( s.global )\n\t\tjQuery.event.trigger( \"ajaxSuccess\", [xml, s] );"}]},
{"id":"30337c235f246b55771d2f465a503ff174a3edc4","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[746,783],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )"},{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[684,723],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function(r) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" ) {"}]},
{"id":"8cc5ef3c64fa389106ac185247b0d560a40353b0","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajax.js","lines":[797,836],"code":"// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );\n\n\t// Return the resulting serialization\n\treturn s.join(\"&\");\n},\n\n// evalulates a script in global context\n// not reliable for safari\nglobalEval: function( data ) {\n\tif ( window.execScript )\n\t\twindow.execScript( data );\n\telse if ( jQuery.browser.safari )\n\t\t// safari doesn't provide a synchronous global eval\n\t\twindow.setTimeout( data, 0 );\n\telse\n\t\teval.call( window, data );\n}"},{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[736,777],"code":"// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function(a) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery ) {\n\t\t// Serialize the form elements\n\t\tfor ( var i = 0; i < a.length; i++ )\n\t\t\ts.push( a[i].name + \"=\" + encodeURIComponent( a[i].value ) );\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\t} else {\n\t\t// Serialize the key/values\n\t\tfor ( var j in a ) {\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif( a[j].constructor == Array ) {\n\t\t\t\tfor (var k = 0; k < a[j].length; k++) {\n\t\t\t\t\ts.push( j + \"=\" + encodeURIComponent( a[j][k] ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ts.push( j + \"=\" + encodeURIComponent( a[j] ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join(\"&\");\n},\n\n// evalulates a script in global context\n// not reliable for safari\nglobalEval: function(data) {\n\tif (window.execScript)\n\t\twindow.execScript( data );\n\telse if(jQuery.browser.safari)\n\t\t// safari doesn't provide a synchronous global eval\n\t\twindow.setTimeout( data, 0 );\n\telse\n\t\teval.call( window, data );\n}"}]},
{"id":"0ec6ffbddd177b62563e77e6ebdfae212eb9b8aa","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[9,21],"code":"\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[7,19],"code":"\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo[bar]=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo[]=baz&foo[]=42&foo[]=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );"}]},
{"id":"5b8d60812f403bd89ed7ff9e1663ef3f89d53bec","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[158,172],"code":"\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[115,129],"code":"\t$.get('data/dashboard.xml', function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(\"data/name.php\", function(msg) {"}]},
{"id":"5d25e57b2914e4ae2e7e3599fcbaded9d8e89bc1","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[196,208],"code":"\t$.getJSON(url(\"data/json.php\"), {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(url(\"data/json.php\"), function(json) {"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[153,165],"code":"\t$.getJSON(\"data/json.php\", {json: \"array\"}, function(json) {\n\t  ok( json[0].name == 'John', 'Check JSON: first, name' );\n\t  ok( json[0].age == 21, 'Check JSON: first, age' );\n\t  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n\t  ok( json[1].age == 25, 'Check JSON: second, age' );\n\t  start();\n\t});\n});\n\ntest(\"$.getJSON(String, Hash, Function) - JSON object\", function() {\n\texpect(2);\n\tstop();\n\t$.getJSON(\"data/json.php\", function(json) {"}]},
{"id":"d93e3161e490f0547e7519449b6507e7b1521724","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[218,249],"code":"\t$.post(url(\"data/name.php\"), {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;\n\tvar timeout;\n\t$.ajaxTimeout(1000);\n\tvar pass = function() {\n\t\tpassed++;\n\t\tif(passed == 2) {\n\t\t\tok( true, 'Check local and global callbacks after timeout' );\n\t\t\tclearTimeout(timeout);\n\t     $('#main').unbind(\"ajaxError\");\n\t\t\tstart();\n\t\t}\n\t};\n\tvar fail = function() {\n\t\tok( false, 'Check for timeout failed' );\n\t\tstart();\n\t};\n\ttimeout = setTimeout(fail, 1500);\n\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: url(\"data/name.php?wait=5\"),"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[175,206],"code":"\t$.post(\"data/name.php\", {xml: \"5-2\"}, function(xml){\n\t  $('math', xml).each(function() {\n\t\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t\t });\n\t  start();\n\t});\n});\n\ntest(\"$.ajaxTimeout(Number) - with global timeout\", function() {\n\tstop();\n\tvar passed = 0;\n\tvar timeout;\n\t$.ajaxTimeout(1000);\n\tvar pass = function() {\n\t\tpassed++;\n\t\tif(passed == 2) {\n\t\t\tok( true, 'Check local and global callbacks after timeout' );\n\t\t\tclearTimeout(timeout);\n\t     $('#main').unbind(\"ajaxError\");\n\t\t\tstart();\n\t\t}\n\t};\n\tvar fail = function() {\n\t\tok( false, 'Check for timeout failed' );\n\t\tstart();\n\t};\n\ttimeout = setTimeout(fail, 1500);\n\t$('#main').ajaxError(pass);\n\t$.ajax({\n\t  type: \"GET\",\n\t  url: \"data/name.php?wait=5\","}]},
{"id":"3a2168bcb8b53a304eb035ba04044fa3235fe7e3","instances":[{"path":"./jquery-data/1.1.3/src/ajax/ajaxTest.js","lines":[329,341],"code":"\t  success: function(resp) {\n\t    ok( $(\"properties\", resp).length == 1, 'properties in responseXML' );\n\t    ok( $(\"jsconf\", resp).length == 1, 'jsconf in responseXML' );\n\t    ok( $(\"thing\", resp).length == 2, 'things in responseXML' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - beforeSend\", function() {\n\texpect(1);\n\tstop();\n\tvar check = false;"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[281,293],"code":"\t  url: \"data/with_fries.xml\", dataType: \"xml\", type: \"GET\", data: \"\", success: function(resp) {\n\t    ok( $(\"properties\", resp).length == 1, 'properties in responseXML' );\n\t    ok( $(\"jsconf\", resp).length == 1, 'jsconf in responseXML' );\n\t    ok( $(\"thing\", resp).length == 2, 'things in responseXML' );\n\t    start();\n\t  }\n\t});\n});\n\ntest(\"$.ajax - beforeSend\", function() {\n\texpect(1);\n\tstop();\n\tvar customHeader = \"value\";"}]},
{"id":"fb68efab7ee71c3569232aa4c8d8e7570f98fae8","instances":[{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[10,21],"code":"add: function(element, type, handler, data) {\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\telement = window;\n\t\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\t\t\n\t// if data is passed, bind to handler \n\tif( data != undefined ) { "},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1870,1881],"code":"add: function(element, type, handler) {\r\n\t// For whatever reason, IE has trouble passing the window object\r\n\t// around, causing it to be cloned in the process\r\n\tif ( jQuery.browser.msie && element.setInterval != undefined )\r\n\t\telement = window;\r\n\r\n\t// Make sure that the function being executed has a unique ID\r\n\tif ( !handler.guid )\r\n\t\thandler.guid = this.guid++;\r\n\r\n\t// Init the element's event structure\r\n\tif (!element.events)\r"}]},
{"id":"796dd6ab48ed59bebda61a83d0fd5842d6d817d3","instances":[{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[498,565],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"},{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[89,143],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"}]},
{"id":"34f1c7a3c285e3ac9a4d0d043f43f7fee8fc74be","instances":[{"path":"./jquery-data/1.1.3/src/event/event.js","lines":[967,988],"code":"\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {"},{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[1590,1611],"code":"\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10);\n\t} \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie) jQuery(window).unload(function() {"}]},
{"id":"7ffee692150031588ae956879840d6d059b3fcae","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[41,45],"code":"this.filter(\":hidden\").each(function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n}).end();"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[2872,2876],"code":"show: function(){\r\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\r\n\tif ( jQuery.css(this,\"display\") == \"none\" )\r\n\t\tthis.style.display = \"block\";\r\n},\r"}]},
{"id":"44cfc744fc1649df885b9aca844e0a62c955c33b","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[86,91],"code":"this.filter(\":visible\").each(function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n}).end();"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[2895,2900],"code":"hide: function(){\r\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\r\n\tif ( this.oldblock == \"none\" )\r\n\t\tthis.oldblock = \"block\";\r\n\tthis.style.display = \"none\";\r\n},\r"}]},
{"id":"569d765bd41df9c68354af6542c6b11fb32a1591","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[276,362],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop )\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[288,359],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(s,o) {"}]},
{"id":"845a0b913360757a1914575d9259b2ade57777ce","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[394,404],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[379,389],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"}]},
{"id":"ae153afb02f253bcaa7b9a5cefcaa0804cb09c94","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[435,440],"code":"z.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[426,431],"code":"z.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity"}]},
{"id":"5d0c019f52415be0e581ed93073bfff407ab5e68","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[454,464],"code":"\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tjQuery.timers.push(function(){"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[443,453],"code":"\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){"}]},
{"id":"f242648701f748b00d9bfdaf42b246a071205748","instances":[{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[483,489],"code":"z.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.show = true;"},{"path":"./jquery-data/1.1.3/src/fx/fx.js","lines":[504,510],"code":"z.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.hide = true;"}]},
{"id":"7122c8dc809cf587fd415406c0cd80e82a2864b3","instances":[{"path":"./jquery-data/1.1.3/src/fx/fxTest.js","lines":[3,8],"code":"test(\"animate(Hash, Object, Function)\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 0, function() {"},{"path":"./jquery-data/1.0.4/src/fx/fxTest.js","lines":[3,8],"code":"test(\"animate(Hash, Object, Function) - assert that animate doesn't modify its arguments\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 'fast', function() {"}]},
{"id":"0229f9ae282538c01901acfad98ee7dccbbfccd2","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\n\ntest(\"Basic requirements\", function() {\n\texpect(7);\n\tok( Array.prototype.push, \"Array.push()\" );\n\tok( Function.prototype.apply, \"Function.apply()\" );\n\tok( document.getElementById, \"getElementById\" );\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\n\tok( RegExp, \"RegExp\" );\n\tok( jQuery, \"jQuery\" );\n\tok( $, \"$()\" );\n});\n\ntest(\"$()\", function() {"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"length\", function() {\r"}]},
{"id":"9a06534c6362abe11b2931f5a7610552c6bd2ed2","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[157,182],"code":"test(\"each(Function)\", function() {\n\texpect(1);\n\tvar div = $(\"div\");\n\tdiv.each(function(){this.foo = 'zoo';});\n\tvar pass = true;\n\tfor ( var i = 0; i < div.size(); i++ ) {\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\n\t}\n\tok( pass, \"Execute a function, Relative\" );\n});\n\ntest(\"index(Object)\", function() {\n\texpect(8);\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\n});\n\ntest(\"attr(String)\", function() {\n\texpect(13);"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[30,55],"code":"test(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r"}]},
{"id":"4aabccdb5674638713355573b8554d30e91330ea","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[218,228],"code":"test(\"attr(Hash)\", function() {\n\texpect(1);\n\tvar pass = true;\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n\t});\n\tok( pass, \"Set Multiple Attributes\" );\n});\n\ntest(\"attr(String, Object)\", function() {\n\texpect(8);"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[70,80],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r"}]},
{"id":"616b2622600dd9f0c13cda5fbe7d7c24c81926fa","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[229,237],"code":"var div = $(\"div\");\ndiv.attr(\"foo\", \"bar\");\nvar pass = true;\nfor ( var i = 0; i < div.size(); i++ ) {\n  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n}\nok( pass, \"Set Attribute\" );\n\nok( $(\"#foo\").attr({\"width\": null}), \"Try to set an attribute to nothing\" );\t"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[81,89],"code":"var div = $(\"div\");\r\ndiv.attr(\"foo\", \"bar\");\r\nvar pass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n}\r\nok( pass, \"Set Attribute\" );\r\n\r\n$(\"#name\").attr('name', 'something');\r"}]},
{"id":"b2fb346fae7fd25efed1e2c99939dc86c031da19","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[610,621],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\n});\n\ntest(\"clone()\", function() {\n\texpect(3);\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\n\tvar clone = $('#yahoo').clone();\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\n});\n\ntest(\"is(String)\", function() {"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[250,261],"code":"\tok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\r\n});\r\n\r\ntest(\"clone()\", function() {\r\n\texpect(3);\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\r\n\tvar clone = $('#yahoo').clone();\r\n\tok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\r\n\tok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\r\n});\r\n\r\ntest(\"filter()\", function() {\r"}]},
{"id":"c4be24ae166e316af29a30e98034cecde1c0f61c","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[764,773],"code":"test(\"show()\", function() {\n\texpect(1);\n\tvar pass = true, div = $(\"div\");\n\tdiv.show().each(function(){\n\t  if ( this.style.display == \"none\" ) pass = false;\n\t});\n\tok( pass, \"Show\" );\n});\n\ntest(\"addClass(String)\", function() {"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[515,524],"code":"test(\"show()\", function() {\r\n\texpect(1);\r\n\tvar pass = true, div = $(\"div\");\r\n\tdiv.show().each(function(){\r\n\t  if ( this.style.display == \"none\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Show\" );\r\n});\r\n\r\ntest(\"addClass(String)\", function() {\r"}]},
{"id":"780403bbc6e7e287eb4a24e9b1d6ffe25bd2df96","instances":[{"path":"./jquery-data/1.1.3/src/jquery/coreTest.js","lines":[794,802],"code":"var div = $(\"div\").addClass(\"test\").addClass(\"foo\").addClass(\"bar\");\ndiv.removeClass(\"test\").removeClass(\"bar\").removeClass(\"foo\");\nvar pass = true;\nfor ( var i = 0; i < div.size(); i++ ) {\n if ( div.get(i).className.match(/test|bar|foo/) ) pass = false;\n}\nok( pass, \"Remove multiple classes\" );\n\nreset();"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[546,557],"code":"\tvar div = $(\"div\").addClass(\"test\").addClass(\"foo\").addClass(\"bar\");\r\n\tdiv.removeClass(\"test\").removeClass(\"bar\").removeClass(\"foo\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t if ( div.get(i).className.match(/test|bar|foo/) ) pass = false;\r\n\t}\r\n\tok( pass, \"Remove multiple classes\" );\r\n});\r\n\r\ntest(\"removeAttr(String\", function() {\r\n\tok( $('#mark').removeAttr(\"class\")[0].className == \"\", \"remove class\" );\r\n});"}]},
{"id":"bfbcbd9a7b8dbc3fb56420436371b2a31b26dd15","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1148,1242],"code":"\t/**\n\t * @private\n\t * @name domManip\n\t * @param Array args\n\t * @param Boolean table Insert TBODY in TABLEs if one is not found.\n\t * @param Number dir If dir<0, process args in reverse order.\n\t * @param Function fn The function doing the DOM manipulation.\n\t * @type jQuery\n\t * @cat Core\n\t */\n\tdomManip: function(args, table, dir, fn){\n\t\tvar clone = this.length > 1, a; \n\n\t\treturn this.each(function(){\n\t\t\tif ( !a ) {\n\t\t\t\ta = jQuery.clean(args, this.ownerDocument);\n\t\t\t\tif ( dir < 0 )\n\t\t\t\t\ta.reverse();\n\t\t\t}\n\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && jQuery.nodeName(this, \"table\") && jQuery.nodeName(a[0], \"tr\") )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\n\t\t\tjQuery.each( a, function(){\n\t\t\t\tfn.apply( obj, [ clone ? this.cloneNode(true) : this ] );\n\t\t\t});\n\n\t\t});\n\t}\n};\n\n/**\n * Extends the jQuery object itself. Can be used to add functions into\n * the jQuery namespace and to [[Plugins/Authoring|add plugin methods]] (plugins).\n * \n * @example jQuery.fn.extend({\n *   check: function() {\n *     return this.each(function() { this.checked = true; });\n *   },\n *   uncheck: function() {\n *     return this.each(function() { this.checked = false; });\n *   }\n * });\n * $(\"input[@type=checkbox]\").check();\n * $(\"input[@type=radio]\").uncheck();\n * @desc Adds two plugin methods.\n *\n * @example jQuery.extend({\n *   min: function(a, b) { return a < b ? a : b; },\n *   max: function(a, b) { return a > b ? a : b; }\n * });\n * @desc Adds two functions into the jQuery namespace\n *\n * @name $.extend\n * @param Object prop The object that will be merged into the jQuery object\n * @type Object\n * @cat Core\n */\n\n/**\n * Extend one object with one or more others, returning the original,\n * modified, object. This is a great utility for simple inheritance.\n * \n * @example var settings = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * jQuery.extend(settings, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n * @desc Merge settings and options, modifying settings\n *\n * @example var defaults = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * var settings = jQuery.extend({}, defaults, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n * @desc Merge defaults and options, without modifying the defaults\n *\n * @name $.extend\n * @param Object target The object to extend\n * @param Object prop1 The object that will be merged into the first.\n * @param Object propN (optional) More objects to merge into the first\n * @type Object\n * @cat JavaScript\n */\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0], a = 1;\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( arguments.length == 1 ) {\n\t\ttarget = this;\n\t\ta = 0;\n\t}\n\tvar prop;\n\twhile ( (prop = arguments[a++]) != null )"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1021,1118],"code":"\t/**\r\n\t *\r\n\t *\r\n\t * @private\r\n\t * @name pushStack\r\n\t * @param Array a\r\n\t * @param Array args\r\n\t * @type jQuery\r\n\t * @cat Core\r\n\t */\r\n\tpushStack: function(a,args) {\r\n\t\tvar fn = args && args[args.length-1];\r\n\t\tvar fn2 = args && args[args.length-2];\r\n\t\t\r\n\t\tif ( fn && fn.constructor != Function ) fn = null;\r\n\t\tif ( fn2 && fn2.constructor != Function ) fn2 = null;\r\n\r\n\t\tif ( !fn ) {\r\n\t\t\tif ( !this.stack ) this.stack = [];\r\n\t\t\tthis.stack.push( this.get() );\r\n\t\t\tthis.set( a );\r\n\t\t} else {\r\n\t\t\tvar old = this.get();\r\n\t\t\tthis.set( a );\r\n\r\n\t\t\tif ( fn2 && a.length || !fn2 )\r\n\t\t\t\tthis.each( fn2 || fn ).set( old );\r\n\t\t\telse\r\n\t\t\t\tthis.set( old ).each( fn );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\n/**\r\n * Extends the jQuery object itself. Can be used to add functions into\r\n * the jQuery namespace and to add plugin methods (plugins).\r\n * \r\n * @example jQuery.fn.extend({\r\n *   check: function() {\r\n *     return this.each(function() { this.checked = true; });\r\n *   ),\r\n *   uncheck: function() {\r\n *     return this.each(function() { this.checked = false; });\r\n *   }\r\n * });\r\n * $(\"input[@type=checkbox]\").check();\r\n * $(\"input[@type=radio]\").uncheck();\r\n * @desc Adds two plugin methods.\r\n *\r\n * @example jQuery.extend({\r\n *   min: function(a, b) { return a < b ? a : b; },\r\n *   max: function(a, b) { return a > b ? a : b; }\r\n * });\r\n * @desc Adds two functions into the jQuery namespace\r\n *\r\n * @name $.extend\r\n * @param Object prop The object that will be merged into the jQuery object\r\n * @type Object\r\n * @cat Core\r\n */\r\n\r\n/**\r\n * Extend one object with one or more others, returning the original,\r\n * modified, object. This is a great utility for simple inheritance.\r\n * \r\n * @example var settings = { validate: false, limit: 5, name: \"foo\" };\r\n * var options = { validate: true, name: \"bar\" };\r\n * jQuery.extend(settings, options);\r\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\r\n * @desc Merge settings and options, modifying settings\r\n *\r\n * @example var defaults = { validate: false, limit: 5, name: \"foo\" };\r\n * var options = { validate: true, name: \"bar\" };\r\n * var settings = jQuery.extend({}, defaults, options);\r\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\r\n * @desc Merge defaults and options, without modifying the defaults\r\n *\r\n * @name $.extend\r\n * @param Object target The object to extend\r\n * @param Object prop1 The object that will be merged into the first.\r\n * @param Object propN (optional) More objects to merge into the first\r\n * @type Object\r\n * @cat Javascript\r\n */\r\njQuery.extend = jQuery.fn.extend = function() {\r\n\t// copy reference to target object\r\n\tvar target = arguments[0],\r\n\t\ta = 1;\r\n\r\n\t// extend jQuery itself if only one argument is passed\r\n\tif ( arguments.length == 1 ) {\r\n\t\ttarget = this;\r\n\t\ta = 0;\r\n\t}\r\n\tvar prop;\r\n\twhile (prop = arguments[a++])\r"}]},
{"id":"4079c0242f553e72d8bf5bb5c22ba714beaa3420","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1336,1341],"code":"each: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1209,1214],"code":"each: function( obj, fn, args ) {\r\n\tif ( obj.length == undefined )\r\n\t\tfor ( var i in obj )\r\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\r\n\telse\r\n\t\tfor ( var i = 0; i < obj.length; i++ )\r"}]},
{"id":"16e6da46b0fede38694602be57eeda53aa5e1c9d","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1383,1399],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1245,1261],"code":"/**\r\n * Swap in/out style options.\r\n * @private\r\n */\r\nswap: function(e,o,f) {\r\n\tfor ( var i in o ) {\r\n\t\te.style[\"old\"+i] = e.style[i];\r\n\t\te.style[i] = o[i];\r\n\t}\r\n\tf.apply( e, [] );\r\n\tfor ( var i in o )\r\n\t\te.style[i] = e.style[\"old\"+i];\r\n},\r\n\r\ncss: function(e,p) {\r\n\tif ( p == \"height\" || p == \"width\" ) {\r\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\r"}]},
{"id":"1bb47b944ddf9a2e8944f84e6dfbfe479ae30e9f","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1407,1417],"code":"if ( jQuery(e).is(':visible') ) {\n\toHeight = e.offsetHeight;\n\toWidth = e.offsetWidth;\n} else {\n\te = jQuery(e.cloneNode(true))\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t.css({\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t}).appendTo(e.parentNode)[0];\n\n\tvar parPos = jQuery.css(e.parentNode,\"position\") || \"static\";"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1269,1279],"code":"if (jQuery.css(e,\"display\") != \"none\") {\r\n\toHeight = e.offsetHeight;\r\n\toWidth = e.offsetWidth;\r\n} else {\r\n\te = jQuery(e.cloneNode(true))\r\n\t\t.find(\":radio\").removeAttr(\"checked\").end()\r\n\t\t.css({\r\n\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\r\n\t\t}).appendTo(e.parentNode)[0];\r\n\r\n\tvar parPos = jQuery.css(e.parentNode,\"position\");\r"}]},
{"id":"38adfe18eedf6623aeab242dea5a4545374a7896","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1454,1477],"code":"\t\t\tprop = \"float\";\n\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\t\tif ( cur )\n\t\t\tret = cur.getPropertyValue(prop);\n\t\telse if ( prop == \"display\" )\n\t\t\tret = \"none\";\n\t\telse\n\t\t\tjQuery.swap(elem, { display: \"block\" }, function() {\n\t\t\t    var c = document.defaultView.getComputedStyle(this, \"\");\n\t\t\t    ret = c && c.getPropertyValue(prop) || \"\";\n\t\t\t});\n\n\t} else if (elem.currentStyle) {\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t}\n\n\treturn ret;\n},\n\nclean: function(a, doc) {"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1315,1340],"code":"\t\t\tprop = \"float\";\r\n\r\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\r\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\r\n\r\n\t\tif ( cur )\r\n\t\t\tret = cur.getPropertyValue(prop);\r\n\t\telse if ( prop == 'display' )\r\n\t\t\tret = 'none';\r\n\t\telse\r\n\t\t\tjQuery.swap(elem, { display: 'block' }, function() {\r\n\t\t\t    var c = document.defaultView.getComputedStyle(this, '');\r\n\t\t\t    ret = c && c.getPropertyValue(prop) || '';\r\n\t\t\t});\r\n\r\n\t} else if (elem.currentStyle) {\r\n\r\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\r\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\r\n\t\t\r\n\t}\r\n\r\n\treturn ret;\r\n},\r\n\r\nclean: function(a) {\r"}]},
{"id":"ee2c686f9c2335d7946e40ad59c87bd5a536612d","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1587,1610],"code":"\t\treturn elem.getAttribute( name );\n\n\t// elem is actually elem.style ... set the style\n\t} else {\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @example $.trim(\"  hello, how are you?  \");\n * @result \"hello, how are you?\"\n *\n * @name $.trim\n * @type String\n * @param String str The string to trim.\n * @cat JavaScript\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1587,1596],"code":"\t\treturn elem.getAttribute( name );\r\n\t} else {\r\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\r\n\t\tif ( value != undefined ) elem[name] = value;\r\n\t\treturn elem[name];\r\n\t}\r\n},\r\n\r\n// The regular expressions that power the parsing engine\r\nparse: [\r"}]},
{"id":"b349d43c09ebe96c2b60e812d200fb566e494504","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1699,1709],"code":"grep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\n\tvar result = [];\n\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0, el = elems.length; i < el; i++ )"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1794,1804],"code":"grep: function(elems, fn, inv) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\r\n\r\n\tvar result = [];\r\n\r\n\t// Go through the array, only saving the items\r\n\t// that pass the validator function\r\n\tfor ( var i = 0; i < elems.length; i++ )\r"}]},
{"id":"257af5688fb77a7f4687f46d2405ce86eca9a7fa","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1679,1763],"code":"/**\n * Filter items out of an array, by using a filter function.\n *\n * The specified function will be passed two arguments: The\n * current array item and the index of the item in the array. The\n * function must return 'true' to keep the item in the array, \n * false to remove it.\n *\n * @example $.grep( [0,1,2], function(i){\n *   return i > 0;\n * });\n * @result [1, 2]\n *\n * @name $.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n * @cat JavaScript\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\n\tvar result = [];\n\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0, el = elems.length; i < el; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\n\treturn result;\n},\n\n/**\n * Translate all items in an array to another array of items.\n *\n * The translation function that is provided to this method is \n * called for each item in the array and is passed one argument: \n * The item to be translated.\n *\n * The function can then return the translated value, 'null'\n * (to remove the item), or  an array of values - which will\n * be flattened into the full array.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i + 4;\n * });\n * @result [4, 5, 6]\n * @desc Maps the original array to a new one and adds 4 to each value.\n *\n * @example $.map( [0,1,2], function(i){\n *   return i > 0 ? i + 1 : null;\n * });\n * @result [2, 3]\n * @desc Maps the original array to a new one and adds 1 to each\n * value if it is bigger then zero, otherwise it's removed-\n * \n * @example $.map( [0,1,2], function(i){\n *   return [ i, i + 1 ];\n * });\n * @result [0, 1, 1, 2, 2, 3]\n * @desc Maps the original array to a new one, each element is added\n * with it's original value and the value plus one.\n *\n * @name $.map\n * @type Array\n * @param Array array The Array to translate.\n * @param Function fn The function to process each item against.\n * @cat JavaScript\n */\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( typeof fn == \"string\" )\n\t\tfn = new Function(\"a\",\"return \" + fn);\n\n\tvar result = [];\n\n\t// Go through the array, translating each of the items to their\n\t// new value (or values).\n\tfor ( var i = 0, el = elems.length; i < el; i++ ) {"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1775,1850],"code":"/**\r\n * Filter items out of an array, by using a filter function.\r\n * The specified function will be passed two arguments: The\r\n * current array item and the index of the item in the array. The\r\n * function should return 'true' if you wish to keep the item in\r\n * the array, false if it should be removed.\r\n *\r\n * @example $.grep( [0,1,2], function(i){\r\n *   return i > 0;\r\n * });\r\n * @result [1, 2]\r\n *\r\n * @name $.grep\r\n * @type Array\r\n * @param Array array The Array to find items in.\r\n * @param Function fn The function to process each item against.\r\n * @param Boolean inv Invert the selection - select the opposite of the function.\r\n * @cat Javascript\r\n */\r\ngrep: function(elems, fn, inv) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\r\n\r\n\tvar result = [];\r\n\r\n\t// Go through the array, only saving the items\r\n\t// that pass the validator function\r\n\tfor ( var i = 0; i < elems.length; i++ )\r\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\r\n\t\t\tresult.push( elems[i] );\r\n\r\n\treturn result;\r\n},\r\n\r\n/**\r\n * Translate all items in an array to another array of items. \r\n * The translation function that is provided to this method is \r\n * called for each item in the array and is passed one argument: \r\n * The item to be translated. The function can then return:\r\n * The translated value, 'null' (to remove the item), or \r\n * an array of values - which will be flattened into the full array.\r\n *\r\n * @example $.map( [0,1,2], function(i){\r\n *   return i + 4;\r\n * });\r\n * @result [4, 5, 6]\r\n *\r\n * @example $.map( [0,1,2], function(i){\r\n *   return i > 0 ? i + 1 : null;\r\n * });\r\n * @result [2, 3]\r\n * \r\n * @example $.map( [0,1,2], function(i){\r\n *   return [ i, i + 1 ];\r\n * });\r\n * @result [0, 1, 1, 2, 2, 3]\r\n *\r\n * @name $.map\r\n * @type Array\r\n * @param Array array The Array to translate.\r\n * @param Function fn The function to process each item against.\r\n * @cat Javascript\r\n */\r\nmap: function(elems, fn) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r\n\t\tfn = new Function(\"a\",\"return \" + fn);\r\n\r\n\tvar result = [];\r\n\r\n\t// Go through the array, translating each of the items to their\r\n\t// new value (or values).\r\n\tfor ( var i = 0; i < elems.length; i++ ) {\r"}]},
{"id":"5d23145b5e159c88f0d8d420b9513e7c32766e03","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1763,1770],"code":"for ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1850,1857],"code":"for ( var i = 0; i < elems.length; i++ ) {\r\n\tvar val = fn(elems[i],i);\r\n\r\n\tif ( val !== null && val != undefined ) {\r\n\t\tif ( val.constructor != Array ) val = [val];\r\n\t\tresult = jQuery.merge( result, val );\r\n\t}\r\n}\r"}]},
{"id":"60fa8491c67beaf8ba02d474bdc580f4e6774c50","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[1986,1990],"code":"}, function(i,n){\n\tjQuery.fn[ i ] = function(a) {\n\t\tvar ret = jQuery.map(this,n);\n\t\tif ( a && typeof a == \"string\" )\n\t\t\tret = jQuery.multiFilter(a,ret);"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1136,1140],"code":"jQuery.each( jQuery.macros.axis, function(i,n){\r\n\tjQuery.fn[ i ] = function(a) {\r\n\t\tvar ret = jQuery.map(this,n);\r\n\t\tif ( a && typeof a == \"string\" )\r\n\t\t\tret = jQuery.filter(a,ret).r;\r"}]},
{"id":"5dfde0babe04bedccdf9b6f1f6ed66985e967380","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[2266,2270],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1161,1165],"code":"jQuery.each( jQuery.macros.filter, function(i,n){\r\n\tjQuery.fn[ n ] = function(num,fn) {\r\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\r\n\t};\r\n});\r"}]},
{"id":"736a3fbdcfdb278f9a67accfa93f67137477a036","instances":[{"path":"./jquery-data/1.1.3/src/jquery/jquery.js","lines":[2332,2338],"code":"jQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1176,1182],"code":"jQuery.each( jQuery.macros.css, function(i,n){\r\n\tjQuery.fn[ n ] = function(h) {\r\n\t\treturn h == undefined ?\r\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\r\n\t\t\tthis.css( n, h );\r\n\t};\r\n});\r"}]},
{"id":"ab67cfe6dcd0df387a58d9871e6fc3eab0a16869","instances":[{"path":"./jquery-data/1.1.3/src/selector/selector.js","lines":[410,441],"code":"/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * A handy, and fast, way to traverse in a particular direction and find\n * a specific element.\n *\n * @private\n * @name $.nth\n * @type DOMElement\n * @param DOMElement cur The element to search from.\n * @param String|Number num The Nth result to match. Can be a number or a string (like 'even' or 'odd').\n * @param String dir The direction to move in (pass in something like 'previousSibling' or 'nextSibling').\n * @cat DOM/Traversing\n */\nnth: function(cur,result,dir,elem){"},{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1681,1709],"code":"/**\r\n * All ancestors of a given element.\r\n *\r\n * @private\r\n * @name $.parents\r\n * @type Array<Element>\r\n * @param Element elem The element to find the ancestors of.\r\n * @cat DOM/Traversing\r\n */\r\nparents: function( elem ){\r\n\tvar matched = [];\r\n\tvar cur = elem.parentNode;\r\n\twhile ( cur && cur != document ) {\r\n\t\tmatched.push( cur );\r\n\t\tcur = cur.parentNode;\r\n\t}\r\n\treturn matched;\r\n},\r\n\r\n/**\r\n * All elements on a specified axis.\r\n *\r\n * @private\r\n * @name $.sibling\r\n * @type Array\r\n * @param Element elem The element to find all the siblings of (including itself).\r\n * @cat DOM/Traversing\r\n */\r\nsibling: function(elem, pos, not) {\r"}]},
{"id":"790b7091d7d4baa5a978f188a5bd8466a0be7e28","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[85,93],"code":"test(\"multiple\", function() {\n\texpect(4);\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n});\n\ntest(\"child and adjacent\", function() {"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[351,359],"code":"test(\"expressions - multiple\", function() {\r\n\texpect(4);\r\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r"}]},
{"id":"f0840cc724275d8e3ae626b16f0b03327c4e8582","instances":[{"path":"./jquery-data/1.1.3/src/selector/selectorTest.js","lines":[149,155],"code":"test(\"pseudo (:) selectors\", function() {\n\texpect(30);\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\",\"length\",\"idTest\"] );"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[401,407],"code":"test(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r"}]}]
