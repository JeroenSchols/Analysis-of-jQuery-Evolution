[{"id":"01a0be23af11348699e195cf7f6b432f8a41f75f","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[1,176],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[1,147],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"}]},
{"id":"01a0be23af11348699e195cf7f6b432f8a41f75f","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[1,176],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[1,147],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"}]},
{"id":"651fa0f87e1028743eeca8a6ff465225c855d1a6","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1500,1568],"code":"\t\t\tvar table = \"\";\n\n\t\t\tif ( !a[i].indexOf(\"<thead\") || !a[i].indexOf(\"<tbody\") ) {\n\t\t\t\ttable = \"thead\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<tr\") ) {\n\t\t\t\ttable = \"tr\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<td\") || !a[i].indexOf(\"<th\") ) {\n\t\t\t\ttable = \"td\";\n\t\t\t\ta[i] = \"<table><tbody><tr>\" + a[i] + \"</tr></tbody></table>\";\n\t\t\t}\n\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.innerHTML = a[i];\n\n\t\t\tif ( table ) {\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tif ( table != \"thead\" ) div = div.firstChild;\n\t\t\t\tif ( table == \"td\" ) div = div.firstChild;\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < div.childNodes.length; j++ )\n\t\t\t\tr.push( div.childNodes[j] );\n\t\t\t} else if ( a[i].jquery || a[i].length && !a[i].nodeType )\n\t\t\t\tfor ( var k = 0; k < a[i].length; k++ )\n\t\t\t\t\tr.push( a[i][k] );\n\t\t\telse if ( a[i] !== null )\n\t\t\t\tr.push(\ta[i].nodeType ? a[i] : document.createTextNode(a[i].toString()) );\n\t}\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\",\n\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\n\t\t// Form attributes\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected || jQuery.attr(a, 'selected')\","},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[981,1049],"code":"\t\t\tvar table = \"\";\n\n\t\t\tif ( !a[i].indexOf(\"<thead\") || !a[i].indexOf(\"<tbody\") ) {\n\t\t\t\ttable = \"thead\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<tr\") ) {\n\t\t\t\ttable = \"tr\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<td\") || !a[i].indexOf(\"<th\") ) {\n\t\t\t\ttable = \"td\";\n\t\t\t\ta[i] = \"<table><tbody><tr>\" + a[i] + \"</tr></tbody></table>\";\n\t\t\t}\n\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.innerHTML = a[i];\n\n\t\t\tif ( table ) {\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tif ( table != \"thead\" ) div = div.firstChild;\n\t\t\t\tif ( table == \"td\" ) div = div.firstChild;\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < div.childNodes.length; j++ )\n\t\t\t\tr.push( div.childNodes[j] );\n\t\t\t} else if ( a[i].jquery || a[i].length && !a[i].nodeType )\n\t\t\t\tfor ( var k = 0; k < a[i].length; k++ )\n\t\t\t\t\tr.push( a[i][k] );\n\t\t\telse if ( a[i] !== null )\n\t\t\t\tr.push(\ta[i].nodeType ? a[i] : document.createTextNode(a[i].toString()) );\n\t}\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\t\t\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\t\t\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\t\t\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\",\n\t\t\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\t\t\n\t\t// Form elements\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected\""}]},
{"id":"651fa0f87e1028743eeca8a6ff465225c855d1a6","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1500,1568],"code":"\t\t\tvar table = \"\";\n\n\t\t\tif ( !a[i].indexOf(\"<thead\") || !a[i].indexOf(\"<tbody\") ) {\n\t\t\t\ttable = \"thead\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<tr\") ) {\n\t\t\t\ttable = \"tr\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<td\") || !a[i].indexOf(\"<th\") ) {\n\t\t\t\ttable = \"td\";\n\t\t\t\ta[i] = \"<table><tbody><tr>\" + a[i] + \"</tr></tbody></table>\";\n\t\t\t}\n\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.innerHTML = a[i];\n\n\t\t\tif ( table ) {\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tif ( table != \"thead\" ) div = div.firstChild;\n\t\t\t\tif ( table == \"td\" ) div = div.firstChild;\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < div.childNodes.length; j++ )\n\t\t\t\tr.push( div.childNodes[j] );\n\t\t\t} else if ( a[i].jquery || a[i].length && !a[i].nodeType )\n\t\t\t\tfor ( var k = 0; k < a[i].length; k++ )\n\t\t\t\t\tr.push( a[i][k] );\n\t\t\telse if ( a[i] !== null )\n\t\t\t\tr.push(\ta[i].nodeType ? a[i] : document.createTextNode(a[i].toString()) );\n\t}\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\",\n\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\n\t\t// Form attributes\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected || jQuery.attr(a, 'selected')\","},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[981,1049],"code":"\t\t\tvar table = \"\";\n\n\t\t\tif ( !a[i].indexOf(\"<thead\") || !a[i].indexOf(\"<tbody\") ) {\n\t\t\t\ttable = \"thead\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<tr\") ) {\n\t\t\t\ttable = \"tr\";\n\t\t\t\ta[i] = \"<table>\" + a[i] + \"</table>\";\n\t\t\t} else if ( !a[i].indexOf(\"<td\") || !a[i].indexOf(\"<th\") ) {\n\t\t\t\ttable = \"td\";\n\t\t\t\ta[i] = \"<table><tbody><tr>\" + a[i] + \"</tr></tbody></table>\";\n\t\t\t}\n\n\t\t\tvar div = document.createElement(\"div\");\n\t\t\tdiv.innerHTML = a[i];\n\n\t\t\tif ( table ) {\n\t\t\t\tdiv = div.firstChild;\n\t\t\t\tif ( table != \"thead\" ) div = div.firstChild;\n\t\t\t\tif ( table == \"td\" ) div = div.firstChild;\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < div.childNodes.length; j++ )\n\t\t\t\tr.push( div.childNodes[j] );\n\t\t\t} else if ( a[i].jquery || a[i].length && !a[i].nodeType )\n\t\t\t\tfor ( var k = 0; k < a[i].length; k++ )\n\t\t\t\t\tr.push( a[i][k] );\n\t\t\telse if ( a[i] !== null )\n\t\t\t\tr.push(\ta[i].nodeType ? a[i] : document.createTextNode(a[i].toString()) );\n\t}\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\t\t\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\t\t\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\t\t\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\",\n\t\t\n\t\t// Visibility\n\t\tvisible: \"a.type!='hidden'&&jQuery.css(a,'display')!='none'&&jQuery.css(a,'visibility')!='hidden'\",\n\t\thidden: \"a.type=='hidden'||jQuery.css(a,'display')=='none'||jQuery.css(a,'visibility')=='hidden'\",\n\t\t\n\t\t// Form elements\n\t\tenabled: \"!a.disabled\",\n\t\tdisabled: \"a.disabled\",\n\t\tchecked: \"a.checked\",\n\t\tselected: \"a.selected\""}]},
{"id":"3e66361b9a3ecea1dfa33b6145e922d7eabf9fa2","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[500,506],"code":"z.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[435,441],"code":"z.show = function( p ){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.custom( 0, z.el.orig[prop] );"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[449,455],"code":"z.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;"}]},
{"id":"73397464514a9a246760c33fa30b1da102e3d93a","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[56,63],"code":"load: function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[12,19],"code":"jQuery.fn.load = function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";"}]},
{"id":"530abe4f899cc09375ea72de8bb3408048a54b29","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[62,90],"code":"// Default to a GET request\nvar type = \"GET\";\n\t\n// If the second parameter was provided\nif ( params ) {\n\t// If it's a function\n\tif ( params.constructor == Function ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\t\t\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax( type, url, params,function(res, status){\n\t\n\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t// Inject the HTML into all the matched elements\n\t\tself.html(res.responseText).each( callback, [res.responseText, status] );\n\t\t\n\t\t// Execute all the scripts inside of the newly-injected HTML\n\t\tjQuery(\"script\", self).each(function(){"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[18,46],"code":"// Default to a GET request\nvar type = \"GET\";\n\n// If the second parameter was provided\nif ( params ) {\n\t// If it's a function\n\tif ( params.constructor == Function ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\t\t\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax( type, url, params,function(res, status){\n\t\n\tif ( status == \"success\" || !ifModified && status == \"notmodified\" ) {\n\t\t// Inject the HTML into all the matched elements\n\t\tself.html(res.responseText).each( callback, [res.responseText, status] );\n\t\t\n\t\t// Execute all the scripts inside of the newly-injected HTML\n\t\t$(\"script\", self).each(function(){"}]},
{"id":"e16277cdeabcc545f0bc017d0f35fdd053f5b8b6","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[132,306],"code":"// If IE is used, create a wrapper for the XMLHttpRequest object\nif ( jQuery.browser.msie && typeof XMLHttpRequest == \"undefined\" )\n\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\n\t\t\tnavigator.userAgent.indexOf(\"MSIE 5\") >= 0 ?\n\t\t\t\"Microsoft.XMLHTTP\" : \"Msxml2.XMLHTTP\"\n\t\t);\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\n\n/**\n * Attach a function to be executed whenever an AJAX request begins.\n *\n * @example $(\"#loading\").ajaxStart(function(){\n *   $(this).show();\n * });\n * @desc Show a loading message whenever an AJAX request starts.\n *\n * @name ajaxStart\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever all AJAX requests have ended.\n *\n * @example $(\"#loading\").ajaxStop(function(){\n *   $(this).hide();\n * });\n * @desc Hide a loading message after all the AJAX requests have stopped.\n *\n * @name ajaxStop\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever an AJAX request completes.\n *\n * @example $(\"#msg\").ajaxComplete(function(){\n *   $(this).append(\"<li>Request Complete.</li>\");\n * });\n * @desc Show a message when an AJAX request completes.\n *\n * @name ajaxComplete\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever an AJAX request completes\n * successfully.\n *\n * @example $(\"#msg\").ajaxSuccess(function(){\n *   $(this).append(\"<li>Successful Request!</li>\");\n * });\n * @desc Show a message when an AJAX request completes successfully.\n *\n * @name ajaxSuccess\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * Attach a function to be executed whenever an AJAX request fails.\n *\n * @example $(\"#msg\").ajaxError(function(){\n *   $(this).append(\"<li>Error requesting page.</li>\");\n * });\n * @desc Show a message when an AJAX request fails.\n *\n * @name ajaxError\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat AJAX\n */\n \n/**\n * @test stop(); var counter = { complete: 0, success: 0, error: 0 };\n * var success = function() { counter.success++ };\n * var error = function() { counter.error++ };\n * var complete = function() { counter.complete++ };\n * $('#foo').ajaxStart(complete).ajaxStop(complete).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n * // start with successful test\n * $.ajax({url: \"data/name.php\", success: success, error: error, complete: function() {\n *   ok( counter.error == 0, 'Check succesful request' );\n *   ok( counter.success == 2, 'Check succesful request' );\n *   ok( counter.complete == 3, 'Check succesful request' );\n *   counter.error = 0; counter.success = 0; counter.complete = 0;\n *   $.ajaxTimeout(500);\n *   $.ajax({url: \"data/name.php?wait=5\", success: success, error: error, complete: function() {\n *     ok( counter.error == 2, 'Check failed request' );\n *     ok( counter.success == 0, 'Check failed request' );\n *     ok( counter.complete == 3, 'Check failed request' );\n *     start();"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[60,93],"code":"// If IE is used, create a wrapper for the XMLHttpRequest object\nif ( jQuery.browser.msie && typeof XMLHttpRequest == \"undefined\" )\n\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\n\t\t\tnavigator.userAgent.indexOf(\"MSIE 5\") >= 0 ?\n\t\t\t\"Microsoft.XMLHTTP\" : \"Msxml2.XMLHTTP\"\n\t\t);\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\nnew function(){\n\tvar e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess\".split(',');\n\t\n\tfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\tvar o = e[i];\n\t\tjQuery.fn[o] = function(f){\n\t\t\treturn this.bind(o, f);\n\t\t};\n\t};\n};\n\njQuery.extend({\n\n\t/**\n\t * Load a remote page using a GET request\n\t */\n\tget: function( url, data, callback, type, ifModified ) {\n\t\tif ( data.constructor == Function ) {\n\t\t\ttype = callback;\n\t\t\tcallback = data;\n\t\t\tdata = null;\n\t\t}\n\t\t\n\t\tif ( data ) url += \"?\" + jQuery.param(data);"}]},
{"id":"37c79de07c31e0045750f8b02c4d5fdf2802f0e4","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[422,526],"code":"/**\n * Load a remote page using an HTTP POST request. All of the arguments to\n * the method (except URL) are optional.\n *\n * @example $.post(\"test.cgi\")\n *\n * @example $.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } )\n *\n * @example $.post(\"test.cgi\", function(data){\n *   alert(\"Data Loaded: \" + data);\n * })\n *\n * @example $.post(\"test.cgi\",\n *   { name: \"John\", time: \"2pm\" },\n *   function(data){\n *     alert(\"Data Loaded: \" + data);\n *   }\n * )\n *\n * @test stop();\n * $.post(\"data/name.php\", {xml: \"5-2\"}, function(xml){\n *   $('math', xml).each(function() {\n * \t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n * \t    ok( $('result', this).text() == '3', 'Check for XML' );\n * \t });\n *   start();\n * });\n *\n * @name $.post\n * @type jQuery\n * @param String url The URL of the page to load.\n * @param Hash params A set of key/value pairs that will be sent to the server.\n * @param Function callback A function to be executed whenever the data is loaded.\n * @cat AJAX\n */\npost: function( url, data, callback, type ) {\n\t// Build and start the HTTP Request\n\tjQuery.ajax( \"POST\", url, jQuery.param(data), function(r, status) {\n\t\tif ( callback ) callback( jQuery.httpData(r,type), status );\n\t});\n},\n\n// timeout (ms)\ntimeout: 0,\n\n/**\n * Set the timeout of all AJAX requests to a specific amount of time.\n * This will make all future AJAX requests timeout after a specified amount\n * of time (the default is no timeout).\n *\n * @example $.ajaxTimeout( 5000 );\n * @desc Make all AJAX requests timeout after 5 seconds.\n *\n * @test stop();\n * var passed = 0;\n * var timeout;\n * $.ajaxTimeout(1000);\n * var pass = function() {\n * \tpassed++;\n * \tif(passed == 2) {\n * \t\tok( true, 'Check local and global callbacks after timeout' );\n * \t\tclearTimeout(timeout);\n *      $('#main').unbind(\"ajaxError\");\n * \t\tstart();\n * \t}\n * };\n * var fail = function() {\n * \tok( false, 'Check for timeout failed' );\n * \tstart();\n * };\n * timeout = setTimeout(fail, 1500);\n * $('#main').ajaxError(pass);\n * $.ajax({\n *   type: \"GET\",\n *   url: \"data/name.php?wait=5\",\n *   error: pass,\n *   success: fail\n * });\n *\n * @test stop(); $.ajaxTimeout(50);\n * $.ajax({\n *   type: \"GET\",\n *   timeout: 5000,\n *   url: \"data/name.php?wait=1\",\n *   error: function() {\n * \t   ok( false, 'Check for local timeout failed' );\n * \t   start();\n *   },\n *   success: function() {\n *     ok( true, 'Check for local timeout' );\n *     start();\n *   }\n * });\n * // reset timeout\n * $.ajaxTimeout(0);\n * \n *\n * @name $.ajaxTimeout\n * @type jQuery\n * @param Number time How long before an AJAX request times out."},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[109,124],"code":"/**\n * Load a remote page using a POST request.\n */\npost: function( url, data, callback, type ) {\n\t// Build and start the HTTP Request\n\tjQuery.ajax( \"POST\", url, jQuery.param(data), function(r, status) {\n\t\tif ( callback ) callback( jQuery.httpData(r,type), status );\n\t});\n},\n\n// timeout (ms)\ntimeout: 0,\n\najaxTimeout: function(timeout) {\n\tjQuery.timeout = timeout;\n},"}]},
{"id":"c16dc20681df0dfe4fbca42f0aa01196576bf4ef","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[528,620],"code":"// Last-Modified header cache for next request\nlastModified: {},\n\n/**\n * Load a remote page using an HTTP request. This function is the primary\n * means of making AJAX requests using jQuery. $.ajax() takes one property,\n * an object of key/value pairs, that're are used to initalize the request.\n *\n * These are all the key/values that can be passed in to 'prop':\n *\n * (String) type - The type of request to make (e.g. \"POST\" or \"GET\").\n *\n * (String) url - The URL of the page to request.\n * \n * (String) data - A string of data to be sent to the server (POST only).\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server (e.g. \"xml\", \"html\", \"script\", or \"json\").\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request, default is false, ignoring\n * the Last-Modified header\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 seconds,\n * see $.ajaxTimeout\n *\n * (Boolean) global - Wheather to trigger global AJAX event handlers for\n * this request, default is true. Set to true to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of error that occurred.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type the success of the request.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @test stop();\n * $.ajax({\n *   type: \"GET\",\n *   url: \"data/name.php?name=foo\",\n *   success: function(msg){\n *     ok( msg == 'bar', 'Check for GET' );\n *     start();\n *   }\n * });\n *\n * @test stop();\n * $.ajax({\n *   type: \"POST\",\n *   url: \"data/name.php\",\n *   data: \"name=peter\",\n *   success: function(msg){\n *     ok( msg == 'pan', 'Check for POST' );\n *     start();\n *   }\n * });\n *\n * @name $.ajax\n * @type jQuery\n * @param Hash prop A set of properties to initialize the request with.\n * @cat AJAX\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[126,138],"code":"// Last-Modified header cache for next request\nlastModified: {},\n\n/**\n * A common wrapper for making XMLHttpRequests\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;"}]},
{"id":"4b83f66b6fe879a12c05d07fe4e7de4863cc91d6","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[636,670],"code":"// Create the request object\nvar xml = new XMLHttpRequest();\n\t\n// Open the socket\nxml.open(type || \"GET\", url, true);\n\n// Set the correct header, if data is being sent\nif ( data )\n\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n// Set the If-Modified-Since header, if ifModified mode.\nif ( ifModified )\n\txml.setRequestHeader(\"If-Modified-Since\",\n\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n// Set header so the called script knows that it's an XMLHttpRequest\nxml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t\n// Make sure the browser sends the right content length\nif ( xml.overrideMimeType )\n\txml.setRequestHeader(\"Connection\", \"close\");\n\n// Wait for a response to come back\nvar onreadystatechange = function(istimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\n\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\n\t\t// Make sure that the request was successful or notmodified\n\t\tif ( status != \"error\" ) {\n\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\tvar modRes;"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[150,184],"code":"// Create the request object\nvar xml = new XMLHttpRequest();\n\t\n// Open the socket\nxml.open(type || \"GET\", url, true);\n\n// Set the correct header, if data is being sent\nif ( data )\n\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n// Set the If-Modified-Since header, if ifModified mode.\nif ( ifModified )\n\txml.setRequestHeader(\"If-Modified-Since\",\n\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\n// Set header so calling script knows that it's an XMLHttpRequest\nxml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t\n// Make sure the browser sends the right content length\nif ( xml.overrideMimeType )\n\txml.setRequestHeader(\"Connection\", \"close\");\n\n// Wait for a response to come back\nvar onreadystatechange = function(istimeout){\n\t// The transfer is complete and the data is available, or the request timed out\n\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\trequestDone = true;\n\n\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\n\t\t// Make sure that the request was successful or notmodified\n\t\tif ( status != \"error\" ) {\n\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");"}]},
{"id":"627f64e75a9135a56dc21e71ca5a8dfbedddf5fd","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[531,779],"code":"/**\n * Load a remote page using an HTTP request. This function is the primary\n * means of making AJAX requests using jQuery. $.ajax() takes one property,\n * an object of key/value pairs, that're are used to initalize the request.\n *\n * These are all the key/values that can be passed in to 'prop':\n *\n * (String) type - The type of request to make (e.g. \"POST\" or \"GET\").\n *\n * (String) url - The URL of the page to request.\n * \n * (String) data - A string of data to be sent to the server (POST only).\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server (e.g. \"xml\", \"html\", \"script\", or \"json\").\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request, default is false, ignoring\n * the Last-Modified header\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 seconds,\n * see $.ajaxTimeout\n *\n * (Boolean) global - Wheather to trigger global AJAX event handlers for\n * this request, default is true. Set to true to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of error that occurred.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type the success of the request.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @test stop();\n * $.ajax({\n *   type: \"GET\",\n *   url: \"data/name.php?name=foo\",\n *   success: function(msg){\n *     ok( msg == 'bar', 'Check for GET' );\n *     start();\n *   }\n * });\n *\n * @test stop();\n * $.ajax({\n *   type: \"POST\",\n *   url: \"data/name.php\",\n *   data: \"name=peter\",\n *   success: function(msg){\n *     ok( msg == 'pan', 'Check for POST' );\n *     start();\n *   }\n * });\n *\n * @name $.ajax\n * @type jQuery\n * @param Hash prop A set of properties to initialize the request with.\n * @cat AJAX\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;\n\t\tvar dataType = type.dataType;\n\t\tvar global = typeof type.global == \"boolean\" ? type.global : true;\n\t\tvar timeout = typeof type.timeout == \"number\" ? type.timeout : jQuery.timeout;\n\t\tvar ifModified = type.ifModified || false;\n\t\tdata = type.data;\n\t\turl = type.url;\n\t\ttype = type.type;\n\t}\n\t\n\t// Watch for a new set of requests"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[129,281],"code":"/**\n * A common wrapper for making XMLHttpRequests\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;\n\t\tdata = type.data;\n\t\turl = type.url;\n\t\ttype = type.type;\n\t}\n\t\n\t// Watch for a new set of requests\n\tif ( ! jQuery.active++ )\n\t\tjQuery.event.trigger( \"ajaxStart\" );\n\n\tvar requestDone = false;\n\n\t// Create the request object\n\tvar xml = new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(type || \"GET\", url, true);\n\t\n\t// Set the correct header, if data is being sent\n\tif ( data )\n\t\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( ifModified )\n\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\t\n\t// Set header so calling script knows that it's an XMLHttpRequest\n\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Make sure the browser sends the right content length\n\tif ( xml.overrideMimeType )\n\t\txml.setRequestHeader(\"Connection\", \"close\");\n\t\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(istimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\n\t\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\tif ( ifModified && modRes ) jQuery.lastModified[url] = modRes;\n\t\t\t\t\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( success ) success( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\" );\n\t\t\t\n\t\t\t// Otherwise, the request was not successful\n\t\t\t} else {\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( error ) error( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxError\" );\n\t\t\t}\n\t\t\t\n\t\t\t// The request was completed\n\t\t\tjQuery.event.trigger( \"ajaxComplete\" );\n\t\t\t\n\t\t\t// Handle the global AJAX counter\n\t\t\tif ( ! --jQuery.active )\n\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t\t// Process result\n\t\t\tif ( ret ) ret(xml, status);\n\t\t\t\n\t\t\t// Stop memory leaks\n\t\t\txml.onreadystatechange = function(){};\n\t\t\txml = null;\n\t\t\t\n\t\t}\n\t};\n\txml.onreadystatechange = onreadystatechange;\n\t\n\t// Timeout checker\n\tif(jQuery.timeout > 0)\n\t\tsetTimeout(function(){\n\t\t\t// Check to see if the request is still happening\n\t\t\tif (xml) {\n\t\t\t\t// Cancel the request\n\t\t\t\txml.abort();\n\n\t\t\t\tif ( !requestDone ) onreadystatechange( \"timeout\" );"}]},
{"id":"0bf214694210d677b8958ce3a46471879e39e776","instances":[{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[781,801],"code":"// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function(a) {\n\tvar s = [];\n\t\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery ) {\n\t\t// Serialize the form elements\n\t\tfor ( var i = 0; i < a.length; i++ )\n\t\t\ts.push( a[i].name + \"=\" + encodeURIComponent( a[i].value ) );\n\t\t\n\t// Otherwise, assume that it's an object of key/value pairs\n\t} else {\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\ts.push( j + \"=\" + encodeURIComponent( a[j] ) );\n\t}\n\t\n\t// Return the resulting serialization\n\treturn s.join(\"&\");"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[283,303],"code":"// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function(a) {\n\tvar s = [];\n\t\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array ) {\n\t\t// Serialize the form elements\n\t\tfor ( var i = 0; i < a.length; i++ )\n\t\t\ts.push( a[i].name + \"=\" + encodeURIComponent( a[i].value ) );\n\t\t\n\t// Otherwise, assume that it's an object of key/value pairs\n\t} else {\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\ts.push( j + \"=\" + encodeURIComponent( a[j] ) );\n\t}\n\t\n\t// Return the resulting serialization\n\treturn s.join(\"&\");"}]},
{"id":"97417a168d52566e4afab02c61eb24855836095e","instances":[{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[1,83],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t * \n\t * @test var count = 0;\n\t * var fn1 = function() { count++; }\n\t * var fn2 = function() { count--; }\n\t * var link = $('#mark');\n\t * link.click().toggle(fn1, fn2).click().click().click().click().click();\n\t * ok( count == 1, \"Check for toggle(fn, fn)\" );\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1,76],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;"}]},
{"id":"d727e34c4810e29ab3d74d954c029ea6e5551abc","instances":[{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[50,156],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[43,147],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them"}]},
{"id":"6ba632a74fec3129dc04ddd298275f7b21545af3","instances":[{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[142,1577],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tfor ( var i = 0; i < jQuery.readyList.length; i++ )\n\t\t\t\t\tjQuery.readyList[i].apply( document );\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t\t/**\n\t\t * Bind a function to the scroll event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name scroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Trigger the scroll event of each matched element. This causes all of the functions\n\t\t * that have been bound to thet scroll event to be executed.\n\t\t *\n\t\t * @example $(\"p\").scroll();\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello');\n\t\t *\n\t\t * @name scroll\n\t\t * @type jQuery\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the scroll event of each matched element, which will only be executed once.\n\t\t * Unlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\n\t\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t\t *\n\t\t * @example $(\"p\").onescroll( function() { alert(\"Hello\"); } );\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello'); // Only executed for the first scroll\n\t\t *\n\t\t * @name onescroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Removes a bound scroll event from each of the matched\n\t\t * elements. You must pass the identical function that was used in the original \n\t\t * bind method.\n\t\t *\n\t\t * @example $(\"p\").unscroll( myFunction );\n\t\t * @before <p onscroll=\"myFunction\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unscroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to unbind from the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Removes all bound scroll events from each of the matched elements.\n\t\t *\n\t\t * @example $(\"p\").unscroll();\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unscroll\n\t\t * @type jQuery\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the submit event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").submit( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onsubmit=\"alert('Hello');\">Hello</p>\n\t\t *"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[133,1585],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tfor ( var i = 0; i < jQuery.readyList.length; i++ )\n\t\t\t\t\tjQuery.readyList[i].apply( document );\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t\t/**\n\t\t * Bind a function to the blur event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").blur( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onblur=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name blur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Trigger the blur event of each matched element. This causes all of the functions\n\t\t * that have been bound to thet blur event to be executed.\n\t\t *\n\t\t * @example $(\"p\").blur();\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello');\n\t\t *\n\t\t * @name blur\n\t\t * @type jQuery\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the blur event of each matched element, which will only be executed once.\n\t\t * Unlike a call to the normal .blur() method, calling .oneblur() causes the bound function to be\n\t\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t\t *\n\t\t * @example $(\"p\").oneblur( function() { alert(\"Hello\"); } );\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello'); // Only executed for the first blur\n\t\t *\n\t\t * @name oneblur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Removes a bound blur event from each of the matched\n\t\t * elements. You must pass the identical function that was used in the original \n\t\t * bind method.\n\t\t *\n\t\t * @example $(\"p\").unblur( myFunction );\n\t\t * @before <p onblur=\"myFunction\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unblur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to unbind from the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Removes all bound blur events from each of the matched elements.\n\t\t *\n\t\t * @example $(\"p\").unblur();\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unblur\n\t\t * @type jQuery\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the focus event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name focus\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the focus event on each of the matched elements."}]},
{"id":"2b3bd2cb5ac08b9aa90039f5822f18e061af2bb7","instances":[{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[167,1627],"code":"\t/**\n\t * Bind a function to the scroll event of each matched element.\n\t *\n\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Trigger the scroll event of each matched element. This causes all of the functions\n\t * that have been bound to thet scroll event to be executed.\n\t *\n\t * @example $(\"p\").scroll();\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Bind a function to the scroll event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onescroll( function() { alert(\"Hello\"); } );\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello'); // Only executed for the first scroll\n\t *\n\t * @name onescroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Removes a bound scroll event from each of the matched\n\t * elements. You must pass the identical function that was used in the original \n\t * bind method.\n\t *\n\t * @example $(\"p\").unscroll( myFunction );\n\t * @before <p onscroll=\"myFunction\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unscroll\n\t * @type jQuery\n\t * @param Function fn A function to unbind from the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Removes all bound scroll events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unscroll();\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unscroll\n\t * @type jQuery\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element.\n\t *\n\t * @example $(\"p\").submit( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onsubmit=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @param Function fn A function to bind to the submit event on each of the matched elements.\n\t * @cat Events/Form\n\t */\n\n\t/**\n\t * Trigger the submit event of each matched element. This causes all of the functions\n\t * that have been bound to thet submit event to be executed.\n\t *\n\t * @example $(\"p\").submit();\n\t * @before <p onsubmit=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @cat Events/Form\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .submit() method, calling .onesubmit() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onesubmit( function() { alert(\"Hello\"); } );"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[211,1635],"code":"\t/**\n\t * Removes all bound blur events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unblur();\n\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unblur\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element.\n\t *\n\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the focus event of each matched element. This causes all of the functions\n\t * that have been bound to thet focus event to be executed.\n\t *\n\t * @example $(\"p\").focus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .focus() method, calling .onefocus() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onefocus( function() { alert(\"Hello\"); } );\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello'); // Only executed for the first focus\n\t *\n\t * @name onefocus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Removes a bound focus event from each of the matched\n\t * elements. You must pass the identical function that was used in the original \n\t * bind method.\n\t *\n\t * @example $(\"p\").unfocus( myFunction );\n\t * @before <p onfocus=\"myFunction\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unfocus\n\t * @type jQuery\n\t * @param Function fn A function to unbind from the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Removes all bound focus events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unfocus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unfocus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the load event of each matched element.\n\t *\n\t * @example $(\"p\").load( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onload=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param Function fn A function to bind to the load event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the load event of each matched element. This causes all of the functions\n\t * that have been bound to thet load event to be executed.\n\t *\n\t * @example $(\"p\").load();\n\t * @before <p onload=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');"}]},
{"id":"0d3f77004b01ee205d9a4e8d0ed2f52b5d19f8b6","instances":[{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[1626,1656],"code":"\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");\n\tscript.onreadystatechange = function() {\n\t\tif ( this.readyState != \"complete\" ) return;\n\t\tthis.parentNode.removeChild( this );\n\t\tjQuery.ready();\n\t};\n\n\t// Clear from memory\n\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari ) {\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10);\n} \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1634,1664],"code":"\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");\n\tscript.onreadystatechange = function() {\n\t\tif ( this.readyState != \"complete\" ) return;\n\t\tthis.parentNode.removeChild( this );\n\t\tjQuery.ready();\n\t};\n\n\t// Clear from memory\n\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari ) {\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10);\n} \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"}]},
{"id":"77364da89ddd91f3e6d074d3e0ebfb7795f4ca79","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[181,369],"code":"\t/**\n\t * Fade in all matched elements by adjusting their opacity.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeIn(\"slow\");\n\t *\n\t * @name fadeIn\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Fade in all matched elements by adjusting their opacity and firing a \n\t * callback function after completion.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeIn(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name fadeIn\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tfadeIn: function(speed,callback){\n\t\treturn this.animate({opacity: \"show\"}, speed, callback);\n\t},\n\t\n\t/**\n\t * Fade out all matched elements by adjusting their opacity.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeOut(\"slow\");\n\t *\n\t * @name fadeOut\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Fade out all matched elements by adjusting their opacity and firing a \n\t * callback function after completion.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeOut(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name fadeOut\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tfadeOut: function(speed,callback){\n\t\treturn this.animate({opacity: \"hide\"}, speed, callback);\n\t},\n\t\n\t/**\n\t * Fade the opacity of all matched elements to a specified opacity.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeTo(\"slow\", 0.5);\n\t *\n\t * @name fadeTo\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Number opacity The opacity to fade to (a number from 0 to 1).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Fade the opacity of all matched elements to a specified opacity and \n\t * firing a callback function after completion.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeTo(\"slow\", 0.5, function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name fadeTo\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Number opacity The opacity to fade to (a number from 0 to 1)."},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[152,316],"code":"\t/**\n\t * Fade in all matched elements by adjusting their opacity.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeIn(\"slow\");\n\t *\n\t * @name fadeIn\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Fade in all matched elements by adjusting their opacity and firing a \n\t * callback function after completion.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeIn(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name fadeIn\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tfadeIn: function(speed,callback){\n\t\treturn this.animate({opacity: \"show\"}, speed, callback);\n\t},\n\t\n\t/**\n\t * Fade out all matched elements by adjusting their opacity.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeOut(\"slow\");\n\t *\n\t * @name fadeOut\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Fade out all matched elements by adjusting their opacity and firing a \n\t * callback function after completion.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeOut(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name fadeOut\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tfadeOut: function(speed,callback){\n\t\treturn this.animate({opacity: \"hide\"}, speed, callback);\n\t},\n\t\n\t/**\n\t * Fade the opacity of all matched elements to a specified opacity.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeTo(\"slow\", 0.5);\n\t *\n\t * @name fadeTo\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Number opacity The opacity to fade to (a number from 0 to 1).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Fade the opacity of all matched elements to a specified opacity and \n\t * firing a callback function after completion.\n\t * Only the opacity is adjusted for this animation, meaning that\n\t * all of the matched elements should already have some form of height\n\t * and width associated with them.\n\t *\n\t * @example $(\"p\").fadeTo(\"slow\", 0.5, function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name fadeTo\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Number opacity The opacity to fade to (a number from 0 to 1)."}]},
{"id":"ca89bf93742de29f7580cd40f89ea3d6f9775b24","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[377,417],"code":"\t// See what the size of \"auto\" is\n\tvar n = jQuery.curCSS(e,p,1);\n\n\t// Revert back to the original size\n\tif ( o != n && n != \"auto\" ) {\n\t\te.style[p] = a;\n\t\te.notAuto = true;\n\t}\n},\n\nspeed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[324,364],"code":"\t// See what the size of \"auto\" is\n\tvar n = jQuery.curCSS(e,p,1);\n\n\t// Revert back to the original size\n\tif ( o != n && n != \"auto\" ) {\n\t\te.style[p] = a;\n\t\te.notAuto = true;\n\t}\n},\n\nspeed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"}]},
{"id":"a8075081d77066fd1c8f299fcc1522590fd1ba06","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[416,444],"code":"\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[363,391],"code":"\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;"}]},
{"id":"2f1e5853a3d804a4d1d369845353840dc9595651","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[453,486],"code":"\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\n\ty.display = \"block\";\n};\n\t\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(z.el,prop) );\n};\n\t\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\t\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\t\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\t\n// Simple 'show' function\nz.show = function( p ){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[406,439],"code":"\t} else if ( parseInt(z.now) )\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\n\ty.display = \"block\";\n};\n\t\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(z.el,prop) );\n};\n\t\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\t\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\t\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\t\n// Simple 'show' function\nz.show = function( p ){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"}]},
{"id":"29bd1aeb027fcd38f7e0c3ef080c41bde2969bd0","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[513,548],"code":"if ( !z.el.oldOverlay )\n\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\t\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\t\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\t\n\tif (t > z.o.duration + z.startTime) {\n\t\t// Stop the timer\n\t\tclearInterval(z.timer);\n\t\tz.timer = null;\n\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tz.el.curAnim[ prop ] = true;\n\t\t\n\t\tvar done = true;\n\t\tfor ( var i in z.el.curAnim )\n\t\t\tif ( z.el.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\t\t\t\t\n\t\tif ( done ) {\n\t\t\t// Reset the overflow\n\t\t\ty.overflow = z.el.oldOverflow;\n\t\t\n\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\tif ( z.o.hide ) \n\t\t\t\ty.display = 'none';\n\t\t\t\n\t\t\t// Reset the property, if the item has been hidden\n\t\t\tif ( z.o.hide ) {\n\t\t\t\tfor ( var p in z.el.curAnim ) {"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[466,501],"code":"if ( !z.el.oldOverlay )\n\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\t\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\t\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\t\n\tif (t > z.o.duration + z.startTime) {\n\t\t// Stop the timer\n\t\tclearInterval(z.timer);\n\t\tz.timer = null;\n\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tz.el.curAnim[ prop ] = true;\n\t\t\n\t\tvar done = true;\n\t\tfor ( var i in z.el.curAnim )\n\t\t\tif ( z.el.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\t\t\t\t\n\t\tif ( done ) {\n\t\t\t// Reset the overflow\n\t\t\ty.overflow = z.el.oldOverflow;\n\t\t\n\t\t\t// Hide the element if the \"hide\" operation was done\n\t\t\tif ( z.o.hide ) \n\t\t\t\ty.display = 'none';\n\t\t\t\n\t\t\t// Reset the property, if the item has been hidden\n\t\t\tif ( z.o.hide ) {\n\t\t\t\tfor ( var p in z.el.curAnim ) {"}]},
{"id":"1c2e9be1fe2995b6e03391a9c65ad1945f9b43dc","instances":[{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[423,572],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" )\n\t\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\t\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\t\n\t\ty.display = \"block\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(z.el,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function( p ){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\t\t\n\t\t// Begin the animation\n\t\tif (prop == \"opacity\")\n\t\t\tz.custom(z.el.orig[prop], 1);\n\t\telse\n\t\t\tz.custom(0, z.el.orig[prop]);\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(z.el.orig[prop], 0);\n\t};\n\n\t// Remember  the overflow of the element\n\tif ( !z.el.oldOverlay )\n\t\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\n\t// Make sure that nothing sneaks out\n\ty.overflow = \"hidden\";\n\n\t// Each step of an animation\n\tz.step = function(firstNum, lastNum){\n\t\tvar t = (new Date()).getTime();\n"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[370,522],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" ) {\n\t\t\tif (jQuery.browser.mozilla && z.now == 1) z.now = 0.9999;\n\t\t\tif (window.ActiveXObject)\n\t\t\t\ty.filter = \"alpha(opacity=\" + z.now*100 + \")\";\n\t\t\telse\n\t\t\t\ty.opacity = z.now;\n\n\t\t// My hate for IE will never die\n\t\t} else if ( parseInt(z.now) )\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\t\n\t\ty.display = \"block\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(z.el,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function( p ){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.custom( 0, z.el.orig[prop] );\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(z.el.orig[prop], 0);\n\t};\n\n\t// IE has trouble with opacity if it does not have layout\n\tif ( jQuery.browser.msie && !z.el.currentStyle.hasLayout )\n\t\ty.zoom = \"1\";\n\n\t// Remember  the overflow of the element\n\tif ( !z.el.oldOverlay )\n\t\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\n\t// Make sure that nothing sneaks out"}]},
{"id":"fb0354a2edc7f30b937c932a01fa4b0137f48ea3","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[46,65],"code":"\treturn jQuery( c ).find(a);\n\n// If the context is global, return a new object\nif ( window == this )\n\treturn new jQuery(a,c);\n\n// Handle HTML strings\nvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\nif ( m ) a = jQuery.clean( [ m[1] ] );\n\n// Watch for when an array is passed in\nthis.get( a.constructor == Array || a.length && !a.nodeType && a[0] != undefined && a[0].nodeType ?\n\t// Assume that it is an array of DOM Elements\n\tjQuery.merge( a, [] ) :\n\n\t// Find the matching elements and save them for later\n\tjQuery.find( a, c ) );\n\n // See if an extra function was provided\nvar fn = arguments[ arguments.length - 1 ];"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[45,64],"code":"\treturn $( c ).find(a);\n\n// If the context is global, return a new object\nif ( window == this )\n\treturn new jQuery(a,c);\n\n// Handle HTML strings\nvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\nif ( m ) a = jQuery.clean( [ m[1] ] );\n\n// Watch for when an array is passed in\nthis.get( a.constructor == Array || a.length && !a.nodeType && a[0] != undefined && a[0].nodeType ?\n\t// Assume that it is an array of DOM Elements\n\tjQuery.merge( a, [] ) :\n\n\t// Find the matching elements and save them for later\n\tjQuery.find( a, c ) );\n\n // See if an extra function was provided\nvar fn = arguments[ arguments.length - 1 ];"}]},
{"id":"2a929809c3da5639de0be75a4531a51396942d6a","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[192,293],"code":"/**\n * The current version of jQuery.\n *\n * @private\n * @property\n * @name jquery\n * @type String\n * @cat Core\n */\njquery: \"@VERSION\",\n\n/**\n * The number of elements currently matched.\n *\n * @example $(\"img\").length;\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @test ok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\n *\n * @property\n * @name length\n * @type Number\n * @cat Core\n */\n\n/**\n * The number of elements currently matched.\n *\n * @example $(\"img\").size();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @test ok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );\n *\n * @name size\n * @type Number\n * @cat Core\n */\nsize: function() {\n\treturn this.length;\n},\n\n/**\n * Access all matched elements. This serves as a backwards-compatible\n * way of accessing all matched elements (other than the jQuery object\n * itself, which is, in fact, an array of elements).\n *\n * @example $(\"img\").get();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result [ <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/> ]\n *\n * @test isSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n *\n * @name get\n * @type Array<Element>\n * @cat Core\n */\n\n/**\n * Access a single matched element. num is used to access the\n * Nth element matched.\n *\n * @example $(\"img\").get(1);\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result [ <img src=\"test1.jpg\"/> ]\n *\n * @test ok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\n *\n * @name get\n * @type Element\n * @param Number num Access the element in the Nth position.\n * @cat Core\n */\n\n/**\n * Set the jQuery object to an array of elements.\n *\n * @example $(\"img\").get([ document.body ]);\n * @result $(\"img\").get() == [ document.body ]\n *\n * @private\n * @name get\n * @type jQuery\n * @param Elements elems An array of elements\n * @cat Core\n */\nget: function( num ) {\n\t// Watch for when an array (of elements) is passed in\n\tif ( num && num.constructor == Array ) {\n\n\t\t// Use a tricky hack to make the jQuery object\n\t\t// look and feel like an array\n\t\tthis.length = 0;\n\t\t[].push.apply( this, num );\n\n\t\treturn this;\n\t} else\n\t\treturn num == undefined ?\n"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[79,180],"code":"/**\n * The current SVN version of jQuery.\n *\n * @private\n * @property\n * @name jquery\n * @type String\n * @cat Core\n */\njquery: \"$Rev$\",\n\n/**\n * The number of elements currently matched.\n *\n * @example $(\"img\").length;\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @test cmpOK( $(\"div\").length, \"==\", 2, \"Get Number of Elements Found\" );\n *\n * @property\n * @name length\n * @type Number\n * @cat Core\n */\n\n/**\n * The number of elements currently matched.\n *\n * @example $(\"img\").size();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result 2\n *\n * @test cmpOK( $(\"div\").size(), \"==\", 2, \"Get Number of Elements Found\" );\n *\n * @name size\n * @type Number\n * @cat Core\n */\nsize: function() {\n\treturn this.length;\n},\n\n/**\n * Access all matched elements. This serves as a backwards-compatible\n * way of accessing all matched elements (other than the jQuery object\n * itself, which is, in fact, an array of elements).\n *\n * @example $(\"img\").get();\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result [ <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/> ]\n *\n * @test isSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\n *\n * @name get\n * @type Array<Element>\n * @cat Core\n */\n \n/**\n * Access a single matched element. num is used to access the \n * Nth element matched.\n *\n * @example $(\"img\").get(1);\n * @before <img src=\"test1.jpg\"/> <img src=\"test2.jpg\"/>\n * @result [ <img src=\"test1.jpg\"/> ]\n *\n * @test cmpOK( $(\"div\").get(0), \"==\", document.getElementById(\"main\"), \"Get A Single Element\" );\n *\n * @name get\n * @type Element\n * @param Number num Access the element in the Nth position.\n * @cat Core\n */\n \n/**\n * Set the jQuery object to an array of elements.\n *\n * @example $(\"img\").get([ document.body ]);\n * @result $(\"img\").get() == [ document.body ]\n *\n * @private\n * @name get\n * @type jQuery\n * @param Elements elems An array of elements\n * @cat Core\n */\nget: function( num ) {\n\t// Watch for when an array (of elements) is passed in\n\tif ( num && num.constructor == Array ) {\n\n\t\t// Use a tricky hack to make the jQuery object\n\t\t// look and feel like an array\n\t\tthis.length = 0;\n\t\t[].push.apply( this, num );\n\t\t\n\t\treturn this;\n\t} else\n\t\treturn num == undefined ?\n"}]},
{"id":"5cbecf09b510fa8e50f76f57ed71cb3681b8dc6e","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[378,653],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n *\n * @test ok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\n * ok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\n * ok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\n * ok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\n * ok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\n * ok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\n * ok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\n * ok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\n * ok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\n * ok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\n * ok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\n * ok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM\n */\n\n/**\n * Set a hash of key/value object properties to all matched elements.\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n *\n * @test var pass = true;\n * $(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n *   if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n * });\n * ok( pass, \"Set Multiple Attributes\" );\n *\n * @name attr\n * @type jQuery\n * @param Hash prop A set of key/value pairs to set as object properties.\n * @cat DOM\n */\n\n/**\n * Set a single property to a value, on all matched elements.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n *\n * @test var div = $(\"div\");\n * div.attr(\"foo\", \"bar\");\n * var pass = true;\n * for ( var i = 0; i < div.size(); i++ ) {\n *   if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n * }\n * ok( pass, \"Set Attribute\" );\n *\n * $(\"#name\").attr('name', 'something');\n * ok( $(\"#name\").name() == 'something', 'Set name attribute' );\n * $(\"#check2\").attr('checked', true);\n * ok( document.getElementById('check2').checked == true, 'Set checked attribute' );\n * $(\"#check2\").attr('checked', false);\n * ok( document.getElementById('check2').checked == false, 'Set checked attribute' );\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM\n */\nattr: function( key, value, type ) {\n\t// Check to see if we're setting style values\n\treturn key.constructor != String || value != undefined ?\n\t\tthis.each(function(){\n\t\t\t// See if we're setting a hash of styles\n\t\t\tif ( value == undefined )\n\t\t\t\t// Set all the styles\n\t\t\t\tfor ( var prop in key )\n\t\t\t\t\tjQuery.attr(\n\t\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\t\tprop, key[prop]\n\t\t\t\t\t);\n\n\t\t\t// See if we're setting a single key/value style\n\t\t\telse\n\t\t\t\tjQuery.attr(\n\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\tkey, value\n\t\t\t\t);\n\t\t}) :\n\n\t\t// Look for the case where we're accessing a style value\n\t\tjQuery[ type || \"attr\" ]( this[0], key );"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[233,424],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retreive a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM\n */\n \n/**\n * Set a hash of key/value object properties to all matched elements.\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n *\n * @test var pass = true;\n * $(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n *   if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n * });\n * ok( pass, \"Set Multiple Attributes\" );\n *\n * @name attr\n * @type jQuery\n * @param Hash prop A set of key/value pairs to set as object properties.\n * @cat DOM\n */\n \n/**\n * Set a single property to a value, on all matched elements.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n *\n * @test var div = $(\"div\");\n * div.attr(\"foo\", \"bar\");\n * var pass = true;\n * for ( var i = 0; i < div.size(); i++ ) {\n *   if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n * }\n * ok( pass, \"Set Attribute\" );\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM\n */\nattr: function( key, value, type ) {\n\t// Check to see if we're setting style values\n\treturn key.constructor != String || value != undefined ?\n\t\tthis.each(function(){\n\t\t\t// See if we're setting a hash of styles\n\t\t\tif ( value == undefined )\n\t\t\t\t// Set all the styles\n\t\t\t\tfor ( var prop in key )\n\t\t\t\t\tjQuery.attr(\n\t\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\t\tprop, key[prop]\n\t\t\t\t\t);\n\t\t\t\n\t\t\t// See if we're setting a single key/value style\n\t\t\telse\n\t\t\t\tjQuery.attr(\n\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\tkey, value\n\t\t\t\t);\n\t\t}) :\n\t\t\n\t\t// Look for the case where we're accessing a style value\n\t\tjQuery[ type || \"attr\" ]( this[0], key );\n},\n\n/**\n * Access a style property on the first matched element.\n * This method makes it easy to retreive a style property value\n * from the first matched element.\n *\n * @example $(\"p\").css(\"red\");\n * @before <p style=\"color:red;\">Test Paragraph.</p>\n * @result red\n *\n * @name css\n * @type Object\n * @param String name The name of the property to access.\n * @cat CSS\n */\n \n/**\n * Set a hash of key/value style properties to all matched elements.\n * This serves as the best way to set a large number of style properties"}]},
{"id":"f53227ba3e4656c80f0e6fe13901650a1d396faa","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[878,968],"code":"/**\n * Insert any number of elements after each of the matched elements.\n *\n * @example $(\"p\").after( $(\"b\") );\n * @before <b>Hello</b><p>I would like to say: </p>\n * @result <p>I would like to say: </p><b>Hello</b>\n *\n * @test var expected = \"This is a normal link: YahooTry them out:diveintomark\";\n * $('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\n * ok( expected == $('#en').text(), \"Insert array of elements after\" );\n *\n * @name after\n * @type jQuery\n * @param Array<Element> elems An array of elements, all of which will be appended.\n * @cat DOM/Manipulation\n */\nafter: function() {\n\treturn this.domManip(arguments, false, -1, function(a){\n\t\tthis.parentNode.insertBefore( a, this.nextSibling );\n\t});\n},\n\n/**\n * End the most recent 'destructive' operation, reverting the list of matched elements\n * back to its previous state. After an end operation, the list of matched elements will\n * revert to the last state of matched elements.\n *\n * @example $(\"p\").find(\"span\").end();\n * @before <p><span>Hello</span>, how are you?</p>\n * @result $(\"p\").find(\"span\").end() == [ <p>...</p> ]\n *\n * @test ok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );\n *\n * @name end\n * @type jQuery\n * @cat DOM/Traversing\n */\nend: function() {\n\treturn this.get( this.stack.pop() );\n},\n\n/**\n * Searches for all elements that match the specified expression.\n * This method is the optimal way of finding additional descendant\n * elements with which to process.\n *\n * All searching is done using a jQuery expression. The expression can be\n * written using CSS 1-3 Selector syntax, or basic XPath.\n *\n * @example $(\"p\").find(\"span\");\n * @before <p><span>Hello</span>, how are you?</p>\n * @result $(\"p\").find(\"span\") == [ <span>Hello</span> ]\n *\n * @test ok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );\n *\n * @name find\n * @type jQuery\n * @param String expr An expression to search with.\n * @cat DOM/Traversing\n */\nfind: function(t) {\n\treturn this.pushStack( jQuery.map( this, function(a){\n\t\treturn jQuery.find(t,a);\n\t}), arguments );\n},\n\n/**\n * Create cloned copies of all matched DOM Elements. This does\n * not create a cloned copy of this particular jQuery object,\n * instead it creates duplicate copies of all DOM Elements.\n * This is useful for moving copies of the elements to another\n * location in the DOM.\n *\n * @example $(\"b\").clone().prependTo(\"p\");\n * @before <b>Hello</b><p>, how are you?</p>\n * @result <b>Hello</b><p><b>Hello</b>, how are you?</p>\n *\n * @test ok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\n * var clone = $('#yahoo').clone();\n * ok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\n * ok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );\n *\n * @name clone\n * @type jQuery\n * @cat DOM/Manipulation\n */\nclone: function(deep) {\n\treturn this.pushStack( jQuery.map( this, function(a){\n\t\treturn a.cloneNode( deep != undefined ? deep : true );\n\t}), arguments );\n},"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[498,563],"code":"/**\n * Insert any number of elements after each of the matched elements.\n * \n * @example $(\"p\").after(\"<p>I'm doing fine.</p>\");\n * @before <p>How are you?</p>\n * @result <p>How are you?</p><p>I'm doing fine.</p>\n *\n * @name after\n * @type jQuery\n * @any String html A string of HTML, that will be created on the fly and inserted.\n * @any Element elem A DOM element that will beinserted.\n * @any Array<Element> elems An array of elements, all of which will be inserted.\n * @any Object obj Any object, converted to a string, then a text node.\n * @cat DOM/Manipulation\n */\nafter: function() {\n\treturn this.domManip(arguments, false, -1, function(a){\n\t\tthis.parentNode.insertBefore( a, this.nextSibling );\n\t});\n},\n\n/**\n * End the most recent 'destructive' operation, reverting the list of matched elements\n * back to its previous state. After an end operation, the list of matched elements will \n * revert to the last state of matched elements.\n *\n * @example $(\"p\").find(\"span\").end();\n * @before <p><span>Hello</span>, how are you?</p>\n * @result $(\"p\").find(\"span\").end() == [ <p>...</p> ]\n *\n * @name end\n * @type jQuery\n * @cat DOM/Traversing\n */\nend: function() {\n\treturn this.get( this.stack.pop() );\n},\n\n/**\n * Searches for all elements that match the specified expression.\n * This method is the optimal way of finding additional descendant\n * elements with which to process.\n *\n * All searching is done using a jQuery expression. The expression can be \n * written using CSS 1-3 Selector syntax, or basic XPath.\n *\n * @example $(\"p\").find(\"span\");\n * @before <p><span>Hello</span>, how are you?</p>\n * @result $(\"p\").find(\"span\") == [ <span>Hello</span> ]\n *\n * @name find\n * @type jQuery\n * @param String expr An expression to search with.\n * @cat DOM/Traversing\n */\nfind: function(t) {\n\treturn this.pushStack( jQuery.map( this, function(a){\n\t\treturn jQuery.find(t,a);\n\t}), arguments );\n},\n\nclone: function(deep) {\n\treturn this.pushStack( jQuery.map( this, function(a){\n\t\treturn a.cloneNode( deep != undefined ? deep : true );\n\t}), arguments );\n},"}]},
{"id":"62e540dfc0b390362bf22f53f3c7d590bc4885aa","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1014,1026],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;\n\t\t}) ||\n\n\t\tt.constructor == Boolean &&\n\t\t( t ? this.get() : [] ) ||\n\n\t\ttypeof t == \"function\" &&"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[601,613],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;\n\t\t}) ||\n\n\t\tt.constructor == Boolean &&\n\t\t( t ? this.get() : [] ) ||\n\n\t\tt.constructor == Function &&"}]},
{"id":"76f5e2298bcc773bf185be94b3aec6c32e6fb6e1","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[970,1164],"code":"/**\n * Removes all elements from the set of matched elements that do not\n * match the specified expression. This method is used to narrow down\n * the results of a search.\n *\n * All searching is done using a jQuery expression. The expression\n * can be written using CSS 1-3 Selector syntax, or basic XPath.\n *\n * @example $(\"p\").filter(\".selected\")\n * @before <p class=\"selected\">Hello</p><p>How are you?</p>\n * @result $(\"p\").filter(\".selected\") == [ <p class=\"selected\">Hello</p> ]\n *\n * @test isSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"Filter elements\" );\n * @test $(\"input\").filter(\":checked\",function(i){ \n *   ok( this == q(\"radio2\", \"check1\")[i], \"Filter elements, context\" );\n * });\n * @test $(\"#main > p#ap > a\").filter(\"#foobar\",function(){},function(i){\n *   ok( this == q(\"google\",\"groups\", \"mark\")[i], \"Filter elements, else context\" );\n * });\n *\n * @name filter\n * @type jQuery\n * @param String expr An expression to search with.\n * @cat DOM/Traversing\n */\n\n/**\n * Removes all elements from the set of matched elements that do not\n * match at least one of the expressions passed to the function. This\n * method is used when you want to filter the set of matched elements\n * through more than one expression.\n *\n * Elements will be retained in the jQuery object if they match at\n * least one of the expressions passed.\n *\n * @example $(\"p\").filter([\".selected\", \":first\"])\n * @before <p>Hello</p><p>Hello Again</p><p class=\"selected\">And Again</p>\n * @result $(\"p\").filter([\".selected\", \":first\"]) == [ <p>Hello</p>, <p class=\"selected\">And Again</p> ]\n *\n * @name filter\n * @type jQuery\n * @param Array<String> exprs A set of expressions to evaluate against\n * @cat DOM/Traversing\n */\nfilter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;\n\t\t}) ||\n\n\t\tt.constructor == Boolean &&\n\t\t( t ? this.get() : [] ) ||\n\n\t\ttypeof t == \"function\" &&\n\t\tjQuery.grep( this, t ) ||\n\n\t\tjQuery.filter(t,this).r, arguments );\n},\n\n/**\n * Removes the specified Element from the set of matched elements. This\n * method is used to remove a single Element from a jQuery object.\n *\n * @example $(\"p\").not( document.getElementById(\"selected\") )\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]\n *\n * @name not\n * @type jQuery\n * @param Element el An element to remove from the set\n * @cat DOM/Traversing\n */\n\n/**\n * Removes elements matching the specified expression from the set\n * of matched elements. This method is used to remove one or more\n * elements from a jQuery object.\n *\n * @example $(\"p\").not(\"#selected\")\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]\n *\n * @test ok($(\"#main > p#ap > a\").not(\"#google\").length == 2, \".not\")\n *\n * @name not\n * @type jQuery\n * @param String expr An expression with which to remove matching elements\n * @cat DOM/Traversing\n */\nnot: function(t) {\n\treturn this.pushStack( t.constructor == String ?\n\t\tjQuery.filter(t,this,false).r :\n\t\tjQuery.grep(this,function(a){ return a != t; }), arguments );\n},\n\n/**\n * Adds the elements matched by the expression to the jQuery object. This"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[565,712],"code":"/**\n * Removes all elements from the set of matched elements that do not \n * match the specified expression. This method is used to narrow down\n * the results of a search.\n *\n * All searching is done using a jQuery expression. The expression\n * can be written using CSS 1-3 Selector syntax, or basic XPath.\n * \n * @example $(\"p\").filter(\".selected\")\n * @before <p class=\"selected\">Hello</p><p>How are you?</p>\n * @result $(\"p\").filter(\".selected\") == [ <p class=\"selected\">Hello</p> ]\n *\n * @name filter\n * @type jQuery\n * @param String expr An expression to search with.\n * @cat DOM/Traversing\n */\n\n/**\n * Removes all elements from the set of matched elements that do not\n * match at least one of the expressions passed to the function. This \n * method is used when you want to filter the set of matched elements \n * through more than one expression.\n *\n * Elements will be retained in the jQuery object if they match at\n * least one of the expressions passed.\n *\n * @example $(\"p\").filter([\".selected\", \":first\"])\n * @before <p>Hello</p><p>Hello Again</p><p class=\"selected\">And Again</p>\n * @result $(\"p\").filter([\".selected\", \":first\"]) == [ <p>Hello</p>, <p class=\"selected\">And Again</p> ]\n *\n * @name filter\n * @type jQuery\n * @param Array<String> exprs A set of expressions to evaluate against\n * @cat DOM/Traversing\n */\nfilter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;\n\t\t}) ||\n\n\t\tt.constructor == Boolean &&\n\t\t( t ? this.get() : [] ) ||\n\n\t\tt.constructor == Function &&\n\t\tjQuery.grep( this, t ) ||\n\n\t\tjQuery.filter(t,this).r, arguments );\n},\n\n/**\n * Removes the specified Element from the set of matched elements. This\n * method is used to remove a single Element from a jQuery object.\n *\n * @example $(\"p\").not( document.getElementById(\"selected\") )\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]\n *\n * @name not\n * @type jQuery\n * @param Element el An element to remove from the set\n * @cat DOM/Traversing\n */\n\n/**\n * Removes elements matching the specified expression from the set\n * of matched elements. This method is used to remove one or more\n * elements from a jQuery object.\n * \n * @example $(\"p\").not(\"#selected\")\n * @before <p>Hello</p><p id=\"selected\">Hello Again</p>\n * @result [ <p>Hello</p> ]\n * @test cmpOK($(\"#main > p#ap > a\").not(\"#google\").length, \"==\", 2, \".not\")\n *\n * @name not\n * @type jQuery\n * @param String expr An expression with which to remove matching elements\n * @cat DOM/Traversing\n */\nnot: function(t) {\n\treturn this.pushStack( t.constructor == String ?\n\t\tjQuery.filter(t,this,false).r :\n\t\tjQuery.grep(this,function(a){ return a != t; }), arguments );\n},\n\n/**\n * Adds the elements matched by the expression to the jQuery object. This\n * can be used to concatenate the result sets of two expressions.\n *\n * @example $(\"p\").add(\"span\")\n * @before <p>Hello</p><p><span>Hello Again</span></p>\n * @result [ <p>Hello</p>, <span>Hello Again</span> ]\n *\n * @name add\n * @type jQuery\n * @param String expr An expression whose matched elements are added"}]},
{"id":"6d5e8268007cf9b77fb578c4aae7aa169d083730","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1114,1185],"code":"/**\n * Checks the current selection against an expression and returns true,\n * if the selection fits the given expression. Does return false, if the\n * selection does not fit or the expression is not valid.\n *\n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\n * @before <form><input type=\"checkbox\" /></form>\n * @result true\n * @desc Returns true, because the parent of the input is a form element\n * \n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\n * @before <form><p><input type=\"checkbox\" /></p></form>\n * @result false\n * @desc Returns false, because the parent of the input is a p element\n *\n * @example $(\"form\").is(null)\n * @before <form></form>\n * @result false\n * @desc An invalid expression always returns false.\n *\n * @test ok( $('#form').is('form'), 'Check for element: A form must be a form' );\n * ok( !$('#form').is('div'), 'Check for element: A form is not a div' );\n * ok( $('#mark').is('.blog'), 'Check for class: Expected class \"blog\"' );\n * ok( !$('#mark').is('.link'), 'Check for class: Did not expect class \"link\"' );\n * ok( $('#simon').is('.blog.link'), 'Check for multiple classes: Expected classes \"blog\" and \"link\"' );\n * ok( !$('#simon').is('.blogTest'), 'Check for multiple classes: Expected classes \"blog\" and \"link\", but not \"blogTest\"' );\n * ok( $('#en').is('[@lang=\"en\"]'), 'Check for attribute: Expected attribute lang to be \"en\"' );\n * ok( !$('#en').is('[@lang=\"de\"]'), 'Check for attribute: Expected attribute lang to be \"en\", not \"de\"' );\n * ok( $('#text1').is('[@type=\"text\"]'), 'Check for attribute: Expected attribute type to be \"text\"' );\n * ok( !$('#text1').is('[@type=\"radio\"]'), 'Check for attribute: Expected attribute type to be \"text\", not \"radio\"' );\n * ok( $('#text2').is(':disabled'), 'Check for pseudoclass: Expected to be disabled' );\n * ok( !$('#text1').is(':disabled'), 'Check for pseudoclass: Expected not disabled' );\n * ok( $('#radio2').is(':checked'), 'Check for pseudoclass: Expected to be checked' );\n * ok( !$('#radio1').is(':checked'), 'Check for pseudoclass: Expected not checked' );\n * ok( $('#foo').is('[p]'), 'Check for child: Expected a child \"p\" element' );\n * ok( !$('#foo').is('[ul]'), 'Check for child: Did not expect \"ul\" element' );\n * ok( $('#foo').is('[p][a][code]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements' );\n * ok( !$('#foo').is('[p][a][code][ol]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements, but no \"ol\"' );\n * ok( !$('#foo').is(0), 'Expected false for an invalid expression - 0' );\n * ok( !$('#foo').is(null), 'Expected false for an invalid expression - null' );\n * ok( !$('#foo').is(''), 'Expected false for an invalid expression - \"\"' );\n * ok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );\n *\n * @name is\n * @type Boolean\n * @param String expr The expression with which to filter\n * @cat DOM/Traversing\n */\nis: function(expr) {\n\treturn expr ? jQuery.filter(expr,this).r.length > 0 : false;\n},\n\n/**\n *\n *\n * @private\n * @name domManip\n * @param Array args\n * @param Boolean table\n * @param Number int\n * @param Function fn The function doing the DOM manipulation.\n * @type jQuery\n * @cat Core\n */\ndomManip: function(args, table, dir, fn){\n\tvar clone = this.size() > 1;\n\tvar a = jQuery.clean(args);\n\n\treturn this.each(function(){\n\t\tvar obj = this;\n\n\t\tif ( table && this.nodeName.toUpperCase() == \"TABLE\" && a[0].nodeName.toUpperCase() != \"THEAD\" ) {"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[700,732],"code":"/**\n * A wrapper function for each() to be used by append and prepend.\n * Handles cases where you're trying to modify the inner contents of\n * a table, when you actually need to work with the tbody.\n *\n * @member jQuery\n * @param {String} expr The expression with which to filter\n * @type Boolean\n * @cat DOM/Traversing\n */\nis: function(expr) {\n\treturn expr ? jQuery.filter(expr,this).r.length > 0 : this.length > 0;\n},\n\n/**\n * \n *\n * @private\n * @name domManip\n * @param Array args\n * @param Boolean table\n * @param Number int\n * @param Function fn The function doing the DOM manipulation.\n * @type jQuery\n */\ndomManip: function(args, table, dir, fn){\n\tvar clone = this.size() > 1;\n\tvar a = jQuery.clean(args);\n\t\n\treturn this.each(function(){\n\t\tvar obj = this;\n\t\t\n\t\tif ( table && this.nodeName == \"TABLE\" && a[0].nodeName != \"THEAD\" ) {"}]},
{"id":"04dc3247285fada5dfcde2058dac2a93a73a26a1","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1166,1213],"code":"/**\n *\n *\n * @private\n * @name domManip\n * @param Array args\n * @param Boolean table\n * @param Number int\n * @param Function fn The function doing the DOM manipulation.\n * @type jQuery\n * @cat Core\n */\ndomManip: function(args, table, dir, fn){\n\tvar clone = this.size() > 1;\n\tvar a = jQuery.clean(args);\n\n\treturn this.each(function(){\n\t\tvar obj = this;\n\n\t\tif ( table && this.nodeName.toUpperCase() == \"TABLE\" && a[0].nodeName.toUpperCase() != \"THEAD\" ) {\n\t\t\tvar tbody = this.getElementsByTagName(\"tbody\");\n\n\t\t\tif ( !tbody.length ) {\n\t\t\t\tobj = document.createElement(\"tbody\");\n\t\t\t\tthis.appendChild( obj );\n\t\t\t} else\n\t\t\t\tobj = tbody[0];\n\t\t}\n\n\t\tfor ( var i = ( dir < 0 ? a.length - 1 : 0 );\n\t\t\ti != ( dir < 0 ? dir : a.length ); i += dir ) {\n\t\t\t\tfn.apply( obj, [ clone ? a[i].cloneNode(true) : a[i] ] );\n\t\t}\n\t});\n},\n\n/**\n *\n *\n * @private\n * @name pushStack\n * @param Array a\n * @param Array args\n * @type jQuery\n * @cat Core\n */\npushStack: function(a,args) {\n\tvar fn = args && args[args.length-1];"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[714,759],"code":"/**\n * \n *\n * @private\n * @name domManip\n * @param Array args\n * @param Boolean table\n * @param Number int\n * @param Function fn The function doing the DOM manipulation.\n * @type jQuery\n */\ndomManip: function(args, table, dir, fn){\n\tvar clone = this.size() > 1;\n\tvar a = jQuery.clean(args);\n\t\n\treturn this.each(function(){\n\t\tvar obj = this;\n\t\t\n\t\tif ( table && this.nodeName == \"TABLE\" && a[0].nodeName != \"THEAD\" ) {\n\t\t\tvar tbody = this.getElementsByTagName(\"tbody\");\n\n\t\t\tif ( !tbody.length ) {\n\t\t\t\tobj = document.createElement(\"tbody\");\n\t\t\t\tthis.appendChild( obj );\n\t\t\t} else\n\t\t\t\tobj = tbody[0];\n\t\t}\n\n\t\tfor ( var i = ( dir < 0 ? a.length - 1 : 0 );\n\t\t\ti != ( dir < 0 ? dir : a.length ); i += dir ) {\n\t\t\t\tfn.apply( obj, [ clone ? a[i].cloneNode(true) : a[i] ] );\n\t\t}\n\t});\n},\n\n/**\n * \n *\n * @private\n * @name pushStack\n * @param Array a\n * @param Array args\n * @type jQuery\n */\npushStack: function(a,args) {\n\tvar fn = args && args[args.length-1];"}]},
{"id":"1d35f99bc2322982dab04b998bfde8d8a3fe4855","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1202,1313],"code":"\t/**\n\t *\n\t *\n\t * @private\n\t * @name pushStack\n\t * @param Array a\n\t * @param Array args\n\t * @type jQuery\n\t * @cat Core\n\t */\n\tpushStack: function(a,args) {\n\t\tvar fn = args && args[args.length-1];\n\t\tvar fn2 = args && args[args.length-2];\n\t\t\n\t\tif ( fn && fn.constructor != Function ) fn = null;\n\t\tif ( fn2 && fn2.constructor != Function ) fn2 = null;\n\n\t\tif ( !fn ) {\n\t\t\tif ( !this.stack ) this.stack = [];\n\t\t\tthis.stack.push( this.get() );\n\t\t\tthis.get( a );\n\t\t} else {\n\t\t\tvar old = this.get();\n\t\t\tthis.get( a );\n\n\t\t\tif ( fn2 && a.length || !fn2 )\n\t\t\t\tthis.each( fn2 || fn ).get( old );\n\t\t\telse\n\t\t\t\tthis.get( old ).each( fn );\n\t\t}\n\n\t\treturn this;\n\t}\n};\n\n/**\n * Extends the jQuery object itself. Can be used to add both static\n * functions and plugin methods.\n * \n * @example $.fn.extend({\n *   check: function() {\n *     this.each(function() { this.checked = true; });\n *   ),\n *   uncheck: function() {\n *     this.each(function() { this.checked = false; });\n *   }\n * });\n * $(\"input[@type=checkbox]\").check();\n * $(\"input[@type=radio]\").uncheck();\n * @desc Adds two plugin methods.\n *\n * @private\n * @name extend\n * @param Object obj\n * @type Object\n * @cat Core\n */\n\n/**\n * Extend one object with another, returning the original,\n * modified, object. This is a great utility for simple inheritance.\n * \n * @example var settings = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * jQuery.extend(settings, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n *\n * @test var settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" };\n * var options =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" };\n * var optionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" };\n * var merged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\n * jQuery.extend(settings, options);\n * isSet( settings, merged, \"Check if extended: settings must be extended\" );\n * isSet ( options, optionsCopy, \"Check if not modified: options must not be modified\" );\n *\n * @name $.extend\n * @param Object obj The object to extend\n * @param Object prop The object that will be merged into the first.\n * @type Object\n * @cat Javascript\n */\njQuery.extend = jQuery.fn.extend = function(obj,prop) {\n\tif ( !prop ) { prop = obj; obj = this; }\n\tfor ( var i in prop ) obj[i] = prop[i];\n\treturn obj;\n};\n\njQuery.extend({\n\t/**\n\t * @private\n\t * @name init\n\t * @type undefined\n\t * @cat Core\n\t */\n\tinit: function(){\n\t\tjQuery.initDone = true;\n\n\t\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(a) {\n\t\t\t\tvar ret = jQuery.map(this,n);"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[749,826],"code":"\t/**\n\t * \n\t *\n\t * @private\n\t * @name pushStack\n\t * @param Array a\n\t * @param Array args\n\t * @type jQuery\n\t */\n\tpushStack: function(a,args) {\n\t\tvar fn = args && args[args.length-1];\n\n\t\tif ( !fn || fn.constructor != Function ) {\n\t\t\tif ( !this.stack ) this.stack = [];\n\t\t\tthis.stack.push( this.get() );\n\t\t\tthis.get( a );\n\t\t} else {\n\t\t\tvar old = this.get();\n\t\t\tthis.get( a );\n\t\t\tif ( fn.constructor == Function )\n\t\t\t\treturn this.each( fn );\n\t\t\tthis.get( old );\n\t\t}\n\n\t\treturn this;\n\t}\n};\n\n/**\n * \n *\n * @private\n * @name extend\n * @param Object obj\n * @param Object prop\n * @type Object\n */\n \n/**\n * Extend one object with another, returning the original,\n * modified, object. This is a great utility for simple inheritance.\n *\n * @name jQuery.extend\n * @param Object obj The object to extend\n * @param Object prop The object that will be merged into the first.\n * @type Object\n * @cat Javascript\n */\njQuery.extend = jQuery.fn.extend = function(obj,prop) {\n\tif ( !prop ) { prop = obj; obj = this; }\n\tfor ( var i in prop ) obj[i] = prop[i];\n\treturn obj;\n};\n\njQuery.extend({\n\t/**\n\t * @private\n\t * @name init\n\t * @type undefined\n\t */\n\tinit: function(){\n\t\tjQuery.initDone = true;\n\t\t\n\t\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(a) {\n\t\t\t\tvar ret = jQuery.map(this,n);\n\t\t\t\tif ( a && a.constructor == String )\n\t\t\t\t\tret = jQuery.filter(a,ret).r;\n\t\t\t\treturn this.pushStack( ret, arguments );\n\t\t\t};\n\t\t});\n\t\t\n\t\tjQuery.each( jQuery.macros.to, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(){\n\t\t\t\tvar a = arguments;\n\t\t\t\treturn this.each(function(){\n\t\t\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t\t\t$(a[j])[n]( this );"}]},
{"id":"028592c7eede2b2ef1f01df1a0aa4d708e1135e6","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1290,1386],"code":"/**\n * @private\n * @name init\n * @type undefined\n * @cat Core\n */\ninit: function(){\n\tjQuery.initDone = true;\n\n\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\tjQuery.fn[ i ] = function(a) {\n\t\t\tvar ret = jQuery.map(this,n);\n\t\t\tif ( a && a.constructor == String )\n\t\t\t\tret = jQuery.filter(a,ret).r;\n\t\t\treturn this.pushStack( ret, arguments );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.to, function(i,n){\n\t\tjQuery.fn[ i ] = function(){\n\t\t\tvar a = arguments;\n\t\t\treturn this.each(function(){\n\t\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t\tjQuery(a[j])[n]( this );\n\t\t\t});\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.each, function(i,n){\n\t\tjQuery.fn[ i ] = function() {\n\t\t\treturn this.each( n, arguments );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.filter, function(i,n){\n\t\tjQuery.fn[ n ] = function(num,fn) {\n\t\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.attr, function(i,n){\n\t\tn = n || i;\n\t\tjQuery.fn[ i ] = function(h) {\n\t\t\treturn h == undefined ?\n\t\t\t\tthis.length ? this[0][n] : null :\n\t\t\t\tthis.attr( n, h );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.css, function(i,n){\n\t\tjQuery.fn[ n ] = function(h) {\n\t\t\treturn h == undefined ?\n\t\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\t\tthis.css( n, h );\n\t\t};\n\t});\n\n},\n\n/**\n * A generic iterator function, which can be used to seemlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * @example $.each( [0,1,2], function(i){\n *   alert( \"Item #\" + i + \": \" + this );\n * });\n * @desc This is an example of iterating over the items in an array, accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i){\n *   alert( \"Name: \" + i + \", Value: \" + this );\n * });\n * @desc This is an example of iterating over the properties in an Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat Javascript\n */\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0; i < obj.length; i++ )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\treturn obj;\n},\n\nclassName: {\n\tadd: function(o,c){\n\t\tif (jQuery.className.has(o,c)) return;\n\t\to.className += ( o.className ? \" \" : \"\" ) + c;\n\t},\n\tremove: function(o,c){"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[804,887],"code":"/**\n * @private\n * @name init\n * @type undefined\n */\ninit: function(){\n\tjQuery.initDone = true;\n\t\n\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\tjQuery.fn[ i ] = function(a) {\n\t\t\tvar ret = jQuery.map(this,n);\n\t\t\tif ( a && a.constructor == String )\n\t\t\t\tret = jQuery.filter(a,ret).r;\n\t\t\treturn this.pushStack( ret, arguments );\n\t\t};\n\t});\n\t\n\tjQuery.each( jQuery.macros.to, function(i,n){\n\t\tjQuery.fn[ i ] = function(){\n\t\t\tvar a = arguments;\n\t\t\treturn this.each(function(){\n\t\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t\t$(a[j])[n]( this );\n\t\t\t});\n\t\t};\n\t});\n\t\n\tjQuery.each( jQuery.macros.each, function(i,n){\n\t\tjQuery.fn[ i ] = function() {\n\t\t\treturn this.each( n, arguments );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.filter, function(i,n){\n\t\tjQuery.fn[ n ] = function(num,fn) {\n\t\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t\t};\n\t});\n\t\n\tjQuery.each( jQuery.macros.attr, function(i,n){\n\t\tn = n || i;\n\t\tjQuery.fn[ i ] = function(h) {\n\t\t\treturn h == undefined ?\n\t\t\t\tthis.length ? this[0][n] : null :\n\t\t\t\tthis.attr( n, h );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.css, function(i,n){\n\t\tjQuery.fn[ n ] = function(h) {\n\t\t\treturn h == undefined ?\n\t\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\t\tthis.css( n, h );\n\t\t};\n\t});\n\n},\n\n/**\n * A generic iterator function, which can be used to seemlessly\n * iterate over both objects and arrays.\n *\n * @name jQuery.each\n * @param Object obj The object, or array, to iterate over.\n * @param Object fn The function that will be executed on every object.\n * @type Object\n * @cat Javascript\n */\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0; i < obj.length; i++ )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\treturn obj;\n},\n\nclassName: {\n\tadd: function(o,c){\n\t\tif (jQuery.className.has(o,c)) return;\n\t\to.className += ( o.className ? \" \" : \"\" ) + c;\n\t},\n\tremove: function(o,c){"}]},
{"id":"4fa77241f4e0eafa17e9e8c69c8a8de0119b544b","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1400,1435],"code":"\thas: function(e,a) {\n\t\tif ( e.className != undefined )\n\t\t\te = e.className;\n\t\treturn new RegExp(\"(^|\\\\s)\" + a + \"(\\\\s|$)\").test(e);\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tfor ( var i in d ) {\n\t\t\told[\"padding\" + d[i]] = 0;\n\t\t\told[\"border\" + d[i] + \"Width\"] = 0;\n\t\t}\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true)).css({"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[892,927],"code":"\thas: function(e,a) {\n\t\tif ( e.className != undefined )\n\t\t\te = e.className;\n\t\treturn new RegExp(\"(^|\\\\s)\" + a + \"(\\\\s|$)\").test(e);\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tfor ( var i in d ) {\n\t\t\told[\"padding\" + d[i]] = 0;\n\t\t\told[\"border\" + d[i] + \"Width\"] = 0;\n\t\t}\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = $(e.cloneNode(true)).css({"}]},
{"id":"6ace675c84d00fbe691641c9d7371a2ece109c7a","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1465,1496],"code":"\tif (!force && elem.style[prop]) {\n\n\t\tret = elem.style[prop];\n\n\t} else if (elem.currentStyle) {\n\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\n\t} else if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\t\tif ( cur )\n\t\t\tret = cur.getPropertyValue(prop);\n\t\telse if ( prop == 'display' )\n\t\t\tret = 'none';\n\t\telse\n\t\t\tjQuery.swap(elem, { display: 'block' }, function() {\n\t\t\t\tret = document.defaultView.getComputedStyle(this,null).getPropertyValue(prop);\n\t\t\t});\n\n\t}\n\n\treturn ret;\n},\n\nclean: function(a) {\n\tvar r = [];\n\tfor ( var i = 0; i < a.length; i++ ) {\n\t\tif ( a[i].constructor == String ) {"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[948,979],"code":"\tif (!force && elem.style[prop]) {\n\n\t\tret = elem.style[prop];\n\n\t} else if (elem.currentStyle) {\n\n\t\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase()}); \n\t\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\n\t} else if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\t\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\t\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\t\tif ( cur )\n\t\t\tret = cur.getPropertyValue(prop);\n\t\telse if ( prop == 'display' )\n\t\t\tret = 'none';\n\t\telse\n\t\t\tjQuery.swap(elem, { display: 'block' }, function() {\n\t\t\t\tret = document.defaultView.getComputedStyle(this,null).getPropertyValue(prop);\n\t\t\t});\n\n\t}\n\t\n\treturn ret;\n},\n\nclean: function(a) {\n\tvar r = [];\n\tfor ( var i = 0; i < a.length; i++ ) {\n\t\tif ( a[i].constructor == String ) {"}]},
{"id":"3e457f0db7dbd443dc41119182bc368bc32959c1","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1589,1831],"code":"\t\t\"\": \"z\"\n\t},\n\t\"[\": \"jQuery.find(m[2],a).length\"\n},\n\ntoken: [\n\t\"\\\\.\\\\.|/\\\\.\\\\.\", \"a.parentNode\",\n\t\">|/\", \"jQuery.sibling(a.firstChild)\",\n\t\"\\\\+\", \"jQuery.sibling(a).next\",\n\t\"~\", function(a){\n\t\tvar r = [];\n\t\tvar s = jQuery.sibling(a);\n\t\tif ( s.n > 0 )\n\t\t\tfor ( var i = s.n; i < s.length; i++ )\n\t\t\t\tr.push( s[i] );\n\t\treturn r;\n\t}\n],\n\n/**\n *\n * @test t( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n * t( \"Element Selector\", \"body\", [\"body\"] );\n * t( \"Element Selector\", \"html\", [\"html\"] );\n * ok( $(\"*\").size() >= 30, \"Element Selector\" );\n * t( \"Parent Element\", \"div div\", [\"foo\"] );\n *\n * t( \"ID Selector\", \"#body\", [\"body\"] );\n * t( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n * t( \"ID Selector w/ Element\", \"ul#first\", [] );\n *\n * t( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n * t( \"Class Selector\", \".blog.link\", [\"simon\"] );\n * t( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n * t( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n *\n * t( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * t( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * t( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * t( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n *\n * t( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * t( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n * t( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n * t( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n * t( \"Adjacent\", \"a + a\", [\"groups\"] );\n * t( \"Adjacent\", \"a +a\", [\"groups\"] );\n * t( \"Adjacent\", \"a+ a\", [\"groups\"] );\n * t( \"Adjacent\", \"a+a\", [\"groups\"] );\n * t( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n * t( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n * t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * t( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n * t( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n * t( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n * \n * t( \"Non-existing part of attribute [@name*=bla]\", \"[@name*=bla]\", [] ); \n * t( \"Non-existing start of attribute [@name^=bla]\", \"[@name^=bla]\", [] ); \n * t( \"Non-existing end of attribute [@name$=bla]\", \"[@name$=bla]\", [] ); \n *\n * t( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n * t( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n * t( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n * t( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * t( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * t( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n *\n * t( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n * t( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n * t( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n * t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * t( \"Last Child\", \"p:last-child\", [\"sap\"] );\n * t( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n * t( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n * t( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\n * t( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n * t( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n * t( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\n * t( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n * t( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n * t( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );\n * t( \"Not\", \"a.blog:not(.link)\", [\"mark\"] );\n *\n * ok( jQuery.find(\"//*\").length >= 30, \"All Elements (//*)\" );\n * t( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\n * t( \"Absolute Path\", \"/html/body\", [\"body\"] );\n * t( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\n * t( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\n * t( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\n * t( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\n * t( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\n * t( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );\n * t( \"Attribute Equals\", \"//a[@rel='bookmark']\", [\"simon1\"] );\n * t( \"Parent Axis\", \"//p/..\", [\"main\",\"foo\"] );\n * t( \"Sibling Axis\", \"//p/../\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\n * t( \"Sibling Axis\", \"//p/../*\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\n * t( \"Has Children\", \"//p[a]\", [\"firstp\",\"ap\",\"en\",\"sap\"] );"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1058,1275],"code":"\t\t\"\": \"z\"\n\t},\n\t\"[\": \"jQuery.find(m[2],a).length\"\n},\n\ntoken: [\n\t\"\\\\.\\\\.|/\\\\.\\\\.\", \"a.parentNode\",\n\t\">|/\", \"jQuery.sibling(a.firstChild)\",\n\t\"\\\\+\", \"jQuery.sibling(a).next\",\n\t\"~\", function(a){\n\t\tvar r = [];\n\t\tvar s = jQuery.sibling(a);\n\t\tif ( s.n > 0 )\n\t\t\tfor ( var i = s.n; i < s.length; i++ )\n\t\t\t\tr.push( s[i] );\n\t\treturn r;\n\t}\n],\n\n/**\n *\n * @test t( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n * @test t( \"Element Selector\", \"body\", [\"body\"] );\n * @test t( \"Element Selector\", \"html\", [\"html\"] );\n * @test cmpOK( $(\"*\").size(), \">=\", 30, \"Element Selector\" );\n * @test t( \"Parent Element\", \"div div\", [\"foo\"] );\n *\n * @test t( \"ID Selector\", \"#body\", [\"body\"] );\n * @test t( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n * @test t( \"ID Selector w/ Element\", \"ul#first\", [] );\n *\n * @test t( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n * @test t( \"Class Selector\", \".blog.link\", [\"simon\"] );\n * @test t( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n * @test t( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n *\n * @test t( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n *\n * @test t( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n * @test t( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"Adjacent\", \"a + a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a +a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a+ a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a+a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n * @test t( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n * @test t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * @test t( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n * @test t( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n * @test t( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n * @test t( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n * @test t( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n * @test t( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n *\n * @test t( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n * @test t( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n * @test t( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n * @test t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * @test t( \"Last Child\", \"p:last-child\", [\"sap\"] );\n * @test t( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n * @test t( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n * @test t( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\"] );\n * @test t( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n * @test t( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n * @test t( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n * @test t( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n * @test t( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );\n * @test t( \"Not\", \"a.blog:not(.link)\", [\"mark\"] );\n *\n * @test cmpOK( jQuery.find(\"//*\").length, \">=\", 30, \"All Elements (//*)\" );\n * @test t( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\n * @test t( \"Absolute Path\", \"/html/body\", [\"body\"] );\n * @test t( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\n * @test t( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\n * @test t( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );\n * @test t( \"Attribute Equals\", \"//a[@rel='bookmark']\", [\"simon1\"] );\n * @test t( \"Parent Axis\", \"//p/..\", [\"main\",\"foo\"] );\n * @test t( \"Sibling Axis\", \"//p/../\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Sibling Axis\", \"//p/../*\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Has Children\", \"//p[a]\", [\"firstp\",\"ap\",\"en\",\"sap\"] );\n *\n * @test t( \"nth Element\", \"p:nth(1)\", [\"ap\"] );\n * @test t( \"First Element\", \"p:first\", [\"firstp\"] );\n * @test t( \"Last Element\", \"p:last\", [\"first\"] );\n * @test t( \"Even Elements\", \"p:even\", [\"firstp\",\"sndp\",\"sap\"] );\n * @test t( \"Odd Elements\", \"p:odd\", [\"ap\",\"en\",\"first\"] );"}]},
{"id":"c859f4dc85389fd65717b11ec16ab3b4b8395a00","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1856,1867],"code":"\t} else if ( elem.getAttribute != undefined ) {\n\t\tif ( value != undefined ) elem.setAttribute( name, value );\n\t\treturn elem.getAttribute( name, 2 );\n\t} else {\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n// The regular expressions that power the parsing engine\nparse: ["},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1281,1292],"code":"\t} else if ( elem.getAttribute ) {\n\t\tif ( value != undefined ) elem.setAttribute( name, value );\n\t\treturn elem.getAttribute( name, 2 );\n\t} else {\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n// The regular expressions that power the parsing engine\nparse: ["}]},
{"id":"88f212db3211dcd4e7b6e922165b119fb85e6f31","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1866,1895],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t\"\\\\[ *(@)S *([!*$^=]*) *('?\\\"?)(.*?)\\\\4 *\\\\]\",\n\n\t// Match: [div], [div p]\n\t\"(\\\\[)\\s*(.*?)\\s*\\\\]\",\n\n\t// Match: :contains('foo')\n\t\"(:)S\\\\(\\\"?'?([^\\\\)]*?)\\\"?'?\\\\)\",\n\n\t// Match: :even, :last-chlid\n\t\"([:.#]*)S\"\n],\n\nfilter: function(t,r,not) {\n\t// Figure out if we're doing regular, or inverse, filtering\n\tvar g = not !== false ? jQuery.grep :\n\t\tfunction(a,f) {return jQuery.grep(a,f,true);};\n\n\twhile ( t && /^[a-z[({<*:.#]/i.test(t) ) {\n\n\t\tvar p = jQuery.parse;\n\n\t\tfor ( var i = 0; i < p.length; i++ ) {\n\t\n\t\t\t// Look for, and replace, string-like sequences\n\t\t\t// and finally build a regexp out of it\n\t\t\tvar re = new RegExp(\n\t\t\t\t\"^\" + p[i].replace(\"S\", \"([a-z*_-][a-z0-9_-]*)\"), \"i\" );"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1291,1316],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t[ \"\\\\[ *(@)S *([!*$^=]*) *Q\\\\]\", 1 ],\n\n\t// Match: [div], [div p]\n\t[ \"(\\\\[)Q\\\\]\", 0 ],\n\n\t// Match: :contains('foo')\n\t[ \"(:)S\\\\(Q\\\\)\", 0 ],\n\n\t// Match: :even, :last-chlid\n\t[ \"([:.#]*)S\", 0 ]\n],\n\nfilter: function(t,r,not) {\n\t// Figure out if we're doing regular, or inverse, filtering\n\tvar g = not !== false ? jQuery.grep :\n\t\tfunction(a,f) {return jQuery.grep(a,f,true);};\n\t\n\twhile ( t && /^[a-z[({<*:.#]/i.test(t) ) {\n\n\t\tvar p = jQuery.parse;\n\n\t\tfor ( var i = 0; i < p.length; i++ ) {\n\t\t\tvar re = new RegExp( \"^\" + p[i][0]"}]},
{"id":"a3eaedeebfbb456a1fab7e239828a59d33899a8d","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1905,1981],"code":"\t\t\t\tt = t.replace( re, \"\" );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// :not() is a special case that can be optimized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3],r,false).r;\n\n\t\t// Otherwise, find the expression to execute\n\t\telse {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( f.constructor != String )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){\" +\n\t\t\t\t( m[1] == \"@\" ? \"z=jQuery.attr(a,m[3]);\" : \"\" ) +\n\t\t\t\t\"return \" + f + \"}\");\n\n\t\t\t// Execute it against the current filter\n\t\t\tr = g( r, f );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)\n\t// and the modified expression string (t)\n\treturn { r: r, t: t };\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @example $.trim(\"  hello, how are you?  \");\n * @result \"hello, how are you?\"\n *\n * @name $.trim\n * @type String\n * @param String str The string to trim.\n * @cat Javascript\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},\n\n/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1332,1403],"code":"\t\t\t\tt = t.replace( re, \"\" );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// :not() is a special case that can be optomized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3],r,false).r;\n\t\t\n\t\t// Otherwise, find the expression to execute\n\t\telse {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( f.constructor != String )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\t\t\t\t\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){\" + \n\t\t\t\t( m[1] == \"@\" ? \"z=jQuery.attr(a,m[3]);\" : \"\" ) + \n\t\t\t\t\"return \" + f + \"}\");\n\t\t\t\n\t\t\t// Execute it against the current filter\n\t\t\tr = g( r, f );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)\n\t// and the modified expression string (t)\n\treturn { r: r, t: t };\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @private\n * @name jQuery.trim\n * @type String\n * @param String str The string to trim.\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},\n\n/**\n * All ancestors of a given element.\n *\n * @private\n * @name jQuery.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name jQuery.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];"}]},
{"id":"a0a00d90c0c71eab27bd0251f4cef6141543dbf8","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1971,2228],"code":"/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];\n\t\n\tif(elem) {\n\t\tvar siblings = elem.parentNode.childNodes;\n\t\tfor ( var i = 0; i < siblings.length; i++ ) {\n\t\t\tif ( not === true && siblings[i] == elem ) continue;\n\n\t\t\tif ( siblings[i].nodeType == 1 )\n\t\t\t\telems.push( siblings[i] );\n\t\t\tif ( siblings[i] == elem )\n\t\t\t\telems.n = elems.length - 1;\n\t\t}\n\t}\n\n\treturn jQuery.extend( elems, {\n\t\tlast: elems.n == elems.length - 1,\n\t\tcur: pos == \"even\" && elems.n % 2 == 0 || pos == \"odd\" && elems.n % 2 || elems[pos] == elem,\n\t\tprev: elems[elems.n - 1],\n\t\tnext: elems[elems.n + 1]\n\t});\n},\n\n/**\n * Merge two arrays together, removing all duplicates. The final order\n * or the new array is: All the results from the first array, followed\n * by the unique results from the second array.\n *\n * @example $.merge( [0,1,2], [2,3,4] )\n * @result [0,1,2,3,4]\n *\n * @example $.merge( [3,2,1], [4,3,2] )\n * @result [3,2,1,4]\n *\n * @name $.merge\n * @type Array\n * @param Array first The first array to merge.\n * @param Array second The second array to merge.\n * @cat Javascript\n */\nmerge: function(first, second) {\n\tvar result = [];\n\n\t// Move b over to the new array (this helps to avoid\n\t// StaticNodeList instances)\n\tfor ( var k = 0; k < first.length; k++ )\n\t\tresult[k] = first[k];\n\n\t// Now check for duplicates between a and b and only\n\t// add the unique items\n\tfor ( var i = 0; i < second.length; i++ ) {\n\t\tvar noCollision = true;\n\n\t\t// The collision-checking process\n\t\tfor ( var j = 0; j < first.length; j++ )\n\t\t\tif ( second[i] == first[j] )\n\t\t\t\tnoCollision = false;\n\n\t\t// If the item is unique, add it\n\t\tif ( noCollision )\n\t\t\tresult.push( second[i] );\n\t}\n\n\treturn result;\n},\n\n/**\n * Filter items out of an array, by using a filter function.\n * The specified function will be passed two arguments: The\n * current array item and the index of the item in the array. The\n * function should return 'true' if you wish to keep the item in\n * the array, false if it should be removed.\n *\n * @example $.grep( [0,1,2], function(i){\n *   return i > 0;\n * });\n * @result [1, 2]\n *\n * @name $.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n * @cat Javascript\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1394,1618],"code":"/**\n * All elements on a specified axis.\n *\n * @private\n * @name jQuery.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];\n\n\tvar siblings = elem.parentNode.childNodes;\n\tfor ( var i = 0; i < siblings.length; i++ ) {\n\t\tif ( not === true && siblings[i] == elem ) continue;\n\n\t\tif ( siblings[i].nodeType == 1 )\n\t\t\telems.push( siblings[i] );\n\t\tif ( siblings[i] == elem )\n\t\t\telems.n = elems.length - 1;\n\t}\n\n\treturn jQuery.extend( elems, {\n\t\tlast: elems.n == elems.length - 1,\n\t\tcur: pos == \"even\" && elems.n % 2 == 0 || pos == \"odd\" && elems.n % 2 || elems[pos] == elem,\n\t\tprev: elems[elems.n - 1],\n\t\tnext: elems[elems.n + 1]\n\t});\n},\n\n/**\n * Merge two arrays together, removing all duplicates.\n *\n * @private\n * @name jQuery.merge\n * @type Array\n * @param Array a The first array to merge.\n * @param Array b The second array to merge.\n */\nmerge: function(first, second) {\n\tvar result = [];\n\t\n\t// Move b over to the new array (this helps to avoid\n\t// StaticNodeList instances)\n\tfor ( var k = 0; k < first.length; k++ )\n\t\tresult[k] = first[k];\n\n\t// Now check for duplicates between a and b and only\n\t// add the unique items\n\tfor ( var i = 0; i < second.length; i++ ) {\n\t\tvar noCollision = true;\n\t\t\n\t\t// The collision-checking process\n\t\tfor ( var j = 0; j < first.length; j++ )\n\t\t\tif ( second[i] == first[j] )\n\t\t\t\tnoCollision = false;\n\t\t\t\n\t\t// If the item is unique, add it\n\t\tif ( noCollision )\n\t\t\tresult.push( second[i] );\n\t}\n\n\treturn result;\n},\n\n/**\n * Remove items that aren't matched in an array. The function passed\n * in to this method will be passed two arguments: 'a' (which is the\n * array item) and 'i' (which is the index of the item in the array).\n *\n * @private\n * @name jQuery.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\t\t\n\tvar result = [];\n\t\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0; i < elems.length; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\t\n\treturn result;\n},\n\n/**\n * Translate all items in array to another array of items. The translation function\n * that is provided to this method is passed one argument: 'a' (the item to be \n * translated). If an array is returned, that array is mapped out and merged into\n * the full array. Additionally, returning 'null' or 'undefined' will delete the item\n * from the array. Both of these changes imply that the size of the array may not\n * be the same size upon completion, as it was when it started."}]},
{"id":"6b7cfca9d98e9769604d5b48f701a4a64175aef4","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[2133,2256],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n */\nevent: {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\n\t\t// Init the element's event structure\n\t\tif (!element.events)\n\t\t\telement.events = {};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.events[type];\n\n\t\t// If it hasn't been initialized yet\n\t\tif (!handlers) {\n\t\t\t// Init the event handler queue\n\t\t\thandlers = element.events[type] = {};\n\n\t\t\t// Remember an existing handler, if it's already there\n\t\t\tif (element[\"on\" + type])\n\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// And bind the global event handler to the element\n\t\telement[\"on\" + type] = this.handle;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\tthis.global[type].push( element );\n\t},\n\n\tguid: 1,\n\tglobal: {},\n\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tif (element.events)\n\t\t\tif (type && element.events[type])\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\telse\n\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\telse\n\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\tthis.remove( element, j );\n\t},\n\n\ttrigger: function(type,data,element) {\n\t\t// Touch up the incoming data\n\t\tdata = data || [];\n\n\t\t// Handle a global trigger\n\t\tif ( !element ) {\n\t\t\tvar g = this.global[type];\n\t\t\tif ( g )\n\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\tthis.trigger( type, data, g[i] );\n\n\t\t// Handle triggering a single element\n\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t// Pass along a fake event\n\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\n\t\t\t// Trigger the event\n\t\t\telement[\"on\" + type].apply( element, data );\n\t\t}\n\t},\n\n\thandle: function(event) {\n\t\tif ( typeof jQuery == \"undefined\" ) return;\n\n\t\tevent = event || jQuery.event.fix( window.event );\n\n\t\t// If no correct event was found, fail\n\t\tif ( !event ) return;\n\n\t\tvar returnValue = true;\n\n\t\tvar c = this.events[event.type];\n\n\t\tvar args = [].slice.call( arguments, 1 );\n\t\targs.unshift( event );\n"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1523,1643],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n */\nevent: {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\t\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// Init the element's event structure\n\t\tif (!element.events)\n\t\t\telement.events = {};\n\t\t\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.events[type];\n\t\t\n\t\t// If it hasn't been initialized yet\n\t\tif (!handlers) {\n\t\t\t// Init the event handler queue\n\t\t\thandlers = element.events[type] = {};\n\t\t\t\n\t\t\t// Remember an existing handler, if it's already there\n\t\t\tif (element[\"on\" + type])\n\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\t\t\n\t\t// And bind the global event handler to the element\n\t\telement[\"on\" + type] = this.handle;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\tthis.global[type].push( element );\n\t},\n\t\n\tguid: 1,\n\tglobal: {},\n\t\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tif (element.events)\n\t\t\tif (type && element.events[type])\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\telse\n\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\telse\n\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\tthis.remove( element, j );\n\t},\n\t\n\ttrigger: function(type,data,element) {\n\t\t// Touch up the incoming data\n\t\tdata = data || [];\n\n\t\t// Handle a global trigger\n\t\tif ( !element ) {\n\t\t\tvar g = this.global[type];\n\t\t\tif ( g )\n\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\tthis.trigger( type, data, g[i] );\n\n\t\t// Handle triggering a single element\n\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t// Pass along a fake event\n\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\n\t\t\t// Trigger the event\n\t\t\telement[\"on\" + type].apply( element, data );\n\t\t}\n\t},\n\t\n\thandle: function(event) {\n\t\tif ( typeof jQuery == \"undefined\" ) return;\n\n\t\tevent = event || jQuery.event.fix( window.event );\n\n\t\t// If no correct event was found, fail\n\t\tif ( !event ) return;\n\t\n\t\tvar returnValue = true;\n\n\t\tvar c = this.events[event.type];\n\t\n\t\tfor ( var j in c ) {\n\t\t\tif ( c[j].apply( this, [event] ) === false ) {\n\t\t\t\tevent.preventDefault();"}]},
{"id":"5abc8844ef3339306f209151155fb9b7e895aca7","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[2261,2659],"code":"/**\n * Contains flags for the useragent, read from navigator.userAgent.\n * Available flags are: safari, opera, msie, mozilla\n * This property is available before the DOM is ready, therefore you can\n * use it to add ready events only for certain browsers.\n *\n * See <a href=\"http://davecardwell.co.uk/geekery/javascript/jquery/jqbrowser/\">\n * jQBrowser plugin</a> for advanced browser detection:\n *\n * @example $.browser.msie\n * @desc returns true if the current useragent is some version of microsoft's internet explorer\n *\n * @example if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }\n * @desc Alerts \"this is safari!\" only for safari browsers\n *\n * @name $.browser\n * @type Boolean\n * @cat Javascript\n */\nnew function() {\n\tvar b = navigator.userAgent.toLowerCase();\n\n\t// Figure out what browser is being used\n\tjQuery.browser = {\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};\n\njQuery.macros = {\n\tto: {\n\t\t/**\n\t\t * Append all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).append(B), in that instead of appending B to A, you're appending\n\t\t * A to B.\n\t\t *\n\t\t * @example $(\"p\").appendTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p></div>\n\t\t *\n\t\t * @name appendTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tappendTo: \"append\",\n\n\t\t/**\n\t\t * Prepend all of the matched elements to another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).prepend(B), in that instead of prepending B to A, you're prepending\n\t\t * A to B.\n\t\t *\n\t\t * @example $(\"p\").prependTo(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\n\t\t *\n\t\t * @name prependTo\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tprependTo: \"prepend\",\n\n\t\t/**\n\t\t * Insert all of the matched elements before another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).before(B), in that instead of inserting B before A, you're inserting\n\t\t * A before B.\n\t\t *\n\t\t * @example $(\"p\").insertBefore(\"#foo\");\n\t\t * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t *\n\t\t * @name insertBefore\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match.\n\t\t * @cat DOM/Manipulation\n\t\t */\n\t\tinsertBefore: \"before\",\n\n\t\t/**\n\t\t * Insert all of the matched elements after another, specified, set of elements.\n\t\t * This operation is, essentially, the reverse of doing a regular\n\t\t * $(A).after(B), in that instead of inserting B after A, you're inserting\n\t\t * A after B.\n\t\t *\n\t\t * @example $(\"p\").insertAfter(\"#foo\");\n\t\t * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\n\t\t * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\n\t\t *\n\t\t * @name insertAfter\n\t\t * @type jQuery\n\t\t * @param String expr A jQuery expression of elements to match."},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1523,1969],"code":"\t/*\n\t * A number of helper functions used for managing events.\n\t * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n\t */\n\tevent: {\n\t\n\t\t// Bind an event to an element\n\t\t// Original by Dean Edwards\n\t\tadd: function(element, type, handler) {\n\t\t\t// For whatever reason, IE has trouble passing the window object\n\t\t\t// around, causing it to be cloned in the process\n\t\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\t\telement = window;\n\t\t\n\t\t\t// Make sure that the function being executed has a unique ID\n\t\t\tif ( !handler.guid )\n\t\t\t\thandler.guid = this.guid++;\n\t\t\t\t\n\t\t\t// Init the element's event structure\n\t\t\tif (!element.events)\n\t\t\t\telement.events = {};\n\t\t\t\n\t\t\t// Get the current list of functions bound to this event\n\t\t\tvar handlers = element.events[type];\n\t\t\t\n\t\t\t// If it hasn't been initialized yet\n\t\t\tif (!handlers) {\n\t\t\t\t// Init the event handler queue\n\t\t\t\thandlers = element.events[type] = {};\n\t\t\t\t\n\t\t\t\t// Remember an existing handler, if it's already there\n\t\t\t\tif (element[\"on\" + type])\n\t\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t\t}\n\n\t\t\t// Add the function to the element's handler list\n\t\t\thandlers[handler.guid] = handler;\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\telement[\"on\" + type] = this.handle;\n\t\n\t\t\t// Remember the function in a global list (for triggering)\n\t\t\tif (!this.global[type])\n\t\t\t\tthis.global[type] = [];\n\t\t\tthis.global[type].push( element );\n\t\t},\n\t\t\n\t\tguid: 1,\n\t\tglobal: {},\n\t\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function(element, type, handler) {\n\t\t\tif (element.events)\n\t\t\t\tif (type && element.events[type])\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\t\telse\n\t\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\t\tthis.remove( element, j );\n\t\t},\n\t\t\n\t\ttrigger: function(type,data,element) {\n\t\t\t// Touch up the incoming data\n\t\t\tdata = data || [];\n\t\n\t\t\t// Handle a global trigger\n\t\t\tif ( !element ) {\n\t\t\t\tvar g = this.global[type];\n\t\t\t\tif ( g )\n\t\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\t\tthis.trigger( type, data, g[i] );\n\t\n\t\t\t// Handle triggering a single element\n\t\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t\t// Pass along a fake event\n\t\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\t\n\t\t\t\t// Trigger the event\n\t\t\t\telement[\"on\" + type].apply( element, data );\n\t\t\t}\n\t\t},\n\t\t\n\t\thandle: function(event) {\n\t\t\tif ( typeof jQuery == \"undefined\" ) return;\n\n\t\t\tevent = event || jQuery.event.fix( window.event );\n\t\n\t\t\t// If no correct event was found, fail\n\t\t\tif ( !event ) return;\n\t\t\n\t\t\tvar returnValue = true;\n\n\t\t\tvar c = this.events[event.type];\n\t\t\n\t\t\tfor ( var j in c ) {\n\t\t\t\tif ( c[j].apply( this, [event] ) === false ) {\n\t\t\t\t\tevent.preventDefault();"}]},
{"id":"7ecada45cf4ff2983028e6bb82c3fc55529605dc","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[2661,3078],"code":"attr: {\n\t/**\n\t * Get the current value of the first matched element.\n\t *\n\t * @example $(\"input\").val();\n\t * @before <input type=\"text\" value=\"some text\"/>\n\t * @result \"some text\"\n\t *\n\t\t * @test ok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\n\t * ok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );\n\t *\n\t * @name val\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\n\t/**\n\t * Set the value of every matched element.\n\t *\n\t * @example $(\"input\").value(\"test\");\n\t * @before <input type=\"text\" value=\"some text\"/>\n\t * @result <input type=\"text\" value=\"test\"/>\n\t *\n\t * @test document.getElementById('text1').value = \"bla\";\n\t * ok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n\t * $(\"#text1\").val('test');\n\t * ok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );\n\t *\n\t * @name val\n\t * @type jQuery\n\t * @param String val Set the property to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\tval: \"value\",\n\n\t/**\n\t * Get the html contents of the first matched element.\n\t *\n\t * @example $(\"div\").html();\n\t * @before <div><input/></div>\n\t * @result <input/>\n\t *\n\t * @name html\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\n\t/**\n\t * Set the html contents of every matched element.\n\t *\n\t * @example $(\"div\").html(\"<b>new stuff</b>\");\n\t * @before <div><input/></div>\n\t * @result <div><b>new stuff</b></div>\n\t *\n\t * @test var div = $(\"div\");\n\t * div.html(\"<b>test</b>\");\n\t * var pass = true;\n\t * for ( var i = 0; i < div.size(); i++ ) {\n\t *   if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t * }\n\t * ok( pass, \"Set HTML\" );\n\t *\n\t * @name html\n\t * @type jQuery\n\t * @param String val Set the html contents to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\thtml: \"innerHTML\",\n\n\t/**\n\t * Get the current id of the first matched element.\n\t *\n\t * @example $(\"input\").id();\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\n\t * @result \"test\"\n\t *\n\t\t * @test ok( $(document.getElementById('main')).id() == \"main\", \"Check for id\" );\n\t * ok( $(\"#foo\").id() == \"foo\", \"Check for id\" );\n\t * ok( !$(\"head\").id(), \"Check for id\" );\n\t *\n\t * @name id\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\n\t/**\n\t * Set the id of every matched element.\n\t *\n\t * @example $(\"input\").id(\"newid\");\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\n\t * @result <input type=\"text\" id=\"newid\" value=\"some text\"/>\n\t *\n\t * @name id\n\t * @type jQuery\n\t * @param String val Set the property to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\tid: null,\n\n\t/**"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1971,2364],"code":"attr: {\n\t/**\n\t * Get the current value of the first matched element.\n\t * \n\t * @example $(\"input\").val();\n\t * @before <input type=\"text\" value=\"some text\"/>\n\t * @result \"some text\"\n\t *\n\t * @name val\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**\n\t * Set the value of every matched element.\n\t * \n\t * @example $(\"input\").value(\"test\");\n\t * @before <input type=\"text\" value=\"some text\"/>\n\t * @result <input type=\"text\" value=\"test\"/>\n\t *\n\t * @name val\n\t * @type jQuery\n\t * @param String val Set the property to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\tval: \"value\",\n\t\n\t/**\n\t * Get the html contents of the first matched element.\n\t * \n\t * @example $(\"div\").html();\n\t * @before <div><input/></div>\n\t * @result <input/>\n\t *\n\t * @name html\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**\n\t * Set the html contents of every matched element.\n\t * \n\t * @example $(\"div\").html(\"<b>new stuff</b>\");\n\t * @before <div><input/></div>\n\t * @result <div><b>new stuff</b></div>\n\t *\n\t * @test var div = $(\"div\");\n\t * div.html(\"<b>test</b>\");\n\t * var pass = true;\n\t * for ( var i = 0; i < div.size(); i++ ) {\n\t *   if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t * }\n\t * ok( pass, \"Set HTML\" );\n\t *\n\t * @name html\n\t * @type jQuery\n\t * @param String val Set the html contents to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\thtml: \"innerHTML\",\n\t\n\t/**\n\t * Get the current id of the first matched element.\n\t * \n\t * @example $(\"input\").id();\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\n\t * @result \"test\"\n\t *\n\t * @name id\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**\n\t * Set the id of every matched element.\n\t * \n\t * @example $(\"input\").id(\"newid\");\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\n\t * @result <input type=\"text\" id=\"newid\" value=\"some text\"/>\n\t *\n\t * @name id\n\t * @type jQuery\n\t * @param String val Set the property to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\tid: null,\n\t\n\t/**\n\t * Get the current title of the first matched element.\n\t * \n\t * @example $(\"img\").title();\n\t * @before <img src=\"test.jpg\" title=\"my image\"/>\n\t * @result \"my image\"\n\t *\n\t * @name title\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**"}]},
{"id":"3bd8009cabcdec273c290c6b88303d94bc7a7bd6","instances":[{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[3132,3194],"code":"/**\n * Displays each of the set of matched elements if they are hidden.\n *\n * @example $(\"p\").show()\n * @before <p style=\"display: none\">Hello</p>\n * @result [ <p style=\"display: block\">Hello</p> ]\n *\n * @test var pass = true, div = $(\"div\");\n * div.show().each(function(){\n *   if ( this.style.display == \"none\" ) pass = false;\n * });\n * ok( pass, \"Show\" );\n *\n * @name show\n * @type jQuery\n * @cat Effects\n */\nshow: function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n},\n\n/**\n * Hides each of the set of matched elements if they are shown.\n *\n * @example $(\"p\").hide()\n * @before <p>Hello</p>\n * @result [ <p style=\"display: none\">Hello</p> ]\n *\n * var pass = true, div = $(\"div\");\n * div.hide().each(function(){\n *   if ( this.style.display != \"none\" ) pass = false;\n * });\n * ok( pass, \"Hide\" );\n *\n * @name hide\n * @type jQuery\n * @cat Effects\n */\nhide: function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n},\n\n/**\n * Toggles each of the set of matched elements. If they are shown,\n * toggle makes them hidden. If they are hidden, toggle\n * makes them shown.\n *\n * @example $(\"p\").toggle()\n * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\n * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\n *\n * @name toggle\n * @type jQuery\n * @cat Effects\n */\ntoggle: function(){\n\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ].apply( jQuery(this), arguments );\n},"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[2402,2464],"code":"/**\n * Displays each of the set of matched elements if they are hidden.\n * \n * @example $(\"p\").show()\n * @before <p style=\"display: none\">Hello</p>\n * @result [ <p style=\"display: block\">Hello</p> ]\n *\n * @test var pass = true, div = $(\"div\");\n * div.show().each(function(){\n *   if ( this.style.display == \"none\" ) pass = false;\n * });\n * ok( pass, \"Show\" );\n *\n * @name show\n * @type jQuery\n * @cat Effects\n */\nshow: function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n},\n\n/**\n * Hides each of the set of matched elements if they are shown.\n *\n * @example $(\"p\").hide()\n * @before <p>Hello</p>\n * @result [ <p style=\"display: none\">Hello</p> ]\n *\n * var pass = true, div = $(\"div\");\n * div.hide().each(function(){\n *   if ( this.style.display != \"none\" ) pass = false;\n * });\n * ok( pass, \"Hide\" );\n *\n * @name hide\n * @type jQuery\n * @cat Effects\n */\nhide: function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n},\n\n/**\n * Toggles each of the set of matched elements. If they are shown,\n * toggle makes them hidden. If they are hidden, toggle\n * makes them shown.\n *\n * @example $(\"p\").toggle()\n * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\n * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\n *\n * @name toggle\n * @type jQuery\n * @cat Effects\n */\ntoggle: function(){\n\t$(this)[ $(this).is(\":hidden\") ? \"show\" : \"hide\" ].apply( $(this), arguments );\n},"}]}]
