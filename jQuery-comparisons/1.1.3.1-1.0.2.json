[{"id":"5d124fadbe97e349d7877771cc7b0b9a351cc9e4","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[1,47],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )"},{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[1,57],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\")\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Hash params A set of key/value pairs that will be sent to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded.\n\t * @cat AJAX\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\")\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {test: true},\n \t *   function() { alert(\"load is done\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @test stop();\n\t * $('#first').load(\"data/name.php\", function() {\n\t * \tok( $('#first').text() == 'ERROR', 'Check if content was injected into the DOM' );\n\t * \tstart();\n\t * });\n\t *\n\t * @test stop(); // check if load can be called with only url\n\t * $('#first').load(\"data/name.php\");\n\t * $.get(\"data/name.php\", function() {\n\t *   ok( $('#first').text() == 'ERROR', 'Check if load works without callback');\n\t *   start();\n\t * });\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Hash params A set of key/value pairs that will be sent to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded.\n\t * @cat AJAX\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( url.constructor == Function )"}]},
{"id":"ad82441950f8237cbd33c53745f727768cd4f35a","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajax.js","lines":[746,784],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );"},{"path":"./jquery-data/1.0.2/src/ajax/ajax.js","lines":[734,773],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function(r) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it\n\tif ( type == \"script\" ) eval.call( window, data );"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[99,108],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.3.1/src/ajax/ajaxTest.js","lines":[127,135],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"fb68efab7ee71c3569232aa4c8d8e7570f98fae8","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[10,21],"code":"add: function(element, type, handler, data) {\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\telement = window;\n\t\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\t\t\n\t// if data is passed, bind to handler \n\tif( data != undefined ) { "},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[2141,2152],"code":"add: function(element, type, handler) {\n\t// For whatever reason, IE has trouble passing the window object\n\t// around, causing it to be cloned in the process\n\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\telement = window;\n\n\t// Make sure that the function being executed has a unique ID\n\tif ( !handler.guid )\n\t\thandler.guid = this.guid++;\n\n\t// Init the element's event structure\n\tif (!element.events)"}]},
{"id":"796dd6ab48ed59bebda61a83d0fd5842d6d817d3","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[498,565],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"},{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[96,150],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"}]},
{"id":"34f1c7a3c285e3ac9a4d0d043f43f7fee8fc74be","instances":[{"path":"./jquery-data/1.1.3.1/src/event/event.js","lines":[967,988],"code":"\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {"},{"path":"./jquery-data/1.0.2/src/event/event.js","lines":[1640,1661],"code":"\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10);\n\t} \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie) jQuery(window).unload(function() {"}]},
{"id":"7ffee692150031588ae956879840d6d059b3fcae","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[41,45],"code":"this.filter(\":hidden\").each(function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n}).end();"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[3149,3153],"code":"show: function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n},"}]},
{"id":"44cfc744fc1649df885b9aca844e0a62c955c33b","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[86,91],"code":"this.filter(\":visible\").each(function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n}).end();"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[3172,3177],"code":"hide: function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n},"}]},
{"id":"b31f3b413a48d51ba76b1e30dce1864bb28f3b88","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[276,374],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only \"swing\" and \"linear\" are provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (e.g. \"swing\" or \"linear\"). Defaults to \"swing\".\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\tvar hidden = jQuery(this).is(\":hidden\"),\n\t\t\t\topt = jQuery.speed(speed, easing, callback),\n\t\t\t\tself = this;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tif ( prop[p] == \"hide\" && hidden || prop[p] == \"show\" && !hidden )\n\t\t\t\t\treturn jQuery.isFunction(opt.complete) && opt.complete.apply(this);\n\n\t\t\t\tif ( p == \"height\" || p == \"width\" ) {\n\t\t\t\t\t// Store display property\n\t\t\t\t\topt.display = jQuery.css(this, \"display\");\n\n\t\t\t\t\t// Make sure that nothing sneaks out\n\t\t\t\t\topt.overflow = this.style.overflow;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( opt.overflow != null )\n\t\t\t\tthis.style.overflow = \"hidden\";\n\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tjQuery.each( prop, function(name, val){\n\t\t\t\tvar e = new jQuery.fx( self, opt, name );\n\t\t\t\tif ( val.constructor == Number )\n\t\t\t\t\te.custom( e.cur(), val );\n\t\t\t\telse\n\t\t\t\t\te[ val == \"toggle\" ? hidden ? \"show\" : \"hide\" : val ]( prop );\n\t\t\t});\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {"},{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[288,359],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = prop;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {"}]},
{"id":"845a0b913360757a1914575d9259b2ade57777ce","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[406,416],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"},{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[407,417],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"}]},
{"id":"cab33257782d953211e9a2cfb002f251326bd1f7","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[434,443],"code":"// The styles\nvar y = elem.style;\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity"},{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[443,452],"code":"// The styles\nvar y = z.el.style;\n\t\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n \n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity"}]},
{"id":"5d0c019f52415be0e581ed93073bfff407ab5e68","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[457,467],"code":"\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tjQuery.timers.push(function(){"},{"path":"./jquery-data/1.0.2/src/fx/fx.js","lines":[466,476],"code":"\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\t\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\t\n\tz.timer = setInterval(function(){"}]},
{"id":"f242648701f748b00d9bfdaf42b246a071205748","instances":[{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[486,492],"code":"z.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.show = true;"},{"path":"./jquery-data/1.1.3.1/src/fx/fx.js","lines":[507,513],"code":"z.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = jQuery.attr( elem.style, prop );\n\n\toptions.hide = true;"}]},
{"id":"7653daa01237a48afb983f558117bc0d888a2deb","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[777,781],"code":"var pass = true;\nfor ( var i = 0; i < div.size(); i++ ) {\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n}\nok( pass, \"Add Class\" );"},{"path":"./jquery-data/1.1.3.1/src/jquery/coreTest.js","lines":[787,791],"code":"\tpass = true;\nfor ( var i = 0; i < div.size(); i++ ) {\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n}\nok( pass, \"Remove Class\" );"}]},
{"id":"4079c0242f553e72d8bf5bb5c22ba714beaa3420","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1336,1341],"code":"each: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1371,1376],"code":"each: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0; i < obj.length; i++ )"}]},
{"id":"16e6da46b0fede38694602be57eeda53aa5e1c9d","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1383,1399],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1407,1423],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"}]},
{"id":"b659c04f4d44486895a79f599e01773125847f88","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1456,1464],"code":"prop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\nvar cur = document.defaultView.getComputedStyle(elem, null);\n\nif ( cur )\n\tret = cur.getPropertyValue(prop);\nelse if ( prop == \"display\" )\n\tret = \"none\";\nelse\n\tjQuery.swap(elem, { display: \"block\" }, function() {"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1476,1486],"code":"prop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\nvar cur = document.defaultView.getComputedStyle(elem, null);\n\nif ( cur )\n\tret = cur.getPropertyValue(prop);\nelse if ( prop == 'display' )\n\tret = 'none';\nelse\n\tjQuery.swap(elem, { display: 'block' }, function() {\n\t\tret = document.defaultView.getComputedStyle(this,null).getPropertyValue(prop);\n\t});"}]},
{"id":"86115d87ef92b834cc2ca000685b0e2ed8b27373","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1469,1472],"code":"} else if (elem.currentStyle) {\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n}"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1469,1472],"code":"} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];"}]},
{"id":"5d23145b5e159c88f0d8d420b9513e7c32766e03","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[1764,1771],"code":"for ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[2121,2128],"code":"for ( var i = 0; i < elems.length; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = jQuery.merge( result, val );\n\t}\n}"}]},
{"id":"5dfde0babe04bedccdf9b6f1f6ed66985e967380","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[2267,2271],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1324,1328],"code":"jQuery.each( jQuery.macros.filter, function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});"}]},
{"id":"736a3fbdcfdb278f9a67accfa93f67137477a036","instances":[{"path":"./jquery-data/1.1.3.1/src/jquery/jquery.js","lines":[2333,2339],"code":"jQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1339,1345],"code":"jQuery.each( jQuery.macros.css, function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h );\n\t};\n});"}]},
{"id":"ab67cfe6dcd0df387a58d9871e6fc3eab0a16869","instances":[{"path":"./jquery-data/1.1.3.1/src/selector/selector.js","lines":[410,441],"code":"/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * A handy, and fast, way to traverse in a particular direction and find\n * a specific element.\n *\n * @private\n * @name $.nth\n * @type DOMElement\n * @param DOMElement cur The element to search from.\n * @param String|Number num The Nth result to match. Can be a number or a string (like 'even' or 'odd').\n * @param String dir The direction to move in (pass in something like 'previousSibling' or 'nextSibling').\n * @cat DOM/Traversing\n */\nnth: function(cur,result,dir,elem){"},{"path":"./jquery-data/1.0.2/src/jquery/jquery.js","lines":[1952,1980],"code":"/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function(elem, pos, not) {"}]}]
