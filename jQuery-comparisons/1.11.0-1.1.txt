[{"id":"4ebf6afe4a85b6fd504cbb356b0b845aa6628a1e","instances":[{"path":"./jquery-data/1.11.0/src/event.js","lines":[82,90],"code":"types = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\nt = types.length;\nwhile ( t-- ) {\n\ttmp = rtypenamespace.exec( types[t] ) || [];\n\ttype = origType = tmp[1];\n\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t// There *must* be a type, no attaching namespace-only handlers\n\tif ( !type ) {"},{"path":"./jquery-data/1.11.0/src/event.js","lines":[168,176],"code":"types = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\nt = types.length;\nwhile ( t-- ) {\n\ttmp = rtypenamespace.exec( types[t] ) || [];\n\ttype = origType = tmp[1];\n\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t// Unbind all events (on this namespace, if provided) for the element\n\tif ( !type ) {"}]},
{"id":"925f8f4df2e42b0c7a23803463025651bfc288a6","instances":[{"path":"./jquery-data/1.11.0/src/manipulation.js","lines":[474,478],"code":"append: function() {\n\treturn this.domManip( arguments, function( elem ) {\n\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\ttarget.appendChild( elem );"},{"path":"./jquery-data/1.11.0/src/manipulation.js","lines":[483,487],"code":"prepend: function() {\n\treturn this.domManip( arguments, function( elem ) {\n\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\ttarget.insertBefore( elem, target.firstChild );"}]},
{"id":"3201da59170a9d6dbe739fd29088c7e3fa8db76e","instances":[{"path":"./jquery-data/1.11.0/src/support.js","lines":[22,36],"code":"jQuery(function() {\n\t// We need to execute this one support test ASAP because we need to know\n\t// if body.style.zoom needs to be set.\n\n\tvar container, div,\n\t\tbody = document.getElementsByTagName(\"body\")[0];\n\n\tif ( !body ) {\n\t\t// Return for frameset docs that don't have a body\n\t\treturn;\n\t}\n\n\t// Setup\n\tcontainer = document.createElement( \"div\" );\n\tcontainer.style.cssText = \"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\";"},{"path":"./jquery-data/1.11.0/src/css/support.js","lines":[145,155],"code":"function computeStyleTests() {\n\tvar container, div,\n\t\tbody = document.getElementsByTagName( \"body\" )[ 0 ];\n\n\tif ( !body ) {\n\t\t// Test fired too early or in an unsupported environment, exit.\n\t\treturn;\n\t}\n\n\tcontainer = document.createElement( \"div\" );\n\tdiv = document.createElement( \"div\" );"}]},
{"id":"c9df5c13bb7ee15e9f5e50d431ba293d4d7f363d","instances":[{"path":"./jquery-data/1.11.0/src/attributes/classes.js","lines":[19,30],"code":"\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t});\n}\n\nif ( proceed ) {\n\t// The disjunction here is for better compressibility (see removeClass)\n\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\tfor ( ; i < len; i++ ) {\n\t\telem = this[ i ];\n\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :"},{"path":"./jquery-data/1.11.0/src/attributes/classes.js","lines":[62,72],"code":"\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t});\n}\nif ( proceed ) {\n\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\tfor ( ; i < len; i++ ) {\n\t\telem = this[ i ];\n\t\t// This expression is here for better compressibility (see addClass)\n\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[99,108],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[127,135],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"7653daa01237a48afb983f558117bc0d888a2deb","instances":[{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[551,555],"code":"var pass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n}\r\nok( pass, \"Add Class\" );\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[561,565],"code":"\tpass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n}\r\nok( pass, \"Remove Class\" );\r"}]}]
