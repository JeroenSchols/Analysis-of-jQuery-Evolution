[{"id":"5d124fadbe97e349d7877771cc7b0b9a351cc9e4","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[1,47],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )"},{"path":"./jquery-data/1.0.3/src/ajax/ajax.js","lines":[1,70],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\")\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Hash params A set of key/value pairs that will be sent to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded.\n\t * @cat AJAX\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\")\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {test: true},\n \t *   function() { alert(\"load is done\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @test stop();\n\t * $('#first').load(\"data/name.php\", function() {\n\t * \tok( $('#first').text() == 'ERROR', 'Check if content was injected into the DOM' );\n\t * \tstart();\n\t * });\n\t *\n\t * @test stop(); // check if load can be called with only url\n\t * $('#first').load(\"data/name.php\");\n\t * $.get(\"data/name.php\", function() {\n\t *   ok( $('#first').text() == 'ERROR', 'Check if load works without callback');\n\t *   start();\n\t * });\n\t *\n\t * @test stop();\n\t * foobar = undefined;\n\t * foo = undefined;\n\t * var verifyEvaluation = function() {\n\t *   ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t *   start();\n\t * };\n\t * $('#first').load('data/test.html', function() {\n\t *   ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t *   ok( foo == \"foo\", 'Check if script was evaluated after load' );\n\t *   setTimeout(verifyEvaluation, 600);\n\t * });\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Hash params A set of key/value pairs that will be sent to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded.\n\t * @cat AJAX\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( url.constructor == Function )"}]},
{"id":"ad82441950f8237cbd33c53745f727768cd4f35a","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajax.js","lines":[757,795],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function( r ) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function( xml, url ) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function( r, type ) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it in global context\n\tif ( type == \"script\" )\n\t\tjQuery.globalEval( data );"},{"path":"./jquery-data/1.0.3/src/ajax/ajax.js","lines":[801,840],"code":"// Counter for holding the number of active queries\nactive: 0,\n\n// Determines if an XMLHttpRequest was successful or not\nhttpSuccess: function(r) {\n\ttry {\n\t\treturn !r.status && location.protocol == \"file:\" ||\n\t\t\t( r.status >= 200 && r.status < 300 ) || r.status == 304 ||\n\t\t\tjQuery.browser.safari && r.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n// Determines if an XMLHttpRequest returns NotModified\nhttpNotModified: function(xml, url) {\n\ttry {\n\t\tvar xmlRes = xml.getResponseHeader(\"Last-Modified\");\n\n\t\t// Firefox always returns 200. check Last-Modified date\n\t\treturn xml.status == 304 || xmlRes == jQuery.lastModified[url] ||\n\t\t\tjQuery.browser.safari && xml.status == undefined;\n\t} catch(e){}\n\n\treturn false;\n},\n\n/* Get the data out of an XMLHttpRequest.\n * Return parsed XML if content-type header is \"xml\" and type is \"xml\" or omitted,\n * otherwise return plain text.\n * (String) data - The type of data that you're expecting back,\n * (e.g. \"xml\", \"html\", \"script\")\n */\nhttpData: function(r,type) {\n\tvar ct = r.getResponseHeader(\"content-type\");\n\tvar data = !type && ct && ct.indexOf(\"xml\") >= 0;\n\tdata = type == \"xml\" || data ? r.responseXML : r.responseText;\n\n\t// If the type is \"script\", eval it\n\tif ( type == \"script\" ) eval.call( window, data );"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[99,108],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.1.2/src/ajax/ajaxTest.js","lines":[127,135],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"b02f3cf992859e8e3730fbba199eb7024331af8d","instances":[{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[365,434],"code":"/**\n * Toggle between two function calls every other click.\n * Whenever a matched element is clicked, the first specified function \n * is fired, when clicked again, the second is fired. All subsequent \n * clicks continue to rotate through the two functions.\n *\n * Use unbind(\"click\") to remove.\n *\n * @example $(\"p\").toggle(function(){\n *   $(this).addClass(\"selected\");\n * },function(){\n *   $(this).removeClass(\"selected\");\n * });\n * \n * @name toggle\n * @type jQuery\n * @param Function even The function to execute on every even click.\n * @param Function odd The function to execute on every odd click.\n * @cat Events\n */\ntoggle: function() {\n\t// Save reference to arguments for access in closure\n\tvar a = arguments;\n\n\treturn this.click(function(e) {\n\t\t// Figure out which function to execute\n\t\tthis.lastToggle = this.lastToggle == 0 ? 1 : 0;\n\t\t\n\t\t// Make sure that clicks stop\n\t\te.preventDefault();\n\t\t\n\t\t// and execute the function\n\t\treturn a[this.lastToggle].apply( this, [e] ) || false;\n\t});\n},\n\n/**\n * A method for simulating hovering (moving the mouse on, and off,\n * an object). This is a custom method which provides an 'in' to a \n * frequent task.\n *\n * Whenever the mouse cursor is moved over a matched \n * element, the first specified function is fired. Whenever the mouse \n * moves off of the element, the second specified function fires. \n * Additionally, checks are in place to see if the mouse is still within \n * the specified element itself (for example, an image inside of a div), \n * and if it is, it will continue to 'hover', and not move out \n * (a common error in using a mouseout event handler).\n *\n * @example $(\"p\").hover(function(){\n *   $(this).addClass(\"hover\");\n * },function(){\n *   $(this).removeClass(\"hover\");\n * });\n *\n * @name hover\n * @type jQuery\n * @param Function over The function to fire whenever the mouse is moved over a matched element.\n * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n * @cat Events\n */\nhover: function(f,g) {\n\t\n\t// A private function for handling mouse 'hovering'\n\tfunction handleHover(e) {\n\t\t// Check if mouse(over|out) are still within the same parent element\n\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\n\t\t// Traverse up the tree\n\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };"},{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[7,83],"code":"/**\n * Toggle between two function calls every other click.\n * Whenever a matched element is clicked, the first specified function \n * is fired, when clicked again, the second is fired. All subsequent \n * clicks continue to rotate through the two functions.\n *\n * @example $(\"p\").toggle(function(){\n *   $(this).addClass(\"selected\");\n * },function(){\n *   $(this).removeClass(\"selected\");\n * });\n * \n * @test var count = 0;\n * var fn1 = function() { count++; }\n * var fn2 = function() { count--; }\n * var link = $('#mark');\n * link.click().toggle(fn1, fn2).click().click().click().click().click();\n * ok( count == 1, \"Check for toggle(fn, fn)\" );\n *\n * @name toggle\n * @type jQuery\n * @param Function even The function to execute on every even click.\n * @param Function odd The function to execute on every odd click.\n * @cat Events\n */\ntoggle: function(a,b) {\n\t// If two functions are passed in, we're\n\t// toggling on a click\n\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t// Figure out which function to execute\n\t\tthis.last = this.last == a ? b : a;\n\t\t\n\t\t// Make sure that clicks stop\n\t\te.preventDefault();\n\t\t\n\t\t// and execute the function\n\t\treturn this.last.apply( this, [e] ) || false;\n\t}) :\n\t\n\t// Otherwise, execute the old toggle function\n\tthis._toggle.apply( this, arguments );\n},\n\n/**\n * A method for simulating hovering (moving the mouse on, and off,\n * an object). This is a custom method which provides an 'in' to a \n * frequent task.\n *\n * Whenever the mouse cursor is moved over a matched \n * element, the first specified function is fired. Whenever the mouse \n * moves off of the element, the second specified function fires. \n * Additionally, checks are in place to see if the mouse is still within \n * the specified element itself (for example, an image inside of a div), \n * and if it is, it will continue to 'hover', and not move out \n * (a common error in using a mouseout event handler).\n *\n * @example $(\"p\").hover(function(){\n *   $(this).addClass(\"over\");\n * },function(){\n *   $(this).addClass(\"out\");\n * });\n *\n * @name hover\n * @type jQuery\n * @param Function over The function to fire whenever the mouse is moved over a matched element.\n * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n * @cat Events\n */\nhover: function(f,g) {\n\t\n\t// A private function for haandling mouse 'hovering'\n\tfunction handleHover(e) {\n\t\t// Check if mouse(over|out) are still within the same parent element\n\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\n\t\t// Traverse up the tree\n\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };"}]},
{"id":"796dd6ab48ed59bebda61a83d0fd5842d6d817d3","instances":[{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[447,515],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is when what 99.99% of all JavaScript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risk of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the [[Core#.24.28_fn_.29|shortcut]] for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"},{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[96,150],"code":"\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {"}]},
{"id":"34f1c7a3c285e3ac9a4d0d043f43f7fee8fc74be","instances":[{"path":"./jquery-data/1.1.2/src/event/event.js","lines":[914,935],"code":"\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {"},{"path":"./jquery-data/1.0.3/src/event/event.js","lines":[1636,1657],"code":"\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10);\n\t} \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie) jQuery(window).unload(function() {"}]},
{"id":"7ffee692150031588ae956879840d6d059b3fcae","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[42,46],"code":"hidden.each(function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n});"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[3212,3216],"code":"show: function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n},"}]},
{"id":"44cfc744fc1649df885b9aca844e0a62c955c33b","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[89,94],"code":"visible.each(function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n});"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[3235,3240],"code":"hide: function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n},"}]},
{"id":"e2bc57940a97b0fc131e66dc6ca2aa3381fb654f","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[149,200],"code":"/**\n * Hide all matched elements by adjusting their height and firing an\n * optional callback after completion.\n *\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideUp(\"slow\");\n *\n * @example $(\"p\").slideUp(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideUp\n * @type jQuery\n * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback (optional) A function to be executed whenever the animation completes.\n * @cat Effects\n * @see slideDown(String|Number,Function)\n * @see slideToggle(String|Number,Function)\n */\nslideUp: function(speed,callback){\n\treturn this.animate({height: \"hide\"}, speed, callback);\n},\n\n/**\n * Toggle the visibility of all matched elements by adjusting their height and firing an\n * optional callback after completion.\n *\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideToggle(\"slow\");\n *\n * @example $(\"p\").slideToggle(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideToggle\n * @type jQuery\n * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback (optional) A function to be executed whenever the animation completes.\n * @cat Effects\n * @see slideDown(String|Number,Function)\n * @see slideUp(String|Number,Function)\n */\nslideToggle: function(speed, callback){\n\treturn this.each(function(){\n\t\tvar state = jQuery(this).is(\":hidden\") ? \"show\" : \"hide\";\n\t\tjQuery(this).animate({height: state}, speed, callback);\n\t});\n},"},{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[125,179],"code":"/**\n * Hide all matched elements by adjusting their height and firing a callback\n * function after completion.\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideUp(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideUp\n * @type jQuery\n * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback A function to be executed whenever the animation completes.\n * @cat Effects/Animations\n */\nslideUp: function(speed,callback){\n\treturn this.animate({height: \"hide\"}, speed, callback);\n},\n\n/**\n * Toggle the visibility of all matched elements by adjusting their height.\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideToggle(\"slow\");\n *\n * @name slideToggle\n * @type jQuery\n * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @cat Effects/Animations\n */\n \n/**\n * Toggle the visibility of all matched elements by adjusting their height\n * and firing a callback function after completion.\n * Only the height is adjusted for this animation, causing all matched\n * elements to be hidden in a \"sliding\" manner.\n *\n * @example $(\"p\").slideToggle(\"slow\",function(){\n *   alert(\"Animation Done.\");\n * });\n *\n * @name slideToggle\n * @type jQuery\n * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n * @param Function callback A function to be executed whenever the animation completes.\n * @cat Effects/Animations\n */\nslideToggle: function(speed,callback){\n\treturn this.each(function(){\n\t\tvar state = jQuery(this).is(\":hidden\") ? \"show\" : \"hide\";\n\t\tjQuery(this).animate({height: state}, speed, callback);\n\t});\n},"}]},
{"id":"f6ae7fdc7773dc6127da44bf2bffa8a348be57ec","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[281,362],"code":"\t/**\n\t * A function for making your own, custom animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * Note that properties should be specified using camel case\n\t * eg. marginLeft instead of margin-left.\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Otherwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @example $(\"p\").animate({\n\t *   opacity: 'show'\n\t * }, \"slow\", \"easein\");\n\t * @desc An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only 'linear' is provided by default, with jQuery).\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param String easing (optional) The name of the easing effect that you want to use (Plugin Required).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t */\n\tanimate: function( prop, speed, easing, callback ) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\tvar opt = jQuery.speed(speed, easing, callback);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, opt, p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(speed, easing, fn) {"},{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[288,367],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @test stop();\n\t * var hash = {opacity: 'show'};\n\t * var hashCopy = $.extend({}, hash);\n\t * $('#foo').animate(hash, 'fast', function() {\n\t *  ok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t *  start();\n\t * });\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {"}]},
{"id":"845a0b913360757a1914575d9259b2ade57777ce","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[387,397],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"},{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[415,425],"code":"queue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"}]},
{"id":"efa1678b1f4cfb132fb335397d45987b5fc7dfab","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[422,433],"code":"// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\n\ty.display = \"block\"; // Set display property to block for animation\n};"},{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[454,467],"code":"// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n \n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\n\ty.display = \"block\";\n};\n\t\n// Figure out the maximum number to run to"}]},
{"id":"b0c1e376aaddb42fcdcd5d65fa61ce3b4a41fe49","instances":[{"path":"./jquery-data/1.1.2/src/fx/fx.js","lines":[442,459],"code":"\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};"},{"path":"./jquery-data/1.0.3/src/fx/fx.js","lines":[474,491],"code":"\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\t\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\t\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\t\n// Simple 'show' function\nz.show = function(){\n\tif ( !z.el.orig ) z.el.orig = {};"}]},
{"id":"7653daa01237a48afb983f558117bc0d888a2deb","instances":[{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[584,588],"code":"var pass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n}\r\nok( pass, \"Add Class\" );\r"},{"path":"./jquery-data/1.1.2/src/jquery/coreTest.js","lines":[594,598],"code":"\tpass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n}\r\nok( pass, \"Remove Class\" );\r"}]},
{"id":"48e8c48b6ecbdc479e329a4731c04bd2f8b4faa9","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[533,629],"code":"/**\n * Set the text contents of all matched elements.\n *\n * Similar to html(), but escapes HTML (replace \"<\" and \">\" with their\n * HTML entities).\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\");\n * @before <p>Test Paragraph.</p>\n * @result <p>&lt;b&gt;Some&lt;/b&gt; new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @example $(\"p\").text(\"<b>Some</b> new text.\", true);\n * @before <p>Test Paragraph.</p>\n * @result <p>Some new text.</p>\n * @desc Sets the text of all paragraphs.\n *\n * @name text\n * @type String\n * @param String val The text value to set the contents of the element to.\n * @cat DOM/Attributes\n */\ntext: function(e) {\n\tif ( typeof e == \"string\" )\n\t\treturn this.empty().append( document.createTextNode( e ) );\n\n\tvar t = \"\";\n\tjQuery.each( e || this, function(){\n\t\tjQuery.each( this.childNodes, function(){\n\t\t\tif ( this.nodeType != 8 )\n\t\t\t\tt += this.nodeType != 1 ?\n\t\t\t\t\tthis.nodeValue : jQuery.fn.text([ this ]);\n\t\t});\n\t});\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a = jQuery.clean(arguments);\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[589,688],"code":"/**\n * Retrieve the text contents of all matched elements. The result is\n * a string that contains the combined text contents of all matched\n * elements. This method works on both HTML and XML documents.\n *\n * @example $(\"p\").text();\n * @before <p>Test Paragraph.</p>\n * @result Test Paragraph.\n *\n * @test var expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n * ok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\n *\n * @name text\n * @type String\n * @cat DOM\n */\ntext: function(e) {\n\te = e || this;\n\tvar t = \"\";\n\tfor ( var j = 0; j < e.length; j++ ) {\n\t\tvar r = e[j].childNodes;\n\t\tfor ( var i = 0; i < r.length; i++ )\n\t\t\tif ( r[i].nodeType != 8 )\n\t\t\t\tt += r[i].nodeType != 1 ?\n\t\t\t\t\tr[i].nodeValue : jQuery.fn.text([ r[i] ]);\n\t}\n\treturn t;\n},\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @test var defaultText = 'Try them out:'\n * var result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\n * ok( defaultText == result, 'Check for wrapping of on-the-fly html' );\n * ok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\n *\n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @test var defaultText = 'Try them out:'\n * var result = $('#first').wrap(document.getElementById('empty')).parent();\n * ok( result.is('ol'), 'Check for element wrapping' );\n * ok( result.text() == defaultText, 'Check for element wrapping' );\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a = jQuery.clean(arguments);\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;"}]},
{"id":"4079c0242f553e72d8bf5bb5c22ba714beaa3420","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1303,1308],"code":"each: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1418,1423],"code":"each: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0; i < obj.length; i++ )"}]},
{"id":"16e6da46b0fede38694602be57eeda53aa5e1c9d","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1353,1369],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1454,1470],"code":"/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"}]},
{"id":"6380e3bd9b3ec11fd1e6fb8534ae8a58f72a34f5","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1373,1416],"code":"\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))\n\t\t\t\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t\t\t\t.css({\n\t\t\t\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t\t\t\t}).appendTo(e.parentNode)[0];\n\n\t\t\t\tvar parPos = jQuery.css(e.parentNode,\"position\");\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"relative\";\n\n\t\t\t\toHeight = e.clientHeight;\n\t\t\t\toWidth = e.clientWidth;\n\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"static\";\n\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p == \"height\" ? oHeight : oWidth;\n\t}\n\n\treturn jQuery.curCSS( e, p );\n},\n\ncurCSS: function(elem, prop, force) {\n\tvar ret;\n\t\n\tif (prop == \"opacity\" && jQuery.browser.msie)\n\t\treturn jQuery.attr(elem.style, \"opacity\");\n\t\t\n\tif (prop == \"float\" || prop == \"cssFloat\")\n\t    prop = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\";\n\n\tif (!force && elem.style[prop])"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1474,1517],"code":"\t\t\told[\"border\" + d[i] + \"Width\"] = 0;\n\t\t}\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))\n\t\t\t\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t\t\t\t.css({\n\t\t\t\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t\t\t\t}).appendTo(e.parentNode)[0];\n\n\t\t\t\tvar parPos = jQuery.css(e.parentNode,\"position\");\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"relative\";\n\n\t\t\t\toHeight = e.clientHeight;\n\t\t\t\toWidth = e.clientWidth;\n\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"static\";\n\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p == \"height\" ? oHeight : oWidth;\n\t}\n\n\treturn jQuery.curCSS( e, p );\n},\n\ncurCSS: function(elem, prop, force) {\n\tvar ret;\n\t\n\tif (prop == 'opacity' && jQuery.browser.msie)\n\t\treturn jQuery.attr(elem.style, 'opacity');\n\t\t\n\tif (prop == \"float\" || prop == \"cssFloat\")\n\t    prop = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\";\n\n\tif (!force && elem.style[prop]) {"}]},
{"id":"63dd1a29b09644f5728526d0c9c1a72bfcce7b7c","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1419,1432],"code":"else if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\tif (prop == \"cssFloat\" || prop == \"styleFloat\")\n\t\tprop = \"float\";\n\n\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\tif ( cur )\n\t\tret = cur.getPropertyValue(prop);\n\telse if ( prop == \"display\" )\n\t\tret = \"none\";\n\telse\n\t\tjQuery.swap(elem, { display: \"block\" }, function() {"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1526,1539],"code":"} else if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\tif (prop == \"cssFloat\" || prop == \"styleFloat\")\n\t\tprop = \"float\";\n\n\tprop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\n\tvar cur = document.defaultView.getComputedStyle(elem, null);\n\n\tif ( cur )\n\t\tret = cur.getPropertyValue(prop);\n\telse if ( prop == 'display' )\n\t\tret = 'none';\n\telse\n\t\tjQuery.swap(elem, { display: 'block' }, function() {"}]},
{"id":"86115d87ef92b834cc2ca000685b0e2ed8b27373","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1437,1442],"code":"} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\n\t\n}"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1521,1524],"code":"} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];"}]},
{"id":"4d7bb6faf6318cd919768ea1de6cf7f38238193b","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1519,1531],"code":"var fix = jQuery.isXMLDoc(elem) ? {} : {\n\t\"for\": \"htmlFor\",\n\t\"class\": \"className\",\n\t\"float\": jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\tcssFloat: jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\tinnerHTML: \"innerHTML\",\n\tclassName: \"className\",\n\tvalue: \"value\",\n\tdisabled: \"disabled\",\n\tchecked: \"checked\",\n\treadonly: \"readOnly\",\n\tselected: \"selected\"\n};"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1875,1886],"code":"var fix = {\n\t\"for\": \"htmlFor\",\n\t\"class\": \"className\",\n\t\"float\": jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\tcssFloat: jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\tinnerHTML: \"innerHTML\",\n\tclassName: \"className\",\n\tvalue: \"value\",\n\tdisabled: \"disabled\",\n\tchecked: \"checked\",\n\treadonly: \"readOnly\"\n};"}]},
{"id":"ee2c686f9c2335d7946e40ad59c87bd5a536612d","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1565,1588],"code":"\t\treturn elem.getAttribute( name );\n\n\t// elem is actually elem.style ... set the style\n\t} else {\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @example $.trim(\"  hello, how are you?  \");\n * @result \"hello, how are you?\"\n *\n * @name $.trim\n * @type String\n * @param String str The string to trim.\n * @cat JavaScript\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1911,1920],"code":"\t\treturn elem.getAttribute( name );\n\t} else {\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n// The regular expressions that power the parsing engine\nparse: ["}]},
{"id":"5d23145b5e159c88f0d8d420b9513e7c32766e03","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1728,1735],"code":"for ( var i = 0, el = elems.length; i < el; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = result.concat( val );\n\t}\n}"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[2174,2181],"code":"for ( var i = 0; i < elems.length; i++ ) {\n\tvar val = fn(elems[i],i);\n\n\tif ( val !== null && val != undefined ) {\n\t\tif ( val.constructor != Array ) val = [val];\n\t\tresult = jQuery.merge( result, val );\n\t}\n}"}]},
{"id":"19d8f5fc2a3aa033d6655d23da431c3fd731e706","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[1751,1796],"code":"/**\n * Contains flags for the useragent, read from navigator.userAgent.\n * Available flags are: safari, opera, msie, mozilla\n *\n * This property is available before the DOM is ready, therefore you can\n * use it to add ready events only for certain browsers.\n *\n * There are situations where object detections is not reliable enough, in that\n * cases it makes sense to use browser detection. Simply try to avoid both!\n *\n * A combination of browser and object detection yields quite reliable results.\n *\n * @example $.browser.msie\n * @desc Returns true if the current useragent is some version of microsoft's internet explorer\n *\n * @example if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }\n * @desc Alerts \"this is safari!\" only for safari browsers\n *\n * @property\n * @name $.browser\n * @type Boolean\n * @cat JavaScript\n */\n \n/*\n * Whether the W3C compliant box model is being used.\n *\n * @property\n * @name $.boxModel\n * @type Boolean\n * @cat JavaScript\n */\nnew function() {\n\tvar b = navigator.userAgent.toLowerCase();\n\n\t// Figure out what browser is being used\n\tjQuery.browser = {\n\t\tsafari: /webkit/.test(b),\n\t\topera: /opera/.test(b),\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\n\t};\n\n\t// Check to see if the W3C box model is being used\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\n};"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[2186,2356],"code":"\t/*\n\t * A number of helper functions used for managing events.\n\t * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n\t */\n\tevent: {\n\n\t\t// Bind an event to an element\n\t\t// Original by Dean Edwards\n\t\tadd: function(element, type, handler) {\n\t\t\t// For whatever reason, IE has trouble passing the window object\n\t\t\t// around, causing it to be cloned in the process\n\t\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\t\telement = window;\n\n\t\t\t// Make sure that the function being executed has a unique ID\n\t\t\tif ( !handler.guid )\n\t\t\t\thandler.guid = this.guid++;\n\n\t\t\t// Init the element's event structure\n\t\t\tif (!element.events)\n\t\t\t\telement.events = {};\n\n\t\t\t// Get the current list of functions bound to this event\n\t\t\tvar handlers = element.events[type];\n\n\t\t\t// If it hasn't been initialized yet\n\t\t\tif (!handlers) {\n\t\t\t\t// Init the event handler queue\n\t\t\t\thandlers = element.events[type] = {};\n\n\t\t\t\t// Remember an existing handler, if it's already there\n\t\t\t\tif (element[\"on\" + type])\n\t\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t\t}\n\n\t\t\t// Add the function to the element's handler list\n\t\t\thandlers[handler.guid] = handler;\n\n\t\t\t// And bind the global event handler to the element\n\t\t\telement[\"on\" + type] = this.handle;\n\n\t\t\t// Remember the function in a global list (for triggering)\n\t\t\tif (!this.global[type])\n\t\t\t\tthis.global[type] = [];\n\t\t\tthis.global[type].push( element );\n\t\t},\n\n\t\tguid: 1,\n\t\tglobal: {},\n\n\t\t// Detach an event or set of events from an element\n\t\tremove: function(element, type, handler) {\n\t\t\tif (element.events)\n\t\t\t\tif (type && element.events[type])\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\t\telse\n\t\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\t\tthis.remove( element, j );\n\t\t},\n\n\t\ttrigger: function(type,data,element) {\n\t\t\t// Touch up the incoming data\n\t\t\tdata = data || [];\n\n\t\t\t// Handle a global trigger\n\t\t\tif ( !element ) {\n\t\t\t\tvar g = this.global[type];\n\t\t\t\tif ( g )\n\t\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\t\tthis.trigger( type, data, g[i] );\n\n\t\t\t// Handle triggering a single element\n\t\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t\t// Pass along a fake event\n\t\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\n\t\t\t\t// Trigger the event\n\t\t\t\telement[\"on\" + type].apply( element, data );\n\t\t\t}\n\t\t},\n\n\t\thandle: function(event) {\n\t\t\tif ( typeof jQuery == \"undefined\" ) return false;\n\n\t\t\tevent = event || jQuery.event.fix( window.event );\n\n\t\t\t// If no correct event was found, fail\n\t\t\tif ( !event ) return false;\n\n\t\t\tvar returnValue = true;\n\n\t\t\tvar c = this.events[event.type];\n\n\t\t\tvar args = [].slice.call( arguments, 1 );\n\t\t\targs.unshift( event );\n"}]},
{"id":"5dfde0babe04bedccdf9b6f1f6ed66985e967380","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[2222,2226],"code":"jQuery.each( [ \"eq\", \"lt\", \"gt\", \"contains\" ], function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1371,1375],"code":"jQuery.each( jQuery.macros.filter, function(i,n){\n\tjQuery.fn[ n ] = function(num,fn) {\n\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t};\n});"}]},
{"id":"736a3fbdcfdb278f9a67accfa93f67137477a036","instances":[{"path":"./jquery-data/1.1.2/src/jquery/jquery.js","lines":[2288,2294],"code":"jQuery.each( [ \"height\", \"width\" ], function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h.constructor == String ? h : h + \"px\" );\n\t};\n});"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1386,1392],"code":"jQuery.each( jQuery.macros.css, function(i,n){\n\tjQuery.fn[ n ] = function(h) {\n\t\treturn h == undefined ?\n\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\tthis.css( n, h );\n\t};\n});"}]},
{"id":"f0389d14f74c66c5d628944f232dceda5eecc391","instances":[{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[5,17],"code":"\":\": {\n\t// Position Checks\n\tlt: \"i<m[3]-0\",\n\tgt: \"i>m[3]-0\",\n\tnth: \"m[3]-0==i\",\n\teq: \"m[3]-0==i\",\n\tfirst: \"i==0\",\n\tlast: \"i==r.length-1\",\n\teven: \"i%2==0\",\n\todd: \"i%2\",\n\n\t// Child Checks\n\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\","},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[1587,1599],"code":"\":\": {\n\t// Position Checks\n\tlt: \"i<m[3]-0\",\n\tgt: \"i>m[3]-0\",\n\tnth: \"m[3]-0==i\",\n\teq: \"m[3]-0==i\",\n\tfirst: \"i==0\",\n\tlast: \"i==r.length-1\",\n\teven: \"i%2==0\",\n\todd: \"i%2\",\n\n\t// Child Checks\n\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\","}]},
{"id":"ab67cfe6dcd0df387a58d9871e6fc3eab0a16869","instances":[{"path":"./jquery-data/1.1.2/src/selector/selector.js","lines":[387,418],"code":"/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * A handy, and fast, way to traverse in a particular direction and find\n * a specific element.\n *\n * @private\n * @name $.nth\n * @type DOMElement\n * @param DOMElement cur The element to search from.\n * @param String|Number num The Nth result to match. Can be a number or a string (like 'even' or 'odd').\n * @param String dir The direction to move in (pass in something like 'previousSibling' or 'nextSibling').\n * @cat DOM/Traversing\n */\nnth: function(cur,result,dir,elem){"},{"path":"./jquery-data/1.0.3/src/jquery/jquery.js","lines":[2005,2033],"code":"/**\n * All ancestors of a given element.\n *\n * @private\n * @name $.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n * @cat DOM/Traversing\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name $.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n * @cat DOM/Traversing\n */\nsibling: function(elem, pos, not) {"}]}]
