[{"id":"311426f84e1137744c6d0073d380517d8c29e2fb","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[95,664],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[89,658],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"}]},
{"id":"311426f84e1137744c6d0073d380517d8c29e2fb","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[95,664],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[89,658],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"}]},
{"id":"311426f84e1137744c6d0073d380517d8c29e2fb","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[95,664],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[89,658],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"}]},
{"id":"311426f84e1137744c6d0073d380517d8c29e2fb","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[95,664],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[89,658],"code":"test(\"attr(Hash)\", function() {\r\n\texpect(1);\r\n\tvar pass = true;\r\n\t$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\r\n\t  if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\r\n\t});\r\n\tok( pass, \"Set Multiple Attributes\" );\r\n});\r\n\r\ntest(\"attr(String, Object)\", function() {\r\n\texpect(6);\r\n\tvar div = $(\"div\");\r\n\tdiv.attr(\"foo\", \"bar\");\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Set Attribute\" );\r\n\t\r\n\t$(\"#name\").attr('name', 'something');\r\n\tok( $(\"#name\").attr('name') == 'something', 'Set name attribute' );\r\n\t$(\"#check2\").attr('checked', true);\r\n\tok( document.getElementById('check2').checked == true, 'Set checked attribute' );\r\n\t$(\"#check2\").attr('checked', false);\r\n\tok( document.getElementById('check2').checked == false, 'Set checked attribute' );\r\n\t$(\"#text1\").attr('readonly', true);\r\n\tok( document.getElementById('text1').readOnly == true, 'Set readonly attribute' );\r\n\t$(\"#text1\").attr('readonly', false);\r\n\tok( document.getElementById('text1').readOnly == false, 'Set readonly attribute' );\r\n});\r\n\r\nif ( location.protocol != \"file:\" ) {\r\n\ttest(\"attr(String, Object)x\", function() {\r\n\t\texpect(2);\r\n\t\tstop();\r\n\t\t$.get('data/dashboard.xml', function(xml) { \r\n\t  \tvar titles = [];\r\n\t  \t$('tab', xml).each(function() {\r\n\t    \ttitles.push($(this).attr('title'));\r\n\t  \t});\r\n\t  \tok( titles[0] == 'Location', 'attr() in XML context: Check first title' );\r\n\t  \tok( titles[1] == 'Users', 'attr() in XML context: Check second title' );\r\n\t  \tstart();\r\n\t\t});\r\n\t});\r\n}\r\n\r\ntest(\"css(String|Hash)\", function() {\r\n\texpect(8);\r\n\t\r\n\tok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');\r\n\t\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css({display: 'none'});\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css({display: 'block'});\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css({styleFloat: 'right'});\r\n\tok( $('#floatTest').css('styleFloat') == 'right', 'Modified CSS float using \"styleFloat\": Assert float is right');\r\n\t$('#floatTest').css({cssFloat: 'left'});\r\n\tok( $('#floatTest').css('cssFloat') == 'left', 'Modified CSS float using \"cssFloat\": Assert float is left');\r\n\t$('#floatTest').css({'float': 'right'});\r\n\tok( $('#floatTest').css('float') == 'right', 'Modified CSS float using \"float\": Assert float is right');\r\n\t$('#floatTest').css({'font-size': '30px'});\r\n\tok( $('#floatTest').css('font-size') == '30px', 'Modified CSS font-size: Assert font-size is 30px');\r\n});\r\n\r\ntest(\"css(String, Object)\", function() {\r\n\texpect(7);\r\n\tok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\r\n\t$('#foo').css('display', 'none');\r\n\tok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\r\n\t$('#foo').css('display', 'block');\r\n\tok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');\r\n\t\r\n\t$('#floatTest').css('styleFloat', 'left');\r\n\tok( $('#floatTest').css('styleFloat') == 'left', 'Modified CSS float using \"styleFloat\": Assert float is left');\r\n\t$('#floatTest').css('cssFloat', 'right');\r\n\tok( $('#floatTest').css('cssFloat') == 'right', 'Modified CSS float using \"cssFloat\": Assert float is right');\r\n\t$('#floatTest').css('float', 'left');\r\n\tok( $('#floatTest').css('float') == 'left', 'Modified CSS float using \"float\": Assert float is left');\r\n\t$('#floatTest').css('font-size', '20px');\r\n\tok( $('#floatTest').css('font-size') == '20px', 'Modified CSS font-size: Assert font-size is 20px');\r\n});\r\n\r\ntest(\"text()\", function() {\r\n\tvar expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\r\n\tok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );\r\n});\r\n\r\ntest(\"wrap(String|Element)\", function() {\r\n\texpect(4);\r\n\tvar defaultText = 'Try them out:'\r\n\tvar result = $('#first').wrap('<div class=\"red\"><span></span></div>').text();\r\n\tok( defaultText == result, 'Check for wrapping of on-the-fly html' );\r\n\tok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );\r\n\r\n\treset();\r\n\tvar defaultText = 'Try them out:'\r"}]},
{"id":"62ce5e110055d3f9941223c03dc7ed8f84bbe29e","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\twindow.foobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\tfoobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"}]},
{"id":"62ce5e110055d3f9941223c03dc7ed8f84bbe29e","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\twindow.foobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\tfoobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"}]},
{"id":"62ce5e110055d3f9941223c03dc7ed8f84bbe29e","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\twindow.foobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[74,380],"code":"\tfoobar = null;\n\tvar verifyEvaluation = function() {\n\t  ok( foobar == \"bar\", 'Check if script src was evaluated after load' );\n\t  ok( $('#ap').html() == 'bar', 'Check if script evaluation has modified DOM');\n\t  start();\n\t};\n\t$('#first').load(url('data/test.php'), function() {\n\t  ok( $('#first').html().match(/^html text/), 'Check content after loading html' );\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  setTimeout(verifyEvaluation, 600);\n\t});\n});\n\ntest(\"load(String, Object, Function) - check file with only a script tag\", function() {\n\texpect(3);\n\tstop();\n\ttestFoo = undefined;\n\t$('#first').load(url('data/test2.php'), function() {\n\t  ok( $('#foo').html() == 'foo', 'Check if script evaluation has modified DOM');\n\t  ok( testFoo == \"foo\", 'Check if script was evaluated after load' );\n\t  start();\n\t});\n});\n\ntest(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t// start with successful test\n\t$.ajax({url: url(\"data/name.php\"), beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check succesful request' );\n\t  ok( counter.success == 2, 'Check succesful request' );\n\t  ok( counter.complete == 3, 'Check succesful request' );\n\t  ok( counter.send == 2, 'Check succesful request' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), beforeSend: send, success: success, error: error, complete: function() {\n\t    ok( counter.error == 2, 'Check failed request' );\n\t    ok( counter.success == 0, 'Check failed request' );\n\t    ok( counter.complete == 3, 'Check failed request' );\n\t    ok( counter.send == 2, 'Check failed request' );\n\t    start();\n\t  }});\n\t}});\n});\n\ntest(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n\t$.ajax({url: url(\"data/name.php\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  ok( counter.error == 0, 'Check sucesful request without globals' );\n\t  ok( counter.success == 1, 'Check sucesful request without globals' );\n\t  ok( counter.complete == 0, 'Check sucesful request without globals' );\n\t  ok( counter.send == 1, 'Check sucesful request without globals' );\n\t  counter.error = counter.success = counter.complete = counter.send = 0;\n\t  $.ajaxTimeout(500);\n\t  $.ajax({url: url(\"data/name.php?wait=5\"), global: false, beforeSend: send, success: success, error: error, complete: function() {\n\t  \t var x = counter;\n\t     ok( counter.error == 1, 'Check failed request without globals' );\n\t     ok( counter.success == 0, 'Check failed request without globals' );\n\t     ok( counter.complete == 0, 'Check failed request without globals' );\n\t     ok( counter.send == 1, 'Check failed request without globals' );\n\t     start();\n\t  }});\n\t}});\n});\n\ntest(\"$.get(String, Hash, Function) - parse xml and use text() on nodes\", function() {\n\texpect(2);\n\tstop();\n\t$.get(url('data/dashboard.xml'), function(xml) {\n\t\tvar content = [];\n\t\t$('tab', xml).each(function() {\n\t\t\tcontent.push($(this).text());\n\t\t});\n\t\tok( content[0] == 'blabla', 'Check first tab');\n\t\tok( content[1] == 'blublu', 'Check second tab');\n\t\tstart();\n\t});\n});\n\ntest(\"$.getIfModified(String, Hash, Function)\", function() {\n\texpect(1);\n\tstop();\n\t$.getIfModified(url(\"data/name.php\"), function(msg) {\n\t    ok( /^ERROR/.test(msg), 'Check ifModified' );"}]},
{"id":"2cafcd1a3ac3319aac2c10e1bcb3f14734890f80","instances":[{"path":"./jquery-data/1.1.1/src/fx/fx.js","lines":[413,557],"code":"// Store display property\nvar oldDisplay = jQuery.css(elem, \"display\");\n\n// Set display property to block for animation\ny.display = \"block\";\n\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n};\n\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, elem.orig[prop]);\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(elem.orig[prop], 0);\n};\n\n//Simple 'toggle' function\nz.toggle = function() {\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\tif(oldDisplay == \"none\")  {\n\t\toptions.show = true;\n\t\t\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\n\t\t// Begin the animation\n\t\tz.custom(0, elem.orig[prop]);\t\n\t} else {\n\t\toptions.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(elem.orig[prop], 0);\n\t}\t\t\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[411,555],"code":"// Store display property\nvar oldDisplay = jQuery.css(elem, \"display\");\n\n// Set display property to block for animation\ny.display = \"block\";\n\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n};\n\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, elem.orig[prop]);\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(elem.orig[prop], 0);\n};\n\n//Simple 'toggle' function\nz.toggle = function() {\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\tif(oldDisplay == \"none\")  {\n\t\toptions.show = true;\n\t\t\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\n\t\t// Begin the animation\n\t\tz.custom(0, elem.orig[prop]);\t\n\t} else {\n\t\toptions.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(elem.orig[prop], 0);\n\t}\t\t\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n"}]},
{"id":"2cafcd1a3ac3319aac2c10e1bcb3f14734890f80","instances":[{"path":"./jquery-data/1.1.1/src/fx/fx.js","lines":[413,557],"code":"// Store display property\nvar oldDisplay = jQuery.css(elem, \"display\");\n\n// Set display property to block for animation\ny.display = \"block\";\n\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n};\n\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, elem.orig[prop]);\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(elem.orig[prop], 0);\n};\n\n//Simple 'toggle' function\nz.toggle = function() {\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\tif(oldDisplay == \"none\")  {\n\t\toptions.show = true;\n\t\t\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\n\t\t// Begin the animation\n\t\tz.custom(0, elem.orig[prop]);\t\n\t} else {\n\t\toptions.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(elem.orig[prop], 0);\n\t}\t\t\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[411,555],"code":"// Store display property\nvar oldDisplay = jQuery.css(elem, \"display\");\n\n// Set display property to block for animation\ny.display = \"block\";\n\n// Make sure that nothing sneaks out\ny.overflow = \"hidden\";\n\n// Simple function for setting a style value\nz.a = function(){\n\tif ( options.step )\n\t\toptions.step.apply( elem, [ z.now ] );\n\n\tif ( prop == \"opacity\" )\n\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\ty[prop] = parseInt(z.now) + \"px\";\n};\n\n// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(elem,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\n// Simple 'show' function\nz.show = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.show = true;\n\n\t// Begin the animation\n\tz.custom(0, elem.orig[prop]);\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\toptions.hide = true;\n\n\t// Begin the animation\n\tz.custom(elem.orig[prop], 0);\n};\n\n//Simple 'toggle' function\nz.toggle = function() {\n\tif ( !elem.orig ) elem.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\telem.orig[prop] = this.cur();\n\n\tif(oldDisplay == \"none\")  {\n\t\toptions.show = true;\n\t\t\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\n\t\t// Begin the animation\n\t\tz.custom(0, elem.orig[prop]);\t\n\t} else {\n\t\toptions.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(elem.orig[prop], 0);\n\t}\t\t\n};\n\n// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n"}]},
{"id":"cef67d2de81f987b9ddfd2c1c83ae60e2364f38b","instances":[{"path":"./jquery-data/1.1.1/src/selector/selectorTest.js","lines":[1,142],"code":"module(\"selector\");\r\n\r\ntest(\"expressions - element\", function() {\r\n\texpect(6);\r\n\tok( $(\"*\").size() >= 30, \"Select all\" );\r\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\r\n\tt( \"Element Selector\", \"body\", [\"body\"] );\r\n\tt( \"Element Selector\", \"html\", [\"html\"] );\r\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\r\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\r\n});\r\n\r\ntest(\"expressions - id\", function() {\r\n\texpect(8);\r\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\r\n\t\r\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\r\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\r\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\r\n\t\r\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"]  );\r\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", []  );\r\n});\r\n\r\n\r\ntest(\"expressions - class\", function() {\r\n\texpect(4);\r\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\r\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\r\n});\r\n\r\ntest(\"expressions - multiple\", function() {\r\n\texpect(4);\r\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r\n\texpect(14);\r\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\r\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r\n\texpect(19);\r\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\r\n\t\r\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\r\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\r\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\r\n\t\r\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\r\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\r\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\r\n\t\r\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\r\n\t\r\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\r\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\r\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\r\n});\r\n\r\ntest(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r\n\tt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\r\n\tt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\r\n\tt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\r\n\tt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\r"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[1,142],"code":"module(\"selector\");\r\n\r\ntest(\"expressions - element\", function() {\r\n\texpect(6);\r\n\tok( $(\"*\").size() >= 30, \"Select all\" );\r\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\r\n\tt( \"Element Selector\", \"body\", [\"body\"] );\r\n\tt( \"Element Selector\", \"html\", [\"html\"] );\r\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\r\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\r\n});\r\n\r\ntest(\"expressions - id\", function() {\r\n\texpect(8);\r\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\r\n\t\r\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\r\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\r\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\r\n\t\r\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"]  );\r\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", []  );\r\n});\r\n\r\n\r\ntest(\"expressions - class\", function() {\r\n\texpect(4);\r\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\r\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\r\n});\r\n\r\ntest(\"expressions - multiple\", function() {\r\n\texpect(4);\r\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r\n\texpect(14);\r\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\r\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r\n\texpect(19);\r\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\r\n\t\r\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\r\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\r\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\r\n\t\r\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\r\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\r\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\r\n\t\r\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\r\n\t\r\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\r\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\r\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\r\n});\r\n\r\ntest(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r\n\tt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\r\n\tt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\r\n\tt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\r\n\tt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\r"}]},
{"id":"cef67d2de81f987b9ddfd2c1c83ae60e2364f38b","instances":[{"path":"./jquery-data/1.1.1/src/selector/selectorTest.js","lines":[1,142],"code":"module(\"selector\");\r\n\r\ntest(\"expressions - element\", function() {\r\n\texpect(6);\r\n\tok( $(\"*\").size() >= 30, \"Select all\" );\r\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\r\n\tt( \"Element Selector\", \"body\", [\"body\"] );\r\n\tt( \"Element Selector\", \"html\", [\"html\"] );\r\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\r\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\r\n});\r\n\r\ntest(\"expressions - id\", function() {\r\n\texpect(8);\r\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\r\n\t\r\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\r\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\r\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\r\n\t\r\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"]  );\r\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", []  );\r\n});\r\n\r\n\r\ntest(\"expressions - class\", function() {\r\n\texpect(4);\r\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\r\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\r\n});\r\n\r\ntest(\"expressions - multiple\", function() {\r\n\texpect(4);\r\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r\n\texpect(14);\r\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\r\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r\n\texpect(19);\r\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\r\n\t\r\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\r\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\r\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\r\n\t\r\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\r\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\r\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\r\n\t\r\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\r\n\t\r\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\r\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\r\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\r\n});\r\n\r\ntest(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r\n\tt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\r\n\tt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\r\n\tt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\r\n\tt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\r"},{"path":"./jquery-data/1.1/src/selector/selectorTest.js","lines":[1,142],"code":"module(\"selector\");\r\n\r\ntest(\"expressions - element\", function() {\r\n\texpect(6);\r\n\tok( $(\"*\").size() >= 30, \"Select all\" );\r\n\tt( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\r\n\tt( \"Element Selector\", \"body\", [\"body\"] );\r\n\tt( \"Element Selector\", \"html\", [\"html\"] );\r\n\tt( \"Parent Element\", \"div div\", [\"foo\"] );\r\n\tok( $(\"param\", \"#object1\").length == 2, \"Object/param as context\" );\r\n});\r\n\r\ntest(\"expressions - id\", function() {\r\n\texpect(8);\r\n\tt( \"ID Selector\", \"#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\r\n\tt( \"ID Selector w/ Element\", \"ul#first\", [] );\r\n\t\r\n\tt( \"ID Selector, child ID present\", \"#form > #radio1\", [\"radio1\"] );  // bug #267\r\n\tt( \"ID Selector, not an ancestor ID\", \"#form  #first\", [] );\r\n\tt( \"ID Selector, not a child ID\", \"#form > #option1a\", [] );\r\n\t\r\n\tt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"]  );\r\n\tt( \"All Children of ID with no children\", \"#firstUL/*\", []  );\r\n});\r\n\r\n\r\ntest(\"expressions - class\", function() {\r\n\texpect(4);\r\n\tt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Class Selector\", \".blog.link\", [\"simon\"] );\r\n\tt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\r\n});\r\n\r\ntest(\"expressions - multiple\", function() {\r\n\texpect(4);\r\n\tt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n\tt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\r\n});\r\n\r\ntest(\"expressions - child and adjacent\", function() {\r\n\texpect(14);\r\n\tt( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\r\n\tt( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\r\n\tt( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\r\n\tt( \"Adjacent\", \"a + a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a +a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+ a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"a+a\", [\"groups\"] );\r\n\tt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\r\n\tt( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n});\r\n\r\ntest(\"expressions - attributes\", function() {\r\n\texpect(19);\r\n\tt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\r\n\tt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\r\n\t\r\n\tt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\r\n\tt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\r\n\tt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\tt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\r\n\t\r\n\tt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\r\n\tt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\r\n\tt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\r\n\t\r\n\tt(\"Select options via [@selected]\", \"#select1 option[@selected]\", [\"option1a\"] );\r\n\tt(\"Select options via [@selected]\", \"#select2 option[@selected]\", [\"option2d\"] );\r\n\tt(\"Select options via [@selected]\", \"#select3 option[@selected]\", [\"option3b\", \"option3c\"] );\r\n\t\r\n\tt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\r\n\t\r\n\tt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\r\n\tt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\r\n\tt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);\r\n});\r\n\r\ntest(\"expressions - pseudo (:) selctors\", function() {\r\n\texpect(30);\r\n\tt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\r\n\tt( \"Last Child\", \"p:last-child\", [\"sap\"] );\r\n\tt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\r\n\tt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\r\n\tt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\r\n\tt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\r\n\tt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\r\n\tt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\r\n\tt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\r"}]},
{"id":"7bf698ff0b72b495a0f539809b027bdf988269b8","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajax.js","lines":[1,53],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[1,53],"code":"jQuery.fn.extend({\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM, only if it's\n\t * been modified by the server.\n\t *\n\t * @example $(\"#feeds\").loadIfModified(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n\t * @name loadIfModified\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Map params (optional) Key/value pairs that will be sent to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tloadIfModified: function( url, params, callback ) {\n\t\tthis.load( url, params, callback, 1 );\n\t},\n\n\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";"}]},
{"id":"93b1ed8540efca1667788cf8bcc1255e150e55e5","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajax.js","lines":[22,135],"code":"\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdata: params,\n\t\t\tifModified: ifModified,\n\t\t\tcomplete: function(res, status){\n\t\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\t\tself.attr(\"innerHTML\", res.responseText)\n\t\t\t\t\t  // Execute all the scripts inside of the newly-injected HTML\n\t\t\t\t\t  .evalScripts()\n\t\t\t\t\t  // Execute callback\n\t\t\t\t\t  .each( callback, [res.responseText, status, res] );\n\t\t\t\telse\n\t\t\t\t\tcallback.apply( self, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Serializes a set of input elements into a string of data.\n\t * This will serialize all given elements.\n\t *\n\t * A serialization similar to the form submit of a browser is\n\t * provided by the form plugin. It also takes multiple-selects \n\t * into account, while this method recognizes only a single option.\n\t *\n\t * @example $(\"input[@type=text]\").serialize();\n\t * @before <input type='text' name='name' value='John'/>\n\t * <input type='text' name='location' value='Boston'/>\n\t * @after name=John&location=Boston\n\t * @desc Serialize a selection of input elements to a string\n\t *\n\t * @name serialize\n\t * @type String\n\t * @cat Ajax\n\t */\n\tserialize: function() {\n\t\treturn jQuery.param( this );\n\t},\n\n\t/**\n\t * Evaluate all script tags inside this jQuery. If they have a src attribute,\n\t * the script is loaded, otherwise it's content is evaluated.\n\t *\n\t * @name evalScripts\n\t * @type jQuery\n\t * @private\n\t * @cat Ajax"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[22,135],"code":"\t/**\n\t * Load HTML from a remote file and inject it into the DOM.\n\t *\n\t * Note: Avoid to use this to load scripts, instead use $.getScript.\n\t * IE strips script tags when there aren't any other characters in front of it.\n\t *\n\t * @example $(\"#feeds\").load(\"feeds.html\");\n\t * @before <div id=\"feeds\"></div>\n\t * @result <div id=\"feeds\"><b>45</b> feeds found.</div>\n\t *\n \t * @example $(\"#feeds\").load(\"feeds.html\",\n \t *   {limit: 25},\n \t *   function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n \t * );\n\t * @desc Same as above, but with an additional parameter\n\t * and a callback that is executed when the data was loaded.\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param String url The URL of the HTML file to load.\n\t * @param Object params (optional) A set of key/value pairs that will be sent as data to the server.\n\t * @param Function callback (optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).\n\t * @cat Ajax\n\t */\n\tload: function( url, params, callback, ifModified ) {\n\t\tif ( jQuery.isFunction( url ) )\n\t\t\treturn this.bind(\"load\", url);\n\n\t\tcallback = callback || function(){};\n\n\t\t// Default to a GET request\n\t\tvar type = \"GET\";\n\n\t\t// If the second parameter was provided\n\t\tif ( params )\n\t\t\t// If it's a function\n\t\t\tif ( jQuery.isFunction( params.constructor ) ) {\n\t\t\t\t// We assume that it's the callback\n\t\t\t\tcallback = params;\n\t\t\t\tparams = null;\n\n\t\t\t// Otherwise, build a param string\n\t\t\t} else {\n\t\t\t\tparams = jQuery.param( params );\n\t\t\t\ttype = \"POST\";\n\t\t\t}\n\n\t\tvar self = this;\n\n\t\t// Request the remote document\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: type,\n\t\t\tdata: params,\n\t\t\tifModified: ifModified,\n\t\t\tcomplete: function(res, status){\n\t\t\t\tif ( status == \"success\" || !ifModified && status == \"notmodified\" )\n\t\t\t\t\t// Inject the HTML into all the matched elements\n\t\t\t\t\tself.attr(\"innerHTML\", res.responseText)\n\t\t\t\t\t  // Execute all the scripts inside of the newly-injected HTML\n\t\t\t\t\t  .evalScripts()\n\t\t\t\t\t  // Execute callback\n\t\t\t\t\t  .each( callback, [res.responseText, status, res] );\n\t\t\t\telse\n\t\t\t\t\tcallback.apply( self, [res.responseText, status, res] );\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Serializes a set of input elements into a string of data.\n\t * This will serialize all given elements.\n\t *\n\t * A serialization similar to the form submit of a browser is\n\t * provided by the form plugin. It also takes multiple-selects \n\t * into account, while this method recognizes only a single option.\n\t *\n\t * @example $(\"input[@type=text]\").serialize();\n\t * @before <input type='text' name='name' value='John'/>\n\t * <input type='text' name='location' value='Boston'/>\n\t * @after name=John&location=Boston\n\t * @desc Serialize a selection of input elements to a string\n\t *\n\t * @name serialize\n\t * @type String\n\t * @cat Ajax\n\t */\n\tserialize: function() {\n\t\treturn jQuery.param( this );\n\t},\n\n\t/**\n\t * Evaluate all script tags inside this jQuery. If they have a src attribute,\n\t * the script is loaded, otherwise it's content is evaluated.\n\t *\n\t * @name evalScripts\n\t * @type jQuery\n\t * @private\n\t * @cat Ajax"}]},
{"id":"5c35915fd8aa3fca5b6c034b889e5f157971159d","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajax.js","lines":[136,393],"code":"\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP\");\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\n\n/**\n * Attach a function to be executed whenever an AJAX request begins\n * and there is none already active.\n *\n * @example $(\"#loading\").ajaxStart(function(){\n *   $(this).show();\n * });\n * @desc Show a loading message whenever an AJAX request starts\n * (and none is already active).\n *\n * @name ajaxStart\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever all AJAX requests have ended.\n *\n * @example $(\"#loading\").ajaxStop(function(){\n *   $(this).hide();\n * });\n * @desc Hide a loading message after all the AJAX requests have stopped.\n *\n * @name ajaxStop\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxComplete(function(request, settings){\n *   $(this).append(\"<li>Request Complete.</li>\");\n * });\n * @desc Show a message when an AJAX request completes.\n *\n * @name ajaxComplete\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes\n * successfully.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSuccess(function(request, settings){\n *   $(this).append(\"<li>Successful Request!</li>\");\n * });\n * @desc Show a message when an AJAX request completes successfully.\n *\n * @name ajaxSuccess\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request fails.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback. A third argument, an exception object,\n * is passed if an exception occured while processing the request.\n *\n * @example $(\"#msg\").ajaxError(function(request, settings){\n *   $(this).append(\"<li>Error requesting page \" + settings.url + \"</li>\");\n * });\n * @desc Show a message when an AJAX request fails.\n *\n * @name ajaxError\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n \n/**\n * Attach a function to be executed before an AJAX request is sent.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSend(function(request, settings){\n *   $(this).append(\"<li>Starting request at \" + settings.url + \"</li>\");\n * });\n * @desc Show a message before an AJAX request is sent.\n *"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[136,393],"code":"\tXMLHttpRequest = function(){\n\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP\");\n\t};\n\n// Attach a bunch of functions for handling common AJAX events\n\n/**\n * Attach a function to be executed whenever an AJAX request begins\n * and there is none already active.\n *\n * @example $(\"#loading\").ajaxStart(function(){\n *   $(this).show();\n * });\n * @desc Show a loading message whenever an AJAX request starts\n * (and none is already active).\n *\n * @name ajaxStart\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever all AJAX requests have ended.\n *\n * @example $(\"#loading\").ajaxStop(function(){\n *   $(this).hide();\n * });\n * @desc Hide a loading message after all the AJAX requests have stopped.\n *\n * @name ajaxStop\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxComplete(function(request, settings){\n *   $(this).append(\"<li>Request Complete.</li>\");\n * });\n * @desc Show a message when an AJAX request completes.\n *\n * @name ajaxComplete\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request completes\n * successfully.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSuccess(function(request, settings){\n *   $(this).append(\"<li>Successful Request!</li>\");\n * });\n * @desc Show a message when an AJAX request completes successfully.\n *\n * @name ajaxSuccess\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n\n/**\n * Attach a function to be executed whenever an AJAX request fails.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback. A third argument, an exception object,\n * is passed if an exception occured while processing the request.\n *\n * @example $(\"#msg\").ajaxError(function(request, settings){\n *   $(this).append(\"<li>Error requesting page \" + settings.url + \"</li>\");\n * });\n * @desc Show a message when an AJAX request fails.\n *\n * @name ajaxError\n * @type jQuery\n * @param Function callback The function to execute.\n * @cat Ajax\n */\n \n/**\n * Attach a function to be executed before an AJAX request is sent.\n *\n * The XMLHttpRequest and settings used for that request are passed\n * as arguments to the callback.\n *\n * @example $(\"#msg\").ajaxSend(function(request, settings){\n *   $(this).append(\"<li>Starting request at \" + settings.url + \"</li>\");\n * });\n * @desc Show a message before an AJAX request is sent.\n *"}]},
{"id":"98bb11edb3dd60f781c61f06666080ea305cce11","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajax.js","lines":[368,614],"code":"/**\n * Load a remote page using an HTTP POST request.\n *\n * @example $.post(\"test.cgi\");\n *\n * @example $.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } );\n *\n * @example $.post(\"test.cgi\", function(data){\n *   alert(\"Data Loaded: \" + data);\n * });\n *\n * @example $.post(\"test.cgi\",\n *   { name: \"John\", time: \"2pm\" },\n *   function(data){\n *     alert(\"Data Loaded: \" + data);\n *   }\n * );\n *\n * @name $.post\n * @type XMLHttpRequest\n * @param String url The URL of the page to load.\n * @param Map params (optional) Key/value pairs that will be sent to the server.\n * @param Function callback (optional) A function to be executed whenever the data is loaded.\n * @cat Ajax\n */\npost: function( url, data, callback, type ) {\n\tif ( jQuery.isFunction( data ) ) {\n\t\tcallback = data;\n\t\tdata = {};\n\t}\n\n\treturn jQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: url,\n\t\tdata: data,\n\t\tsuccess: callback,\n\t\tdataType: type\n\t});\n},\n\n// timeout (ms)\n//timeout: 0,\n\n/**\n * Set the timeout of all AJAX requests to a specific amount of time.\n * This will make all future AJAX requests timeout after a specified amount\n * of time.\n *\n * Set to null or 0 to disable timeouts (default).\n *\n * You can manually abort requests with the XMLHttpRequest's (returned by\n * all ajax functions) abort() method.\n *\n * Deprecated. Use $.ajaxSetup instead.\n *\n * @example $.ajaxTimeout( 5000 );\n * @desc Make all AJAX requests timeout after 5 seconds.\n *\n * @name $.ajaxTimeout\n * @type undefined\n * @param Number time How long before an AJAX request times out.\n * @cat Ajax\n */\najaxTimeout: function( timeout ) {\n\tjQuery.ajaxSettings.timeout = timeout;\n},\n\n/**\n * Setup global settings for AJAX requests.\n *\n * See $.ajax for a description of all available options.\n *\n * @example $.ajaxSetup( {\n *   url: \"/xmlhttp/\",\n *   global: false,\n *   type: \"POST\"\n * } );\n * $.ajax({ data: myData });\n * @desc Sets the defaults for AJAX requests to the url \"/xmlhttp/\",\n * disables global handlers and uses POST instead of GET. The following\n * AJAX requests then sends some data without having to set anything else.\n *\n * @name $.ajaxSetup\n * @type undefined\n * @param Map settings Key/value pairs to use for all AJAX requests\n * @cat Ajax\n */\najaxSetup: function( settings ) {\n\tjQuery.extend( jQuery.ajaxSettings, settings );\n},\n\najaxSettings: {\n\tglobal: true,\n\ttype: \"GET\",\n\ttimeout: 0,\n\tcontentType: \"application/x-www-form-urlencoded\",\n\tprocessData: true,\n\tasync: true,\n\tdata: null\n},"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[368,609],"code":"/**\n * Load a remote page using an HTTP POST request.\n *\n * @example $.post(\"test.cgi\");\n *\n * @example $.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } );\n *\n * @example $.post(\"test.cgi\", function(data){\n *   alert(\"Data Loaded: \" + data);\n * });\n *\n * @example $.post(\"test.cgi\",\n *   { name: \"John\", time: \"2pm\" },\n *   function(data){\n *     alert(\"Data Loaded: \" + data);\n *   }\n * );\n *\n * @name $.post\n * @type XMLHttpRequest\n * @param String url The URL of the page to load.\n * @param Map params (optional) Key/value pairs that will be sent to the server.\n * @param Function callback (optional) A function to be executed whenever the data is loaded.\n * @cat Ajax\n */\npost: function( url, data, callback, type ) {\n\treturn jQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: url,\n\t\tdata: data,\n\t\tsuccess: callback,\n\t\tdataType: type\n\t});\n},\n\n// timeout (ms)\n//timeout: 0,\n\n/**\n * Set the timeout of all AJAX requests to a specific amount of time.\n * This will make all future AJAX requests timeout after a specified amount\n * of time.\n *\n * Set to null or 0 to disable timeouts (default).\n *\n * You can manually abort requests with the XMLHttpRequest's (returned by\n * all ajax functions) abort() method.\n *\n * Deprecated. Use $.ajaxSetup instead.\n *\n * @example $.ajaxTimeout( 5000 );\n * @desc Make all AJAX requests timeout after 5 seconds.\n *\n * @name $.ajaxTimeout\n * @type undefined\n * @param Number time How long before an AJAX request times out.\n * @cat Ajax\n */\najaxTimeout: function( timeout ) {\n\tjQuery.ajaxSettings.timeout = timeout;\n},\n\n/**\n * Setup global settings for AJAX requests.\n *\n * See $.ajax for a description of all available options.\n *\n * @example $.ajaxSetup( {\n *   url: \"/xmlhttp/\",\n *   global: false,\n *   type: \"POST\"\n * } );\n * $.ajax({ data: myData });\n * @desc Sets the defaults for AJAX requests to the url \"/xmlhttp/\",\n * disables global handlers and uses POST instead of GET. The following\n * AJAX requests then sends some data without having to set anything else.\n *\n * @name $.ajaxSetup\n * @type undefined\n * @param Map settings Key/value pairs to use for all AJAX requests\n * @cat Ajax\n */\najaxSetup: function( settings ) {\n\tjQuery.extend( jQuery.ajaxSettings, settings );\n},\n\najaxSettings: {\n\tglobal: true,\n\ttype: \"GET\",\n\ttimeout: 0,\n\tcontentType: \"application/x-www-form-urlencoded\",\n\tprocessData: true,\n\tasync: true,\n\tdata: null\n},\n\n// Last-Modified header cache for next request\nlastModified: {},\n\n/**"}]},
{"id":"f5541d21cae34324e88dd87fa6015052ceaae72d","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajax.js","lines":[472,807],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions.\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\",\n *  async: false\n * }).responseText;"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[467,802],"code":"/**\n * Load a remote page using an HTTP request.\n *\n * This is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\n * higher-level abstractions.\n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes are (see dataType option):\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one argument, an object of key/value pairs, that are\n * used to initalize and handle the request. These are all the key/values that can\n * be used:\n *\n * (String) url - The URL to request.\n *\n * (String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request. This is done by checking the\n * Last-Modified header. Default value is false, ignoring the header.\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 second.\n * See $.ajaxTimeout() for global timeouts.\n *\n * (Boolean) global - Whether to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed tree arguments: The XMLHttpRequest object, a\n * string describing the type of error that occurred and an optional\n * exception object, if one occured.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * See processData option to prevent this automatic processing.\n *\n * (String) contentType - When sending data to the server, use this content-type.\n * Default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in to the data option as an object\n * other as string will be processed and transformed into a query string, fitting to\n * the default content-type \"application/x-www-form-urlencoded\". If you want to send\n * DOMDocuments, set this option to false.\n *\n * (Boolean) async - By default, all requests are sent asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @example var html = $.ajax({\n *  url: \"some.php\",\n *  async: false\n * }).responseText;"}]},
{"id":"1b6c5bf8d81b248f979ca00d8b359bc0133264ea","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajax.js","lines":[789,828],"code":"// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j] && a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );\n\n\t// Return the resulting serialization\n\treturn s.join(\"&\");\n},\n\n// evalulates a script in global context\n// not reliable for safari\nglobalEval: function( data ) {\n\tif ( window.execScript )\n\t\twindow.execScript( data );\n\telse if ( jQuery.browser.safari )\n\t\t// safari doesn't provide a synchronous global eval\n\t\twindow.setTimeout( data, 0 );\n\telse\n\t\teval.call( window, data );\n}"},{"path":"./jquery-data/1.1/src/ajax/ajax.js","lines":[784,823],"code":"// Serialize an array of form elements or a set of\n// key/values into a query string\nparam: function( a ) {\n\tvar s = [];\n\n\t// If an array was passed in, assume that it is an array\n\t// of form elements\n\tif ( a.constructor == Array || a.jquery )\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function(){\n\t\t\ts.push( encodeURIComponent(this.name) + \"=\" + encodeURIComponent( this.value ) );\n\t\t});\n\n\t// Otherwise, assume that it's an object of key/value pairs\n\telse\n\t\t// Serialize the key/values\n\t\tfor ( var j in a )\n\t\t\t// If the value is an array then the key names need to be repeated\n\t\t\tif ( a[j].constructor == Array )\n\t\t\t\tjQuery.each( a[j], function(){\n\t\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( this ) );\n\t\t\t\t});\n\t\t\telse\n\t\t\t\ts.push( encodeURIComponent(j) + \"=\" + encodeURIComponent( a[j] ) );\n\n\t// Return the resulting serialization\n\treturn s.join(\"&\");\n},\n\n// evalulates a script in global context\n// not reliable for safari\nglobalEval: function( data ) {\n\tif ( window.execScript )\n\t\twindow.execScript( data );\n\telse if ( jQuery.browser.safari )\n\t\t// safari doesn't provide a synchronous global eval\n\t\twindow.setTimeout( data, 0 );\n\telse\n\t\teval.call( window, data );\n}"}]},
{"id":"c9d7ed595998352392922f13ab33212ef00eb606","instances":[{"path":"./jquery-data/1.1.1/src/ajax/ajaxTest.js","lines":[1,72],"code":"module(\"ajax\");\n\nif ( location.protocol != \"file:\" ) {\n\ntest(\"serialize()\", function() {\n\texpect(1);\n\tvar data = $(':input').not('button').serialize();\n\t// ignore button, IE takes text content as value, not relevant for this test\n\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );\n\t\n\tparams = {\"foo[bar]\":\"baz\", \"foo[beep]\":42, \"foo[quux]\":\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us\", \"even more arrays\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(7);\n\tstop(true);\n\tvar count = 0;\n\tvar success = function() {\n\t\tif(count++ == 6)\n\t\t\tstart();\n\t}\n\tvar target = \"data/name.php\";\n\tok( $.get(url(target), success), \"get\" );\n\tok( $.getIfModified(url(target), success), \"getIfModified\" );\n\tok( $.post(url(target), success), \"post\" );\n\tok( $.getScript(url(\"data/test.js\"), success), \"script\" );\n\tok( $.getJSON(url(\"data/json.php\"), success), \"json\" );\n\tok( $.ajax({url: url(target), success: success}), \"generic\" );\n});\n\ntest(\"synchronous request\", function() {\n\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();\n\t$('#first').load(url(\"data/name.php\"), function() {\n\t\tok( /^ERROR/.test($('#first').text()), 'Check if content was injected into the DOM' );\n\t\tstart();\n\t});\n});\n\ntest(\"load(String, Object, Function) - inject without callback\", function() {\n\texpect(1);\n\tstop(true); // check if load can be called with only url\n\t$('#first').load(\"data/name.php\");\n});\n\ntest(\"load(String, Object, Function) - check scripts\", function() {\n\texpect(7);\n\tstop();"},{"path":"./jquery-data/1.1/src/ajax/ajaxTest.js","lines":[1,72],"code":"module(\"ajax\");\n\nif ( location.protocol != \"file:\" ) {\n\ntest(\"serialize()\", function() {\n\texpect(1);\n\tvar data = $(':input').not('button').serialize();\n\t// ignore button, IE takes text content as value, not relevant for this test\n\tok( data == 'action=Test&text2=Test&radio1=on&radio2=on&check=on&=on&hidden=&foo%5Bbar%5D=&name=name&=foobar&select1=&select2=3&select3=1', 'Check form serialization as query string' );\n});\n\ntest(\"param\", function() {\n\texpect(4);\n\tvar params = {foo:\"bar\", baz:42, quux:\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo=bar&baz=42&quux=All%20your%20base%20are%20belong%20to%20us\", \"simple\" );\n\t\n\tparams = {someName: [1, 2, 3], regularThing: \"blah\" };\n\tok( $.param(params) == \"someName=1&someName=2&someName=3&regularThing=blah\", \"with array\" );\n\t\n\tparams = {\"foo[]\":[\"baz\", 42, \"All your base are belong to us\"]};\n\tok( $.param(params) == \"foo%5B%5D=baz&foo%5B%5D=42&foo%5B%5D=All%20your%20base%20are%20belong%20to%20us\", \"more array\" );\n\t\n\tparams = {\"foo[bar]\":\"baz\", \"foo[beep]\":42, \"foo[quux]\":\"All your base are belong to us\"};\n\tok( $.param(params) == \"foo%5Bbar%5D=baz&foo%5Bbeep%5D=42&foo%5Bquux%5D=All%20your%20base%20are%20belong%20to%20us\", \"even more arrays\" );\n});\n\ntest(\"pass-through request object\", function() {\n\texpect(7);\n\tstop(true);\n\tvar count = 0;\n\tvar success = function() {\n\t\tif(count++ == 6)\n\t\t\tstart();\n\t}\n\tvar target = \"data/name.php\";\n\tok( $.get(url(target), success), \"get\" );\n\tok( $.getIfModified(url(target), success), \"getIfModified\" );\n\tok( $.post(url(target), success), \"post\" );\n\tok( $.getScript(url(\"data/test.js\"), success), \"script\" );\n\tok( $.getJSON(url(\"data/json.php\"), success), \"json\" );\n\tok( $.ajax({url: url(target), success: success}), \"generic\" );\n});\n\ntest(\"synchronous request\", function() {\n\tok( /^{ \"data\"/.test( $.ajax({url: url(\"data/json.php\"), async: false}).responseText ), \"check returned text\" );\n});\n\ntest(\"synchronous request with callbacks\", function() {\n\texpect(2);\n\tvar result;\n\t$.ajax({url: url(\"data/json.php\"), async: false, success: function(data) { ok(true, \"sucess callback executed\"); result = data; } });\n\tok( /^{ \"data\"/.test( result ), \"check returned text\" );\n});\n\ntest(\"load(String, Object, Function) - simple: inject text into DOM\", function() {\n\texpect(2);\n\tstop();\n\t$('#first').load(url(\"data/name.php\"), function() {\n\t\tok( /^ERROR/.test($('#first').text()), 'Check if content was injected into the DOM' );\n\t\tstart();\n\t});\n});\n\ntest(\"load(String, Object, Function) - inject without callback\", function() {\n\texpect(1);\n\tstop(true); // check if load can be called with only url\n\t$('#first').load(\"data/name.php\");\n});\n\ntest(\"load(String, Object, Function) - check scripts\", function() {\n\texpect(7);\n\tstop();"}]},
{"id":"20bb7d0a396a108c592fc1fcb763fa8042158718","instances":[{"path":"./jquery-data/1.1.1/src/event/event.js","lines":[1,77],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\n\t\t// if data is passed, bind to handler\n\t\tif( data ) \n\t\t\thandler.data = data;\n\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\n\t\t// Init the element's event structure\n\t\tif (!element.events)\n\t\t\telement.events = {};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.events[type];\n\n\t\t// If it hasn't been initialized yet\n\t\tif (!handlers) {\n\t\t\t// Init the event handler queue\n\t\t\thandlers = element.events[type] = {};\n\n\t\t\t// Remember an existing handler, if it's already there\n\t\t\tif (element[\"on\" + type])\n\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// And bind the global event handler to the element\n\t\telement[\"on\" + type] = this.handle;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\tthis.global[type].push( element );\n\t},\n\n\tguid: 1,\n\tglobal: {},\n\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tif (element.events)\n\t\t\tif ( type && type.type )\n\t\t\t\tdelete element.events[ type.type ][ type.handler.guid ];\n\t\t\telse if (type && element.events[type])\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\telse\n\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\telse\n\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\tthis.remove( element, j );\n\t},\n\n\ttrigger: function(type,data,element) {\n\t\t// Clone the incoming data, if any\n\t\tdata = jQuery.makeArray(data || []);\n\n\t\t// Handle a global trigger\n\t\tif ( !element )"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[1,77],"code":"/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from \n * Dean Edwards' addEvent library.\n */\njQuery.event = {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler, data) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\n\t\t// if data is passed, bind to handler\n\t\tif( data ) \n\t\t\thandler.data = data;\n\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\n\t\t// Init the element's event structure\n\t\tif (!element.events)\n\t\t\telement.events = {};\n\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.events[type];\n\n\t\t// If it hasn't been initialized yet\n\t\tif (!handlers) {\n\t\t\t// Init the event handler queue\n\t\t\thandlers = element.events[type] = {};\n\n\t\t\t// Remember an existing handler, if it's already there\n\t\t\tif (element[\"on\" + type])\n\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\n\t\t// And bind the global event handler to the element\n\t\telement[\"on\" + type] = this.handle;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\tthis.global[type].push( element );\n\t},\n\n\tguid: 1,\n\tglobal: {},\n\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tif (element.events)\n\t\t\tif ( type && type.type )\n\t\t\t\tdelete element.events[ type.type ][ type.handler.guid ];\n\t\t\telse if (type && element.events[type])\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\telse\n\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\telse\n\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\tthis.remove( element, j );\n\t},\n\n\ttrigger: function(type,data,element) {\n\t\t// Clone the incoming data, if any\n\t\tdata = jQuery.makeArray(data || []);\n\n\t\t// Handle a global trigger\n\t\tif ( !element ) {"}]},
{"id":"ce9dfc2739fe63b0cf13b9accdaf84a39aab7beb","instances":[{"path":"./jquery-data/1.1.1/src/event/event.js","lines":[111,396],"code":"\t\t// returned undefined or false\n\t\tvar returnValue;\n\n\t\tvar c = this.events[event.type];\n\n\t\tvar args = [].slice.call( arguments, 1 );\n\t\targs.unshift( event );\n\n\t\tfor ( var j in c ) {\n\t\t\t// Pass in a reference to the handler function itself\n\t\t\t// So that we can later remove it\n\t\t\targs[0].handler = c[j];\n\t\t\targs[0].data = c[j].data;\n\n\t\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturnValue = false;\n\t\t\t}\n\t\t}\n\n\t\t// Clean up added properties in IE to prevent memory leak\n\t\tif (jQuery.browser.msie) event.target = event.preventDefault = event.stopPropagation = event.handler = event.data = null;\n\n\t\treturn returnValue;\n\t},\n\n\tfix: function(event) {\n\t\t// Fix target property, if necessary\n\t\tif ( !event.target && event.srcElement )\n\t\t\tevent.target = event.srcElement;\n\n\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\tif ( event.pageX == undefined && event.clientX != undefined ) {\n\t\t\tvar e = document.documentElement, b = document.body;\n\t\t\tevent.pageX = event.clientX + (e.scrollLeft || b.scrollLeft);\n\t\t\tevent.pageY = event.clientY + (e.scrollTop || b.scrollTop);\n\t\t}\n\t\t\t\t\n\t\t// check if target is a textnode (safari)\n\t\tif (jQuery.browser.safari && event.target.nodeType == 3) {\n\t\t\t// store a copy of the original event object \n\t\t\t// and clone because target is read only\n\t\t\tvar originalEvent = event;\n\t\t\tevent = jQuery.extend({}, originalEvent);\n\t\t\t\n\t\t\t// get parentnode from textnode\n\t\t\tevent.target = originalEvent.target.parentNode;\n\t\t\t\n\t\t\t// add preventDefault and stopPropagation since \n\t\t\t// they will not work on the clone\n\t\t\tevent.preventDefault = function() {\n\t\t\t\treturn originalEvent.preventDefault();\n\t\t\t};\n\t\t\tevent.stopPropagation = function() {\n\t\t\t\treturn originalEvent.stopPropagation();\n\t\t\t};\n\t\t}\n\t\t\n\t\t// fix preventDefault and stopPropagation\n\t\tif (!event.preventDefault)\n\t\t\tevent.preventDefault = function() {\n\t\t\t\tthis.returnValue = false;\n\t\t\t};\n\t\t\t\n\t\tif (!event.stopPropagation)\n\t\t\tevent.stopPropagation = function() {\n\t\t\t\tthis.cancelBubble = true;\n\t\t\t};\n\t\t\t\n\t\treturn event;\n\t}\n};\n\njQuery.fn.extend({\n\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second paramter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * @example $(\"p\").bind(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @example function handler(event) {\n\t *   alert(event.data.foo);\n\t * }\n\t * $(\"p\").bind(\"click\", {foo: \"bar\"}, handler)\n\t * @result alert(\"bar\")\n\t * @desc Pass some additional data to the event handler.\n\t *"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[103,388],"code":"\t\t// returned undefined or false\n\t\tvar returnValue;\n\n\t\tvar c = this.events[event.type];\n\n\t\tvar args = [].slice.call( arguments, 1 );\n\t\targs.unshift( event );\n\n\t\tfor ( var j in c ) {\n\t\t\t// Pass in a reference to the handler function itself\n\t\t\t// So that we can later remove it\n\t\t\targs[0].handler = c[j];\n\t\t\targs[0].data = c[j].data;\n\n\t\t\tif ( c[j].apply( this, args ) === false ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\treturnValue = false;\n\t\t\t}\n\t\t}\n\n\t\t// Clean up added properties in IE to prevent memory leak\n\t\tif (jQuery.browser.msie) event.target = event.preventDefault = event.stopPropagation = event.handler = event.data = null;\n\n\t\treturn returnValue;\n\t},\n\n\tfix: function(event) {\n\t\t// Fix target property, if necessary\n\t\tif ( !event.target && event.srcElement )\n\t\t\tevent.target = event.srcElement;\n\n\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\tif ( event.pageX == undefined && event.clientX != undefined ) {\n\t\t\tvar e = document.documentElement, b = document.body;\n\t\t\tevent.pageX = event.clientX + (e.scrollLeft || b.scrollLeft);\n\t\t\tevent.pageY = event.clientY + (e.scrollTop || b.scrollTop);\n\t\t}\n\t\t\t\t\n\t\t// check if target is a textnode (safari)\n\t\tif (jQuery.browser.safari && event.target.nodeType == 3) {\n\t\t\t// store a copy of the original event object \n\t\t\t// and clone because target is read only\n\t\t\tvar originalEvent = event;\n\t\t\tevent = jQuery.extend({}, originalEvent);\n\t\t\t\n\t\t\t// get parentnode from textnode\n\t\t\tevent.target = originalEvent.target.parentNode;\n\t\t\t\n\t\t\t// add preventDefault and stopPropagation since \n\t\t\t// they will not work on the clone\n\t\t\tevent.preventDefault = function() {\n\t\t\t\treturn originalEvent.preventDefault();\n\t\t\t};\n\t\t\tevent.stopPropagation = function() {\n\t\t\t\treturn originalEvent.stopPropagation();\n\t\t\t};\n\t\t}\n\t\t\n\t\t// fix preventDefault and stopPropagation\n\t\tif (!event.preventDefault)\n\t\t\tevent.preventDefault = function() {\n\t\t\t\tthis.returnValue = false;\n\t\t\t};\n\t\t\t\n\t\tif (!event.stopPropagation)\n\t\t\tevent.stopPropagation = function() {\n\t\t\t\tthis.cancelBubble = true;\n\t\t\t};\n\t\t\t\n\t\treturn event;\n\t}\n};\n\njQuery.fn.extend({\n\n\t/**\n\t * Binds a handler to a particular event (like click) for each matched element.\n\t * The event handler is passed an event object that you can use to prevent\n\t * default behaviour. To stop both default action and event bubbling, your handler\n\t * has to return false.\n\t *\n\t * In most cases, you can define your event handlers as anonymous functions\n\t * (see first example). In cases where that is not possible, you can pass additional\n\t * data as the second paramter (and the handler function as the third), see \n\t * second example.\n\t *\n\t * @example $(\"p\").bind(\"click\", function(){\n\t *   alert( $(this).text() );\n\t * });\n\t * @before <p>Hello</p>\n\t * @result alert(\"Hello\")\n\t *\n\t * @example function handler(event) {\n\t *   alert(event.data.foo);\n\t * }\n\t * $(\"p\").bind(\"click\", {foo: \"bar\"}, handler)\n\t * @result alert(\"bar\")\n\t * @desc Pass some additional data to the event handler.\n\t *"}]},
{"id":"7152a771b66b0b990f57175c4458fec910b84bed","instances":[{"path":"./jquery-data/1.1.1/src/event/event.js","lines":[363,854],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for handling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risc of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the shortcut for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[355,846],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for handling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t *\n\t * There is one argument passed to the ready event handler: A reference to\n\t * the jQuery function. You can name that argument whatever you like, and\n\t * can therefore stick with the $ alias without risc of naming collisions.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t * The functions are then executed in the order they were added.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @example jQuery(function($) {\n\t *   // Your code using failsafe $ alias here...\n\t * });\n\t * @desc Uses both the shortcut for $(document).ready() and the argument\n\t * to write failsafe jQuery code using the $ alias, without relying on the\n\t * global alias.\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t * @see $.noConflict()\n\t * @see $(Function)\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document, [jQuery] );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( function() { return f.apply(this, [jQuery]) } );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({"}]},
{"id":"9880150d9e816a70e32d60657c4dc8c5fd6a7118","instances":[{"path":"./jquery-data/1.1.1/src/event/event.js","lines":[853,900],"code":"\t\t// Use the defer script hack\n\t\tvar script = document.getElementById(\"__ie_init\");\n\t\t\n\t\t// script does not exist if jQuery is loaded dynamically\n\t\tif ( script ) \n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\tif ( this.readyState != \"complete\" ) return;\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t\t\tjQuery.ready();\n\t\t\t};\n\t\n\t\t// Clear from memory\n\t\tscript = null;\n\t\n\t// If Safari  is used\n\t} else if ( jQuery.browser.safari )\n\t\t// Continually check to see if the document.readyState is valid\n\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {\n\t\tvar global = jQuery.event.global;\n\t\tfor ( var type in global ) {\n\t\t\tvar els = global[type], i = els.length;\n\t\t\tif ( i && type != 'unload' )\n\t\t\t\tdo\n\t\t\t\t\tjQuery.event.remove(els[i-1], type);\n\t\t\t\twhile (--i);\n\t\t}\n\t});"},{"path":"./jquery-data/1.1/src/event/event.js","lines":[845,892],"code":"\t\t// Use the defer script hack\n\t\tvar script = document.getElementById(\"__ie_init\");\n\t\t\n\t\t// script does not exist if jQuery is loaded dynamically\n\t\tif ( script ) \n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\tif ( this.readyState != \"complete\" ) return;\n\t\t\t\tthis.parentNode.removeChild( this );\n\t\t\t\tjQuery.ready();\n\t\t\t};\n\t\n\t\t// Clear from memory\n\t\tscript = null;\n\t\n\t// If Safari  is used\n\t} else if ( jQuery.browser.safari )\n\t\t// Continually check to see if the document.readyState is valid\n\t\tjQuery.safariTimer = setInterval(function(){\n\t\t\t// loaded and complete are both valid states\n\t\t\tif ( document.readyState == \"loaded\" || \n\t\t\t\tdocument.readyState == \"complete\" ) {\n\t\n\t\t\t\t// If either one are found, remove the timer\n\t\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\t\tjQuery.safariTimer = null;\n\t\n\t\t\t\t// and execute any waiting functions\n\t\t\t\tjQuery.ready();\n\t\t\t}\n\t\t}, 10); \n\n\t// A fallback to window.onload, that will always work\n\tjQuery.event.add( window, \"load\", jQuery.ready );\n\t\n};\n\n// Clean up after IE to avoid memory leaks\nif (jQuery.browser.msie)\n\tjQuery(window).one(\"unload\", function() {\n\t\tvar global = jQuery.event.global;\n\t\tfor ( var type in global ) {\n\t\t\tvar els = global[type], i = els.length;\n\t\t\tif ( i && type != 'unload' )\n\t\t\t\tdo\n\t\t\t\t\tjQuery.event.remove(els[i-1], type);\n\t\t\t\twhile (--i);\n\t\t}\n\t});"}]},
{"id":"28253ff340464eb1f14408c94d6e4f11c2856720","instances":[{"path":"./jquery-data/1.1.1/src/event/eventTest.js","lines":[1,54],"code":"module(\"event\");\n\ntest(\"toggle(Function, Function) - add toggle event and fake a few clicks\", function() {\n\texpect(1);\n\tvar count = 0,\n\t\tfn1 = function() { count++; },\n\t\tfn2 = function() { count--; },\n\t\tlink = $('#mark');\n\tlink.click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n});\n\ntest(\"unbind(event)\", function() {\n\texpect(3);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n});\n\ntest(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"bind() with data\", function() {\n\texpect(2);\n\tvar handler = function(event) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).click();\n});\n\ntest(\"bind() with data and trigger() with data\", function() {\n\texpect(4);\n\tvar handler = function(event, data) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t\tok( data, \"Check trigger data\" );\n\t\tok( data.bar == \"foo\", \"Check value of trigger data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).trigger(\"click\", [{bar: \"foo\"}]);\n});"},{"path":"./jquery-data/1.1/src/event/eventTest.js","lines":[1,54],"code":"module(\"event\");\n\ntest(\"toggle(Function, Function) - add toggle event and fake a few clicks\", function() {\n\texpect(1);\n\tvar count = 0,\n\t\tfn1 = function() { count++; },\n\t\tfn2 = function() { count--; },\n\t\tlink = $('#mark');\n\tlink.click().toggle(fn1, fn2).click().click().click().click().click();\n\tok( count == 1, \"Check for toggle(fn, fn)\" );\n});\n\ntest(\"unbind(event)\", function() {\n\texpect(3);\n\tvar el = $(\"#firstp\");\n\tel.click(function() {\n\t\tok( true, \"Fake normal bind\" );\n\t});\n\tel.click(function(event) {\n\t\tel.unbind(event);\n\t\tok( true, \"Fake onebind\" );\n\t});\n\tel.click().click();\n});\n\ntest(\"trigger(event, [data]\", function() {\n\texpect(3);\n\tvar handler = function(event, a, b, c) {\n\t\tok( a == 1, \"check passed data\" );\n\t\tok( b == \"2\", \"check passed data\" );\n\t\tok( c == \"abc\", \"check passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", handler).trigger(\"click\", [1, \"2\", \"abc\"]);\n});\n\ntest(\"bind() with data\", function() {\n\texpect(2);\n\tvar handler = function(event) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).click();\n});\n\ntest(\"bind() with data and trigger() with data\", function() {\n\texpect(4);\n\tvar handler = function(event, data) {\n\t\tok( event.data, \"check passed data exists\" );\n\t\tok( event.data.foo == \"bar\", \"Check value of passed data\" );\n\t\tok( data, \"Check trigger data\" );\n\t\tok( data.bar == \"foo\", \"Check value of trigger data\" );\n\t}\n\t$(\"#firstp\").bind(\"click\", {foo: \"bar\"}, handler).trigger(\"click\", [{bar: \"foo\"}]);\n});"}]},
{"id":"25c7e8f251055b64f9707840e6b4884c9899521e","instances":[{"path":"./jquery-data/1.1.1/src/fx/fx.js","lines":[37,46],"code":"speed ?\n\thidden.animate({\n\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t}, speed, callback) :\n\t\n\thidden.each(function(){\n\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\t\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\t\tthis.style.display = \"block\";\n\t});"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[37,46],"code":"return speed ?\n\thidden.animate({\n\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t}, speed, callback) :\n\t\n\thidden.each(function(){\n\t\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\t\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\t\tthis.style.display = \"block\";\n\t});"}]},
{"id":"cd2ae2dc3683da479aff3b98b3c80b55a8e014f4","instances":[{"path":"./jquery-data/1.1.1/src/fx/fx.js","lines":[84,94],"code":"speed ?\n\tvisible.animate({\n\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t}, speed, callback) :\n\t\n\tvisible.each(function(){\n\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\tif ( this.oldblock == \"none\" )\n\t\t\tthis.oldblock = \"block\";\n\t\tthis.style.display = \"none\";\n\t});"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[83,93],"code":"return speed ?\n\tvisible.animate({\n\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t}, speed, callback) :\n\t\n\tvisible.each(function(){\n\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\tif ( this.oldblock == \"none\" )\n\t\t\tthis.oldblock = \"block\";\n\t\tthis.style.display = \"none\";\n\t});"}]},
{"id":"bc9b058d395e632b601858cf19d6437ac39f1dda","instances":[{"path":"./jquery-data/1.1.1/src/fx/fx.js","lines":[50,394],"code":"\t/**\n\t * Hides each of the set of matched elements if they are shown.\n\t *\n\t * @example $(\"p\").hide()\n\t * @before <p>Hello</p>\n\t * @result [ <p style=\"display: none\">Hello</p> ]\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see show(String|Number,Function)\n\t */\n\thide: function(speed,callback){\n\t\tvar visible = this.filter(\":visible\");\n\t\tspeed ?\n\t\t\tvisible.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tvisible.each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tif ( this.oldblock == \"none\" )\n\t\t\t\t\tthis.oldblock = \"block\";\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t});\n\t\treturn this;\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggles each of the set of matched elements. If they are shown,\n\t * toggle makes them hidden. If they are hidden, toggle\n\t * makes them shown.\n\t *\n\t * @example $(\"p\").toggle()\n\t * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\n\t * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\ttoggle: function( fn, fn2 ){\n\t\tvar args = arguments;\n\t\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\t\tthis._toggle( fn, fn2 ) :\n\t\t\tthis.each(function(){\n\t\t\t\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ]\n\t\t\t\t\t.apply( jQuery(this), args );\n\t\t\t});\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height and firing an\n\t * optional callback after completion.\n\t *\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see slideUp(String|Number,Function)\n\t * @see slideToggle(String|Number,Function)\n\t */\n\tslideDown: function(speed,callback){\n\t\treturn this.animate({height: \"show\"}, speed, callback);\n\t},\n\t\n\t/**"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[49,392],"code":"\t/**\n\t * Hides each of the set of matched elements if they are shown.\n\t *\n\t * @example $(\"p\").hide()\n\t * @before <p>Hello</p>\n\t * @result [ <p style=\"display: none\">Hello</p> ]\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation and firing an\n\t * optional callback after completion.\n\t *\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param String|Number speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see show(String|Number,Function)\n\t */\n\thide: function(speed,callback){\n\t\tvar visible = this.filter(\":visible\");\n\t\treturn speed ?\n\t\t\tvisible.animate({\n\t\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t\t}, speed, callback) :\n\t\t\t\n\t\t\tvisible.each(function(){\n\t\t\t\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\t\t\t\tif ( this.oldblock == \"none\" )\n\t\t\t\t\tthis.oldblock = \"block\";\n\t\t\t\tthis.style.display = \"none\";\n\t\t\t});\n\t},\n\n\t// Save the old toggle function\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggles each of the set of matched elements. If they are shown,\n\t * toggle makes them hidden. If they are hidden, toggle\n\t * makes them shown.\n\t *\n\t * @example $(\"p\").toggle()\n\t * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\n\t * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @cat Effects\n\t */\n\ttoggle: function( fn, fn2 ){\n\t\tvar args = arguments;\n\t\treturn jQuery.isFunction(fn) && jQuery.isFunction(fn2) ?\n\t\t\tthis._toggle( fn, fn2 ) :\n\t\t\tthis.each(function(){\n\t\t\t\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ]\n\t\t\t\t\t.apply( jQuery(this), args );\n\t\t\t});\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height and firing an\n\t * optional callback after completion.\n\t *\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param String|Number speed (optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback (optional) A function to be executed whenever the animation completes.\n\t * @cat Effects\n\t * @see slideUp(String|Number,Function)\n\t * @see slideToggle(String|Number,Function)\n\t */\n\tslideDown: function(speed,callback){\n\t\treturn this.animate({height: \"show\"}, speed, callback);\n\t},\n\t\n\t/**\n\t * Hide all matched elements by adjusting their height and firing an"}]},
{"id":"514a5407d9b3cb22acc11f53c974eb9a19db87fe","instances":[{"path":"./jquery-data/1.1.1/src/fx/fx.js","lines":[400,566],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The styles\n\tvar y = elem.style;\n\t\n\t// Store display property\n\tvar oldDisplay = jQuery.css(elem, \"display\");\n\n\t// Set display property to block for animation\n\ty.display = \"block\";\n\n\t// Make sure that nothing sneaks out\n\ty.overflow = \"hidden\";\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" )\n\t\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\t\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(elem,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function(){\n\t\tif ( !elem.orig ) elem.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\telem.orig[prop] = this.cur();\n\n\t\toptions.show = true;\n\n\t\t// Begin the animation\n\t\tz.custom(0, elem.orig[prop]);\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !elem.orig ) elem.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\telem.orig[prop] = this.cur();\n\n\t\toptions.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(elem.orig[prop], 0);\n\t};\n\t\n\t//Simple 'toggle' function\n\tz.toggle = function() {\n\t\tif ( !elem.orig ) elem.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\telem.orig[prop] = this.cur();\n\n\t\tif(oldDisplay == \"none\")  {\n\t\t\toptions.show = true;\n\t\t\t\n\t\t\t// Stupid IE, look what you made me do\n\t\t\tif ( prop != \"opacity\" )\n\t\t\t\ty[prop] = \"1px\";\n\n\t\t\t// Begin the animation"},{"path":"./jquery-data/1.1/src/fx/fx.js","lines":[398,564],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The styles\n\tvar y = elem.style;\n\t\n\t// Store display property\n\tvar oldDisplay = jQuery.css(elem, \"display\");\n\n\t// Set display property to block for animation\n\ty.display = \"block\";\n\n\t// Make sure that nothing sneaks out\n\ty.overflow = \"hidden\";\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" )\n\t\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\t\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(elem,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(elem, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function(){\n\t\tif ( !elem.orig ) elem.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\telem.orig[prop] = this.cur();\n\n\t\toptions.show = true;\n\n\t\t// Begin the animation\n\t\tz.custom(0, elem.orig[prop]);\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !elem.orig ) elem.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\telem.orig[prop] = this.cur();\n\n\t\toptions.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(elem.orig[prop], 0);\n\t};\n\t\n\t//Simple 'toggle' function\n\tz.toggle = function() {\n\t\tif ( !elem.orig ) elem.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\telem.orig[prop] = this.cur();\n\n\t\tif(oldDisplay == \"none\")  {\n\t\t\toptions.show = true;\n\t\t\t\n\t\t\t// Stupid IE, look what you made me do\n\t\t\tif ( prop != \"opacity\" )\n\t\t\t\ty[prop] = \"1px\";\n\n\t\t\t// Begin the animation"}]},
{"id":"a0f701403ad11132ae5adfd8f123df5fc768644e","instances":[{"path":"./jquery-data/1.1.1/src/fx/fxTest.js","lines":[1,21],"code":"module(\"fx\");\n\ntest(\"animate(Hash, Object, Function) - assert that animate doesn't modify its arguments\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 'fast', function() {\n\t\tok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t\tstart();\n\t});\n});\n\ntest(\"toggle()\", function() {\n\tvar x = $(\"#foo\");\n\tok( x.is(\":visible\") );\n\tx.toggle();\n\tok( x.is(\":hidden\") );\n\tx.toggle();\n\tok( x.is(\":visible\") );\n});"},{"path":"./jquery-data/1.1/src/fx/fxTest.js","lines":[1,21],"code":"module(\"fx\");\n\ntest(\"animate(Hash, Object, Function) - assert that animate doesn't modify its arguments\", function() {\n\texpect(1);\n\tstop();\n\tvar hash = {opacity: 'show'};\n\tvar hashCopy = $.extend({}, hash);\n\t$('#foo').animate(hash, 'fast', function() {\n\t\tok( hash.opacity == hashCopy.opacity, 'Check if animate changed the hash parameter' );\n\t\tstart();\n\t});\n});\n\ntest(\"toggle()\", function() {\n\tvar x = $(\"#foo\");\n\tok( x.is(\":visible\") );\n\tx.toggle();\n\tok( x.is(\":hidden\") );\n\tx.toggle();\n\tok( x.is(\":visible\") );\n});"}]},
{"id":"0229f9ae282538c01901acfad98ee7dccbbfccd2","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"$()\", function() {\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[1,14],"code":"module(\"core\");\r\n\r\ntest(\"Basic requirements\", function() {\r\n\texpect(7);\r\n\tok( Array.prototype.push, \"Array.push()\" );\r\n\tok( Function.prototype.apply, \"Function.apply()\" );\r\n\tok( document.getElementById, \"getElementById\" );\r\n\tok( document.getElementsByTagName, \"getElementsByTagName\" );\r\n\tok( RegExp, \"RegExp\" );\r\n\tok( jQuery, \"jQuery\" );\r\n\tok( $, \"$()\" );\r\n});\r\n\r\ntest(\"length\", function() {\r"}]},
{"id":"c3a9f97796895cb651a1697097e4cdee16c9b2cc","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[19,37],"code":"test(\"length\", function() {\r\n\tok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\r\n});\r\n\r\ntest(\"size()\", function() {\r\n\tok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );\r\n});\r\n\r\ntest(\"get()\", function() {\r\n\tisSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\r\n});\r\n\r\ntest(\"get(Number)\", function() {\r\n\tok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\r\n});\r\n\r\ntest(\"add(String|Element|Array)\", function() {\r\n\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[14,33],"code":"test(\"length\", function() {\r\n\tok( $(\"div\").length == 2, \"Get Number of Elements Found\" );\r\n});\r\n\r\ntest(\"size()\", function() {\r\n\tok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );\r\n});\r\n\r\ntest(\"get()\", function() {\r\n\tisSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );\r\n});\r\n\r\ntest(\"get(Number)\", function() {\r\n\tok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );\r\n});\r\n\r\ntest(\"add(String|Element|Array)\", function() {\r\n\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\t\r\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\r"}]},
{"id":"98319af7cb2252adeeb9faff0891678d33d92238","instances":[{"path":"./jquery-data/1.1.1/src/jquery/coreTest.js","lines":[37,90],"code":"\tisSet( $(\"#sndp\").add( $(\"#en\")[0] ).add( $(\"#sap\") ).get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\r\n\t\r\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n\t\r\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n});\r\n\r\ntest(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\r\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\r\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\r\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\r\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\r\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\r\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\r\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\r\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\r\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\r\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\r\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\r\n});\r\n\r\ntest(\"attr(String, Function)\", function() {\r\n\texpect(2);\r"},{"path":"./jquery-data/1.1/src/jquery/coreTest.js","lines":[31,87],"code":"\tisSet( $(\"#sndp\").add(\"#en\").add(\"#sap\").get(), q(\"sndp\", \"en\", \"sap\"), \"Check elements from document\" );\r\n\t\r\n\tok( $([]).add($(\"#form\")[0].elements).length > 13, \"Check elements from array\" );\r\n\t\r\n\tvar x = $([]).add($(\"<p id='x1'>xxx</p>\")).add($(\"<p id='x2'>xxx</p>\"));\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n\t\r\n\tvar x = $([]).add(\"<p id='x1'>xxx</p>\").add(\"<p id='x2'>xxx</p>\");\r\n\tok( x[0].id == \"x1\", \"Check on-the-fly element1\" );\r\n\tok( x[1].id == \"x2\", \"Check on-the-fly element2\" );\r\n});\r\n\r\ntest(\"each(Function)\", function() {\r\n\texpect(1);\r\n\tvar div = $(\"div\");\r\n\tdiv.each(function(){this.foo = 'zoo';});\r\n\tvar pass = true;\r\n\tfor ( var i = 0; i < div.size(); i++ ) {\r\n\t  if ( div.get(i).foo != \"zoo\" ) pass = false;\r\n\t}\r\n\tok( pass, \"Execute a function, Relative\" );\r\n});\r\n\r\ntest(\"index(Object)\", function() {\r\n\texpect(8);\r\n\tok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\r\n\tok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\r\n\tvar inputElements = $('#radio1,#radio2,#check1,#check2');\r\n\tok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\r\n\tok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\r\n\tok( inputElements.index(window) == -1, \"Check for not found index\" );\r\n\tok( inputElements.index(document) == -1, \"Check for not found index\" );\r\n});\r\n\r\ntest(\"attr(String)\", function() {\r\n\texpect(12);\r\n\tok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\r\n\tok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\r\n\tok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\r\n\tok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\r\n\tok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\r\n\tok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\r\n\tok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\r\n\tok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\r\n\tok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\r\n\tok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\r\n\tok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\r\n\tok( $('#form').attr('action').indexOf(\"formaction\") >= 0, 'Check for action attribute' );\r\n});\r\n\r\ntest(\"attr(String, Function)\", function() {\r\n\texpect(1);\r\n\tok( $('#text1').attr('value', function() { return this.id })[0].value == \"text1\", \"Set value from id\" );\r\n});\r"}]},
{"id":"8592dff1efefaa2b33d303b7afe8c0fcd3fa15a6","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[15,431],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Make sure that a selection was provided\n\ta = a || document;\n\t\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\tif ( jQuery.isFunction(a) )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\t\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\t// HANDLE: $(html) -> $(array)\n\t\tvar m = /^[^<]*(<(.|\\n)+>)[^>]*$/.exec(a);\n\t\tif ( m )\n\t\t\ta = jQuery.clean( [ m[1] ] );\n\t\t\n\t\t// HANDLE: $(expr)\n\t\telse\n\t\t\treturn new jQuery( c ).find( a );\n\t}\n\t\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );\n};\n\n// Map over the $ in case of overwrite\nif ( typeof $ != \"undefined\" )\n\tjQuery._$ = $;\n\t\n// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\n/**\n * This function accepts a string containing a CSS or\n * basic XPath selector which is then used to match a set of elements.\n *\n * The core functionality of jQuery centers around this function.\n * Everything in jQuery is based upon this, or uses this in some way.\n * The most basic use of this function is to pass in an expression\n * (usually consisting of CSS or XPath), which then finds all matching\n * elements.\n *\n * By default, $() looks for DOM elements within the context of the\n * current HTML document.\n *\n * @example $(\"div > p\")\n * @desc Finds all p elements that are children of a div element.\n * @before <p>one</p> <div><p>two</p></div> <p>three</p>\n * @result [ <p>two</p> ]\n *\n * @example $(\"input:radio\", document.forms[0])\n * @desc Searches for all inputs of type radio within the first form in the document\n *\n * @example $(\"div\", xml.responseXML)\n * @desc This finds all div elements within the specified XML document.\n *\n * @name $\n * @param String expr An expression to search with\n * @param Element|jQuery context (optional) A DOM Element, Document or jQuery to use as context\n * @cat Core\n * @type jQuery\n * @see $(Element)\n * @see $(Element<Array>)\n */\n \n/**\n * Create DOM elements on-the-fly from the provided String of raw HTML.\n *\n * @example $(\"<div><p>Hello</p></div>\").appendTo(\"#body\")\n * @desc Creates a div element (and all of its contents) dynamically, \n * and appends it to the element with the ID of body. Internally, an\n * element is created and it's innerHTML property set to the given markup.\n * It is therefore both quite flexible and limited. \n *\n * @name $\n * @param String html A string of HTML to create on the fly.\n * @cat Core\n * @type jQuery"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[15,426],"code":"/**\n * Create a new jQuery Object\n *\n * @constructor\n * @private\n * @name jQuery\n * @param String|Function|Element|Array<Element>|jQuery a selector\n * @param jQuery|Element|Array<Element> c context\n * @cat Core\n */\nvar jQuery = function(a,c) {\n\t// If the context is global, return a new object\n\tif ( window == this )\n\t\treturn new jQuery(a,c);\n\n\t// Make sure that a selection was provided\n\ta = a || document;\n\t\n\t// HANDLE: $(function)\n\t// Shortcut for document ready\n\t// Safari reports typeof on DOM NodeLists as a function\n\tif ( jQuery.isFunction(a) && !a.nodeType && a[0] == undefined )\n\t\treturn new jQuery(document)[ jQuery.fn.ready ? \"ready\" : \"load\" ]( a );\n\t\n\t// Handle HTML strings\n\tif ( typeof a  == \"string\" ) {\n\t\tvar m = /^[^<]*(<.+>)[^>]*$/.exec(a);\n\n\t\ta = m ?\n\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\tjQuery.clean( [ m[1] ] ) :\n\t\t\n\t\t\t// HANDLE: $(expr)\n\t\t\tjQuery.find( a, c );\n\t}\n\t\n\treturn this.setArray(\n\t\t// HANDLE: $(array)\n\t\ta.constructor == Array && a ||\n\n\t\t// HANDLE: $(arraylike)\n\t\t// Watch for when an array-like object is passed as the selector\n\t\t(a.jquery || a.length && a != window && !a.nodeType && a[0] != undefined && a[0].nodeType) && jQuery.makeArray( a ) ||\n\n\t\t// HANDLE: $(*)\n\t\t[ a ] );\n};\n\n// Map over the $ in case of overwrite\nif ( typeof $ != \"undefined\" )\n\tjQuery._$ = $;\n\t\n// Map the jQuery namespace to the '$' one\nvar $ = jQuery;\n\n/**\n * This function accepts a string containing a CSS or\n * basic XPath selector which is then used to match a set of elements.\n *\n * The core functionality of jQuery centers around this function.\n * Everything in jQuery is based upon this, or uses this in some way.\n * The most basic use of this function is to pass in an expression\n * (usually consisting of CSS or XPath), which then finds all matching\n * elements.\n *\n * By default, $() looks for DOM elements within the context of the\n * current HTML document.\n *\n * @example $(\"div > p\")\n * @desc Finds all p elements that are children of a div element.\n * @before <p>one</p> <div><p>two</p></div> <p>three</p>\n * @result [ <p>two</p> ]\n *\n * @example $(\"input:radio\", document.forms[0])\n * @desc Searches for all inputs of type radio within the first form in the document\n *\n * @example $(\"div\", xml.responseXML)\n * @desc This finds all div elements within the specified XML document.\n *\n * @name $\n * @param String expr An expression to search with\n * @param Element|jQuery context (optional) A DOM Element, Document or jQuery to use as context\n * @cat Core\n * @type jQuery\n * @see $(Element)\n * @see $(Element<Array>)\n */\n \n/**\n * Create DOM elements on-the-fly from the provided String of raw HTML.\n *\n * @example $(\"<div><p>Hello</p></div>\").appendTo(\"#body\")\n * @desc Creates a div element (and all of its contents) dynamically, \n * and appends it to the element with the ID of body. Internally, an\n * element is created and it's innerHTML property set to the given markup.\n * It is therefore both quite flexible and limited. \n *\n * @name $\n * @param String html A string of HTML to create on the fly.\n * @cat Core"}]},
{"id":"f111e1bc7ca95d6c4acc54484d2b799b17217efa","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[344,621],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements.\n *\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n * @desc Sets src and alt attributes to all images.\n *\n * @name attr\n * @type jQuery\n * @param Map properties Key/value pairs to set as object properties.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a single property to a value, on all matched elements.\n *\n * Can compute values provided as ${formula}, see second example.\n *\n * Note that you can't set the name property of input elements in IE.\n * Use $(html) or .append(html) or .html(html) to create elements\n * on the fly including the name property.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n * @desc Sets src attribute to all images.\n *\n * @example $(\"img\").attr(\"title\", \"${this.src}\");\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute, a shortcut for attr(String,Function)\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM/Attributes\n */\n \n/**\n * Set a single property to a computed value, on all matched elements.\n *\n * Instead of a value, a function is provided, that computes the value.\n *\n * @example $(\"img\").attr(\"title\", function() { return this.src });\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute.\n *\n * @example $(\"img\").attr(\"title\", function(index) { return this.title + (i + 1); });\n * @before <img title=\"pic\" /><img title=\"pic\" /><img title=\"pic\" />\n * @result <img title=\"pic1\" /><img title=\"pic2\" /><img title=\"pic3\" />\n * @desc Enumerate title attribute.\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Function value A function returning the value to set.\n * \t \t  Scope: Current element, argument: Index of current element\n * @cat DOM/Attributes\n */\nattr: function( key, value, type ) {\n\tvar obj = key;\n\t\n\t// Look for the case where we're accessing a style value\n\tif ( key.constructor == String )\n\t\tif ( value == undefined )\n\t\t\treturn this.length && jQuery[ type || \"attr\" ]( this[0], key ) || undefined;\n\t\telse {\n\t\t\tobj = {};\n\t\t\tobj[ key ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(index){\n\t\t// Set all the styles\n\t\tfor ( var prop in obj )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ? this.style : this,\n\t\t\t\tprop, jQuery.prop(this, obj[prop], type, index, prop)"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[345,616],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retrieve a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n * @desc Returns the src attribute from the first image in the document.\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a key/value object as properties to all matched elements.\n *\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n * @desc Sets src and alt attributes to all images.\n *\n * @name attr\n * @type jQuery\n * @param Map properties Key/value pairs to set as object properties.\n * @cat DOM/Attributes\n */\n\n/**\n * Set a single property to a value, on all matched elements.\n *\n * Can compute values provided as ${formula}, see second example.\n *\n * Note that you can't set the name property of input elements in IE.\n * Use $(html) or .append(html) or .html(html) to create elements\n * on the fly including the name property.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n * @desc Sets src attribute to all images.\n *\n * @example $(\"img\").attr(\"title\", \"${this.src}\");\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute, a shortcut for attr(String,Function)\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM/Attributes\n */\n \n/**\n * Set a single property to a computed value, on all matched elements.\n *\n * Instead of a value, a function is provided, that computes the value.\n *\n * @example $(\"img\").attr(\"title\", function() { return this.src });\n * @before <img src=\"test.jpg\" />\n * @result <img src=\"test.jpg\" title=\"test.jpg\" />\n * @desc Sets title attribute from src attribute.\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Function value A function returning the value to set.\n * @cat DOM/Attributes\n */\nattr: function( key, value, type ) {\n\tvar obj = key;\n\t\n\t// Look for the case where we're accessing a style value\n\tif ( key.constructor == String )\n\t\tif ( value == undefined )\n\t\t\treturn jQuery[ type || \"attr\" ]( this[0], key );\n\t\telse {\n\t\t\tobj = {};\n\t\t\tobj[ key ] = value;\n\t\t}\n\t\n\t// Check to see if we're setting style values\n\treturn this.each(function(){\n\t\t// Set all the styles\n\t\tfor ( var prop in obj )\n\t\t\tjQuery.attr(\n\t\t\t\ttype ? this.style : this,\n\t\t\t\tprop, jQuery.prop(this, obj[prop], type)\n\t\t\t);\n\t});\n},\n\n/**\n * Access a style property on the first matched element."}]},
{"id":"90e96e7ba3ee39247d43eb9cfd5328565c5f9f90","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[561,987],"code":"/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a = jQuery.clean(arguments);\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;\n\n\t\t// Move the matched element to within the wrap structure\n\t\tb.appendChild( this );\n\t});\n},\n\n/**\n * Append content to the inside of every matched element.\n *\n * This operation is similar to doing an appendChild to all the\n * specified elements, adding them into the document.\n *\n * @example $(\"p\").append(\"<b>Hello</b>\");\n * @before <p>I would like to say: </p>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends some HTML to all paragraphs.\n *\n * @example $(\"p\").append( $(\"#foo\")[0] );\n * @before <p>I would like to say: </p><b id=\"foo\">Hello</b>\n * @result <p>I would like to say: <b id=\"foo\">Hello</b></p>\n * @desc Appends an Element to all paragraphs.\n *\n * @example $(\"p\").append( $(\"b\") );\n * @before <p>I would like to say: </p><b>Hello</b>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\n *\n * @name append\n * @type jQuery\n * @param <Content> content Content to append to the target\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n * @see before(<Content>)\n * @see after(<Content>)\n */\nappend: function() {\n\treturn this.domManip(arguments, true, 1, function(a){\n\t\tthis.appendChild( a );\n\t});"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[556,984],"code":"/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided (which is generated, on the fly, from the provided HTML)\n * and finds the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap(\"<div class='wrap'></div>\");\n * @before <p>Test Paragraph.</p>\n * @result <div class='wrap'><p>Test Paragraph.</p></div>\n * \n * @name wrap\n * @type jQuery\n * @param String html A string of HTML, that will be created on the fly and wrapped around the target.\n * @cat DOM/Manipulation\n */\n\n/**\n * Wrap all matched elements with a structure of other elements.\n * This wrapping process is most useful for injecting additional\n * stucture into a document, without ruining the original semantic\n * qualities of a document.\n *\n * This works by going through the first element\n * provided and finding the deepest ancestor element within its\n * structure - it is that element that will en-wrap everything else.\n *\n\t * This does not work with elements that contain text. Any necessary text\n * must be added after the wrapping is done.\n *\n * @example $(\"p\").wrap( document.getElementById('content') );\n * @before <p>Test Paragraph.</p><div id=\"content\"></div>\n * @result <div id=\"content\"><p>Test Paragraph.</p></div>\n *\n * @name wrap\n * @type jQuery\n * @param Element elem A DOM element that will be wrapped around the target.\n * @cat DOM/Manipulation\n */\nwrap: function() {\n\t// The elements to wrap the target around\n\tvar a = jQuery.clean(arguments);\n\n\t// Wrap each of the matched elements individually\n\treturn this.each(function(){\n\t\t// Clone the structure that we're using to wrap\n\t\tvar b = a[0].cloneNode(true);\n\n\t\t// Insert it before the element to be wrapped\n\t\tthis.parentNode.insertBefore( b, this );\n\n\t\t// Find the deepest point in the wrap structure\n\t\twhile ( b.firstChild )\n\t\t\tb = b.firstChild;\n\n\t\t// Move the matched element to within the wrap structure\n\t\tb.appendChild( this );\n\t});\n},\n\n/**\n * Append content to the inside of every matched element.\n *\n * This operation is similar to doing an appendChild to all the\n * specified elements, adding them into the document.\n *\n * @example $(\"p\").append(\"<b>Hello</b>\");\n * @before <p>I would like to say: </p>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends some HTML to all paragraphs.\n *\n * @example $(\"p\").append( $(\"#foo\")[0] );\n * @before <p>I would like to say: </p><b id=\"foo\">Hello</b>\n * @result <p>I would like to say: <b id=\"foo\">Hello</b></p>\n * @desc Appends an Element to all paragraphs.\n *\n * @example $(\"p\").append( $(\"b\") );\n * @before <p>I would like to say: </p><b>Hello</b>\n * @result <p>I would like to say: <b>Hello</b></p>\n * @desc Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.\n *\n * @name append\n * @type jQuery\n * @param <Content> content Content to append to the target\n * @cat DOM/Manipulation\n * @see prepend(<Content>)\n * @see before(<Content>)\n * @see after(<Content>)\n */\nappend: function() {\n\treturn this.domManip(arguments, true, 1, function(a){\n\t\tthis.appendChild( a );\n\t});"}]},
{"id":"87f1949c21f379413775eab45172e3a3e937cc15","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[940,1103],"code":"/**\n * Adds more elements, matched by the given expression,\n * to the set of matched elements.\n *\n * @example $(\"p\").add(\"span\")\n * @before <p>Hello</p><span>Hello Again</span>\n * @result [ <p>Hello</p>, <span>Hello Again</span> ]\n *\n * @name add\n * @type jQuery\n * @param String expr An expression whose matched elements are added\n * @cat DOM/Traversing\n */\n \n/**\n * Adds more elements, created on the fly, to the set of\n * matched elements.\n *\n * @example $(\"p\").add(\"<span>Again</span>\")\n * @before <p>Hello</p>\n * @result [ <p>Hello</p>, <span>Again</span> ]\n *\n * @name add\n * @type jQuery\n * @param String html A string of HTML to create on the fly.\n * @cat DOM/Traversing\n */\n\n/**\n * Adds one or more Elements to the set of matched elements.\n *\n * @example $(\"p\").add( document.getElementById(\"a\") )\n * @before <p>Hello</p><p><span id=\"a\">Hello Again</span></p>\n * @result [ <p>Hello</p>, <span id=\"a\">Hello Again</span> ]\n *\n * @example $(\"p\").add( document.forms[0].elements )\n * @before <p>Hello</p><p><form><input/><button/></form>\n * @result [ <p>Hello</p>, <input/>, <button/> ]\n *\n * @name add\n * @type jQuery\n * @param Element|Array<Element> elements One or more Elements to add\n * @cat DOM/Traversing\n */\nadd: function(t) {\n\treturn this.pushStack( jQuery.merge(\n\t\tthis.get(),\n\t\tt.constructor == String ?\n\t\t\tjQuery(t).get() :\n\t\t\tt.length != undefined && !t.nodeName ?\n\t\t\t\tt : [t] )\n\t);\n},\n\n/**\n * Checks the current selection against an expression and returns true,\n * if at least one element of the selection fits the given expression.\n *\n * Does return false, if no element fits or the expression is not valid.\n *\n * filter(String) is used internally, therefore all rules that apply there\n * apply here, too.\n *\n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\n * @before <form><input type=\"checkbox\" /></form>\n * @result true\n * @desc Returns true, because the parent of the input is a form element\n * \n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\n * @before <form><p><input type=\"checkbox\" /></p></form>\n * @result false\n * @desc Returns false, because the parent of the input is a p element\n *\n * @name is\n * @type Boolean\n * @param String expr The expression with which to filter\n * @cat DOM/Traversing\n */\nis: function(expr) {\n\treturn expr ? jQuery.filter(expr,this).r.length > 0 : false;\n},\n\n/**\n * Get the current value of the first matched element.\n *\n * @example $(\"input\").val();\n * @before <input type=\"text\" value=\"some text\"/>\n * @result \"some text\"\n *\n * @name val\n * @type String\n * @cat DOM/Attributes\n */\n\n/**\n * Set the value of every matched element.\n *\n * @example $(\"input\").val(\"test\");\n * @before <input type=\"text\" value=\"some text\"/>\n * @result <input type=\"text\" value=\"test\"/>"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[935,1095],"code":"/**\n * Adds more elements, matched by the given expression,\n * to the set of matched elements.\n *\n * @example $(\"p\").add(\"span\")\n * @before <p>Hello</p><span>Hello Again</span>\n * @result [ <p>Hello</p>, <span>Hello Again</span> ]\n *\n * @name add\n * @type jQuery\n * @param String expr An expression whose matched elements are added\n * @cat DOM/Traversing\n */\n \n/**\n * Adds more elements, created on the fly, to the set of\n * matched elements.\n *\n * @example $(\"p\").add(\"<span>Again</span>\")\n * @before <p>Hello</p>\n * @result [ <p>Hello</p>, <span>Again</span> ]\n *\n * @name add\n * @type jQuery\n * @param String html A string of HTML to create on the fly.\n * @cat DOM/Traversing\n */\n\n/**\n * Adds one or more Elements to the set of matched elements.\n *\n * @example $(\"p\").add( document.getElementById(\"a\") )\n * @before <p>Hello</p><p><span id=\"a\">Hello Again</span></p>\n * @result [ <p>Hello</p>, <span id=\"a\">Hello Again</span> ]\n *\n * @example $(\"p\").add( document.forms[0].elements )\n * @before <p>Hello</p><p><form><input/><button/></form>\n * @result [ <p>Hello</p>, <input/>, <button/> ]\n *\n * @name add\n * @type jQuery\n * @param Element|Array<Element> elements One or more Elements to add\n * @cat DOM/Traversing\n */\nadd: function(t) {\n\treturn this.pushStack( jQuery.merge(\n\t\tthis.get(),\n\t\ttypeof t == \"string\" ? jQuery(t).get() : t )\n\t);\n},\n\n/**\n * Checks the current selection against an expression and returns true,\n * if at least one element of the selection fits the given expression.\n *\n * Does return false, if no element fits or the expression is not valid.\n *\n * filter(String) is used internally, therefore all rules that apply there\n * apply here, too.\n *\n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\n * @before <form><input type=\"checkbox\" /></form>\n * @result true\n * @desc Returns true, because the parent of the input is a form element\n * \n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\n * @before <form><p><input type=\"checkbox\" /></p></form>\n * @result false\n * @desc Returns false, because the parent of the input is a p element\n *\n * @name is\n * @type Boolean\n * @param String expr The expression with which to filter\n * @cat DOM/Traversing\n */\nis: function(expr) {\n\treturn expr ? jQuery.filter(expr,this).r.length > 0 : false;\n},\n\n/**\n * Get the current value of the first matched element.\n *\n * @example $(\"input\").val();\n * @before <input type=\"text\" value=\"some text\"/>\n * @result \"some text\"\n *\n * @name val\n * @type String\n * @cat DOM/Attributes\n */\n\n/**\n * Set the value of every matched element.\n *\n * @example $(\"input\").val(\"test\");\n * @before <input type=\"text\" value=\"some text\"/>\n * @result <input type=\"text\" value=\"test\"/>\n *\n * @name val\n * @type jQuery"}]},
{"id":"0b4f79a105a3dd038c802ac38785b07a3a868fde","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[1084,1221],"code":"\t/**\n\t * @private\n\t * @name domManip\n\t * @param Array args\n\t * @param Boolean table Insert TBODY in TABLEs if one is not found.\n\t * @param Number dir If dir<0, process args in reverse order.\n\t * @param Function fn The function doing the DOM manipulation.\n\t * @type jQuery\n\t * @cat Core\n\t */\n\tdomManip: function(args, table, dir, fn){\n\t\tvar clone = this.length > 1; \n\t\tvar a = jQuery.clean(args);\n\t\tif ( dir < 0 )\n\t\t\ta.reverse();\n\n\t\treturn this.each(function(){\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && jQuery.nodeName(this, \"table\") && jQuery.nodeName(a[0], \"tr\") )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\n\t\t\tjQuery.each( a, function(){\n\t\t\t\tfn.apply( obj, [ clone ? this.cloneNode(true) : this ] );\n\t\t\t});\n\n\t\t});\n\t}\n};\n\n/**\n * Extends the jQuery object itself. Can be used to add functions into\n * the jQuery namespace and to add plugin methods (plugins).\n * \n * @example jQuery.fn.extend({\n *   check: function() {\n *     return this.each(function() { this.checked = true; });\n *   },\n *   uncheck: function() {\n *     return this.each(function() { this.checked = false; });\n *   }\n * });\n * $(\"input[@type=checkbox]\").check();\n * $(\"input[@type=radio]\").uncheck();\n * @desc Adds two plugin methods.\n *\n * @example jQuery.extend({\n *   min: function(a, b) { return a < b ? a : b; },\n *   max: function(a, b) { return a > b ? a : b; }\n * });\n * @desc Adds two functions into the jQuery namespace\n *\n * @name $.extend\n * @param Object prop The object that will be merged into the jQuery object\n * @type Object\n * @cat Core\n */\n\n/**\n * Extend one object with one or more others, returning the original,\n * modified, object. This is a great utility for simple inheritance.\n * \n * @example var settings = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * jQuery.extend(settings, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n * @desc Merge settings and options, modifying settings\n *\n * @example var defaults = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * var settings = jQuery.extend({}, defaults, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n * @desc Merge defaults and options, without modifying the defaults\n *\n * @name $.extend\n * @param Object target The object to extend\n * @param Object prop1 The object that will be merged into the first.\n * @param Object propN (optional) More objects to merge into the first\n * @type Object\n * @cat JavaScript\n */\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0],\n\t\ta = 1;\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( arguments.length == 1 ) {\n\t\ttarget = this;\n\t\ta = 0;\n\t}\n\tvar prop;\n\twhile (prop = arguments[a++])\n\t\t// Extend the base object\n\t\tfor ( var i in prop ) target[i] = prop[i];\n\n\t// Return the modified object\n\treturn target;\n};\n"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1076,1213],"code":"\t/**\n\t * @private\n\t * @name domManip\n\t * @param Array args\n\t * @param Boolean table Insert TBODY in TABLEs if one is not found.\n\t * @param Number dir If dir<0, process args in reverse order.\n\t * @param Function fn The function doing the DOM manipulation.\n\t * @type jQuery\n\t * @cat Core\n\t */\n\tdomManip: function(args, table, dir, fn){\n\t\tvar clone = this.length > 1; \n\t\tvar a = jQuery.clean(args);\n\t\tif ( dir < 0 )\n\t\t\ta.reverse();\n\n\t\treturn this.each(function(){\n\t\t\tvar obj = this;\n\n\t\t\tif ( table && this.nodeName.toUpperCase() == \"TABLE\" && a[0].nodeName.toUpperCase() == \"TR\" )\n\t\t\t\tobj = this.getElementsByTagName(\"tbody\")[0] || this.appendChild(document.createElement(\"tbody\"));\n\n\t\t\tjQuery.each( a, function(){\n\t\t\t\tfn.apply( obj, [ clone ? this.cloneNode(true) : this ] );\n\t\t\t});\n\n\t\t});\n\t}\n};\n\n/**\n * Extends the jQuery object itself. Can be used to add functions into\n * the jQuery namespace and to add plugin methods (plugins).\n * \n * @example jQuery.fn.extend({\n *   check: function() {\n *     return this.each(function() { this.checked = true; });\n *   },\n *   uncheck: function() {\n *     return this.each(function() { this.checked = false; });\n *   }\n * });\n * $(\"input[@type=checkbox]\").check();\n * $(\"input[@type=radio]\").uncheck();\n * @desc Adds two plugin methods.\n *\n * @example jQuery.extend({\n *   min: function(a, b) { return a < b ? a : b; },\n *   max: function(a, b) { return a > b ? a : b; }\n * });\n * @desc Adds two functions into the jQuery namespace\n *\n * @name $.extend\n * @param Object prop The object that will be merged into the jQuery object\n * @type Object\n * @cat Core\n */\n\n/**\n * Extend one object with one or more others, returning the original,\n * modified, object. This is a great utility for simple inheritance.\n * \n * @example var settings = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * jQuery.extend(settings, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n * @desc Merge settings and options, modifying settings\n *\n * @example var defaults = { validate: false, limit: 5, name: \"foo\" };\n * var options = { validate: true, name: \"bar\" };\n * var settings = jQuery.extend({}, defaults, options);\n * @result settings == { validate: true, limit: 5, name: \"bar\" }\n * @desc Merge defaults and options, without modifying the defaults\n *\n * @name $.extend\n * @param Object target The object to extend\n * @param Object prop1 The object that will be merged into the first.\n * @param Object propN (optional) More objects to merge into the first\n * @type Object\n * @cat JavaScript\n */\njQuery.extend = jQuery.fn.extend = function() {\n\t// copy reference to target object\n\tvar target = arguments[0],\n\t\ta = 1;\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( arguments.length == 1 ) {\n\t\ttarget = this;\n\t\ta = 0;\n\t}\n\tvar prop;\n\twhile (prop = arguments[a++])\n\t\t// Extend the base object\n\t\tfor ( var i in prop ) target[i] = prop[i];\n\n\t// Return the modified object\n\treturn target;\n};\n"}]},
{"id":"ba8a101567263cd52348c3b543414edbe749a322","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[1236,1275],"code":"/**\n * A generic iterator function, which can be used to seemlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * The callback has two arguments:the key (objects) or index (arrays) as first\n * the first, and the value as the second.\n *\n * @example $.each( [0,1,2], function(i, n){\n *   alert( \"Item #\" + i + \": \" + n );\n * });\n * @desc This is an example of iterating over the items in an array,\n * accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n *   alert( \"Name: \" + i + \", Value: \" + n );\n * });\n *\n * @desc This is an example of iterating over the properties in an\n * Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat JavaScript\n */\n// args is for internal usage only\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )\n\t\t\tif ( fn.apply( obj[i], args || [i, obj[i]] ) === false ) break;\n\treturn obj;\n},\n\nprop: function(elem, value, type, index, prop){"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1220,1259],"code":"/**\n * A generic iterator function, which can be used to seemlessly\n * iterate over both objects and arrays. This function is not the same\n * as $().each() - which is used to iterate, exclusively, over a jQuery\n * object. This function can be used to iterate over anything.\n *\n * The callback has two arguments:the key (objects) or index (arrays) as first\n * the first, and the value as the second.\n *\n * @example $.each( [0,1,2], function(i, n){\n *   alert( \"Item #\" + i + \": \" + n );\n * });\n * @desc This is an example of iterating over the items in an array,\n * accessing both the current item and its index.\n *\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n *   alert( \"Name: \" + i + \", Value: \" + n );\n * });\n *\n * @desc This is an example of iterating over the properties in an\n * Object, accessing both the current item and its key.\n *\n * @name $.each\n * @param Object obj The object, or array, to iterate over.\n * @param Function fn The function that will be executed on every object.\n * @type Object\n * @cat JavaScript\n */\n// args is for internal usage only\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0, ol = obj.length; i < ol; i++ )\n\t\t\tif ( fn.apply( obj[i], args || [i, obj[i]] ) === false ) break;\n\treturn obj;\n},\n\nprop: function(elem, value, type){"}]},
{"id":"86c17a034d0e0b05154f48a5099220101302a6cf","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[1285,1444],"code":"\t\t\treturn value + \"px\";\n\n\t\treturn value;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){\n\t\t\tif ( !jQuery.className.has( elem.className, cur ) )\n\t\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + cur;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, c ){\n\t\telem.className = c ?\n\t\t\tjQuery.grep( elem.className.split(/\\s+/), function(cur){\n\t\t\t\treturn !jQuery.className.has( c, cur );\t\n\t\t\t}).join(\" \") : \"\";\n\t},\n\n\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\tt = t.className || t;\n\t\treturn t && new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\").test( t );\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))\n\t\t\t\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t\t\t\t.css({\n\t\t\t\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t\t\t\t}).appendTo(e.parentNode)[0];\n\n\t\t\t\tvar parPos = jQuery.css(e.parentNode,\"position\");\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"relative\";\n\n\t\t\t\toHeight = e.clientHeight;\n\t\t\t\toWidth = e.clientWidth;\n\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"static\";\n\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p == \"height\" ? oHeight : oWidth;\n\t}\n\n\treturn jQuery.curCSS( e, p );\n},\n\ncurCSS: function(elem, prop, force) {\n\tvar ret;\n\t\n\tif (prop == \"opacity\" && jQuery.browser.msie)\n\t\treturn jQuery.attr(elem.style, \"opacity\");\n\t\t\n\tif (prop == \"float\" || prop == \"cssFloat\")\n\t    prop = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\";\n\n\tif (!force && elem.style[prop])\n\t\tret = elem.style[prop];\n\n\telse if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\t\tif (prop == \"cssFloat\" || prop == \"styleFloat\")\n\t\t\tprop = \"float\";\n"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1266,1425],"code":"\t\t\treturn value + \"px\";\n\n\t\treturn value;\n},\n\nclassName: {\n\t// internal only, use addClass(\"class\")\n\tadd: function( elem, c ){\n\t\tjQuery.each( c.split(/\\s+/), function(i, cur){\n\t\t\tif ( !jQuery.className.has( elem.className, cur ) )\n\t\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + cur;\n\t\t});\n\t},\n\n\t// internal only, use removeClass(\"class\")\n\tremove: function( elem, c ){\n\t\telem.className = c ?\n\t\t\tjQuery.grep( elem.className.split(/\\s+/), function(cur){\n\t\t\t\treturn !jQuery.className.has( c, cur );\t\n\t\t\t}).join(\" \") : \"\";\n\t},\n\n\t// internal only, use is(\".class\")\n\thas: function( t, c ) {\n\t\tt = t.className || t;\n\t\treturn t && new RegExp(\"(^|\\\\s)\" + c + \"(\\\\s|$)\").test( t );\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\n\n\t\tjQuery.each( d, function(){\n\t\t\told[\"padding\" + this] = 0;\n\t\t\told[\"border\" + this + \"Width\"] = 0;\n\t\t});\n\n\t\tjQuery.swap( e, old, function() {\n\t\t\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\t\t\toHeight = e.offsetHeight;\n\t\t\t\toWidth = e.offsetWidth;\n\t\t\t} else {\n\t\t\t\te = jQuery(e.cloneNode(true))\n\t\t\t\t\t.find(\":radio\").removeAttr(\"checked\").end()\n\t\t\t\t\t.css({\n\t\t\t\t\t\tvisibility: \"hidden\", position: \"absolute\", display: \"block\", right: \"0\", left: \"0\"\n\t\t\t\t\t}).appendTo(e.parentNode)[0];\n\n\t\t\t\tvar parPos = jQuery.css(e.parentNode,\"position\");\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"relative\";\n\n\t\t\t\toHeight = e.clientHeight;\n\t\t\t\toWidth = e.clientWidth;\n\n\t\t\t\tif ( parPos == \"\" || parPos == \"static\" )\n\t\t\t\t\te.parentNode.style.position = \"static\";\n\n\t\t\t\te.parentNode.removeChild(e);\n\t\t\t}\n\t\t});\n\n\t\treturn p == \"height\" ? oHeight : oWidth;\n\t}\n\n\treturn jQuery.curCSS( e, p );\n},\n\ncurCSS: function(elem, prop, force) {\n\tvar ret;\n\t\n\tif (prop == \"opacity\" && jQuery.browser.msie)\n\t\treturn jQuery.attr(elem.style, \"opacity\");\n\t\t\n\tif (prop == \"float\" || prop == \"cssFloat\")\n\t    prop = jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\";\n\n\tif (!force && elem.style[prop])\n\t\tret = elem.style[prop];\n\n\telse if (document.defaultView && document.defaultView.getComputedStyle) {\n\n\t\tif (prop == \"cssFloat\" || prop == \"styleFloat\")\n\t\t\tprop = \"float\";\n"}]},
{"id":"b20a216104e1ff915fdb19306bedf7145e3549d0","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[1442,1458],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1423,1439],"code":"// Move to the right depth\nwhile ( wrap[0]-- )\n\tdiv = div.firstChild;\n\n// Remove IE's autoinserted <tbody> from table fragments\nif ( jQuery.browser.msie ) {\n\t\n\t// String was a <table>, *may* have spurious <tbody>\n\tif ( !s.indexOf(\"<table\") && s.indexOf(\"<tbody\") < 0 ) \n\t\ttb = div.firstChild && div.firstChild.childNodes;\n\t\t\n\t// String was a bare <thead> or <tfoot>\n\telse if ( wrap[1] == \"<table>\" && s.indexOf(\"<tbody\") < 0 )\n\t\ttb = div.childNodes;\n\n\tfor ( var n = tb.length-1; n >= 0 ; --n )\n\t\tif ( tb[n].nodeName.toUpperCase() == \"TBODY\" && !tb[n].childNodes.length )"}]},
{"id":"d3b7697b39f367f4260dbf095ea0e48548698a05","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[1458,1517],"code":"\t\t\t\t\tif ( jQuery.nodeName(tb[n], \"tbody\") && !tb[n].childNodes.length )\n\t\t\t\t\t\ttb[n].parentNode.removeChild(tb[n]);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\targ = div.childNodes;\n\t\t}\n\n\t\tif ( arg.length === 0 )\n\t\t\treturn;\n\t\t\n\t\tif ( arg[0] == undefined )\n\t\t\tr.push( arg );\n\t\telse\n\t\t\tr = jQuery.merge( r, arg );\n\n\t});\n\n\treturn r;\n},\n\nattr: function(elem, name, value){\n\tvar fix = {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\t\tcssFloat: jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\"\n\t};\n\t\n\t// IE actually uses filters for opacity ... elem is actually elem.style\n\tif ( name == \"opacity\" && jQuery.browser.msie && value != undefined ) {\n\t\t// IE has trouble with opacity if it does not have layout\n\t\t// Force it by setting the zoom level\n\t\telem.zoom = 1; \n\n\t\t// Set the alpha filter to set the opacity\n\t\treturn elem.filter = elem.filter.replace(/alpha\\([^\\)]*\\)/gi,\"\") +\n\t\t\t( value == 1 ? \"\" : \"alpha(opacity=\" + value * 100 + \")\" );\n\n\t} else if ( name == \"opacity\" && jQuery.browser.msie )\n\t\treturn elem.filter ? \n\t\t\tparseFloat( elem.filter.match(/alpha\\(opacity=(.*)\\)/)[1] ) / 100 : 1;\n\t\n\t// Mozilla doesn't play well with opacity 1\n\tif ( name == \"opacity\" && jQuery.browser.mozilla && value == 1 )\n\t\tvalue = 0.9999;\n\n\t// Certain attributes only work when accessed via the old DOM 0 way\n\tif ( fix[name] ) {\n\t\tif ( value != undefined ) elem[fix[name]] = value;\n\t\treturn elem[fix[name]];\n\n\t} else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )"},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1439,1498],"code":"\t\t\t\t\tif ( tb[n].nodeName.toUpperCase() == \"TBODY\" && !tb[n].childNodes.length )\n\t\t\t\t\t\ttb[n].parentNode.removeChild(tb[n]);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\targ = div.childNodes;\n\t\t}\n\n\t\tif ( arg.length === 0 )\n\t\t\treturn;\n\t\t\n\t\tif ( arg[0] == undefined )\n\t\t\tr.push( arg );\n\t\telse\n\t\t\tr = jQuery.merge( r, arg );\n\n\t});\n\n\treturn r;\n},\n\nattr: function(elem, name, value){\n\tvar fix = {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\",\n\t\t\"float\": jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\t\tcssFloat: jQuery.browser.msie ? \"styleFloat\" : \"cssFloat\",\n\t\tinnerHTML: \"innerHTML\",\n\t\tclassName: \"className\",\n\t\tvalue: \"value\",\n\t\tdisabled: \"disabled\",\n\t\tchecked: \"checked\",\n\t\treadonly: \"readOnly\",\n\t\tselected: \"selected\"\n\t};\n\t\n\t// IE actually uses filters for opacity ... elem is actually elem.style\n\tif ( name == \"opacity\" && jQuery.browser.msie && value != undefined ) {\n\t\t// IE has trouble with opacity if it does not have layout\n\t\t// Force it by setting the zoom level\n\t\telem.zoom = 1; \n\n\t\t// Set the alpha filter to set the opacity\n\t\treturn elem.filter = elem.filter.replace(/alpha\\([^\\)]*\\)/gi,\"\") +\n\t\t\t( value == 1 ? \"\" : \"alpha(opacity=\" + value * 100 + \")\" );\n\n\t} else if ( name == \"opacity\" && jQuery.browser.msie )\n\t\treturn elem.filter ? \n\t\t\tparseFloat( elem.filter.match(/alpha\\(opacity=(.*)\\)/)[1] ) / 100 : 1;\n\t\n\t// Mozilla doesn't play well with opacity 1\n\tif ( name == \"opacity\" && jQuery.browser.mozilla && value == 1 )\n\t\tvalue = 0.9999;\n\n\t// Certain attributes only work when accessed via the old DOM 0 way\n\tif ( fix[name] ) {\n\t\tif ( value != undefined ) elem[fix[name]] = value;\n\t\treturn elem[fix[name]];\n\n\t} else if ( value == undefined && jQuery.browser.msie && elem.nodeName && elem.nodeName.toUpperCase() == \"FORM\" && (name == \"action\" || name == \"method\") )"}]},
{"id":"da5873c94c9d7da4a00ca10e81eae1d0385222e1","instances":[{"path":"./jquery-data/1.1.1/src/jquery/jquery.js","lines":[1517,2249],"code":"\t\t} else if ( value == undefined && jQuery.browser.msie && jQuery.nodeName(elem, \"form\") && (name == \"action\" || name == \"method\") )\n\t\t\treturn elem.getAttributeNode(name).nodeValue;\n\n\t\t// IE elem.getAttribute passes even for style\n\t\telse if ( elem.tagName ) {\n\t\t\tif ( value != undefined ) elem.setAttribute( name, value );\n\t\t\treturn elem.getAttribute( name );\n\n\t\t} else {\n\t\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\t\tif ( value != undefined ) elem[name] = value;\n\t\t\treturn elem[name];\n\t\t}\n\t},\n\t\n\t/**\n\t * Remove the whitespace from the beginning and end of a string.\n\t *\n\t * @example $.trim(\"  hello, how are you?  \");\n\t * @result \"hello, how are you?\"\n\t *\n\t * @name $.trim\n\t * @type String\n\t * @param String str The string to trim.\n\t * @cat JavaScript\n\t */\n\ttrim: function(t){\n\t\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n\t},\n\n\tmakeArray: function( a ) {\n\t\tvar r = [];\n\n\t\tif ( a.constructor != Array )\n\t\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\t\tr.push( a[i] );\n\t\telse\n\t\t\tr = a.slice( 0 );\n\n\t\treturn r;\n\t},\n\n\tinArray: function( b, a ) {\n\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\tif ( a[i] == b )\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Merge two arrays together, removing all duplicates.\n\t *\n\t * The result is the altered first argument with\n\t * the unique elements from the second array added.\n\t *\n\t * @example $.merge( [0,1,2], [2,3,4] )\n\t * @result [0,1,2,3,4]\n\t * @desc Merges two arrays, removing the duplicate 2\n\t *\n\t * @example var array = [3,2,1];\n\t * $.merge( array, [4,3,2] )\n\t * @result array == [3,2,1,4]\n\t * @desc Merges two arrays, removing the duplicates 3 and 2\n\t *\n\t * @name $.merge\n\t * @type Array\n\t * @param Array first The first array to merge, the unique elements of second added.\n\t * @param Array second The second array to merge into the first, unaltered.\n\t * @cat JavaScript\n\t */\n\tmerge: function(first, second) {\n\t\tvar r = [].slice.call( first, 0 );\n\n\t\t// Now check for duplicates between the two arrays\n\t\t// and only add the unique items\n\t\tfor ( var i = 0, sl = second.length; i < sl; i++ )\n\t\t\t// Check for duplicates\n\t\t\tif ( jQuery.inArray( second[i], r ) == -1 )\n\t\t\t\t// The item is unique, add it\n\t\t\t\tfirst.push( second[i] );\n\n\t\treturn first;\n\t},\n\n\t/**\n\t * Filter items out of an array, by using a filter function.\n\t *\n\t * The specified function will be passed two arguments: The\n\t * current array item and the index of the item in the array. The\n\t * function must return 'true' to keep the item in the array, \n\t * false to remove it.\n\t *\n\t * @example $.grep( [0,1,2], function(i){\n\t *   return i > 0;\n\t * });\n\t * @result [1, 2]\n\t *\n\t * @name $.grep\n\t * @type Array\n\t * @param Array array The Array to find items in."},{"path":"./jquery-data/1.1/src/jquery/jquery.js","lines":[1498,2229],"code":"\t\t} else if ( value == undefined && jQuery.browser.msie && elem.nodeName && elem.nodeName.toUpperCase() == \"FORM\" && (name == \"action\" || name == \"method\") )\n\t\t\treturn elem.getAttributeNode(name).nodeValue;\n\n\t\t// IE elem.getAttribute passes even for style\n\t\telse if ( elem.tagName ) {\n\t\t\tif ( value != undefined ) elem.setAttribute( name, value );\n\t\t\treturn elem.getAttribute( name );\n\n\t\t} else {\n\t\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\t\tif ( value != undefined ) elem[name] = value;\n\t\t\treturn elem[name];\n\t\t}\n\t},\n\t\n\t/**\n\t * Remove the whitespace from the beginning and end of a string.\n\t *\n\t * @example $.trim(\"  hello, how are you?  \");\n\t * @result \"hello, how are you?\"\n\t *\n\t * @name $.trim\n\t * @type String\n\t * @param String str The string to trim.\n\t * @cat JavaScript\n\t */\n\ttrim: function(t){\n\t\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n\t},\n\n\tmakeArray: function( a ) {\n\t\tvar r = [];\n\n\t\tif ( a.constructor != Array )\n\t\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\t\tr.push( a[i] );\n\t\telse\n\t\t\tr = a.slice( 0 );\n\n\t\treturn r;\n\t},\n\n\tinArray: function( b, a ) {\n\t\tfor ( var i = 0, al = a.length; i < al; i++ )\n\t\t\tif ( a[i] == b )\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Merge two arrays together, removing all duplicates.\n\t *\n\t * The new array is: All the results from the first array, followed\n\t * by the unique results from the second array.\n\t *\n\t * @example $.merge( [0,1,2], [2,3,4] )\n\t * @result [0,1,2,3,4]\n\t * @desc Merges two arrays, removing the duplicate 2\n\t *\n\t * @example $.merge( [3,2,1], [4,3,2] )\n\t * @result [3,2,1,4]\n\t * @desc Merges two arrays, removing the duplicates 3 and 2\n\t *\n\t * @name $.merge\n\t * @type Array\n\t * @param Array first The first array to merge.\n\t * @param Array second The second array to merge.\n\t * @cat JavaScript\n\t */\n\tmerge: function(first, second) {\n\t\tvar r = [].slice.call( first, 0 );\n\n\t\t// Now check for duplicates between the two arrays\n\t\t// and only add the unique items\n\t\tfor ( var i = 0, sl = second.length; i < sl; i++ )\n\t\t\t// Check for duplicates\n\t\t\tif ( jQuery.inArray( second[i], r ) == -1 )\n\t\t\t\t// The item is unique, add it\n\t\t\t\tfirst.push( second[i] );\n\n\t\treturn first;\n\t},\n\n\t/**\n\t * Filter items out of an array, by using a filter function.\n\t *\n\t * The specified function will be passed two arguments: The\n\t * current array item and the index of the item in the array. The\n\t * function must return 'true' to keep the item in the array, \n\t * false to remove it.\n\t *\n\t * @example $.grep( [0,1,2], function(i){\n\t *   return i > 0;\n\t * });\n\t * @result [1, 2]\n\t *\n\t * @name $.grep\n\t * @type Array\n\t * @param Array array The Array to find items in.\n\t * @param Function fn The function to process each item against."}]},
{"id":"c39d20c4172ccdee64efefdb3b644aeb4734b7cf","instances":[{"path":"./jquery-data/1.1.1/src/selector/selector.js","lines":[4,50],"code":"\"#\": \"a.getAttribute('id')==m[2]\",\n\":\": {\n\t// Position Checks\n\tlt: \"i<m[3]-0\",\n\tgt: \"i>m[3]-0\",\n\tnth: \"m[3]-0==i\",\n\teq: \"m[3]-0==i\",\n\tfirst: \"i==0\",\n\tlast: \"i==r.length-1\",\n\teven: \"i%2==0\",\n\todd: \"i%2\",\n\n\t// Child Checks\n\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\",\n\t\"first-child\": \"jQuery.nth(a.parentNode.firstChild,1,'nextSibling')==a\",\n\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\"only-child\": \"jQuery.sibling(a.parentNode.firstChild).length==1\",\n\n\t// Parent Checks\n\tparent: \"a.firstChild\",\n\tempty: \"!a.firstChild\",\n\n\t// Text Check\n\tcontains: \"jQuery.fn.text.apply([a]).indexOf(m[3])>=0\",\n\n\t// Visibility\n\tvisible: 'a.type!=\"hidden\"&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\thidden: 'a.type==\"hidden\"||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t// Form attributes\n\tenabled: \"!a.disabled\",\n\tdisabled: \"a.disabled\",\n\tchecked: \"a.checked\",\n\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t// Form elements\n\ttext: \"a.type=='text'\",\n\tradio: \"a.type=='radio'\",\n\tcheckbox: \"a.type=='checkbox'\",\n\tfile: \"a.type=='file'\",\n\tpassword: \"a.type=='password'\",\n\tsubmit: \"a.type=='submit'\",\n\timage: \"a.type=='image'\",\n\treset: \"a.type=='reset'\",\n\tbutton: 'a.type==\"button\"||jQuery.nodeName(a,\"button\")',\n\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n},"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[4,50],"code":"\"#\": \"a.getAttribute('id')==m[2]\",\n\":\": {\n\t// Position Checks\n\tlt: \"i<m[3]-0\",\n\tgt: \"i>m[3]-0\",\n\tnth: \"m[3]-0==i\",\n\teq: \"m[3]-0==i\",\n\tfirst: \"i==0\",\n\tlast: \"i==r.length-1\",\n\teven: \"i%2==0\",\n\todd: \"i%2\",\n\n\t// Child Checks\n\t\"nth-child\": \"jQuery.nth(a.parentNode.firstChild,m[3],'nextSibling',a)==a\",\n\t\"first-child\": \"jQuery.nth(a.parentNode.firstChild,1,'nextSibling')==a\",\n\t\"last-child\": \"jQuery.nth(a.parentNode.lastChild,1,'previousSibling')==a\",\n\t\"only-child\": \"jQuery.sibling(a.parentNode.firstChild).length==1\",\n\n\t// Parent Checks\n\tparent: \"a.firstChild\",\n\tempty: \"!a.firstChild\",\n\n\t// Text Check\n\tcontains: \"jQuery.fn.text.apply([a]).indexOf(m[3])>=0\",\n\n\t// Visibility\n\tvisible: 'a.type!=\"hidden\"&&jQuery.css(a,\"display\")!=\"none\"&&jQuery.css(a,\"visibility\")!=\"hidden\"',\n\thidden: 'a.type==\"hidden\"||jQuery.css(a,\"display\")==\"none\"||jQuery.css(a,\"visibility\")==\"hidden\"',\n\n\t// Form attributes\n\tenabled: \"!a.disabled\",\n\tdisabled: \"a.disabled\",\n\tchecked: \"a.checked\",\n\tselected: \"a.selected||jQuery.attr(a,'selected')\",\n\n\t// Form elements\n\ttext: \"a.type=='text'\",\n\tradio: \"a.type=='radio'\",\n\tcheckbox: \"a.type=='checkbox'\",\n\tfile: \"a.type=='file'\",\n\tpassword: \"a.type=='password'\",\n\tsubmit: \"a.type=='submit'\",\n\timage: \"a.type=='image'\",\n\treset: \"a.type=='reset'\",\n\tbutton: 'a.type==\"button\"||a.nodeName==\"BUTTON\"',\n\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n},"}]},
{"id":"01d9f64c15ede394efca6c15812156f28aea8d7c","instances":[{"path":"./jquery-data/1.1.1/src/selector/selector.js","lines":[49,151],"code":"\t\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n\t},\n\t\".\": \"jQuery.className.has(a,m[2])\",\n\t\"@\": {\n\t\t\"=\": \"z==m[4]\",\n\t\t\"!=\": \"z!=m[4]\",\n\t\t\"^=\": \"z&&!z.indexOf(m[4])\",\n\t\t\"$=\": \"z&&z.substr(z.length - m[4].length,m[4].length)==m[4]\",\n\t\t\"*=\": \"z&&z.indexOf(m[4])>=0\",\n\t\t\"\": \"z\",\n\t\t_resort: function(m){\n\t\t\treturn [\"\", m[1], m[3], m[2], m[5]];\n\t\t},\n\t\t_prefix: \"z=a[m[3]]||jQuery.attr(a,m[3]);\"\n\t},\n\t\"[\": \"jQuery.find(m[2],a).length\"\n},\n\n// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([a-z0-9_-]*) *([!*$^=]*) *('?\"?)(.*?)\\4 *\\]/i,\n\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([a-z0-9_-]*)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/i,\n\n\t// Match: :even, :last-chlid\n\t/^([:.#]*)([a-z0-9_*-]*)/i\n],\n\ntoken: [\n\t/^(\\/?\\.\\.)/, \"a.parentNode\",\n\t/^(>|\\/)/, \"jQuery.sibling(a.firstChild)\",\n\t/^(\\+)/, \"jQuery.nth(a,2,'nextSibling')\",\n\t/^(~)/, function(a){\n\t\tvar s = jQuery.sibling(a.parentNode.firstChild);\n\t\treturn s.slice(0, jQuery.inArray(a,s));\n\t}\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last = null;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//i, \"\" );\n\n\t\tvar foundToken = false;\n"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[49,151],"code":"\t\tinput: \"/input|select|textarea|button/i.test(a.nodeName)\"\n\t},\n\t\".\": \"jQuery.className.has(a,m[2])\",\n\t\"@\": {\n\t\t\"=\": \"z==m[4]\",\n\t\t\"!=\": \"z!=m[4]\",\n\t\t\"^=\": \"z&&!z.indexOf(m[4])\",\n\t\t\"$=\": \"z&&z.substr(z.length - m[4].length,m[4].length)==m[4]\",\n\t\t\"*=\": \"z&&z.indexOf(m[4])>=0\",\n\t\t\"\": \"z\",\n\t\t_resort: function(m){\n\t\t\treturn [\"\", m[1], m[3], m[2], m[5]];\n\t\t},\n\t\t_prefix: \"z=a[m[3]]||jQuery.attr(a,m[3]);\"\n\t},\n\t\"[\": \"jQuery.find(m[2],a).length\"\n},\n\n// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t/^\\[ *(@)([a-z0-9_-]*) *([!*$^=]*) *('?\"?)(.*?)\\4 *\\]/i,\n\n\t// Match: [div], [div p]\n\t/^(\\[)\\s*(.*?(\\[.*?\\])?[^[]*?)\\s*\\]/,\n\n\t// Match: :contains('foo')\n\t/^(:)([a-z0-9_-]*)\\(\"?'?(.*?(\\(.*?\\))?[^(]*?)\"?'?\\)/i,\n\n\t// Match: :even, :last-chlid\n\t/^([:.#]*)([a-z0-9_*-]*)/i\n],\n\ntoken: [\n\t/^(\\/?\\.\\.)/, \"a.parentNode\",\n\t/^(>|\\/)/, \"jQuery.sibling(a.firstChild)\",\n\t/^(\\+)/, \"jQuery.nth(a,2,'nextSibling')\",\n\t/^(~)/, function(a){\n\t\tvar s = jQuery.sibling(a.parentNode.firstChild);\n\t\treturn s.slice(0, jQuery.inArray(a,s));\n\t}\n],\n\nmultiFilter: function( expr, elems, not ) {\n\tvar old, cur = [];\n\n\twhile ( expr && expr != old ) {\n\t\told = expr;\n\t\tvar f = jQuery.filter( expr, elems, not );\n\t\texpr = f.t.replace(/^\\s*,\\s*/, \"\" );\n\t\tcur = not ? elems = f.r : jQuery.merge( cur, f.r );\n\t}\n\n\treturn cur;\n},\n\n/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last = null;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//i, \"\" );\n\n\t\tvar foundToken = false;\n"}]},
{"id":"5249ba4fc287d702ddc5a8759d788a0630000ece","instances":[{"path":"./jquery-data/1.1.1/src/selector/selector.js","lines":[149,158],"code":"// An attempt at speeding up child selectors that\n// point to a specific element tag\nvar re = /^[\\/>]\\s*([a-z0-9*-]+)/i;\nvar m = re.exec(t);\n\nif ( m ) {\n\t// Perform our own iteration and filter\n\tjQuery.each( ret, function(){\n\t\tfor ( var c = this.firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && ( jQuery.nodeName(c, m[1]) || m[1] == \"*\" ) )"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[149,158],"code":"// An attempt at speeding up child selectors that\n// point to a specific element tag\nvar re = /^[\\/>]\\s*([a-z0-9*-]+)/i;\nvar m = re.exec(t);\n\nif ( m ) {\n\t// Perform our own iteration and filter\n\tjQuery.each( ret, function(){\n\t\tfor ( var c = this.firstChild; c; c = c.nextSibling )\n\t\t\tif ( c.nodeType == 1 && ( c.nodeName == m[1].toUpperCase() || m[1] == \"*\" ) )"}]},
{"id":"defc97923b76e2c32c5bd9162868824ce2e6da8c","instances":[{"path":"./jquery-data/1.1.1/src/selector/selector.js","lines":[165,230],"code":"\tfoundToken = true;\n} else {\n\t// Look for pre-defined expression tokens\n\tfor ( var i = 0; i < jQuery.token.length; i += 2 ) {\n\t\t// Attempt to match each, individual, token in\n\t\t// the specified order\n\t\tvar re = jQuery.token[i];\n\t\tvar m = re.exec(t);\n\n\t\t// If the token match was found\n\t\tif ( m ) {\n\t\t\t// Map it against the token's handler\n\t\t\tr = ret = jQuery.map( ret, jQuery.isFunction( jQuery.token[i+1] ) ?\n\t\t\t\tjQuery.token[i+1] :\n\t\t\t\tfunction(a){ return eval(jQuery.token[i+1]); });\n\n\t\t\t// And remove the token\n\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\tfoundToken = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( ret[0] == context ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tjQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optomize for the case nodeName#idName\n\t\tvar re2 = /^([a-z0-9_-]+)(#)([a-z0-9\\\\*_-]*)/i;\n\t\tvar m = re2.exec(t);\n\t\t\n\t\t// Re-organize the results, so that they're consistent\n\t\tif ( m ) {\n\t\t   m = [ 0, m[2], m[3], m[1] ];\n\n\t\t} else {\n\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t// ID, class, and element selectors\n\t\t\tre2 = /^([#.]?)([a-z0-9\\\\*_-]*)/i;\n\t\t\tm = re2.exec(t);\n\t\t}\n\n\t\t// Try to do a global search by ID, where we can\n\t\tif ( m[1] == \"#\" && ret[ret.length-1].getElementById ) {\n\t\t\t// Optimization for HTML document case\n\t\t\tvar oid = ret[ret.length-1].getElementById(m[2]);\n\n\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t// that div#foo searches will be really fast\n\t\t\tret = r = oid && \n\t\t\t  (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[164,229],"code":"\tfoundToken = true;\n} else {\n\t// Look for pre-defined expression tokens\n\tfor ( var i = 0; i < jQuery.token.length; i += 2 ) {\n\t\t// Attempt to match each, individual, token in\n\t\t// the specified order\n\t\tvar re = jQuery.token[i];\n\t\tvar m = re.exec(t);\n\n\t\t// If the token match was found\n\t\tif ( m ) {\n\t\t\t// Map it against the token's handler\n\t\t\tr = ret = jQuery.map( ret, jQuery.isFunction( jQuery.token[i+1] ) ?\n\t\t\t\tjQuery.token[i+1] :\n\t\t\t\tfunction(a){ return eval(jQuery.token[i+1]); });\n\n\t\t\t// And remove the token\n\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\tfoundToken = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// See if there's still an expression, and that we haven't already\n// matched a token\nif ( t && !foundToken ) {\n\t// Handle multiple expressions\n\tif ( !t.indexOf(\",\") ) {\n\t\t// Clean the result set\n\t\tif ( ret[0] == context ) ret.shift();\n\n\t\t// Merge the result sets\n\t\tjQuery.merge( done, ret );\n\n\t\t// Reset the context\n\t\tr = ret = [context];\n\n\t\t// Touch up the selector string\n\t\tt = \" \" + t.substr(1,t.length);\n\n\t} else {\n\t\t// Optomize for the case nodeName#idName\n\t\tvar re2 = /^([a-z0-9_-]+)(#)([a-z0-9\\\\*_-]*)/i;\n\t\tvar m = re2.exec(t);\n\t\t\n\t\t// Re-organize the results, so that they're consistent\n\t\tif ( m ) {\n\t\t   m = [ 0, m[2], m[3], m[1] ];\n\n\t\t} else {\n\t\t\t// Otherwise, do a traditional filter check for\n\t\t\t// ID, class, and element selectors\n\t\t\tre2 = /^([#.]?)([a-z0-9\\\\*_-]*)/i;\n\t\t\tm = re2.exec(t);\n\t\t}\n\n\t\t// Try to do a global search by ID, where we can\n\t\tif ( m[1] == \"#\" && ret[ret.length-1].getElementById ) {\n\t\t\t// Optimization for HTML document case\n\t\t\tvar oid = ret[ret.length-1].getElementById(m[2]);\n\n\t\t\t// Do a quick check for node name (where applicable) so\n\t\t\t// that div#foo searches will be really fast\n\t\t\tret = r = oid && \n\t\t\t  (!m[3] || oid.nodeName == m[3].toUpperCase()) ? [oid] : [];"}]},
{"id":"2e31f4cb39debe54e837918ec40c0b0083741122","instances":[{"path":"./jquery-data/1.1.1/src/selector/selector.js","lines":[230,245],"code":"\t  (!m[3] || jQuery.nodeName(oid, m[3])) ? [oid] : [];\n\n} else {\n\t// Pre-compile a regular expression to handle class searches\n\tif ( m[1] == \".\" )\n\t\tvar rec = new RegExp(\"(^|\\\\s)\" + m[2] + \"(\\\\s|$)\");\n\n\t// We need to find all descendant elements, it is more\n\t// efficient to use getAll() when we are already further down\n\t// the tree - we try to recognize that here\n\tjQuery.each( ret, function(){\n\t\t// Grab the tag name being searched for\n\t\tvar tag = m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];\n\n\t\t// Handle IE7 being really dumb about <object>s\n\t\tif ( jQuery.nodeName(this, \"object\") && tag == \"*\" )"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[229,244],"code":"\t  (!m[3] || oid.nodeName == m[3].toUpperCase()) ? [oid] : [];\n\n} else {\n\t// Pre-compile a regular expression to handle class searches\n\tif ( m[1] == \".\" )\n\t\tvar rec = new RegExp(\"(^|\\\\s)\" + m[2] + \"(\\\\s|$)\");\n\n\t// We need to find all descendant elements, it is more\n\t// efficient to use getAll() when we are already further down\n\t// the tree - we try to recognize that here\n\tjQuery.each( ret, function(){\n\t\t// Grab the tag name being searched for\n\t\tvar tag = m[1] != \"\" || m[0] == \"\" ? \"*\" : m[2];\n\n\t\t// Handle IE7 being really dumb about <object>s\n\t\tif ( this.nodeName.toUpperCase() == \"OBJECT\" && tag == \"*\" )"}]},
{"id":"889aae89f9e9e87089edb2f085e89e114856d3b0","instances":[{"path":"./jquery-data/1.1.1/src/selector/selector.js","lines":[105,442],"code":"/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last = null;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//i, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = /^[\\/>]\\s*([a-z0-9*-]+)/i;\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\t// Perform our own iteration and filter\n\t\t\tjQuery.each( ret, function(){\n\t\t\t\tfor ( var c = this.firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && ( jQuery.nodeName(c, m[1]) || m[1] == \"*\" ) )\n\t\t\t\t\t\tr.push( c );\n\t\t\t});\n\n\t\t\tret = r;\n\t\t\tt = t.replace( re, \"\" );\n\t\t\tif ( t.indexOf(\" \") == 0 ) continue;\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\t// Look for pre-defined expression tokens\n\t\t\tfor ( var i = 0; i < jQuery.token.length; i += 2 ) {\n\t\t\t\t// Attempt to match each, individual, token in\n\t\t\t\t// the specified order\n\t\t\t\tvar re = jQuery.token[i];\n\t\t\t\tvar m = re.exec(t);\n\n\t\t\t\t// If the token match was found\n\t\t\t\tif ( m ) {\n\t\t\t\t\t// Map it against the token's handler\n\t\t\t\t\tr = ret = jQuery.map( ret, jQuery.isFunction( jQuery.token[i+1] ) ?\n\t\t\t\t\t\tjQuery.token[i+1] :\n\t\t\t\t\t\tfunction(a){ return eval(jQuery.token[i+1]); });\n\n\t\t\t\t\t// And remove the token\n\t\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\t\tfoundToken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions\n\t\t\tif ( !t.indexOf(\",\") ) {\n\t\t\t\t// Clean the result set\n\t\t\t\tif ( ret[0] == context ) ret.shift();\n\n\t\t\t\t// Merge the result sets\n\t\t\t\tjQuery.merge( done, ret );\n\n\t\t\t\t// Reset the context\n\t\t\t\tr = ret = [context];\n\n\t\t\t\t// Touch up the selector string\n\t\t\t\tt = \" \" + t.substr(1,t.length);"},{"path":"./jquery-data/1.1/src/selector/selector.js","lines":[105,441],"code":"/**\n * @name $.find\n * @type Array<Element>\n * @private\n * @cat Core\n */\nfind: function( t, context ) {\n\t// Quickly handle non-string expressions\n\tif ( typeof t != \"string\" )\n\t\treturn [ t ];\n\n\t// Make sure that the context is a DOM Element\n\tif ( context && !context.nodeType )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || document;\n\n\t// Handle the common XPath // expression\n\tif ( !t.indexOf(\"//\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(2,t.length);\n\n\t// And the / root expression\n\t} else if ( !t.indexOf(\"/\") ) {\n\t\tcontext = context.documentElement;\n\t\tt = t.substr(1,t.length);\n\t\tif ( t.indexOf(\"/\") >= 1 )\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\n\t}\n\n\t// Initialize the search\n\tvar ret = [context], done = [], last = null;\n\n\t// Continue while a selector expression exists, and while\n\t// we're no longer looping upon ourselves\n\twhile ( t && last != t ) {\n\t\tvar r = [];\n\t\tlast = t;\n\n\t\tt = jQuery.trim(t).replace( /^\\/\\//i, \"\" );\n\n\t\tvar foundToken = false;\n\n\t\t// An attempt at speeding up child selectors that\n\t\t// point to a specific element tag\n\t\tvar re = /^[\\/>]\\s*([a-z0-9*-]+)/i;\n\t\tvar m = re.exec(t);\n\n\t\tif ( m ) {\n\t\t\t// Perform our own iteration and filter\n\t\t\tjQuery.each( ret, function(){\n\t\t\t\tfor ( var c = this.firstChild; c; c = c.nextSibling )\n\t\t\t\t\tif ( c.nodeType == 1 && ( c.nodeName == m[1].toUpperCase() || m[1] == \"*\" ) )\n\t\t\t\t\t\tr.push( c );\n\t\t\t});\n\n\t\t\tret = r;\n\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\tfoundToken = true;\n\t\t} else {\n\t\t\t// Look for pre-defined expression tokens\n\t\t\tfor ( var i = 0; i < jQuery.token.length; i += 2 ) {\n\t\t\t\t// Attempt to match each, individual, token in\n\t\t\t\t// the specified order\n\t\t\t\tvar re = jQuery.token[i];\n\t\t\t\tvar m = re.exec(t);\n\n\t\t\t\t// If the token match was found\n\t\t\t\tif ( m ) {\n\t\t\t\t\t// Map it against the token's handler\n\t\t\t\t\tr = ret = jQuery.map( ret, jQuery.isFunction( jQuery.token[i+1] ) ?\n\t\t\t\t\t\tjQuery.token[i+1] :\n\t\t\t\t\t\tfunction(a){ return eval(jQuery.token[i+1]); });\n\n\t\t\t\t\t// And remove the token\n\t\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\n\t\t\t\t\tfoundToken = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// See if there's still an expression, and that we haven't already\n\t\t// matched a token\n\t\tif ( t && !foundToken ) {\n\t\t\t// Handle multiple expressions\n\t\t\tif ( !t.indexOf(\",\") ) {\n\t\t\t\t// Clean the result set\n\t\t\t\tif ( ret[0] == context ) ret.shift();\n\n\t\t\t\t// Merge the result sets\n\t\t\t\tjQuery.merge( done, ret );\n\n\t\t\t\t// Reset the context\n\t\t\t\tr = ret = [context];\n\n\t\t\t\t// Touch up the selector string\n\t\t\t\tt = \" \" + t.substr(1,t.length);\n"}]}]
