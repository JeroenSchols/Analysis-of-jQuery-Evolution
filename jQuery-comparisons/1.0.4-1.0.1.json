[{"id":"01a0be23af11348699e195cf7f6b432f8a41f75f","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[1,176],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[1,147],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"}]},
{"id":"01a0be23af11348699e195cf7f6b432f8a41f75f","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[1,176],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[1,147],"code":"jQuery.fn.extend({\n\n\t// overwrite the old show method\n\t_show: jQuery.fn.show,\n\t\n\t/**\n\t * Show all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\");\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Show all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").show(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name show\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tshow: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"show\", width: \"show\", opacity: \"show\"\n\t\t}, speed, callback) : this._show();\n\t},\n\t\n\t// Overwrite the old hide method\n\t_hide: jQuery.fn.hide,\n\t\n\t/**\n\t * Hide all matched elements using a graceful animation.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\");\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Hide all matched elements using a graceful animation and firing a callback\n\t * function after completion.\n\t * The height, width, and opacity of each of the matched elements \n\t * are changed dynamically according to the specified speed.\n\t *\n\t * @example $(\"p\").hide(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });\n\t *\n\t * @name hide\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\thide: function(speed,callback){\n\t\treturn speed ? this.animate({\n\t\t\theight: \"hide\", width: \"hide\", opacity: \"hide\"\n\t\t}, speed, callback) : this._hide();\n\t},\n\t\n\t/**\n\t * Reveal all matched elements by adjusting their height.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\");\n\t *\n\t * @name slideDown\n\t * @type jQuery\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @cat Effects/Animations\n\t */\n\t \n\t/**\n\t * Reveal all matched elements by adjusting their height and firing a callback\n\t * function after completion.\n\t * Only the height is adjusted for this animation, causing all matched\n\t * elements to be revealed in a \"sliding\" manner.\n\t *\n\t * @example $(\"p\").slideDown(\"slow\",function(){\n\t *   alert(\"Animation Done.\");\n\t * });"}]},
{"id":"f5f29f4444776cd624976c031a3cccbdd0938f18","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[468,488],"code":"\tz.custom(0, z.el.orig[prop]);\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;\n\n\t// Begin the animation\n\tz.custom(z.el.orig[prop], 0);\n};\n\n//Simple 'toggle' function"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[441,461],"code":"\tz.custom( 0, z.el.orig[prop] );\n\n\t// Stupid IE, look what you made me do\n\tif ( prop != \"opacity\" )\n\t\ty[prop] = \"1px\";\n};\n\t\n// Simple 'hide' function\nz.hide = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();\n\n\tz.o.hide = true;\n\n\t// Begin the animation\n\tz.custom(z.el.orig[prop], 0);\n};\n\t\n// IE has trouble with opacity if it does not have layout"}]},
{"id":"0fae9cf459522a58ee7f587253387ff9fbc1976d","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[459,463],"code":"z.show = function(){\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"},{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[489,493],"code":"z.toggle = function() {\n\tif ( !z.el.orig ) z.el.orig = {};\n\n\t// Remember where we started, so that we can go back to it later\n\tz.el.orig[prop] = this.cur();"}]},
{"id":"73397464514a9a246760c33fa30b1da102e3d93a","instances":[{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[43,50],"code":"load: function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[12,19],"code":"jQuery.fn.load = function( url, params, callback, ifModified ) {\n\tif ( url.constructor == Function )\n\t\treturn this.bind(\"load\", url);\n\n\tcallback = callback || function(){};\n\n\t// Default to a GET request\n\tvar type = \"GET\";"}]},
{"id":"b41032ccc5e1663fc4141a50c45ae2944eaac7f4","instances":[{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[49,70],"code":"// Default to a GET request\nvar type = \"GET\";\n\n// If the second parameter was provided\nif ( params ) {\n\t// If it's a function\n\tif ( params.constructor == Function ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax({"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[18,39],"code":"// Default to a GET request\nvar type = \"GET\";\n\n// If the second parameter was provided\nif ( params ) {\n\t// If it's a function\n\tif ( params.constructor == Function ) {\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = null;\n\t\t\n\t// Otherwise, build a param string\n\t} else {\n\t\tparams = jQuery.param( params );\n\t\ttype = \"POST\";\n\t}\n}\n\nvar self = this;\n\n// Request the remote document\njQuery.ajax( type, url, params,function(res, status){"}]},
{"id":"5c0e3564c1b2a8263401e9b72494a54fd1865659","instances":[{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[240,280],"code":"\tvar e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend\".split(\",\");\n\n\tfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\tvar o = e[i];\n\t\tjQuery.fn[o] = function(f){\n\t\t\treturn this.bind(o, f);\n\t\t};\n\t};\n};\n\njQuery.extend({\n\n\t/**\n\t * Load a remote page using an HTTP GET request. All of the arguments to\n\t * the method (except URL) are optional.\n\t *\n\t * @example $.get(\"test.cgi\")\n\t *\n\t * @example $.get(\"test.cgi\", { name: \"John\", time: \"2pm\" } )\n\t *\n\t * @example $.get(\"test.cgi\", function(data){\n\t *   alert(\"Data Loaded: \" + data);\n\t * })\n\t *\n\t * @example $.get(\"test.cgi\",\n\t *   { name: \"John\", time: \"2pm\" },\n\t *   function(data){\n\t *     alert(\"Data Loaded: \" + data);\n\t *   }\n\t * )\n\t *\n\t * @name $.get\n\t * @type undefined\n\t * @param String url The URL of the page to load.\n\t * @param Hash params A set of key/value pairs that will be sent to the server.\n\t * @param Function callback A function to be executed whenever the data is loaded.\n\t * @cat AJAX\n\t */\n\tget: function( url, data, callback, type, ifModified ) {\n\t\t// shift arguments if data argument was ommited\n\t\tif ( data && data.constructor == Function ) {"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[71,87],"code":"\tvar e = \"ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess\".split(',');\n\t\n\tfor ( var i = 0; i < e.length; i++ ) new function(){\n\t\tvar o = e[i];\n\t\tjQuery.fn[o] = function(f){\n\t\t\treturn this.bind(o, f);\n\t\t};\n\t};\n};\n\njQuery.extend({\n\n\t/**\n\t * Load a remote page using a GET request\n\t */\n\tget: function( url, data, callback, type, ifModified ) {\n\t\tif ( data.constructor == Function ) {"}]},
{"id":"0b5e58d2d25c33f6bac1e3e7d7f526b495f33324","instances":[{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[440,723],"code":"/**\n * Load a remote page using an HTTP request. This function is the primary\n * means of making AJAX requests using jQuery. \n *\n * $.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\n * need that object to manipulate directly, but it is available if you need to\n * abort the request manually.\n *\n * Please note: Make sure the server sends the right mimetype (eg. xml as\n * \"text/xml\"). Sending the wrong mimetype will get you into serious\n * trouble that jQuery can't solve.\n *\n * Supported datatypes (see dataType option) are:\n *\n * \"xml\": Returns a XML document that can be processed via jQuery.\n *\n * \"html\": Returns HTML as plain text, included script tags are evaluated.\n *\n * \"script\": Evaluates the response as Javascript and returns it as plain text.\n *\n * \"json\": Evaluates the response as JSON and returns a Javascript Object\n *\n * $.ajax() takes one property, an object of key/value pairs, that are\n * used to initalize the request. These are all the key/values that can\n * be passed in to 'prop':\n *\n * (String) url - The URL of the page to request.\n *\n * (String) type - The type of request to make (e.g. \"POST\" or \"GET\"), default is \"GET\".\n *\n * (String) dataType - The type of data that you're expecting back from\n * the server. No default: If the server sends xml, the responseXML, otherwise\n * the responseText is is passed to the success callback.\n *\n * (Boolean) ifModified - Allow the request to be successful only if the\n * response has changed since the last request, default is false, ignoring\n * the Last-Modified header\n *\n * (Number) timeout - Local timeout to override global timeout, eg. to give a\n * single request a longer timeout while all others timeout after 1 seconds,\n * see $.ajaxTimeout()\n *\n * (Boolean) global - Wheather to trigger global AJAX event handlers for\n * this request, default is true. Set to false to prevent that global handlers\n * like ajaxStart or ajaxStop are triggered.\n *\n * (Function) error - A function to be called if the request fails. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type of error that occurred.\n *\n * (Function) success - A function to be called if the request succeeds. The\n * function gets passed one argument: The data returned from the server,\n * formatted according to the 'dataType' parameter.\n *\n * (Function) complete - A function to be called when the request finishes. The\n * function gets passed two arguments: The XMLHttpRequest object and a\n * string describing the type the success of the request.\n *\n\t * (Object|String) data - Data to be sent to the server. Converted to a query\n * string, if not already a string. Is appended to the url for GET-requests.\n * Override processData option to prevent processing.\n *\n * (String) contentType - When sending data to the server, use this content-type,\n * default is \"application/x-www-form-urlencoded\", which is fine for most cases.\n *\n * (Boolean) processData - By default, data passed in as an object other as string\n * will be processed and transformed into a query string, fitting to the default\n * content-type \"application/x-www-form-urlencoded\". If you want to send DOMDocuments,\n * set this option to false.\n *\n * (Boolean) async - By default, all requests are send asynchronous (set to true).\n * If you need synchronous requests, set this option to false.\n *\n * (Function) beforeSend - A pre-callback to set custom headers etc., the\n * XMLHttpRequest is passed as the only argument.\n *\n * @example $.ajax({\n *   type: \"GET\",\n *   url: \"test.js\",\n *   dataType: \"script\"\n * })\n * @desc Load and execute a JavaScript file.\n *\n * @example $.ajax({\n *   type: \"POST\",\n *   url: \"some.php\",\n *   data: \"name=John&location=Boston\",\n *   success: function(msg){\n *     alert( \"Data Saved: \" + msg );\n *   }\n * });\n * @desc Save some data to the server and notify the user once its complete.\n *\n * @name $.ajax\n * @type XMLHttpRequest\n * @param Hash prop A set of properties to initialize the request with.\n * @cat AJAX\n */\najax: function( s ) {\n\t// TODO introduce global settings, allowing the client to modify them for all requests, not only timeout"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[129,275],"code":"/**\n * A common wrapper for making XMLHttpRequests\n */\najax: function( type, url, data, ret, ifModified ) {\n\t// If only a single argument was passed in,\n\t// assume that it is a object of key/value pairs\n\tif ( !url ) {\n\t\tret = type.complete;\n\t\tvar success = type.success;\n\t\tvar error = type.error;\n\t\tdata = type.data;\n\t\turl = type.url;\n\t\ttype = type.type;\n\t}\n\t\n\t// Watch for a new set of requests\n\tif ( ! jQuery.active++ )\n\t\tjQuery.event.trigger( \"ajaxStart\" );\n\n\tvar requestDone = false;\n\n\t// Create the request object\n\tvar xml = new XMLHttpRequest();\n\n\t// Open the socket\n\txml.open(type || \"GET\", url, true);\n\t\n\t// Set the correct header, if data is being sent\n\tif ( data )\n\t\txml.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t\n\t// Set the If-Modified-Since header, if ifModified mode.\n\tif ( ifModified )\n\t\txml.setRequestHeader(\"If-Modified-Since\",\n\t\t\tjQuery.lastModified[url] || \"Thu, 01 Jan 1970 00:00:00 GMT\" );\n\t\n\t// Set header so calling script knows that it's an XMLHttpRequest\n\txml.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n\t// Make sure the browser sends the right content length\n\tif ( xml.overrideMimeType )\n\t\txml.setRequestHeader(\"Connection\", \"close\");\n\t\n\t// Wait for a response to come back\n\tvar onreadystatechange = function(istimeout){\n\t\t// The transfer is complete and the data is available, or the request timed out\n\t\tif ( xml && (xml.readyState == 4 || istimeout == \"timeout\") ) {\n\t\t\trequestDone = true;\n\n\t\t\tvar status = jQuery.httpSuccess( xml ) && istimeout != \"timeout\" ?\n\t\t\t\tifModified && jQuery.httpNotModified( xml, url ) ? \"notmodified\" : \"success\" : \"error\";\n\t\t\t\n\t\t\t// Make sure that the request was successful or notmodified\n\t\t\tif ( status != \"error\" ) {\n\t\t\t\t// Cache Last-Modified header, if ifModified mode.\n\t\t\t\tvar modRes = xml.getResponseHeader(\"Last-Modified\");\n\t\t\t\tif ( ifModified && modRes ) jQuery.lastModified[url] = modRes;\n\t\t\t\t\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( success ) success( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxSuccess\" );\n\t\t\t\n\t\t\t// Otherwise, the request was not successful\n\t\t\t} else {\n\t\t\t\t// If a local callback was specified, fire it\n\t\t\t\tif ( error ) error( xml, status );\n\t\t\t\t\n\t\t\t\t// Fire the global callback\n\t\t\t\tjQuery.event.trigger( \"ajaxError\" );\n\t\t\t}\n\t\t\t\n\t\t\t// The request was completed\n\t\t\tjQuery.event.trigger( \"ajaxComplete\" );\n\t\t\t\n\t\t\t// Handle the global AJAX counter\n\t\t\tif ( ! --jQuery.active )\n\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\n\t\t\t// Process result\n\t\t\tif ( ret ) ret(xml, status);\n\t\t\t\n\t\t\t// Stop memory leaks\n\t\t\txml.onreadystatechange = function(){};\n\t\t\txml = null;\n\t\t\t\n\t\t}\n\t};\n\txml.onreadystatechange = onreadystatechange;\n\t\n\t// Timeout checker\n\tif(jQuery.timeout > 0)\n\t\tsetTimeout(function(){\n\t\t\t// Check to see if the request is still happening\n\t\t\tif (xml) {\n\t\t\t\t// Cancel the request\n\t\t\t\txml.abort();\n\n\t\t\t\tif ( !requestDone ) onreadystatechange( \"timeout\" );"}]},
{"id":"5586b6442bd2b0d122f7cc5250cf1dfccb27ebbd","instances":[{"path":"./jquery-data/1.0.4/src/ajax/ajax.js","lines":[743,751],"code":"if ( a.constructor == Array || a.jquery ) {\n\t// Serialize the form elements\n\tfor ( var i = 0; i < a.length; i++ )\n\t\ts.push( a[i].name + \"=\" + encodeURIComponent( a[i].value ) );\n\n// Otherwise, assume that it's an object of key/value pairs\n} else {\n\t// Serialize the key/values\n\tfor ( var j in a ) {"},{"path":"./jquery-data/1.0.1/src/ajax/ajax.js","lines":[290,300],"code":"if ( a.constructor == Array ) {\n\t// Serialize the form elements\n\tfor ( var i = 0; i < a.length; i++ )\n\t\ts.push( a[i].name + \"=\" + encodeURIComponent( a[i].value ) );\n\t\n// Otherwise, assume that it's an object of key/value pairs\n} else {\n\t// Serialize the key/values\n\tfor ( var j in a )\n\t\ts.push( j + \"=\" + encodeURIComponent( a[j] ) );\n}"}]},
{"id":"88d002ffb7edfc2493f973dabc93bd53b1c70c88","instances":[{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[57,66],"code":"test(\"test global handlers - success\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\n\t$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxSend(send).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);"},{"path":"./jquery-data/1.0.4/src/ajax/ajaxTest.js","lines":[85,93],"code":"test(\"test global handlers - failure\", function() {\n\texpect(8);\n\tstop();\n\tvar counter = { complete: 0, success: 0, error: 0, send: 0 },\n\t\tsuccess = function() { counter.success++ },\n\t\terror = function() { counter.error++ },\n\t\tcomplete = function() { counter.complete++ },\n\t\tsend = function() { counter.send++ };\n\t$.ajaxTimeout(0);"}]},
{"id":"97417a168d52566e4afab02c61eb24855836095e","instances":[{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[1,76],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t * \n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1,76],"code":"jQuery.fn.extend({\n\n\t// We're overriding the old toggle function, so\n\t// remember it for later\n\t_toggle: jQuery.fn.toggle,\n\t\n\t/**\n\t * Toggle between two function calls every other click.\n\t * Whenever a matched element is clicked, the first specified function \n\t * is fired, when clicked again, the second is fired. All subsequent \n\t * clicks continue to rotate through the two functions.\n\t *\n\t * @example $(\"p\").toggle(function(){\n\t *   $(this).addClass(\"selected\");\n\t * },function(){\n\t *   $(this).removeClass(\"selected\");\n\t * });\n\t *\n\t * @name toggle\n\t * @type jQuery\n\t * @param Function even The function to execute on every even click.\n\t * @param Function odd The function to execute on every odd click.\n\t * @cat Events\n\t */\n\ttoggle: function(a,b) {\n\t\t// If two functions are passed in, we're\n\t\t// toggling on a click\n\t\treturn a && b && a.constructor == Function && b.constructor == Function ? this.click(function(e){\n\t\t\t// Figure out which function to execute\n\t\t\tthis.last = this.last == a ? b : a;\n\t\t\t\n\t\t\t// Make sure that clicks stop\n\t\t\te.preventDefault();\n\t\t\t\n\t\t\t// and execute the function\n\t\t\treturn this.last.apply( this, [e] ) || false;\n\t\t}) :\n\t\t\n\t\t// Otherwise, execute the old toggle function\n\t\tthis._toggle.apply( this, arguments );\n\t},\n\t\n\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;"}]},
{"id":"d727e34c4810e29ab3d74d954c029ea6e5551abc","instances":[{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[43,149],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) try { p = p.parentNode } catch(e) { p = this; };\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * You can have as many $(document).ready events on your page as you like.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[43,147],"code":"\t/**\n\t * A method for simulating hovering (moving the mouse on, and off,\n\t * an object). This is a custom method which provides an 'in' to a \n\t * frequent task.\n\t *\n\t * Whenever the mouse cursor is moved over a matched \n\t * element, the first specified function is fired. Whenever the mouse \n\t * moves off of the element, the second specified function fires. \n\t * Additionally, checks are in place to see if the mouse is still within \n\t * the specified element itself (for example, an image inside of a div), \n\t * and if it is, it will continue to 'hover', and not move out \n\t * (a common error in using a mouseout event handler).\n\t *\n\t * @example $(\"p\").hover(function(){\n\t *   $(this).addClass(\"over\");\n\t * },function(){\n\t *   $(this).addClass(\"out\");\n\t * });\n\t *\n\t * @name hover\n\t * @type jQuery\n\t * @param Function over The function to fire whenever the mouse is moved over a matched element.\n\t * @param Function out The function to fire whenever the mouse is moved off of a matched element.\n\t * @cat Events\n\t */\r\n\thover: function(f,g) {\n\t\t\n\t\t// A private function for haandling mouse 'hovering'\n\t\tfunction handleHover(e) {\n\t\t\t// Check if mouse(over|out) are still within the same parent element\n\t\t\tvar p = (e.type == \"mouseover\" ? e.fromElement : e.toElement) || e.relatedTarget;\n\t\n\t\t\t// Traverse up the tree\n\t\t\twhile ( p && p != this ) p = p.parentNode;\n\t\t\t\n\t\t\t// If we actually just moused on to a sub-element, ignore it\n\t\t\tif ( p == this ) return false;\n\t\t\t\n\t\t\t// Execute the right function\n\t\t\treturn (e.type == \"mouseover\" ? f : g).apply(this, [e]);\n\t\t}\n\t\t\n\t\t// Bind the function to the two event listeners\n\t\treturn this.mouseover(handleHover).mouseout(handleHover);\n\t},\n\t\n\t/**\n\t * Bind a function to be executed whenever the DOM is ready to be\n\t * traversed and manipulated. This is probably the most important \n\t * function included in the event module, as it can greatly improve\n\t * the response times of your web applications.\n\t *\n\t * In a nutshell, this is a solid replacement for using window.onload, \n\t * and attaching a function to that. By using this method, your bound Function \n\t * will be called the instant the DOM is ready to be read and manipulated, \n\t * which is exactly what 99.99% of all Javascript code needs to run.\n\t * \n\t * Please ensure you have no code in your &lt;body&gt; onload event handler, \n\t * otherwise $(document).ready() may not fire.\n\t *\n\t * @example $(document).ready(function(){ Your code here... });\n\t *\n\t * @name ready\n\t * @type jQuery\n\t * @param Function fn The function to be executed when the DOM is ready.\n\t * @cat Events\n\t */\n\tready: function(f) {\n\t\t// If the DOM is already ready\n\t\tif ( jQuery.isReady )\n\t\t\t// Execute the function immediately\n\t\t\tf.apply( document );\n\t\t\t\n\t\t// Otherwise, remember the function for later\n\t\telse {\n\t\t\t// Add the function to the wait list\n\t\t\tjQuery.readyList.push( f );\n\t\t}\n\t\n\t\treturn this;\n\t}\n});\n\njQuery.extend({\n\t/*\n\t * All the code that makes DOM Ready work nicely.\n\t */\n\tisReady: false,\n\treadyList: [],\n\t\n\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them"}]},
{"id":"9d6f7b89edc0798b54a1037b5485037e70d84d51","instances":[{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[135,1530],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tfor ( var i = 0; i < jQuery.readyList.length; i++ )\n\t\t\t\t\tjQuery.readyList[i].apply( document );\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t\t// Remove event lisenter to avoid memory leak\n\t\t\tif ( jQuery.browser.mozilla || jQuery.browser.opera )\n\t\t\t\tdocument.removeEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t\t/**\n\t\t * Bind a function to the scroll event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name scroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Trigger the scroll event of each matched element. This causes all of the functions\n\t\t * that have been bound to thet scroll event to be executed.\n\t\t *\n\t\t * @example $(\"p\").scroll();\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello');\n\t\t *\n\t\t * @name scroll\n\t\t * @type jQuery\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the scroll event of each matched element, which will only be executed once.\n\t\t * Unlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\n\t\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t\t *\n\t\t * @example $(\"p\").onescroll( function() { alert(\"Hello\"); } );\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello'); // Only executed for the first scroll\n\t\t *\n\t\t * @name onescroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Removes a bound scroll event from each of the matched\n\t\t * elements. You must pass the identical function that was used in the original \n\t\t * bind method.\n\t\t *\n\t\t * @example $(\"p\").unscroll( myFunction );\n\t\t * @before <p onscroll=\"myFunction\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unscroll\n\t\t * @type jQuery\n\t\t * @param Function fn A function to unbind from the scroll event on each of the matched elements.\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Removes all bound scroll events from each of the matched elements.\n\t\t *\n\t\t * @example $(\"p\").unscroll();\n\t\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unscroll\n\t\t * @type jQuery\n\t\t * @cat Events/Browser\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the submit event of each matched element.\n\t\t *\n\t\t * @example $(\"#myform\").submit( function() {\n\t\t *   return $(\"input\", this).val().length > 0;\n\t\t * } );\n\t\t * @before <form id=\"myform\"><input /></form>"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[133,1585],"code":"\t// Handle when the DOM is ready\n\tready: function() {\n\t\t// Make sure that the DOM is not already loaded\n\t\tif ( !jQuery.isReady ) {\n\t\t\t// Remember that the DOM is ready\n\t\t\tjQuery.isReady = true;\n\t\t\t\n\t\t\t// If there are functions bound, to execute\n\t\t\tif ( jQuery.readyList ) {\n\t\t\t\t// Execute all of them\n\t\t\t\tfor ( var i = 0; i < jQuery.readyList.length; i++ )\n\t\t\t\t\tjQuery.readyList[i].apply( document );\n\t\t\t\t\n\t\t\t\t// Reset the list of functions\n\t\t\t\tjQuery.readyList = null;\n\t\t\t}\n\t\t}\n\t}\n});\n\nnew function(){\n\n\t\t/**\n\t\t * Bind a function to the blur event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").blur( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onblur=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name blur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Trigger the blur event of each matched element. This causes all of the functions\n\t\t * that have been bound to thet blur event to be executed.\n\t\t *\n\t\t * @example $(\"p\").blur();\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello');\n\t\t *\n\t\t * @name blur\n\t\t * @type jQuery\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the blur event of each matched element, which will only be executed once.\n\t\t * Unlike a call to the normal .blur() method, calling .oneblur() causes the bound function to be\n\t\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t\t *\n\t\t * @example $(\"p\").oneblur( function() { alert(\"Hello\"); } );\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result alert('Hello'); // Only executed for the first blur\n\t\t *\n\t\t * @name oneblur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Removes a bound blur event from each of the matched\n\t\t * elements. You must pass the identical function that was used in the original \n\t\t * bind method.\n\t\t *\n\t\t * @example $(\"p\").unblur( myFunction );\n\t\t * @before <p onblur=\"myFunction\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unblur\n\t\t * @type jQuery\n\t\t * @param Function fn A function to unbind from the blur event on each of the matched elements.\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Removes all bound blur events from each of the matched elements.\n\t\t *\n\t\t * @example $(\"p\").unblur();\n\t\t * @before <p onblur=\"alert('Hello');\">Hello</p>\n\t\t * @result <p>Hello</p>\n\t\t *\n\t\t * @name unblur\n\t\t * @type jQuery\n\t\t * @cat Events\n\t\t */\n\n\t\t/**\n\t\t * Bind a function to the focus event of each matched element.\n\t\t *\n\t\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t\t * @before <p>Hello</p>\n\t\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t\t *\n\t\t * @name focus\n\t\t * @type jQuery\n\t\t * @param Function fn A function to bind to the focus event on each of the matched elements."}]},
{"id":"7fa1d1bbbf4cbda4096deb349bce92c9ca546662","instances":[{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[160,1547],"code":"\t/**\n\t * Bind a function to the scroll event of each matched element.\n\t *\n\t * @example $(\"p\").scroll( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onscroll=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Trigger the scroll event of each matched element. This causes all of the functions\n\t * that have been bound to thet scroll event to be executed.\n\t *\n\t * @example $(\"p\").scroll();\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name scroll\n\t * @type jQuery\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Bind a function to the scroll event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onescroll( function() { alert(\"Hello\"); } );\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello'); // Only executed for the first scroll\n\t *\n\t * @name onescroll\n\t * @type jQuery\n\t * @param Function fn A function to bind to the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Removes a bound scroll event from each of the matched\n\t * elements. You must pass the identical function that was used in the original \n\t * bind method.\n\t *\n\t * @example $(\"p\").unscroll( myFunction );\n\t * @before <p onscroll=\"myFunction\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unscroll\n\t * @type jQuery\n\t * @param Function fn A function to unbind from the scroll event on each of the matched elements.\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Removes all bound scroll events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unscroll();\n\t * @before <p onscroll=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unscroll\n\t * @type jQuery\n\t * @cat Events/Browser\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element.\n\t *\n\t * @example $(\"#myform\").submit( function() {\n\t *   return $(\"input\", this).val().length > 0;\n\t * } );\n\t * @before <form id=\"myform\"><input /></form>\n\t * @desc Prevents the form submission when the input has no value entered.\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @param Function fn A function to bind to the submit event on each of the matched elements.\n\t * @cat Events/Form\n\t */\n\n\t/**\n\t * Trigger the submit event of each matched element. This causes all of the functions\n\t * that have been bound to thet submit event to be executed.\n\t *\n\t * Note: This does not execute the submit method of the form element! If you need to\n\t * submit the form via code, you have to use the DOM method, eg. $(\"form\")[0].submit();\n\t *\n\t * @example $(\"form\").submit();\n\t * @desc Triggers all submit events registered for forms, but does not submit the form\n\t *\n\t * @name submit\n\t * @type jQuery\n\t * @cat Events/Form\n\t */\n\n\t/**\n\t * Bind a function to the submit event of each matched element, which will only be executed once."},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[223,1602],"code":"\t/**\n\t * Bind a function to the focus event of each matched element.\n\t *\n\t * @example $(\"p\").focus( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onfocus=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the focus event of each matched element. This causes all of the functions\n\t * that have been bound to thet focus event to be executed.\n\t *\n\t * @example $(\"p\").focus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name focus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the focus event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .focus() method, calling .onefocus() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").onefocus( function() { alert(\"Hello\"); } );\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello'); // Only executed for the first focus\n\t *\n\t * @name onefocus\n\t * @type jQuery\n\t * @param Function fn A function to bind to the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Removes a bound focus event from each of the matched\n\t * elements. You must pass the identical function that was used in the original \n\t * bind method.\n\t *\n\t * @example $(\"p\").unfocus( myFunction );\n\t * @before <p onfocus=\"myFunction\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unfocus\n\t * @type jQuery\n\t * @param Function fn A function to unbind from the focus event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Removes all bound focus events from each of the matched elements.\n\t *\n\t * @example $(\"p\").unfocus();\n\t * @before <p onfocus=\"alert('Hello');\">Hello</p>\n\t * @result <p>Hello</p>\n\t *\n\t * @name unfocus\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the load event of each matched element.\n\t *\n\t * @example $(\"p\").load( function() { alert(\"Hello\"); } );\n\t * @before <p>Hello</p>\n\t * @result <p onload=\"alert('Hello');\">Hello</p>\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @param Function fn A function to bind to the load event on each of the matched elements.\n\t * @cat Events\n\t */\n\n\t/**\n\t * Trigger the load event of each matched element. This causes all of the functions\n\t * that have been bound to thet load event to be executed.\n\t *\n\t * @example $(\"p\").load();\n\t * @before <p onload=\"alert('Hello');\">Hello</p>\n\t * @result alert('Hello');\n\t *\n\t * @name load\n\t * @type jQuery\n\t * @cat Events\n\t */\n\n\t/**\n\t * Bind a function to the load event of each matched element, which will only be executed once.\n\t * Unlike a call to the normal .load() method, calling .oneload() causes the bound function to be\n\t * only executed the first time it is triggered, and never again (unless it is re-bound).\n\t *\n\t * @example $(\"p\").oneload( function() { alert(\"Hello\"); } );"}]},
{"id":"0fd0977431e6b120513b19a6ed36629f2b66fadd","instances":[{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[1563,1576],"code":"if ( jQuery.browser.mozilla || jQuery.browser.opera ) {\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\n} else if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1622,1635],"code":"if ( jQuery.browser.mozilla || jQuery.browser.opera ) {\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", jQuery.ready, false );\n\n// If IE is used, use the excellent hack by Matthias Miller\n// http://www.outofhanwell.com/blog/index.php?title=the_window_onload_problem_revisited\n} else if ( jQuery.browser.msie ) {\n\n\t// Only works if you document.write() it\n\tdocument.write(\"<scr\" + \"ipt id=__ie_init defer=true \" + \n\t\t\"src=//:><\\/script>\");\n\n\t// Use the defer script hack\n\tvar script = document.getElementById(\"__ie_init\");"}]},
{"id":"940bce51d73e3ca483bb66c691fd13225a6eb92f","instances":[{"path":"./jquery-data/1.0.4/src/event/event.js","lines":[1585,1606],"code":"\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari ) {\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10);\n} \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"},{"path":"./jquery-data/1.0.1/src/event/event.js","lines":[1643,1664],"code":"\tscript = null;\n\n// If Safari  is used\n} else if ( jQuery.browser.safari ) {\n\t// Continually check to see if the document.readyState is valid\n\tjQuery.safariTimer = setInterval(function(){\n\t\t// loaded and complete are both valid states\n\t\tif ( document.readyState == \"loaded\" || \n\t\t\tdocument.readyState == \"complete\" ) {\n\n\t\t\t// If either one are found, remove the timer\n\t\t\tclearInterval( jQuery.safariTimer );\n\t\t\tjQuery.safariTimer = null;\n\n\t\t\t// and execute any waiting functions\n\t\t\tjQuery.ready();\n\t\t}\n\t}, 10);\n} \n\n// A fallback to window.onload, that will always work\njQuery.event.add( window, \"load\", jQuery.ready );"}]},
{"id":"cd5a24ed567e796c5217ca23be3fbc5425b19772","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[288,359],"code":"\t/**\n\t * A function for making your own, custom, animations. The key aspect of\n\t * this function is the object of style properties that will be animated,\n\t * and to what end. Each key within the object represents a style property\n\t * that will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\t *\n\t * The value associated with the key represents to what end the property\n\t * will be animated. If a number is provided as the value, then the style\n\t * property will be transitioned from its current state to that new number.\n\t * Oterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\n\t * animation will be constructed for that property.\n\t *\n\t * @example $(\"p\").animate({\n\t *   height: 'toggle', opacity: 'toggle'\n\t * }, \"slow\");\n\t *\n\t * @example $(\"p\").animate({\n\t *   left: 50, opacity: 'show'\n\t * }, 500);\n\t *\n\t * @name animate\n\t * @type jQuery\n\t * @param Hash params A set of style attributes that you wish to animate, and to what end.\n\t * @param Object speed A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).\n\t * @param Function callback A function to be executed whenever the animation completes.\n\t * @cat Effects/Animations\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = jQuery.extend({}, prop);\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\t\n\tspeed: function(s,o) {"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[259,306],"code":"\t/**\n\t * @private\n\t */\n\tanimate: function(prop,speed,callback) {\n\t\treturn this.queue(function(){\n\t\t\n\t\t\tthis.curAnim = prop;\n\t\t\t\n\t\t\tfor ( var p in prop ) {\n\t\t\t\tvar e = new jQuery.fx( this, jQuery.speed(speed,callback), p );\n\t\t\t\tif ( prop[p].constructor == Number )\n\t\t\t\t\te.custom( e.cur(), prop[p] );\n\t\t\t\telse\n\t\t\t\t\te[ prop[p] ]( prop );\n\t\t\t}\n\t\t\t\n\t\t});\n\t},\n\t\n\t/**\n\t *\n\t * @private\n\t */\n\tqueue: function(type,fn){\n\t\tif ( !fn ) {\n\t\t\tfn = type;\n\t\t\ttype = \"fx\";\n\t\t}\n\t\n\t\treturn this.each(function(){\n\t\t\tif ( !this.queue )\n\t\t\t\tthis.queue = {};\n\t\n\t\t\tif ( !this.queue[type] )\n\t\t\t\tthis.queue[type] = [];\n\t\n\t\t\tthis.queue[type].push( fn );\n\t\t\n\t\t\tif ( this.queue[type].length == 1 )\n\t\t\t\tfn.apply(this);\n\t\t});\n\t}\n\n});\n\njQuery.extend({\n\n\tsetAuto: function(e,p) {"}]},
{"id":"cf66f2d5efeca6beda275ee794c7aae1ee4a6b6a","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[359,389],"code":"speed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[334,364],"code":"speed: function(s,o) {\n\to = o || {};\n\t\n\tif ( o.constructor == Function )\n\t\to = { complete: o };\n\t\n\tvar ss = { slow: 600, fast: 200 };\n\to.duration = (s && s.constructor == Number ? s : ss[s]) || 400;\n\n\t// Queueing\n\to.oldComplete = o.complete;\n\to.complete = function(){\n\t\tjQuery.dequeue(this, \"fx\");\n\t\tif ( o.oldComplete && o.oldComplete.constructor == Function )\n\t\t\to.oldComplete.apply( this );\n\t};\n\n\treturn o;\n},\n\nqueue: {},\n\ndequeue: function(elem,type){\n\ttype = type || \"fx\";\n\n\tif ( elem.queue && elem.queue[type] ) {\n\t\t// Remove self\n\t\telem.queue[type].shift();\n\n\t\t// Get next function\n\t\tvar f = elem.queue[type][0];"}]},
{"id":"a8075081d77066fd1c8f299fcc1522590fd1ba06","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[388,416],"code":"\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[363,391],"code":"\t\t// Get next function\n\t\tvar f = elem.queue[type][0];\n\t\n\t\tif ( f ) f.apply( elem );\n\t}\n},\n\n/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;"}]},
{"id":"5e3353c9bd54f0f3427ebc425aaba4d4e11befc9","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[436,459],"code":"// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(z.el,prop) );\n};\n\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\n// Simple 'show' function\nz.show = function(){"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[412,435],"code":"// Figure out the maximum number to run to\nz.max = function(){\n\treturn parseFloat( jQuery.css(z.el,prop) );\n};\n\t\n// Get the current size\nz.cur = function(){\n\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\treturn r && r > -10000 ? r : z.max();\n};\n\t\n// Start an animation from one number to another\nz.custom = function(from,to){\n\tz.startTime = (new Date()).getTime();\n\tz.now = from;\n\tz.a();\n\t\n\tz.timer = setInterval(function(){\n\t\tz.step(from, to);\n\t}, 13);\n};\n\t\n// Simple 'show' function\nz.show = function( p ){"}]},
{"id":"7b2c1e47ca7ca938f1b436dd1a5f2eedbc84c03d","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[512,533],"code":"// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\n\tif (t > z.o.duration + z.startTime) {\n\t\t// Stop the timer\n\t\tclearInterval(z.timer);\n\t\tz.timer = null;\n\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tz.el.curAnim[ prop ] = true;\n\n\t\tvar done = true;\n\t\tfor ( var i in z.el.curAnim )\n\t\t\tif ( z.el.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\n\t\tif ( done ) {\n\t\t\t// Reset the overflow\n\t\t\ty.overflow = '';"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[472,493],"code":"// Each step of an animation\nz.step = function(firstNum, lastNum){\n\tvar t = (new Date()).getTime();\n\t\n\tif (t > z.o.duration + z.startTime) {\n\t\t// Stop the timer\n\t\tclearInterval(z.timer);\n\t\tz.timer = null;\n\n\t\tz.now = lastNum;\n\t\tz.a();\n\n\t\tz.el.curAnim[ prop ] = true;\n\t\t\n\t\tvar done = true;\n\t\tfor ( var i in z.el.curAnim )\n\t\t\tif ( z.el.curAnim[i] !== true )\n\t\t\t\tdone = false;\n\t\t\t\t\n\t\tif ( done ) {\n\t\t\t// Reset the overflow\n\t\t\ty.overflow = z.el.oldOverflow;"}]},
{"id":"7c8277b114584ee118b2b4debbbc937d68568226","instances":[{"path":"./jquery-data/1.0.4/src/fx/fx.js","lines":[395,564],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;\n\t\n\t// Store display property\n\tvar oldDisplay = jQuery.css(z.el, 'display');\n\t// Set display property to block for animation\n\ty.display = \"block\";\n\t// Make sure that nothing sneaks out\n\ty.overflow = \"hidden\";\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" )\n\t\t\tjQuery.attr(y, \"opacity\", z.now); // Let attr handle opacity\n\t\telse if ( parseInt(z.now) ) // My hate for IE will never die\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(z.el,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.show = true;\n\n\t\t// Begin the animation\n\t\tz.custom(0, z.el.orig[prop]);\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(z.el.orig[prop], 0);\n\t};\n\t\n\t//Simple 'toggle' function\n\tz.toggle = function() {\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n"},{"path":"./jquery-data/1.0.1/src/fx/fx.js","lines":[370,522],"code":"/*\n * I originally wrote fx() as a clone of moo.fx and in the process\n * of making it small in size the code became illegible to sane\n * people. You've been warned.\n */\n\nfx: function( elem, options, prop ){\n\n\tvar z = this;\n\n\t// The users options\n\tz.o = {\n\t\tduration: options.duration || 400,\n\t\tcomplete: options.complete,\n\t\tstep: options.step\n\t};\n\n\t// The element\n\tz.el = elem;\n\n\t// The styles\n\tvar y = z.el.style;\n\n\t// Simple function for setting a style value\n\tz.a = function(){\n\t\tif ( options.step )\n\t\t\toptions.step.apply( elem, [ z.now ] );\n\n\t\tif ( prop == \"opacity\" ) {\n\t\t\tif (jQuery.browser.mozilla && z.now == 1) z.now = 0.9999;\n\t\t\tif (window.ActiveXObject)\n\t\t\t\ty.filter = \"alpha(opacity=\" + z.now*100 + \")\";\n\t\t\telse\n\t\t\t\ty.opacity = z.now;\n\n\t\t// My hate for IE will never die\n\t\t} else if ( parseInt(z.now) )\n\t\t\ty[prop] = parseInt(z.now) + \"px\";\n\t\t\t\n\t\ty.display = \"block\";\n\t};\n\n\t// Figure out the maximum number to run to\n\tz.max = function(){\n\t\treturn parseFloat( jQuery.css(z.el,prop) );\n\t};\n\n\t// Get the current size\n\tz.cur = function(){\n\t\tvar r = parseFloat( jQuery.curCSS(z.el, prop) );\n\t\treturn r && r > -10000 ? r : z.max();\n\t};\n\n\t// Start an animation from one number to another\n\tz.custom = function(from,to){\n\t\tz.startTime = (new Date()).getTime();\n\t\tz.now = from;\n\t\tz.a();\n\n\t\tz.timer = setInterval(function(){\n\t\t\tz.step(from, to);\n\t\t}, 13);\n\t};\n\n\t// Simple 'show' function\n\tz.show = function( p ){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.custom( 0, z.el.orig[prop] );\n\n\t\t// Stupid IE, look what you made me do\n\t\tif ( prop != \"opacity\" )\n\t\t\ty[prop] = \"1px\";\n\t};\n\n\t// Simple 'hide' function\n\tz.hide = function(){\n\t\tif ( !z.el.orig ) z.el.orig = {};\n\n\t\t// Remember where we started, so that we can go back to it later\n\t\tz.el.orig[prop] = this.cur();\n\n\t\tz.o.hide = true;\n\n\t\t// Begin the animation\n\t\tz.custom(z.el.orig[prop], 0);\n\t};\n\n\t// IE has trouble with opacity if it does not have layout\n\tif ( jQuery.browser.msie && !z.el.currentStyle.hasLayout )\n\t\ty.zoom = \"1\";\n\n\t// Remember  the overflow of the element\n\tif ( !z.el.oldOverlay )\n\t\tz.el.oldOverflow = jQuery.css( z.el, \"overflow\" );\n\n\t// Make sure that nothing sneaks out"}]},
{"id":"7653daa01237a48afb983f558117bc0d888a2deb","instances":[{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[527,531],"code":"var pass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\r\n}\r\nok( pass, \"Add Class\" );\r"},{"path":"./jquery-data/1.0.4/src/jquery/coreTest.js","lines":[537,541],"code":"\tpass = true;\r\nfor ( var i = 0; i < div.size(); i++ ) {\r\n\tif ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\r\n}\r\nok( pass, \"Remove Class\" );\r"}]},
{"id":"5cbecf09b510fa8e50f76f57ed71cb3681b8dc6e","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[344,561],"code":"/**\r\n * Access a property on the first matched element.\r\n * This method makes it easy to retrieve a property value\r\n * from the first matched element.\r\n *\r\n * @example $(\"img\").attr(\"src\");\r\n * @before <img src=\"test.jpg\"/>\r\n * @result test.jpg\r\n *\r\n * @name attr\r\n * @type Object\r\n * @param String name The name of the property to access.\r\n * @cat DOM\r\n */\r\n\r\n/**\r\n * Set a hash of key/value object properties to all matched elements.\r\n * This serves as the best way to set a large number of properties\r\n * on all matched elements.\r\n *\r\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\r\n * @before <img/>\r\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\r\n *\r\n * @name attr\r\n * @type jQuery\r\n * @param Hash prop A set of key/value pairs to set as object properties.\r\n * @cat DOM\r\n */\r\n\r\n/**\r\n * Set a single property to a value, on all matched elements.\r\n *\r\n * Note that you can't set the name property of input elements in IE.\r\n * Use $(html) or $().append(html) or $().html(html) to create elements\r\n * on the fly including the name property.\r\n *\r\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\r\n * @before <img/>\r\n * @result <img src=\"test.jpg\"/>\r\n *\r\n * @name attr\r\n * @type jQuery\r\n * @param String key The name of the property to set.\r\n * @param Object value The value to set the property to.\r\n * @cat DOM\r\n */\r\nattr: function( key, value, type ) {\r\n\t// Check to see if we're setting style values\r\n\treturn key.constructor != String || value != undefined ?\r\n\t\tthis.each(function(){\r\n\t\t\t// See if we're setting a hash of styles\r\n\t\t\tif ( value == undefined )\r\n\t\t\t\t// Set all the styles\r\n\t\t\t\tfor ( var prop in key )\r\n\t\t\t\t\tjQuery.attr(\r\n\t\t\t\t\t\ttype ? this.style : this,\r\n\t\t\t\t\t\tprop, key[prop]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t// See if we're setting a single key/value style\r\n\t\t\telse\r\n\t\t\t\tjQuery.attr(\r\n\t\t\t\t\ttype ? this.style : this,\r\n\t\t\t\t\tkey, value\r\n\t\t\t\t);\r\n\t\t}) :\r\n\r\n\t\t// Look for the case where we're accessing a style value\r\n\t\tjQuery[ type || \"attr\" ]( this[0], key );\r\n},\r\n\r\n/**\r\n * Access a style property on the first matched element.\r\n * This method makes it easy to retrieve a style property value\r\n * from the first matched element.\r\n *\r\n * @example $(\"p\").css(\"color\");\r\n * @before <p style=\"color:red;\">Test Paragraph.</p>\r\n * @result red\r\n * @desc Retrieves the color style of the first paragraph\r\n *\r\n * @example $(\"p\").css(\"fontWeight\");\r\n * @before <p style=\"font-weight: bold;\">Test Paragraph.</p>\r\n * @result bold\r\n * @desc Retrieves the font-weight style of the first paragraph.\r\n * Note that for all style properties with a dash (like 'font-weight'), you have to\r\n * write it in camelCase. In other words: Every time you have a '-' in a \r\n * property, remove it and replace the next character with an uppercase \r\n * representation of itself. Eg. fontWeight, fontSize, fontFamily, borderWidth,\r\n * borderStyle, borderBottomWidth etc.\r\n *\r\n * @name css\r\n * @type Object\r\n * @param String name The name of the property to access.\r\n * @cat CSS\r\n */\r\n\r\n/**\r\n * Set a hash of key/value style properties to all matched elements.\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[233,424],"code":"/**\n * Access a property on the first matched element.\n * This method makes it easy to retreive a property value\n * from the first matched element.\n *\n * @example $(\"img\").attr(\"src\");\n * @before <img src=\"test.jpg\"/>\n * @result test.jpg\n *\n * @name attr\n * @type Object\n * @param String name The name of the property to access.\n * @cat DOM\n */\n \n/**\n * Set a hash of key/value object properties to all matched elements.\n * This serves as the best way to set a large number of properties\n * on all matched elements.\n *\n * @example $(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });\n * @before <img/>\n * @result <img src=\"test.jpg\" alt=\"Test Image\"/>\n *\n * @test var pass = true;\n * $(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n *   if ( this.getAttribute('foo') != \"baz\" && this.getAttribute('zoo') != \"ping\" ) pass = false;\n * });\n * ok( pass, \"Set Multiple Attributes\" );\n *\n * @name attr\n * @type jQuery\n * @param Hash prop A set of key/value pairs to set as object properties.\n * @cat DOM\n */\n \n/**\n * Set a single property to a value, on all matched elements.\n *\n * @example $(\"img\").attr(\"src\",\"test.jpg\");\n * @before <img/>\n * @result <img src=\"test.jpg\"/>\n *\n * @test var div = $(\"div\");\n * div.attr(\"foo\", \"bar\");\n * var pass = true;\n * for ( var i = 0; i < div.size(); i++ ) {\n *   if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n * }\n * ok( pass, \"Set Attribute\" );\n *\n * @name attr\n * @type jQuery\n * @param String key The name of the property to set.\n * @param Object value The value to set the property to.\n * @cat DOM\n */\nattr: function( key, value, type ) {\n\t// Check to see if we're setting style values\n\treturn key.constructor != String || value != undefined ?\n\t\tthis.each(function(){\n\t\t\t// See if we're setting a hash of styles\n\t\t\tif ( value == undefined )\n\t\t\t\t// Set all the styles\n\t\t\t\tfor ( var prop in key )\n\t\t\t\t\tjQuery.attr(\n\t\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\t\tprop, key[prop]\n\t\t\t\t\t);\n\t\t\t\n\t\t\t// See if we're setting a single key/value style\n\t\t\telse\n\t\t\t\tjQuery.attr(\n\t\t\t\t\ttype ? this.style : this,\n\t\t\t\t\tkey, value\n\t\t\t\t);\n\t\t}) :\n\t\t\n\t\t// Look for the case where we're accessing a style value\n\t\tjQuery[ type || \"attr\" ]( this[0], key );\n},\n\n/**\n * Access a style property on the first matched element.\n * This method makes it easy to retreive a style property value\n * from the first matched element.\n *\n * @example $(\"p\").css(\"red\");\n * @before <p style=\"color:red;\">Test Paragraph.</p>\n * @result red\n *\n * @name css\n * @type Object\n * @param String name The name of the property to access.\n * @cat CSS\n */\n \n/**\n * Set a hash of key/value style properties to all matched elements.\n * This serves as the best way to set a large number of style properties"}]},
{"id":"738cc7901440193750e44a5e9cbd22a80b06f029","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[760,821],"code":"/**\r\n * End the most recent 'destructive' operation, reverting the list of matched elements\r\n * back to its previous state. After an end operation, the list of matched elements will\r\n * revert to the last state of matched elements.\r\n *\r\n * @example $(\"p\").find(\"span\").end();\r\n * @before <p><span>Hello</span>, how are you?</p>\r\n * @result $(\"p\").find(\"span\").end() == [ <p>...</p> ]\r\n *\r\n * @name end\r\n * @type jQuery\r\n * @cat DOM/Traversing\r\n */\r\nend: function() {\r\n\tif( !(this.stack && this.stack.length) )\r\n\t\treturn this;\r\n\treturn this.set( this.stack.pop() );\r\n},\r\n\r\n/**\r\n * Searches for all elements that match the specified expression.\r\n * This method is the optimal way of finding additional descendant\r\n * elements with which to process.\r\n *\r\n * All searching is done using a jQuery expression. The expression can be\r\n * written using CSS 1-3 Selector syntax, or basic XPath.\r\n *\r\n * @example $(\"p\").find(\"span\");\r\n * @before <p><span>Hello</span>, how are you?</p>\r\n * @result $(\"p\").find(\"span\") == [ <span>Hello</span> ]\r\n *\r\n * @name find\r\n * @type jQuery\r\n * @param String expr An expression to search with.\r\n * @cat DOM/Traversing\r\n */\r\nfind: function(t) {\r\n\treturn this.pushStack( jQuery.map( this, function(a){\r\n\t\treturn jQuery.find(t,a);\r\n\t}), arguments );\r\n},\r\n\r\n/**\r\n * Create cloned copies of all matched DOM Elements. This does\r\n * not create a cloned copy of this particular jQuery object,\r\n * instead it creates duplicate copies of all DOM Elements.\r\n * This is useful for moving copies of the elements to another\r\n * location in the DOM.\r\n *\r\n * @example $(\"b\").clone().prependTo(\"p\");\r\n * @before <b>Hello</b><p>, how are you?</p>\r\n * @result <b>Hello</b><p><b>Hello</b>, how are you?</p>\r\n *\r\n * @name clone\r\n * @type jQuery\r\n * @cat DOM/Manipulation\r\n */\r\nclone: function(deep) {\r\n\treturn this.pushStack( jQuery.map( this, function(a){\r\n\t\treturn a.cloneNode( deep != undefined ? deep : true );\r\n\t}), arguments );\r\n},\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[519,563],"code":"/**\n * End the most recent 'destructive' operation, reverting the list of matched elements\n * back to its previous state. After an end operation, the list of matched elements will \n * revert to the last state of matched elements.\n *\n * @example $(\"p\").find(\"span\").end();\n * @before <p><span>Hello</span>, how are you?</p>\n * @result $(\"p\").find(\"span\").end() == [ <p>...</p> ]\n *\n * @name end\n * @type jQuery\n * @cat DOM/Traversing\n */\nend: function() {\n\treturn this.get( this.stack.pop() );\n},\n\n/**\n * Searches for all elements that match the specified expression.\n * This method is the optimal way of finding additional descendant\n * elements with which to process.\n *\n * All searching is done using a jQuery expression. The expression can be \n * written using CSS 1-3 Selector syntax, or basic XPath.\n *\n * @example $(\"p\").find(\"span\");\n * @before <p><span>Hello</span>, how are you?</p>\n * @result $(\"p\").find(\"span\") == [ <span>Hello</span> ]\n *\n * @name find\n * @type jQuery\n * @param String expr An expression to search with.\n * @cat DOM/Traversing\n */\nfind: function(t) {\n\treturn this.pushStack( jQuery.map( this, function(a){\n\t\treturn jQuery.find(t,a);\n\t}), arguments );\n},\n\nclone: function(deep) {\n\treturn this.pushStack( jQuery.map( this, function(a){\n\t\treturn a.cloneNode( deep != undefined ? deep : true );\n\t}), arguments );\n},"}]},
{"id":"72ff508b8999fe3697f2eae3c6953439b6ad2327","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[859,865],"code":"filter: function(t) {\r\n\treturn this.pushStack(\r\n\t\tt.constructor == Array &&\r\n\t\tjQuery.map(this,function(a){\r\n\t\t\tfor ( var i = 0; i < t.length; i++ )\r\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\r\n\t\t\t\t\treturn a;\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[601,607],"code":"filter: function(t) {\n\treturn this.pushStack(\n\t\tt.constructor == Array &&\n\t\tjQuery.map(this,function(a){\n\t\t\tfor ( var i = 0; i < t.length; i++ )\n\t\t\t\tif ( jQuery.filter(t[i],[a]).r.length )\n\t\t\t\t\treturn a;"}]},
{"id":"6d5e8268007cf9b77fb578c4aae7aa169d083730","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[958,1004],"code":"/**\r\n * Checks the current selection against an expression and returns true,\r\n * if at least one element of the selection fits the given expression.\r\n * Does return false, if no element fits or the expression is not valid.\r\n *\r\n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\r\n * @before <form><input type=\"checkbox\" /></form>\r\n * @result true\r\n * @desc Returns true, because the parent of the input is a form element\r\n * \r\n * @example $(\"input[@type='checkbox']\").parent().is(\"form\")\r\n * @before <form><p><input type=\"checkbox\" /></p></form>\r\n * @result false\r\n * @desc Returns false, because the parent of the input is a p element\r\n *\r\n * @example $(\"form\").is(null)\r\n * @before <form></form>\r\n * @result false\r\n * @desc An invalid expression always returns false.\r\n *\r\n * @name is\r\n * @type Boolean\r\n * @param String expr The expression with which to filter\r\n * @cat DOM/Traversing\r\n */\r\nis: function(expr) {\r\n\treturn expr ? jQuery.filter(expr,this).r.length > 0 : false;\r\n},\r\n\r\n/**\r\n * @private\r\n * @name domManip\r\n * @param Array args\r\n * @param Boolean table\r\n * @param Number dir\r\n * @param Function fn The function doing the DOM manipulation.\r\n * @type jQuery\r\n * @cat Core\r\n */\r\ndomManip: function(args, table, dir, fn){\r\n\tvar clone = this.size() > 1;\r\n\tvar a = jQuery.clean(args);\r\n\r\n\treturn this.each(function(){\r\n\t\tvar obj = this;\r\n\r\n\t\tif ( table && this.nodeName.toUpperCase() == \"TABLE\" && a[0].nodeName.toUpperCase() != \"THEAD\" ) {\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[700,732],"code":"/**\n * A wrapper function for each() to be used by append and prepend.\n * Handles cases where you're trying to modify the inner contents of\n * a table, when you actually need to work with the tbody.\n *\n * @member jQuery\n * @param {String} expr The expression with which to filter\n * @type Boolean\n * @cat DOM/Traversing\n */\nis: function(expr) {\n\treturn expr ? jQuery.filter(expr,this).r.length > 0 : this.length > 0;\n},\n\n/**\n * \n *\n * @private\n * @name domManip\n * @param Array args\n * @param Boolean table\n * @param Number int\n * @param Function fn The function doing the DOM manipulation.\n * @type jQuery\n */\ndomManip: function(args, table, dir, fn){\n\tvar clone = this.size() > 1;\n\tvar a = jQuery.clean(args);\n\t\n\treturn this.each(function(){\n\t\tvar obj = this;\n\t\t\n\t\tif ( table && this.nodeName == \"TABLE\" && a[0].nodeName != \"THEAD\" ) {"}]},
{"id":"04dc3247285fada5dfcde2058dac2a93a73a26a1","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[987,1032],"code":"/**\r\n * @private\r\n * @name domManip\r\n * @param Array args\r\n * @param Boolean table\r\n * @param Number dir\r\n * @param Function fn The function doing the DOM manipulation.\r\n * @type jQuery\r\n * @cat Core\r\n */\r\ndomManip: function(args, table, dir, fn){\r\n\tvar clone = this.size() > 1;\r\n\tvar a = jQuery.clean(args);\r\n\r\n\treturn this.each(function(){\r\n\t\tvar obj = this;\r\n\r\n\t\tif ( table && this.nodeName.toUpperCase() == \"TABLE\" && a[0].nodeName.toUpperCase() != \"THEAD\" ) {\r\n\t\t\tvar tbody = this.getElementsByTagName(\"tbody\");\r\n\r\n\t\t\tif ( !tbody.length ) {\r\n\t\t\t\tobj = document.createElement(\"tbody\");\r\n\t\t\t\tthis.appendChild( obj );\r\n\t\t\t} else\r\n\t\t\t\tobj = tbody[0];\r\n\t\t}\r\n\r\n\t\tfor ( var i = ( dir < 0 ? a.length - 1 : 0 );\r\n\t\t\ti != ( dir < 0 ? dir : a.length ); i += dir ) {\r\n\t\t\t\tfn.apply( obj, [ clone ? a[i].cloneNode(true) : a[i] ] );\r\n\t\t}\r\n\t});\r\n},\r\n\r\n/**\r\n *\r\n *\r\n * @private\r\n * @name pushStack\r\n * @param Array a\r\n * @param Array args\r\n * @type jQuery\r\n * @cat Core\r\n */\r\npushStack: function(a,args) {\r\n\tvar fn = args && args[args.length-1];\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[714,759],"code":"/**\n * \n *\n * @private\n * @name domManip\n * @param Array args\n * @param Boolean table\n * @param Number int\n * @param Function fn The function doing the DOM manipulation.\n * @type jQuery\n */\ndomManip: function(args, table, dir, fn){\n\tvar clone = this.size() > 1;\n\tvar a = jQuery.clean(args);\n\t\n\treturn this.each(function(){\n\t\tvar obj = this;\n\t\t\n\t\tif ( table && this.nodeName == \"TABLE\" && a[0].nodeName != \"THEAD\" ) {\n\t\t\tvar tbody = this.getElementsByTagName(\"tbody\");\n\n\t\t\tif ( !tbody.length ) {\n\t\t\t\tobj = document.createElement(\"tbody\");\n\t\t\t\tthis.appendChild( obj );\n\t\t\t} else\n\t\t\t\tobj = tbody[0];\n\t\t}\n\n\t\tfor ( var i = ( dir < 0 ? a.length - 1 : 0 );\n\t\t\ti != ( dir < 0 ? dir : a.length ); i += dir ) {\n\t\t\t\tfn.apply( obj, [ clone ? a[i].cloneNode(true) : a[i] ] );\n\t\t}\n\t});\n},\n\n/**\n * \n *\n * @private\n * @name pushStack\n * @param Array a\n * @param Array args\n * @type jQuery\n */\npushStack: function(a,args) {\n\tvar fn = args && args[args.length-1];"}]},
{"id":"53aac405e2b2597b94626e205ff7c8cd6ee8daed","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1126,1139],"code":"jQuery.extend({\r\n\t/**\r\n\t * @private\r\n\t * @name init\r\n\t * @type undefined\r\n\t * @cat Core\r\n\t */\r\n\tinit: function(){\r\n\t\tjQuery.initDone = true;\r\n\r\n\t\tjQuery.each( jQuery.macros.axis, function(i,n){\r\n\t\t\tjQuery.fn[ i ] = function(a) {\r\n\t\t\t\tvar ret = jQuery.map(this,n);\r\n\t\t\t\tif ( a && typeof a == \"string\" )\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[803,815],"code":"jQuery.extend({\n\t/**\n\t * @private\n\t * @name init\n\t * @type undefined\n\t */\n\tinit: function(){\n\t\tjQuery.initDone = true;\n\t\t\n\t\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\t\tjQuery.fn[ i ] = function(a) {\n\t\t\t\tvar ret = jQuery.map(this,n);\n\t\t\t\tif ( a && a.constructor == String )"}]},
{"id":"34224c65895b239b16033c731bf0724e1f83dbe2","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1140,1150],"code":"\t\t\tret = jQuery.filter(a,ret).r;\r\n\t\treturn this.pushStack( ret, arguments );\r\n\t};\r\n});\r\n\r\njQuery.each( jQuery.macros.to, function(i,n){\r\n\tjQuery.fn[ i ] = function(){\r\n\t\tvar a = arguments;\r\n\t\treturn this.each(function(){\r\n\t\t\tfor ( var j = 0; j < a.length; j++ )\r\n\t\t\t\tjQuery(a[j])[n]( this );\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[816,826],"code":"\t\t\tret = jQuery.filter(a,ret).r;\n\t\treturn this.pushStack( ret, arguments );\n\t};\n});\n\njQuery.each( jQuery.macros.to, function(i,n){\n\tjQuery.fn[ i ] = function(){\n\t\tvar a = arguments;\n\t\treturn this.each(function(){\n\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t$(a[j])[n]( this );"}]},
{"id":"d1126abf832654642beb50ce93ffa1e2d70044bc","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1127,1214],"code":"/**\r\n * @private\r\n * @name init\r\n * @type undefined\r\n * @cat Core\r\n */\r\ninit: function(){\r\n\tjQuery.initDone = true;\r\n\r\n\tjQuery.each( jQuery.macros.axis, function(i,n){\r\n\t\tjQuery.fn[ i ] = function(a) {\r\n\t\t\tvar ret = jQuery.map(this,n);\r\n\t\t\tif ( a && typeof a == \"string\" )\r\n\t\t\t\tret = jQuery.filter(a,ret).r;\r\n\t\t\treturn this.pushStack( ret, arguments );\r\n\t\t};\r\n\t});\r\n\r\n\tjQuery.each( jQuery.macros.to, function(i,n){\r\n\t\tjQuery.fn[ i ] = function(){\r\n\t\t\tvar a = arguments;\r\n\t\t\treturn this.each(function(){\r\n\t\t\t\tfor ( var j = 0; j < a.length; j++ )\r\n\t\t\t\t\tjQuery(a[j])[n]( this );\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n\r\n\tjQuery.each( jQuery.macros.each, function(i,n){\r\n\t\tjQuery.fn[ i ] = function() {\r\n\t\t\treturn this.each( n, arguments );\r\n\t\t};\r\n\t});\r\n\r\n\tjQuery.each( jQuery.macros.filter, function(i,n){\r\n\t\tjQuery.fn[ n ] = function(num,fn) {\r\n\t\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\r\n\t\t};\r\n\t});\r\n\r\n\tjQuery.each( jQuery.macros.attr, function(i,n){\r\n\t\tn = n || i;\r\n\t\tjQuery.fn[ i ] = function(h) {\r\n\t\t\treturn h == undefined ?\r\n\t\t\t\tthis.length ? this[0][n] : null :\r\n\t\t\t\tthis.attr( n, h );\r\n\t\t};\r\n\t});\r\n\r\n\tjQuery.each( jQuery.macros.css, function(i,n){\r\n\t\tjQuery.fn[ n ] = function(h) {\r\n\t\t\treturn h == undefined ?\r\n\t\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\r\n\t\t\t\tthis.css( n, h );\r\n\t\t};\r\n\t});\r\n\r\n},\r\n\r\n/**\r\n * A generic iterator function, which can be used to seemlessly\r\n * iterate over both objects and arrays. This function is not the same\r\n * as $().each() - which is used to iterate, exclusively, over a jQuery\r\n * object. This function can be used to iterate over anything.\r\n *\r\n * @example $.each( [0,1,2], function(i){\r\n *   alert( \"Item #\" + i + \": \" + this );\r\n * });\r\n * @desc This is an example of iterating over the items in an array, accessing both the current item and its index.\r\n *\r\n * @example $.each( { name: \"John\", lang: \"JS\" }, function(i){\r\n *   alert( \"Name: \" + i + \", Value: \" + this );\r\n * });\r\n * @desc This is an example of iterating over the properties in an Object, accessing both the current item and its key.\r\n *\r\n * @name $.each\r\n * @param Object obj The object, or array, to iterate over.\r\n * @param Function fn The function that will be executed on every object.\r\n * @type Object\r\n * @cat Javascript\r\n */\r\n// args is for internal usage only\r\neach: function( obj, fn, args ) {\r\n\tif ( obj.length == undefined )\r\n\t\tfor ( var i in obj )\r\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\r\n\telse\r\n\t\tfor ( var i = 0; i < obj.length; i++ )\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[804,877],"code":"/**\n * @private\n * @name init\n * @type undefined\n */\ninit: function(){\n\tjQuery.initDone = true;\n\t\n\tjQuery.each( jQuery.macros.axis, function(i,n){\n\t\tjQuery.fn[ i ] = function(a) {\n\t\t\tvar ret = jQuery.map(this,n);\n\t\t\tif ( a && a.constructor == String )\n\t\t\t\tret = jQuery.filter(a,ret).r;\n\t\t\treturn this.pushStack( ret, arguments );\n\t\t};\n\t});\n\t\n\tjQuery.each( jQuery.macros.to, function(i,n){\n\t\tjQuery.fn[ i ] = function(){\n\t\t\tvar a = arguments;\n\t\t\treturn this.each(function(){\n\t\t\t\tfor ( var j = 0; j < a.length; j++ )\n\t\t\t\t\t$(a[j])[n]( this );\n\t\t\t});\n\t\t};\n\t});\n\t\n\tjQuery.each( jQuery.macros.each, function(i,n){\n\t\tjQuery.fn[ i ] = function() {\n\t\t\treturn this.each( n, arguments );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.filter, function(i,n){\n\t\tjQuery.fn[ n ] = function(num,fn) {\n\t\t\treturn this.filter( \":\" + n + \"(\" + num + \")\", fn );\n\t\t};\n\t});\n\t\n\tjQuery.each( jQuery.macros.attr, function(i,n){\n\t\tn = n || i;\n\t\tjQuery.fn[ i ] = function(h) {\n\t\t\treturn h == undefined ?\n\t\t\t\tthis.length ? this[0][n] : null :\n\t\t\t\tthis.attr( n, h );\n\t\t};\n\t});\n\n\tjQuery.each( jQuery.macros.css, function(i,n){\n\t\tjQuery.fn[ n ] = function(h) {\n\t\t\treturn h == undefined ?\n\t\t\t\t( this.length ? jQuery.css( this[0], n ) : null ) :\n\t\t\t\tthis.css( n, h );\n\t\t};\n\t});\n\n},\n\n/**\n * A generic iterator function, which can be used to seemlessly\n * iterate over both objects and arrays.\n *\n * @name jQuery.each\n * @param Object obj The object, or array, to iterate over.\n * @param Object fn The function that will be executed on every object.\n * @type Object\n * @cat Javascript\n */\neach: function( obj, fn, args ) {\n\tif ( obj.length == undefined )\n\t\tfor ( var i in obj )\n\t\t\tfn.apply( obj[i], args || [i, obj[i]] );\n\telse\n\t\tfor ( var i = 0; i < obj.length; i++ )"}]},
{"id":"99f86ec0af60bd121883477d85fb60f389a411d9","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1219,1224],"code":"className: {\r\n\tadd: function(o,c){\r\n\t\tif (jQuery.className.has(o,c)) return;\r\n\t\to.className += ( o.className ? \" \" : \"\" ) + c;\r\n\t},\r\n\tremove: function(o,c){\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[882,887],"code":"className: {\n\tadd: function(o,c){\n\t\tif (jQuery.className.has(o,c)) return;\n\t\to.className += ( o.className ? \" \" : \"\" ) + c;\n\t},\n\tremove: function(o,c){"}]},
{"id":"879241c59301c63b88a894b3afc71d0308d86694","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1238,1261],"code":"\thas: function(e,a) {\r\n\t\tif ( e.className != undefined )\r\n\t\t\te = e.className;\r\n\t\treturn new RegExp(\"(^|\\\\s)\" + a + \"(\\\\s|$)\").test(e);\r\n\t}\r\n},\r\n\r\n/**\r\n * Swap in/out style options.\r\n * @private\r\n */\r\nswap: function(e,o,f) {\r\n\tfor ( var i in o ) {\r\n\t\te.style[\"old\"+i] = e.style[i];\r\n\t\te.style[i] = o[i];\r\n\t}\r\n\tf.apply( e, [] );\r\n\tfor ( var i in o )\r\n\t\te.style[i] = e.style[\"old\"+i];\r\n},\r\n\r\ncss: function(e,p) {\r\n\tif ( p == \"height\" || p == \"width\" ) {\r\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[892,915],"code":"\thas: function(e,a) {\n\t\tif ( e.className != undefined )\n\t\t\te = e.className;\n\t\treturn new RegExp(\"(^|\\\\s)\" + a + \"(\\\\s|$)\").test(e);\n\t}\n},\n\n/**\n * Swap in/out style options.\n * @private\n */\nswap: function(e,o,f) {\n\tfor ( var i in o ) {\n\t\te.style[\"old\"+i] = e.style[i];\n\t\te.style[i] = o[i];\n\t}\n\tf.apply( e, [] );\n\tfor ( var i in o )\n\t\te.style[i] = e.style[\"old\"+i];\n},\n\ncss: function(e,p) {\n\tif ( p == \"height\" || p == \"width\" ) {\n\t\tvar old = {}, oHeight, oWidth, d = [\"Top\",\"Bottom\",\"Right\",\"Left\"];"}]},
{"id":"03b57fe9c2f76a45fddfe135b3ff4075fe5eeac2","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1263,1273],"code":"for ( var i=0; i<d.length; i++ ) {\r\n\told[\"padding\" + d[i]] = 0;\r\n\told[\"border\" + d[i] + \"Width\"] = 0;\r\n}\r\n\r\njQuery.swap( e, old, function() {\r\n\tif (jQuery.css(e,\"display\") != \"none\") {\r\n\t\toHeight = e.offsetHeight;\r\n\t\toWidth = e.offsetWidth;\r\n\t} else {\r\n\t\te = jQuery(e.cloneNode(true))\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[917,927],"code":"for ( var i in d ) {\n\told[\"padding\" + d[i]] = 0;\n\told[\"border\" + d[i] + \"Width\"] = 0;\n}\n\t\njQuery.swap( e, old, function() {\n\tif (jQuery.css(e,\"display\") != \"none\") {\n\t\toHeight = e.offsetHeight;\n\t\toWidth = e.offsetWidth;\n\t} else {\n\t\te = $(e.cloneNode(true)).css({"}]},
{"id":"b659c04f4d44486895a79f599e01773125847f88","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1317,1325],"code":"prop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\r\nvar cur = document.defaultView.getComputedStyle(elem, null);\r\n\r\nif ( cur )\r\n\tret = cur.getPropertyValue(prop);\r\nelse if ( prop == 'display' )\r\n\tret = 'none';\r\nelse\r\n\tjQuery.swap(elem, { display: 'block' }, function() {\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[959,969],"code":"prop = prop.replace(/([A-Z])/g,\"-$1\").toLowerCase();\nvar cur = document.defaultView.getComputedStyle(elem, null);\n\nif ( cur )\n\tret = cur.getPropertyValue(prop);\nelse if ( prop == 'display' )\n\tret = 'none';\nelse\n\tjQuery.swap(elem, { display: 'block' }, function() {\n\t\tret = document.defaultView.getComputedStyle(this,null).getPropertyValue(prop);\n\t});"}]},
{"id":"86115d87ef92b834cc2ca000685b0e2ed8b27373","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1330,1335],"code":"} else if (elem.currentStyle) {\r\n\r\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase();});\r\n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];\r\n\t\r\n}\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[952,955],"code":"} else if (elem.currentStyle) {\n\n\tvar newProp = prop.replace(/\\-(\\w)/g,function(m,c){return c.toUpperCase()}); \n\tret = elem.currentStyle[prop] || elem.currentStyle[newProp];"}]},
{"id":"435a403d59d3203fc5d740ac285e08819bd276bf","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1368,1399],"code":"\t\t\tr.push(\targ.nodeType ? arg : document.createTextNode(arg.toString()) );\r\n\t}\r\n\r\n\treturn r;\r\n},\r\n\r\nexpr: {\r\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\r\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\r\n\t\":\": {\r\n\t\t// Position Checks\r\n\t\tlt: \"i<m[3]-0\",\r\n\t\tgt: \"i>m[3]-0\",\r\n\t\tnth: \"m[3]-0==i\",\r\n\t\teq: \"m[3]-0==i\",\r\n\t\tfirst: \"i==0\",\r\n\t\tlast: \"i==r.length-1\",\r\n\t\teven: \"i%2==0\",\r\n\t\todd: \"i%2\",\r\n\r\n\t\t// Child Checks\r\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\r\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\r\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\r\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\r\n\r\n\t\t// Parent Checks\r\n\t\tparent: \"a.childNodes.length\",\r\n\t\tempty: \"!a.childNodes.length\",\r\n\r\n\t\t// Text Check\r\n\t\tcontains: \"jQuery.fn.text.apply([a]).indexOf(m[3])>=0\",\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1009,1039],"code":"\t\t\t\tr.push(\ta[i].nodeType ? a[i] : document.createTextNode(a[i].toString()) );\n\t}\n\treturn r;\n},\n\nexpr: {\n\t\"\": \"m[2]== '*'||a.nodeName.toUpperCase()==m[2].toUpperCase()\",\n\t\"#\": \"a.getAttribute('id')&&a.getAttribute('id')==m[2]\",\n\t\":\": {\n\t\t// Position Checks\n\t\tlt: \"i<m[3]-0\",\n\t\tgt: \"i>m[3]-0\",\n\t\tnth: \"m[3]-0==i\",\n\t\teq: \"m[3]-0==i\",\n\t\tfirst: \"i==0\",\n\t\tlast: \"i==r.length-1\",\n\t\teven: \"i%2==0\",\n\t\todd: \"i%2\",\n\t\t\n\t\t// Child Checks\n\t\t\"nth-child\": \"jQuery.sibling(a,m[3]).cur\",\n\t\t\"first-child\": \"jQuery.sibling(a,0).cur\",\n\t\t\"last-child\": \"jQuery.sibling(a,0).last\",\n\t\t\"only-child\": \"jQuery.sibling(a).length==1\",\n\t\t\n\t\t// Parent Checks\n\t\tparent: \"a.childNodes.length\",\n\t\tempty: \"!a.childNodes.length\",\n\t\t\n\t\t// Text Check\n\t\tcontains: \"(a.innerText||a.innerHTML).indexOf(m[3])>=0\","}]},
{"id":"b3b6251de4b9ccfce8776572c4d3bd8505d0e9a5","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1445,1554],"code":"/**\r\n * @name $.find\r\n * @type Array<Element>\r\n * @private\r\n * @cat Core\r\n */\r\nfind: function( t, context ) {\r\n\t// Make sure that the context is a DOM Element\r\n\tif ( context && context.nodeType == undefined )\r\n\t\tcontext = null;\r\n\r\n\t// Set the correct context (if none is provided)\r\n\tcontext = context || document;\r\n\r\n\tif ( t.constructor != String ) return [t];\r\n\r\n\tif ( !t.indexOf(\"//\") ) {\r\n\t\tcontext = context.documentElement;\r\n\t\tt = t.substr(2,t.length);\r\n\t} else if ( !t.indexOf(\"/\") ) {\r\n\t\tcontext = context.documentElement;\r\n\t\tt = t.substr(1,t.length);\r\n\t\t// FIX Assume the root element is right :(\r\n\t\tif ( t.indexOf(\"/\") >= 1 )\r\n\t\t\tt = t.substr(t.indexOf(\"/\"),t.length);\r\n\t}\r\n\r\n\tvar ret = [context];\r\n\tvar done = [];\r\n\tvar last = null;\r\n\r\n\twhile ( t.length > 0 && last != t ) {\r\n\t\tvar r = [];\r\n\t\tlast = t;\r\n\r\n\t\tt = jQuery.trim(t).replace( /^\\/\\//i, \"\" );\r\n\r\n\t\tvar foundToken = false;\r\n\r\n\t\tfor ( var i = 0; i < jQuery.token.length; i += 2 ) {\r\n\t\t\tif ( foundToken ) continue;\r\n\r\n\t\t\tvar re = new RegExp(\"^(\" + jQuery.token[i] + \")\");\r\n\t\t\tvar m = re.exec(t);\r\n\r\n\t\t\tif ( m ) {\r\n\t\t\t\tr = ret = jQuery.map( ret, jQuery.token[i+1] );\r\n\t\t\t\tt = jQuery.trim( t.replace( re, \"\" ) );\r\n\t\t\t\tfoundToken = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( !foundToken ) {\r\n\t\t\tif ( !t.indexOf(\",\") || !t.indexOf(\"|\") ) {\r\n\t\t\t\tif ( ret[0] == context ) ret.shift();\r\n\t\t\t\tdone = jQuery.merge( done, ret );\r\n\t\t\t\tr = ret = [context];\r\n\t\t\t\tt = \" \" + t.substr(1,t.length);\r\n\t\t\t} else {\r\n\t\t\t\tvar re2 = /^([#.]?)([a-z0-9\\\\*_-]*)/i;\r\n\t\t\t\tvar m = re2.exec(t);\r\n\r\n\t\t\t\tif ( m[1] == \"#\" ) {\r\n\t\t\t\t\t// Ummm, should make this work in all XML docs\r\n\t\t\t\t\tvar oid = document.getElementById(m[2]);\r\n\t\t\t\t\tr = ret = oid ? [oid] : [];\r\n\t\t\t\t\tt = t.replace( re2, \"\" );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( !m[2] || m[1] == \".\" ) m[2] = \"*\";\r\n\r\n\t\t\t\t\tfor ( var i = 0; i < ret.length; i++ )\r\n\t\t\t\t\t\tr = jQuery.merge( r,\r\n\t\t\t\t\t\t\tm[2] == \"*\" ?\r\n\t\t\t\t\t\t\t\tjQuery.getAll(ret[i]) :\r\n\t\t\t\t\t\t\t\tret[i].getElementsByTagName(m[2])\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( t ) {\r\n\t\t\tvar val = jQuery.filter(t,r);\r\n\t\t\tret = r = val.r;\r\n\t\t\tt = jQuery.trim(val.t);\r\n\t\t}\r\n\t}\r\n\r\n\tif ( ret && ret[0] == context ) ret.shift();\r\n\tdone = jQuery.merge( done, ret );\r\n\r\n\treturn done;\r\n},\r\n\r\ngetAll: function(o,r) {\r\n\tr = r || [];\r\n\tvar s = o.childNodes;\r\n\tfor ( var i = 0; i < s.length; i++ )\r\n\t\tif ( s[i].nodeType == 1 ) {\r\n\t\t\tr.push( s[i] );\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1077,1271],"code":"/**\n *\n * @test t( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\n * @test t( \"Element Selector\", \"body\", [\"body\"] );\n * @test t( \"Element Selector\", \"html\", [\"html\"] );\n * @test cmpOK( $(\"*\").size(), \">=\", 30, \"Element Selector\" );\n * @test t( \"Parent Element\", \"div div\", [\"foo\"] );\n *\n * @test t( \"ID Selector\", \"#body\", [\"body\"] );\n * @test t( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\n * @test t( \"ID Selector w/ Element\", \"ul#first\", [] );\n *\n * @test t( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\n * @test t( \"Class Selector\", \".blog.link\", [\"simon\"] );\n * @test t( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\n * @test t( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n *\n * @test t( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n * @test t( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n *\n * @test t( \"Child\", \"p > a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p> a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p >a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child\", \"p>a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\n * @test t( \"Child w/ Class\", \"p > a.blog\", [\"mark\",\"simon\"] );\n * @test t( \"All Children\", \"code > *\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"All Grandchildren\", \"p > * > *\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"Adjacent\", \"a + a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a +a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a+ a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"a+a\", [\"groups\"] );\n * @test t( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\n * @test t( \"Comma, Child, and Adjacent\", \"a + a, code > a\", [\"groups\",\"anchor1\",\"anchor2\"] );\n * @test t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * @test t( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\n * @test t( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\n * @test t( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n * @test t( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\n * @test t( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\n * @test t( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\n * @test t( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n *\n * @test t( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\n * @test t( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\n * @test t( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\n * @test t( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\n * @test t( \"Last Child\", \"p:last-child\", [\"sap\"] );\n * @test t( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\n * @test t( \"Empty\", \"ul:empty\", [\"firstUL\"] );\n * @test t( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\"] );\n * @test t( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\n * @test t( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\n * @test t( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\n * @test t( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\n * @test t( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );\n * @test t( \"Not\", \"a.blog:not(.link)\", [\"mark\"] );\n *\n * @test cmpOK( jQuery.find(\"//*\").length, \">=\", 30, \"All Elements (//*)\" );\n * @test t( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\n * @test t( \"Absolute Path\", \"/html/body\", [\"body\"] );\n * @test t( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\n * @test t( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\n * @test t( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\n * @test t( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );\n * @test t( \"Attribute Equals\", \"//a[@rel='bookmark']\", [\"simon1\"] );\n * @test t( \"Parent Axis\", \"//p/..\", [\"main\",\"foo\"] );\n * @test t( \"Sibling Axis\", \"//p/../\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Sibling Axis\", \"//p/../*\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\n * @test t( \"Has Children\", \"//p[a]\", [\"firstp\",\"ap\",\"en\",\"sap\"] );\n *\n * @test t( \"nth Element\", \"p:nth(1)\", [\"ap\"] );\n * @test t( \"First Element\", \"p:first\", [\"firstp\"] );\n * @test t( \"Last Element\", \"p:last\", [\"first\"] );\n * @test t( \"Even Elements\", \"p:even\", [\"firstp\",\"sndp\",\"sap\"] );\n * @test t( \"Odd Elements\", \"p:odd\", [\"ap\",\"en\",\"first\"] );\n * @test t( \"Position Equals\", \"p:eq(1)\", [\"ap\"] );\n * @test t( \"Position Greater Than\", \"p:gt(0)\", [\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );\n * @test t( \"Position Less Than\", \"p:lt(3)\", [\"firstp\",\"ap\",\"sndp\"] );\n * @test t( \"Is A Parent\", \"p:parent\", [\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );\n * @test t( \"Is Visible\", \"input:visible\", [\"text1\",\"text2\",\"radio1\",\"radio2\",\"check1\",\"check2\"] );\n * @test t( \"Is Hidden\", \"input:hidden\", [\"hidden1\",\"hidden2\"] );\n *\n * @name jQuery.find\n * @private\n */\nfind: function( t, context ) {\n\t// Make sure that the context is a DOM Element\n\tif ( context && context.nodeType == undefined )\n\t\tcontext = null;\n\n\t// Set the correct context (if none is provided)\n\tcontext = context || jQuery.context || document;\n\n\tif ( t.constructor != String ) return [t];"}]},
{"id":"7f6d0371f0aaecfc2f74c3d3577a635a8b47a8a6","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1588,1596],"code":"\t} else {\r\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\r\n\t\tif ( value != undefined ) elem[name] = value;\r\n\t\treturn elem[name];\r\n\t}\r\n},\r\n\r\n// The regular expressions that power the parsing engine\r\nparse: [\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1284,1292],"code":"\t} else {\n\t\tname = name.replace(/-([a-z])/ig,function(z,b){return b.toUpperCase();});\n\t\tif ( value != undefined ) elem[name] = value;\n\t\treturn elem[name];\n\t}\n},\n\n// The regular expressions that power the parsing engine\nparse: ["}]},
{"id":"88f212db3211dcd4e7b6e922165b119fb85e6f31","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1595,1624],"code":"// The regular expressions that power the parsing engine\r\nparse: [\r\n\t// Match: [@value='test'], [@foo]\r\n\t\"\\\\[ *(@)S *([!*$^=]*) *('?\\\"?)(.*?)\\\\4 *\\\\]\",\r\n\r\n\t// Match: [div], [div p]\r\n\t\"(\\\\[)\\s*(.*?)\\s*\\\\]\",\r\n\r\n\t// Match: :contains('foo')\r\n\t\"(:)S\\\\(\\\"?'?([^\\\\)]*?)\\\"?'?\\\\)\",\r\n\r\n\t// Match: :even, :last-chlid\r\n\t\"([:.#]*)S\"\r\n],\r\n\r\nfilter: function(t,r,not) {\r\n\t// Figure out if we're doing regular, or inverse, filtering\r\n\tvar g = not !== false ? jQuery.grep :\r\n\t\tfunction(a,f) {return jQuery.grep(a,f,true);};\r\n\r\n\twhile ( t && /^[a-z[({<*:.#]/i.test(t) ) {\r\n\r\n\t\tvar p = jQuery.parse;\r\n\r\n\t\tfor ( var i = 0; i < p.length; i++ ) {\r\n\t\r\n\t\t\t// Look for, and replace, string-like sequences\r\n\t\t\t// and finally build a regexp out of it\r\n\t\t\tvar re = new RegExp(\r\n\t\t\t\t\"^\" + p[i].replace(\"S\", \"([a-z*_-][a-z0-9_-]*)\"), \"i\" );\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1291,1316],"code":"// The regular expressions that power the parsing engine\nparse: [\n\t// Match: [@value='test'], [@foo]\n\t[ \"\\\\[ *(@)S *([!*$^=]*) *Q\\\\]\", 1 ],\n\n\t// Match: [div], [div p]\n\t[ \"(\\\\[)Q\\\\]\", 0 ],\n\n\t// Match: :contains('foo')\n\t[ \"(:)S\\\\(Q\\\\)\", 0 ],\n\n\t// Match: :even, :last-chlid\n\t[ \"([:.#]*)S\", 0 ]\n],\n\nfilter: function(t,r,not) {\n\t// Figure out if we're doing regular, or inverse, filtering\n\tvar g = not !== false ? jQuery.grep :\n\t\tfunction(a,f) {return jQuery.grep(a,f,true);};\n\t\n\twhile ( t && /^[a-z[({<*:.#]/i.test(t) ) {\n\n\t\tvar p = jQuery.parse;\n\n\t\tfor ( var i = 0; i < p.length; i++ ) {\n\t\t\tvar re = new RegExp( \"^\" + p[i][0]"}]},
{"id":"a3eaedeebfbb456a1fab7e239828a59d33899a8d","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1634,1710],"code":"\t\t\t\tt = t.replace( re, \"\" );\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// :not() is a special case that can be optimized by\r\n\t\t// keeping it out of the expression list\r\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\r\n\t\t\tr = jQuery.filter(m[3],r,false).r;\r\n\r\n\t\t// Otherwise, find the expression to execute\r\n\t\telse {\r\n\t\t\tvar f = jQuery.expr[m[1]];\r\n\t\t\tif ( f.constructor != String )\r\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\r\n\r\n\t\t\t// Build a custom macro to enclose it\r\n\t\t\teval(\"f = function(a,i){\" +\r\n\t\t\t\t( m[1] == \"@\" ? \"z=jQuery.attr(a,m[3]);\" : \"\" ) +\r\n\t\t\t\t\"return \" + f + \"}\");\r\n\r\n\t\t\t// Execute it against the current filter\r\n\t\t\tr = g( r, f );\r\n\t\t}\r\n\t}\r\n\r\n\t// Return an array of filtered elements (r)\r\n\t// and the modified expression string (t)\r\n\treturn { r: r, t: t };\r\n},\r\n\r\n/**\r\n * Remove the whitespace from the beginning and end of a string.\r\n *\r\n * @example $.trim(\"  hello, how are you?  \");\r\n * @result \"hello, how are you?\"\r\n *\r\n * @name $.trim\r\n * @type String\r\n * @param String str The string to trim.\r\n * @cat Javascript\r\n */\r\ntrim: function(t){\r\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\r\n},\r\n\r\n/**\r\n * All ancestors of a given element.\r\n *\r\n * @private\r\n * @name $.parents\r\n * @type Array<Element>\r\n * @param Element elem The element to find the ancestors of.\r\n * @cat DOM/Traversing\r\n */\r\nparents: function( elem ){\r\n\tvar matched = [];\r\n\tvar cur = elem.parentNode;\r\n\twhile ( cur && cur != document ) {\r\n\t\tmatched.push( cur );\r\n\t\tcur = cur.parentNode;\r\n\t}\r\n\treturn matched;\r\n},\r\n\r\n/**\r\n * All elements on a specified axis.\r\n *\r\n * @private\r\n * @name $.sibling\r\n * @type Array\r\n * @param Element elem The element to find all the siblings of (including itself).\r\n * @cat DOM/Traversing\r\n */\r\nsibling: function(elem, pos, not) {\r\n\tvar elems = [];\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1332,1403],"code":"\t\t\t\tt = t.replace( re, \"\" );\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// :not() is a special case that can be optomized by\n\t\t// keeping it out of the expression list\n\t\tif ( m[1] == \":\" && m[2] == \"not\" )\n\t\t\tr = jQuery.filter(m[3],r,false).r;\n\t\t\n\t\t// Otherwise, find the expression to execute\n\t\telse {\n\t\t\tvar f = jQuery.expr[m[1]];\n\t\t\tif ( f.constructor != String )\n\t\t\t\tf = jQuery.expr[m[1]][m[2]];\n\t\t\t\t\n\t\t\t// Build a custom macro to enclose it\n\t\t\teval(\"f = function(a,i){\" + \n\t\t\t\t( m[1] == \"@\" ? \"z=jQuery.attr(a,m[3]);\" : \"\" ) + \n\t\t\t\t\"return \" + f + \"}\");\n\t\t\t\n\t\t\t// Execute it against the current filter\n\t\t\tr = g( r, f );\n\t\t}\n\t}\n\n\t// Return an array of filtered elements (r)\n\t// and the modified expression string (t)\n\treturn { r: r, t: t };\n},\n\n/**\n * Remove the whitespace from the beginning and end of a string.\n *\n * @private\n * @name jQuery.trim\n * @type String\n * @param String str The string to trim.\n */\ntrim: function(t){\n\treturn t.replace(/^\\s+|\\s+$/g, \"\");\n},\n\n/**\n * All ancestors of a given element.\n *\n * @private\n * @name jQuery.parents\n * @type Array<Element>\n * @param Element elem The element to find the ancestors of.\n */\nparents: function( elem ){\n\tvar matched = [];\n\tvar cur = elem.parentNode;\n\twhile ( cur && cur != document ) {\n\t\tmatched.push( cur );\n\t\tcur = cur.parentNode;\n\t}\n\treturn matched;\n},\n\n/**\n * All elements on a specified axis.\n *\n * @private\n * @name jQuery.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];"}]},
{"id":"bf53ccb30a809d1e57de68001810ce8fecab5b37","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1700,1797],"code":"/**\r\n * All elements on a specified axis.\r\n *\r\n * @private\r\n * @name $.sibling\r\n * @type Array\r\n * @param Element elem The element to find all the siblings of (including itself).\r\n * @cat DOM/Traversing\r\n */\r\nsibling: function(elem, pos, not) {\r\n\tvar elems = [];\r\n\t\r\n\tif(elem) {\r\n\t\tvar siblings = elem.parentNode.childNodes;\r\n\t\tfor ( var i = 0; i < siblings.length; i++ ) {\r\n\t\t\tif ( not === true && siblings[i] == elem ) continue;\r\n\r\n\t\t\tif ( siblings[i].nodeType == 1 )\r\n\t\t\t\telems.push( siblings[i] );\r\n\t\t\tif ( siblings[i] == elem )\r\n\t\t\t\telems.n = elems.length - 1;\r\n\t\t}\r\n\t}\r\n\r\n\treturn jQuery.extend( elems, {\r\n\t\tlast: elems.n == elems.length - 1,\r\n\t\tcur: pos == \"even\" && elems.n % 2 == 0 || pos == \"odd\" && elems.n % 2 || elems[pos] == elem,\r\n\t\tprev: elems[elems.n - 1],\r\n\t\tnext: elems[elems.n + 1]\r\n\t});\r\n},\r\n\r\n/**\r\n * Merge two arrays together, removing all duplicates. The final order\r\n * or the new array is: All the results from the first array, followed\r\n * by the unique results from the second array.\r\n *\r\n * @example $.merge( [0,1,2], [2,3,4] )\r\n * @result [0,1,2,3,4]\r\n *\r\n * @example $.merge( [3,2,1], [4,3,2] )\r\n * @result [3,2,1,4]\r\n *\r\n * @name $.merge\r\n * @type Array\r\n * @param Array first The first array to merge.\r\n * @param Array second The second array to merge.\r\n * @cat Javascript\r\n */\r\nmerge: function(first, second) {\r\n\tvar result = [];\r\n\r\n\t// Move b over to the new array (this helps to avoid\r\n\t// StaticNodeList instances)\r\n\tfor ( var k = 0; k < first.length; k++ )\r\n\t\tresult[k] = first[k];\r\n\r\n\t// Now check for duplicates between a and b and only\r\n\t// add the unique items\r\n\tfor ( var i = 0; i < second.length; i++ ) {\r\n\t\tvar noCollision = true;\r\n\r\n\t\t// The collision-checking process\r\n\t\tfor ( var j = 0; j < first.length; j++ )\r\n\t\t\tif ( second[i] == first[j] )\r\n\t\t\t\tnoCollision = false;\r\n\r\n\t\t// If the item is unique, add it\r\n\t\tif ( noCollision )\r\n\t\t\tresult.push( second[i] );\r\n\t}\r\n\r\n\treturn result;\r\n},\r\n\r\n/**\r\n * Filter items out of an array, by using a filter function.\r\n * The specified function will be passed two arguments: The\r\n * current array item and the index of the item in the array. The\r\n * function should return 'true' if you wish to keep the item in\r\n * the array, false if it should be removed.\r\n *\r\n * @example $.grep( [0,1,2], function(i){\r\n *   return i > 0;\r\n * });\r\n * @result [1, 2]\r\n *\r\n * @name $.grep\r\n * @type Array\r\n * @param Array array The Array to find items in.\r\n * @param Function fn The function to process each item against.\r\n * @param Boolean inv Invert the selection - select the opposite of the function.\r\n * @cat Javascript\r\n */\r\ngrep: function(elems, fn, inv) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1394,1473],"code":"/**\n * All elements on a specified axis.\n *\n * @private\n * @name jQuery.sibling\n * @type Array\n * @param Element elem The element to find all the siblings of (including itself).\n */\nsibling: function(elem, pos, not) {\n\tvar elems = [];\n\n\tvar siblings = elem.parentNode.childNodes;\n\tfor ( var i = 0; i < siblings.length; i++ ) {\n\t\tif ( not === true && siblings[i] == elem ) continue;\n\n\t\tif ( siblings[i].nodeType == 1 )\n\t\t\telems.push( siblings[i] );\n\t\tif ( siblings[i] == elem )\n\t\t\telems.n = elems.length - 1;\n\t}\n\n\treturn jQuery.extend( elems, {\n\t\tlast: elems.n == elems.length - 1,\n\t\tcur: pos == \"even\" && elems.n % 2 == 0 || pos == \"odd\" && elems.n % 2 || elems[pos] == elem,\n\t\tprev: elems[elems.n - 1],\n\t\tnext: elems[elems.n + 1]\n\t});\n},\n\n/**\n * Merge two arrays together, removing all duplicates.\n *\n * @private\n * @name jQuery.merge\n * @type Array\n * @param Array a The first array to merge.\n * @param Array b The second array to merge.\n */\nmerge: function(first, second) {\n\tvar result = [];\n\t\n\t// Move b over to the new array (this helps to avoid\n\t// StaticNodeList instances)\n\tfor ( var k = 0; k < first.length; k++ )\n\t\tresult[k] = first[k];\n\n\t// Now check for duplicates between a and b and only\n\t// add the unique items\n\tfor ( var i = 0; i < second.length; i++ ) {\n\t\tvar noCollision = true;\n\t\t\n\t\t// The collision-checking process\n\t\tfor ( var j = 0; j < first.length; j++ )\n\t\t\tif ( second[i] == first[j] )\n\t\t\t\tnoCollision = false;\n\t\t\t\n\t\t// If the item is unique, add it\n\t\tif ( noCollision )\n\t\t\tresult.push( second[i] );\n\t}\n\n\treturn result;\n},\n\n/**\n * Remove items that aren't matched in an array. The function passed\n * in to this method will be passed two arguments: 'a' (which is the\n * array item) and 'i' (which is the index of the item in the array).\n *\n * @private\n * @name jQuery.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )"}]},
{"id":"9a35054b64ff2536a5593f49581d1acbd60db734","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1775,1843],"code":"/**\r\n * Filter items out of an array, by using a filter function.\r\n * The specified function will be passed two arguments: The\r\n * current array item and the index of the item in the array. The\r\n * function should return 'true' if you wish to keep the item in\r\n * the array, false if it should be removed.\r\n *\r\n * @example $.grep( [0,1,2], function(i){\r\n *   return i > 0;\r\n * });\r\n * @result [1, 2]\r\n *\r\n * @name $.grep\r\n * @type Array\r\n * @param Array array The Array to find items in.\r\n * @param Function fn The function to process each item against.\r\n * @param Boolean inv Invert the selection - select the opposite of the function.\r\n * @cat Javascript\r\n */\r\ngrep: function(elems, fn, inv) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\r\n\r\n\tvar result = [];\r\n\r\n\t// Go through the array, only saving the items\r\n\t// that pass the validator function\r\n\tfor ( var i = 0; i < elems.length; i++ )\r\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\r\n\t\t\tresult.push( elems[i] );\r\n\r\n\treturn result;\r\n},\r\n\r\n/**\r\n * Translate all items in an array to another array of items. \r\n * The translation function that is provided to this method is \r\n * called for each item in the array and is passed one argument: \r\n * The item to be translated. The function can then return:\r\n * The translated value, 'null' (to remove the item), or \r\n * an array of values - which will be flattened into the full array.\r\n *\r\n * @example $.map( [0,1,2], function(i){\r\n *   return i + 4;\r\n * });\r\n * @result [4, 5, 6]\r\n *\r\n * @example $.map( [0,1,2], function(i){\r\n *   return i > 0 ? i + 1 : null;\r\n * });\r\n * @result [2, 3]\r\n * \r\n * @example $.map( [0,1,2], function(i){\r\n *   return [ i, i + 1 ];\r\n * });\r\n * @result [0, 1, 1, 2, 2, 3]\r\n *\r\n * @name $.map\r\n * @type Array\r\n * @param Array array The Array to translate.\r\n * @param Function fn The function to process each item against.\r\n * @cat Javascript\r\n */\r\nmap: function(elems, fn) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1458,1504],"code":"/**\n * Remove items that aren't matched in an array. The function passed\n * in to this method will be passed two arguments: 'a' (which is the\n * array item) and 'i' (which is the index of the item in the array).\n *\n * @private\n * @name jQuery.grep\n * @type Array\n * @param Array array The Array to find items in.\n * @param Function fn The function to process each item against.\n * @param Boolean inv Invert the selection - select the opposite of the function.\n */\ngrep: function(elems, fn, inv) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )\n\t\tfn = new Function(\"a\",\"i\",\"return \" + fn);\n\t\t\n\tvar result = [];\n\t\n\t// Go through the array, only saving the items\n\t// that pass the validator function\n\tfor ( var i = 0; i < elems.length; i++ )\n\t\tif ( !inv && fn(elems[i],i) || inv && !fn(elems[i],i) )\n\t\t\tresult.push( elems[i] );\n\t\n\treturn result;\n},\n\n/**\n * Translate all items in array to another array of items. The translation function\n * that is provided to this method is passed one argument: 'a' (the item to be \n * translated). If an array is returned, that array is mapped out and merged into\n * the full array. Additionally, returning 'null' or 'undefined' will delete the item\n * from the array. Both of these changes imply that the size of the array may not\n * be the same size upon completion, as it was when it started.\n *\n * @private\n * @name jQuery.map\n * @type Array\n * @param Array array The Array to translate.\n * @param Function fn The function to process each item against.\n */\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )"}]},
{"id":"be6ae9662aac872abc96f0133be1348511d4774b","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1811,1928],"code":"/**\r\n * Translate all items in an array to another array of items. \r\n * The translation function that is provided to this method is \r\n * called for each item in the array and is passed one argument: \r\n * The item to be translated. The function can then return:\r\n * The translated value, 'null' (to remove the item), or \r\n * an array of values - which will be flattened into the full array.\r\n *\r\n * @example $.map( [0,1,2], function(i){\r\n *   return i + 4;\r\n * });\r\n * @result [4, 5, 6]\r\n *\r\n * @example $.map( [0,1,2], function(i){\r\n *   return i > 0 ? i + 1 : null;\r\n * });\r\n * @result [2, 3]\r\n * \r\n * @example $.map( [0,1,2], function(i){\r\n *   return [ i, i + 1 ];\r\n * });\r\n * @result [0, 1, 1, 2, 2, 3]\r\n *\r\n * @name $.map\r\n * @type Array\r\n * @param Array array The Array to translate.\r\n * @param Function fn The function to process each item against.\r\n * @cat Javascript\r\n */\r\nmap: function(elems, fn) {\r\n\t// If a string is passed in for the function, make a function\r\n\t// for it (a handy shortcut)\r\n\tif ( typeof fn == \"string\" )\r\n\t\tfn = new Function(\"a\",\"return \" + fn);\r\n\r\n\tvar result = [];\r\n\r\n\t// Go through the array, translating each of the items to their\r\n\t// new value (or values).\r\n\tfor ( var i = 0; i < elems.length; i++ ) {\r\n\t\tvar val = fn(elems[i],i);\r\n\r\n\t\tif ( val !== null && val != undefined ) {\r\n\t\t\tif ( val.constructor != Array ) val = [val];\r\n\t\t\tresult = jQuery.merge( result, val );\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n},\r\n\r\n/*\r\n * A number of helper functions used for managing events.\r\n * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\r\n */\r\nevent: {\r\n\r\n\t// Bind an event to an element\r\n\t// Original by Dean Edwards\r\n\tadd: function(element, type, handler) {\r\n\t\t// For whatever reason, IE has trouble passing the window object\r\n\t\t// around, causing it to be cloned in the process\r\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\r\n\t\t\telement = window;\r\n\r\n\t\t// Make sure that the function being executed has a unique ID\r\n\t\tif ( !handler.guid )\r\n\t\t\thandler.guid = this.guid++;\r\n\r\n\t\t// Init the element's event structure\r\n\t\tif (!element.events)\r\n\t\t\telement.events = {};\r\n\r\n\t\t// Get the current list of functions bound to this event\r\n\t\tvar handlers = element.events[type];\r\n\r\n\t\t// If it hasn't been initialized yet\r\n\t\tif (!handlers) {\r\n\t\t\t// Init the event handler queue\r\n\t\t\thandlers = element.events[type] = {};\r\n\r\n\t\t\t// Remember an existing handler, if it's already there\r\n\t\t\tif (element[\"on\" + type])\r\n\t\t\t\thandlers[0] = element[\"on\" + type];\r\n\t\t}\r\n\r\n\t\t// Add the function to the element's handler list\r\n\t\thandlers[handler.guid] = handler;\r\n\r\n\t\t// And bind the global event handler to the element\r\n\t\telement[\"on\" + type] = this.handle;\r\n\r\n\t\t// Remember the function in a global list (for triggering)\r\n\t\tif (!this.global[type])\r\n\t\t\tthis.global[type] = [];\r\n\t\tthis.global[type].push( element );\r\n\t},\r\n\r\n\tguid: 1,\r\n\tglobal: {},\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1487,1589],"code":"/**\n * Translate all items in array to another array of items. The translation function\n * that is provided to this method is passed one argument: 'a' (the item to be \n * translated). If an array is returned, that array is mapped out and merged into\n * the full array. Additionally, returning 'null' or 'undefined' will delete the item\n * from the array. Both of these changes imply that the size of the array may not\n * be the same size upon completion, as it was when it started.\n *\n * @private\n * @name jQuery.map\n * @type Array\n * @param Array array The Array to translate.\n * @param Function fn The function to process each item against.\n */\nmap: function(elems, fn) {\n\t// If a string is passed in for the function, make a function\n\t// for it (a handy shortcut)\n\tif ( fn.constructor == String )\n\t\tfn = new Function(\"a\",\"return \" + fn);\n\t\n\tvar result = [];\n\t\n\t// Go through the array, translating each of the items to their\n\t// new value (or values).\n\tfor ( var i = 0; i < elems.length; i++ ) {\n\t\tvar val = fn(elems[i],i);\n\n\t\tif ( val !== null && val != undefined ) {\n\t\t\tif ( val.constructor != Array ) val = [val];\n\t\t\tresult = jQuery.merge( result, val );\n\t\t}\n\t}\n\n\treturn result;\n},\n\n/*\n * A number of helper functions used for managing events.\n * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n */\nevent: {\n\n\t// Bind an event to an element\n\t// Original by Dean Edwards\n\tadd: function(element, type, handler) {\n\t\t// For whatever reason, IE has trouble passing the window object\n\t\t// around, causing it to be cloned in the process\n\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\telement = window;\n\t\n\t\t// Make sure that the function being executed has a unique ID\n\t\tif ( !handler.guid )\n\t\t\thandler.guid = this.guid++;\n\t\t\t\n\t\t// Init the element's event structure\n\t\tif (!element.events)\n\t\t\telement.events = {};\n\t\t\n\t\t// Get the current list of functions bound to this event\n\t\tvar handlers = element.events[type];\n\t\t\n\t\t// If it hasn't been initialized yet\n\t\tif (!handlers) {\n\t\t\t// Init the event handler queue\n\t\t\thandlers = element.events[type] = {};\n\t\t\t\n\t\t\t// Remember an existing handler, if it's already there\n\t\t\tif (element[\"on\" + type])\n\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t}\n\n\t\t// Add the function to the element's handler list\n\t\thandlers[handler.guid] = handler;\n\t\t\n\t\t// And bind the global event handler to the element\n\t\telement[\"on\" + type] = this.handle;\n\n\t\t// Remember the function in a global list (for triggering)\n\t\tif (!this.global[type])\n\t\t\tthis.global[type] = [];\n\t\tthis.global[type].push( element );\n\t},\n\t\n\tguid: 1,\n\tglobal: {},\n\t\n\t// Detach an event or set of events from an element\n\tremove: function(element, type, handler) {\n\t\tif (element.events)\n\t\t\tif (type && element.events[type])\n\t\t\t\tif ( handler )\n\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\telse\n\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\telse\n\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\tthis.remove( element, j );\n\t},\n\t"}]},
{"id":"3af16cea7b12b466a76b03de6dc164e2fc4af9b2","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[1928,1948],"code":"\tdata = $.merge([], data || []);\r\n\r\n\t// Handle a global trigger\r\n\tif ( !element ) {\r\n\t\tvar g = this.global[type];\r\n\t\tif ( g )\r\n\t\t\tfor ( var i = 0; i < g.length; i++ )\r\n\t\t\t\tthis.trigger( type, data, g[i] );\r\n\r\n\t// Handle triggering a single element\r\n\t} else if ( element[\"on\" + type] ) {\r\n\t\t// Pass along a fake event\r\n\t\tdata.unshift( this.fix({ type: type, target: element }) );\r\n\r\n\t\t// Trigger the event\r\n\t\telement[\"on\" + type].apply( element, data );\r\n\t}\r\n},\r\n\r\nhandle: function(event) {\r\n\tif ( typeof jQuery == \"undefined\" ) return false;\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1589,1609],"code":"\tdata = data || [];\n\t\n\t// Handle a global trigger\n\tif ( !element ) {\n\t\tvar g = this.global[type];\n\t\tif ( g )\n\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\tthis.trigger( type, data, g[i] );\n\t\n\t// Handle triggering a single element\n\t} else if ( element[\"on\" + type] ) {\n\t\t// Pass along a fake event\n\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\t\n\t\t// Trigger the event\n\t\telement[\"on\" + type].apply( element, data );\n\t}\n},\n\nhandle: function(event) {\n\tif ( typeof jQuery == \"undefined\" ) return;"}]},
{"id":"5abc8844ef3339306f209151155fb9b7e895aca7","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[2036,2423],"code":"/*\r\n * Wheather the W3C compliant box model is being used.\r\n *\r\n * @property\r\n * @name $.boxModel\r\n * @type Boolean\r\n * @cat Javascript\r\n */\r\nnew function() {\r\n\tvar b = navigator.userAgent.toLowerCase();\r\n\r\n\t// Figure out what browser is being used\r\n\tjQuery.browser = {\r\n\t\tsafari: /webkit/.test(b),\r\n\t\topera: /opera/.test(b),\r\n\t\tmsie: /msie/.test(b) && !/opera/.test(b),\r\n\t\tmozilla: /mozilla/.test(b) && !/(compatible|webkit)/.test(b)\r\n\t};\r\n\r\n\t// Check to see if the W3C box model is being used\r\n\tjQuery.boxModel = !jQuery.browser.msie || document.compatMode == \"CSS1Compat\";\r\n};\r\n\r\njQuery.macros = {\r\n\tto: {\r\n\t\t/**\r\n\t\t * Append all of the matched elements to another, specified, set of elements.\r\n\t\t * This operation is, essentially, the reverse of doing a regular\r\n\t\t * $(A).append(B), in that instead of appending B to A, you're appending\r\n\t\t * A to B.\r\n\t\t *\r\n\t\t * @example $(\"p\").appendTo(\"#foo\");\r\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"></div>\r\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p></div>\r\n\t\t *\r\n\t\t * @name appendTo\r\n\t\t * @type jQuery\r\n\t\t * @param String expr A jQuery expression of elements to match.\r\n\t\t * @cat DOM/Manipulation\r\n\t\t */\r\n\t\tappendTo: \"append\",\r\n\r\n\t\t/**\r\n\t\t * Prepend all of the matched elements to another, specified, set of elements.\r\n\t\t * This operation is, essentially, the reverse of doing a regular\r\n\t\t * $(A).prepend(B), in that instead of prepending B to A, you're prepending\r\n\t\t * A to B.\r\n\t\t *\r\n\t\t * @example $(\"p\").prependTo(\"#foo\");\r\n\t\t * @before <p>I would like to say: </p><div id=\"foo\"><b>Hello</b></div>\r\n\t\t * @result <div id=\"foo\"><p>I would like to say: </p><b>Hello</b></div>\r\n\t\t *\r\n\t\t * @name prependTo\r\n\t\t * @type jQuery\r\n\t\t * @param String expr A jQuery expression of elements to match.\r\n\t\t * @cat DOM/Manipulation\r\n\t\t */\r\n\t\tprependTo: \"prepend\",\r\n\r\n\t\t/**\r\n\t\t * Insert all of the matched elements before another, specified, set of elements.\r\n\t\t * This operation is, essentially, the reverse of doing a regular\r\n\t\t * $(A).before(B), in that instead of inserting B before A, you're inserting\r\n\t\t * A before B.\r\n\t\t *\r\n\t\t * @example $(\"p\").insertBefore(\"#foo\");\r\n\t\t * @before <div id=\"foo\">Hello</div><p>I would like to say: </p>\r\n\t\t * @result <p>I would like to say: </p><div id=\"foo\">Hello</div>\r\n\t\t *\r\n\t\t * @name insertBefore\r\n\t\t * @type jQuery\r\n\t\t * @param String expr A jQuery expression of elements to match.\r\n\t\t * @cat DOM/Manipulation\r\n\t\t */\r\n\t\tinsertBefore: \"before\",\r\n\r\n\t\t/**\r\n\t\t * Insert all of the matched elements after another, specified, set of elements.\r\n\t\t * This operation is, essentially, the reverse of doing a regular\r\n\t\t * $(A).after(B), in that instead of inserting B after A, you're inserting\r\n\t\t * A after B.\r\n\t\t *\r\n\t\t * @example $(\"p\").insertAfter(\"#foo\");\r\n\t\t * @before <p>I would like to say: </p><div id=\"foo\">Hello</div>\r\n\t\t * @result <div id=\"foo\">Hello</div><p>I would like to say: </p>\r\n\t\t *\r\n\t\t * @name insertAfter\r\n\t\t * @type jQuery\r\n\t\t * @param String expr A jQuery expression of elements to match.\r\n\t\t * @cat DOM/Manipulation\r\n\t\t */\r\n\t\tinsertAfter: \"after\"\r\n\t},\r\n\r\n\t/**\r\n\t * Get the current CSS width of the first matched element.\r\n\t *\r\n\t * @example $(\"p\").width();\r\n\t * @before <p>This is just a test.</p>\r\n\t * @result \"300px\"\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1523,1969],"code":"\t/*\n\t * A number of helper functions used for managing events.\n\t * Many of the ideas behind this code orignated from Dean Edwards' addEvent library.\n\t */\n\tevent: {\n\t\n\t\t// Bind an event to an element\n\t\t// Original by Dean Edwards\n\t\tadd: function(element, type, handler) {\n\t\t\t// For whatever reason, IE has trouble passing the window object\n\t\t\t// around, causing it to be cloned in the process\n\t\t\tif ( jQuery.browser.msie && element.setInterval != undefined )\n\t\t\t\telement = window;\n\t\t\n\t\t\t// Make sure that the function being executed has a unique ID\n\t\t\tif ( !handler.guid )\n\t\t\t\thandler.guid = this.guid++;\n\t\t\t\t\n\t\t\t// Init the element's event structure\n\t\t\tif (!element.events)\n\t\t\t\telement.events = {};\n\t\t\t\n\t\t\t// Get the current list of functions bound to this event\n\t\t\tvar handlers = element.events[type];\n\t\t\t\n\t\t\t// If it hasn't been initialized yet\n\t\t\tif (!handlers) {\n\t\t\t\t// Init the event handler queue\n\t\t\t\thandlers = element.events[type] = {};\n\t\t\t\t\n\t\t\t\t// Remember an existing handler, if it's already there\n\t\t\t\tif (element[\"on\" + type])\n\t\t\t\t\thandlers[0] = element[\"on\" + type];\n\t\t\t}\n\n\t\t\t// Add the function to the element's handler list\n\t\t\thandlers[handler.guid] = handler;\n\t\t\t\n\t\t\t// And bind the global event handler to the element\n\t\t\telement[\"on\" + type] = this.handle;\n\t\n\t\t\t// Remember the function in a global list (for triggering)\n\t\t\tif (!this.global[type])\n\t\t\t\tthis.global[type] = [];\n\t\t\tthis.global[type].push( element );\n\t\t},\n\t\t\n\t\tguid: 1,\n\t\tglobal: {},\n\t\t\n\t\t// Detach an event or set of events from an element\n\t\tremove: function(element, type, handler) {\n\t\t\tif (element.events)\n\t\t\t\tif (type && element.events[type])\n\t\t\t\t\tif ( handler )\n\t\t\t\t\t\tdelete element.events[type][handler.guid];\n\t\t\t\t\telse\n\t\t\t\t\t\tfor ( var i in element.events[type] )\n\t\t\t\t\t\t\tdelete element.events[type][i];\n\t\t\t\telse\n\t\t\t\t\tfor ( var j in element.events )\n\t\t\t\t\t\tthis.remove( element, j );\n\t\t},\n\t\t\n\t\ttrigger: function(type,data,element) {\n\t\t\t// Touch up the incoming data\n\t\t\tdata = data || [];\n\t\n\t\t\t// Handle a global trigger\n\t\t\tif ( !element ) {\n\t\t\t\tvar g = this.global[type];\n\t\t\t\tif ( g )\n\t\t\t\t\tfor ( var i = 0; i < g.length; i++ )\n\t\t\t\t\t\tthis.trigger( type, data, g[i] );\n\t\n\t\t\t// Handle triggering a single element\n\t\t\t} else if ( element[\"on\" + type] ) {\n\t\t\t\t// Pass along a fake event\n\t\t\t\tdata.unshift( this.fix({ type: type, target: element }) );\n\t\n\t\t\t\t// Trigger the event\n\t\t\t\telement[\"on\" + type].apply( element, data );\n\t\t\t}\n\t\t},\n\t\t\n\t\thandle: function(event) {\n\t\t\tif ( typeof jQuery == \"undefined\" ) return;\n\n\t\t\tevent = event || jQuery.event.fix( window.event );\n\t\n\t\t\t// If no correct event was found, fail\n\t\t\tif ( !event ) return;\n\t\t\n\t\t\tvar returnValue = true;\n\n\t\t\tvar c = this.events[event.type];\n\t\t\n\t\t\tfor ( var j in c ) {\n\t\t\t\tif ( c[j].apply( this, [event] ) === false ) {\n\t\t\t\t\tevent.preventDefault();"}]},
{"id":"7ecada45cf4ff2983028e6bb82c3fc55529605dc","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[2425,2810],"code":"attr: {\r\n\t/**\r\n\t * Get the current value of the first matched element.\r\n\t *\r\n\t * @example $(\"input\").val();\r\n\t * @before <input type=\"text\" value=\"some text\"/>\r\n\t * @result \"some text\"\r\n\t *\r\n\t * @name val\r\n\t * @type String\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\r\n\t/**\r\n\t * Set the value of every matched element.\r\n\t *\r\n\t * @example $(\"input\").val(\"test\");\r\n\t * @before <input type=\"text\" value=\"some text\"/>\r\n\t * @result <input type=\"text\" value=\"test\"/>\r\n\t *\r\n\t * @name val\r\n\t * @type jQuery\r\n\t * @param String val Set the property to the specified value.\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\tval: \"value\",\r\n\r\n\t/**\r\n\t * Get the html contents of the first matched element.\r\n\t *\r\n\t * @example $(\"div\").html();\r\n\t * @before <div><input/></div>\r\n\t * @result <input/>\r\n\t *\r\n\t * @name html\r\n\t * @type String\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\r\n\t/**\r\n\t * Set the html contents of every matched element.\r\n\t *\r\n\t * @example $(\"div\").html(\"<b>new stuff</b>\");\r\n\t * @before <div><input/></div>\r\n\t * @result <div><b>new stuff</b></div>\r\n\t *\r\n\t * @name html\r\n\t * @type jQuery\r\n\t * @param String val Set the html contents to the specified value.\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\thtml: \"innerHTML\",\r\n\r\n\t/**\r\n\t * Get the current id of the first matched element.\r\n\t *\r\n\t * @example $(\"input\").id();\r\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\r\n\t * @result \"test\"\r\n\t *\r\n\t * @name id\r\n\t * @type String\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\r\n\t/**\r\n\t * Set the id of every matched element.\r\n\t *\r\n\t * @example $(\"input\").id(\"newid\");\r\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\r\n\t * @result <input type=\"text\" id=\"newid\" value=\"some text\"/>\r\n\t *\r\n\t * @name id\r\n\t * @type jQuery\r\n\t * @param String val Set the property to the specified value.\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\tid: null,\r\n\r\n\t/**\r\n\t * Get the current title of the first matched element.\r\n\t *\r\n\t * @example $(\"img\").title();\r\n\t * @before <img src=\"test.jpg\" title=\"my image\"/>\r\n\t * @result \"my image\"\r\n\t *\r\n\t * @name title\r\n\t * @type String\r\n\t * @cat DOM/Attributes\r\n\t */\r\n\r\n\t/**\r\n\t * Set the title of every matched element.\r\n\t *\r\n\t * @example $(\"img\").title(\"new title\");\r\n\t * @before <img src=\"test.jpg\" title=\"my image\"/>\r\n\t * @result <img src=\"test.jpg\" title=\"new image\"/>\r\n\t *\r\n\t * @name title\r\n\t * @type jQuery\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[1971,2364],"code":"attr: {\n\t/**\n\t * Get the current value of the first matched element.\n\t * \n\t * @example $(\"input\").val();\n\t * @before <input type=\"text\" value=\"some text\"/>\n\t * @result \"some text\"\n\t *\n\t * @name val\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**\n\t * Set the value of every matched element.\n\t * \n\t * @example $(\"input\").value(\"test\");\n\t * @before <input type=\"text\" value=\"some text\"/>\n\t * @result <input type=\"text\" value=\"test\"/>\n\t *\n\t * @name val\n\t * @type jQuery\n\t * @param String val Set the property to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\tval: \"value\",\n\t\n\t/**\n\t * Get the html contents of the first matched element.\n\t * \n\t * @example $(\"div\").html();\n\t * @before <div><input/></div>\n\t * @result <input/>\n\t *\n\t * @name html\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**\n\t * Set the html contents of every matched element.\n\t * \n\t * @example $(\"div\").html(\"<b>new stuff</b>\");\n\t * @before <div><input/></div>\n\t * @result <div><b>new stuff</b></div>\n\t *\n\t * @test var div = $(\"div\");\n\t * div.html(\"<b>test</b>\");\n\t * var pass = true;\n\t * for ( var i = 0; i < div.size(); i++ ) {\n\t *   if ( div.get(i).childNodes.length == 0 ) pass = false;\n\t * }\n\t * ok( pass, \"Set HTML\" );\n\t *\n\t * @name html\n\t * @type jQuery\n\t * @param String val Set the html contents to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\thtml: \"innerHTML\",\n\t\n\t/**\n\t * Get the current id of the first matched element.\n\t * \n\t * @example $(\"input\").id();\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\n\t * @result \"test\"\n\t *\n\t * @name id\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**\n\t * Set the id of every matched element.\n\t * \n\t * @example $(\"input\").id(\"newid\");\n\t * @before <input type=\"text\" id=\"test\" value=\"some text\"/>\n\t * @result <input type=\"text\" id=\"newid\" value=\"some text\"/>\n\t *\n\t * @name id\n\t * @type jQuery\n\t * @param String val Set the property to the specified value.\n\t * @cat DOM/Attributes\n\t */\n\tid: null,\n\t\n\t/**\n\t * Get the current title of the first matched element.\n\t * \n\t * @example $(\"img\").title();\n\t * @before <img src=\"test.jpg\" title=\"my image\"/>\n\t * @result \"my image\"\n\t *\n\t * @name title\n\t * @type String\n\t * @cat DOM/Attributes\n\t */\n\t \n\t/**"}]},
{"id":"3bd8009cabcdec273c290c6b88303d94bc7a7bd6","instances":[{"path":"./jquery-data/1.0.4/src/jquery/jquery.js","lines":[2861,2917],"code":"/**\r\n * Displays each of the set of matched elements if they are hidden.\r\n *\r\n * @example $(\"p\").show()\r\n * @before <p style=\"display: none\">Hello</p>\r\n * @result [ <p style=\"display: block\">Hello</p> ]\r\n *\r\n * @name show\r\n * @type jQuery\r\n * @cat Effects\r\n */\r\nshow: function(){\r\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\r\n\tif ( jQuery.css(this,\"display\") == \"none\" )\r\n\t\tthis.style.display = \"block\";\r\n},\r\n\r\n/**\r\n * Hides each of the set of matched elements if they are shown.\r\n *\r\n * @example $(\"p\").hide()\r\n * @before <p>Hello</p>\r\n * @result [ <p style=\"display: none\">Hello</p> ]\r\n *\r\n * var pass = true, div = $(\"div\");\r\n * div.hide().each(function(){\r\n *   if ( this.style.display != \"none\" ) pass = false;\r\n * });\r\n * ok( pass, \"Hide\" );\r\n *\r\n * @name hide\r\n * @type jQuery\r\n * @cat Effects\r\n */\r\nhide: function(){\r\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\r\n\tif ( this.oldblock == \"none\" )\r\n\t\tthis.oldblock = \"block\";\r\n\tthis.style.display = \"none\";\r\n},\r\n\r\n/**\r\n * Toggles each of the set of matched elements. If they are shown,\r\n * toggle makes them hidden. If they are hidden, toggle\r\n * makes them shown.\r\n *\r\n * @example $(\"p\").toggle()\r\n * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\r\n * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\r\n *\r\n * @name toggle\r\n * @type jQuery\r\n * @cat Effects\r\n */\r\ntoggle: function(){\r\n\tjQuery(this)[ jQuery(this).is(\":hidden\") ? \"show\" : \"hide\" ].apply( jQuery(this), arguments );\r\n},\r"},{"path":"./jquery-data/1.0.1/src/jquery/jquery.js","lines":[2402,2464],"code":"/**\n * Displays each of the set of matched elements if they are hidden.\n * \n * @example $(\"p\").show()\n * @before <p style=\"display: none\">Hello</p>\n * @result [ <p style=\"display: block\">Hello</p> ]\n *\n * @test var pass = true, div = $(\"div\");\n * div.show().each(function(){\n *   if ( this.style.display == \"none\" ) pass = false;\n * });\n * ok( pass, \"Show\" );\n *\n * @name show\n * @type jQuery\n * @cat Effects\n */\nshow: function(){\n\tthis.style.display = this.oldblock ? this.oldblock : \"\";\n\tif ( jQuery.css(this,\"display\") == \"none\" )\n\t\tthis.style.display = \"block\";\n},\n\n/**\n * Hides each of the set of matched elements if they are shown.\n *\n * @example $(\"p\").hide()\n * @before <p>Hello</p>\n * @result [ <p style=\"display: none\">Hello</p> ]\n *\n * var pass = true, div = $(\"div\");\n * div.hide().each(function(){\n *   if ( this.style.display != \"none\" ) pass = false;\n * });\n * ok( pass, \"Hide\" );\n *\n * @name hide\n * @type jQuery\n * @cat Effects\n */\nhide: function(){\n\tthis.oldblock = this.oldblock || jQuery.css(this,\"display\");\n\tif ( this.oldblock == \"none\" )\n\t\tthis.oldblock = \"block\";\n\tthis.style.display = \"none\";\n},\n\n/**\n * Toggles each of the set of matched elements. If they are shown,\n * toggle makes them hidden. If they are hidden, toggle\n * makes them shown.\n *\n * @example $(\"p\").toggle()\n * @before <p>Hello</p><p style=\"display: none\">Hello Again</p>\n * @result [ <p style=\"display: none\">Hello</p>, <p style=\"display: block\">Hello Again</p> ]\n *\n * @name toggle\n * @type jQuery\n * @cat Effects\n */\ntoggle: function(){\n\t$(this)[ $(this).is(\":hidden\") ? \"show\" : \"hide\" ].apply( $(this), arguments );\n},"}]}]
